{"{\"assumptions\":{},\"sourceRoot\":\"/www/wwwroot/21india/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/www/wwwroot/21india\",\"filename\":\"/www/wwwroot/21india/src/server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/www/wwwroot/21india\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.5:development":{"value":{"code":"\"use strict\";\n\nrequire(\"dotenv/config\");\nvar _express = _interopRequireDefault(require(\"express\"));\nvar _configEngine = _interopRequireDefault(require(\"./config/configEngine\"));\nvar _web = _interopRequireDefault(require(\"./routes/web\"));\nvar _cronJobContronler = _interopRequireDefault(require(\"./controllers/cronJobContronler\"));\nvar _socketIoController = _interopRequireDefault(require(\"./controllers/socketIoController\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nrequire('dotenv').config();\nvar cookieParser = require('cookie-parser');\nvar app = (0, _express[\"default\"])();\nvar server = require('http').createServer(app);\nvar io = require('socket.io')(server);\nvar port = process.env.PORT || 4321;\napp.use(cookieParser());\n// app.use(express.static('public'));\napp.use(_express[\"default\"].urlencoded({\n  extended: true\n}));\napp.use(_express[\"default\"].json());\n\n// setup viewEngine\n(0, _configEngine[\"default\"])(app);\n// init Web Routes\n_web[\"default\"].initWebRouter(app);\n\n// Cron game 1 Phut \n_cronJobContronler[\"default\"].cronJobGame1p(io);\n\n// Check xem ai connect vào sever \n_socketIoController[\"default\"].sendMessageAdmin(io);\n\n// app.all('*', (req, res) => {\n//     return res.render(\"404.ejs\"); \n// });\n\nserver.listen(port, function () {\n  console.log(\"Connected success port: \" + port);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZXF1aXJlIiwiX2V4cHJlc3MiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX2NvbmZpZ0VuZ2luZSIsIl93ZWIiLCJfY3JvbkpvYkNvbnRyb25sZXIiLCJfc29ja2V0SW9Db250cm9sbGVyIiwib2JqIiwiX19lc01vZHVsZSIsImNvbmZpZyIsImNvb2tpZVBhcnNlciIsImFwcCIsImV4cHJlc3MiLCJzZXJ2ZXIiLCJjcmVhdGVTZXJ2ZXIiLCJpbyIsInBvcnQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsInVzZSIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImpzb24iLCJjb25maWdWaWV3RW5naW5lIiwicm91dGVzIiwiaW5pdFdlYlJvdXRlciIsImNyb25Kb2JDb250cm9ubGVyIiwiY3JvbkpvYkdhbWUxcCIsInNvY2tldElvQ29udHJvbGxlciIsInNlbmRNZXNzYWdlQWRtaW4iLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIl0sInNvdXJjZVJvb3QiOiIvd3d3L3d3d3Jvb3QvMjFpbmRpYS9zcmMvIiwic291cmNlcyI6WyJzZXJ2ZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdkb3RlbnYvY29uZmlnJ1xuXG5pbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBjb25maWdWaWV3RW5naW5lIGZyb20gJy4vY29uZmlnL2NvbmZpZ0VuZ2luZSc7XG5pbXBvcnQgcm91dGVzIGZyb20gJy4vcm91dGVzL3dlYic7XG5pbXBvcnQgY3JvbkpvYkNvbnRyb25sZXIgZnJvbSAnLi9jb250cm9sbGVycy9jcm9uSm9iQ29udHJvbmxlcic7XG5pbXBvcnQgc29ja2V0SW9Db250cm9sbGVyIGZyb20gJy4vY29udHJvbGxlcnMvc29ja2V0SW9Db250cm9sbGVyJztcbnJlcXVpcmUoJ2RvdGVudicpLmNvbmZpZygpO1xubGV0IGNvb2tpZVBhcnNlciA9IHJlcXVpcmUoJ2Nvb2tpZS1wYXJzZXInKTtcblxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuY29uc3Qgc2VydmVyID0gcmVxdWlyZSgnaHR0cCcpLmNyZWF0ZVNlcnZlcihhcHApO1xuY29uc3QgaW8gPSByZXF1aXJlKCdzb2NrZXQuaW8nKShzZXJ2ZXIpO1xuXG5jb25zdCBwb3J0ID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCA0MzIxO1xuXG5hcHAudXNlKGNvb2tpZVBhcnNlcigpKTtcbi8vIGFwcC51c2UoZXhwcmVzcy5zdGF0aWMoJ3B1YmxpYycpKTtcbmFwcC51c2UoZXhwcmVzcy51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IHRydWUgfSkpO1xuYXBwLnVzZShleHByZXNzLmpzb24oKSk7XG5cbi8vIHNldHVwIHZpZXdFbmdpbmVcbmNvbmZpZ1ZpZXdFbmdpbmUoYXBwKTtcbi8vIGluaXQgV2ViIFJvdXRlc1xucm91dGVzLmluaXRXZWJSb3V0ZXIoYXBwKTtcblxuLy8gQ3JvbiBnYW1lIDEgUGh1dCBcbmNyb25Kb2JDb250cm9ubGVyLmNyb25Kb2JHYW1lMXAoaW8pO1xuXG4vLyBDaGVjayB4ZW0gYWkgY29ubmVjdCB2w6BvIHNldmVyIFxuc29ja2V0SW9Db250cm9sbGVyLnNlbmRNZXNzYWdlQWRtaW4oaW8pO1xuXG4vLyBhcHAuYWxsKCcqJywgKHJlcSwgcmVzKSA9PiB7XG4vLyAgICAgcmV0dXJuIHJlcy5yZW5kZXIoXCI0MDQuZWpzXCIpOyBcbi8vIH0pO1xuXG5zZXJ2ZXIubGlzdGVuKHBvcnQsICgpID0+IHtcbiAgICBjb25zb2xlLmxvZyhcIkNvbm5lY3RlZCBzdWNjZXNzIHBvcnQ6IFwiICsgcG9ydCk7XG59KTtcblxuIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxPQUFBO0FBRUEsSUFBQUMsUUFBQSxHQUFBQyxzQkFBQSxDQUFBRixPQUFBO0FBQ0EsSUFBQUcsYUFBQSxHQUFBRCxzQkFBQSxDQUFBRixPQUFBO0FBQ0EsSUFBQUksSUFBQSxHQUFBRixzQkFBQSxDQUFBRixPQUFBO0FBQ0EsSUFBQUssa0JBQUEsR0FBQUgsc0JBQUEsQ0FBQUYsT0FBQTtBQUNBLElBQUFNLG1CQUFBLEdBQUFKLHNCQUFBLENBQUFGLE9BQUE7QUFBa0UsU0FBQUUsdUJBQUFLLEdBQUEsV0FBQUEsR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsR0FBQUQsR0FBQSxnQkFBQUEsR0FBQTtBQUNsRVAsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDUyxNQUFNLENBQUMsQ0FBQztBQUMxQixJQUFJQyxZQUFZLEdBQUdWLE9BQU8sQ0FBQyxlQUFlLENBQUM7QUFFM0MsSUFBTVcsR0FBRyxHQUFHLElBQUFDLG1CQUFPLEVBQUMsQ0FBQztBQUNyQixJQUFNQyxNQUFNLEdBQUdiLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQ2MsWUFBWSxDQUFDSCxHQUFHLENBQUM7QUFDaEQsSUFBTUksRUFBRSxHQUFHZixPQUFPLENBQUMsV0FBVyxDQUFDLENBQUNhLE1BQU0sQ0FBQztBQUV2QyxJQUFNRyxJQUFJLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxJQUFJLElBQUksSUFBSTtBQUVyQ1IsR0FBRyxDQUFDUyxHQUFHLENBQUNWLFlBQVksQ0FBQyxDQUFDLENBQUM7QUFDdkI7QUFDQUMsR0FBRyxDQUFDUyxHQUFHLENBQUNSLG1CQUFPLENBQUNTLFVBQVUsQ0FBQztFQUFFQyxRQUFRLEVBQUU7QUFBSyxDQUFDLENBQUMsQ0FBQztBQUMvQ1gsR0FBRyxDQUFDUyxHQUFHLENBQUNSLG1CQUFPLENBQUNXLElBQUksQ0FBQyxDQUFDLENBQUM7O0FBRXZCO0FBQ0EsSUFBQUMsd0JBQWdCLEVBQUNiLEdBQUcsQ0FBQztBQUNyQjtBQUNBYyxlQUFNLENBQUNDLGFBQWEsQ0FBQ2YsR0FBRyxDQUFDOztBQUV6QjtBQUNBZ0IsNkJBQWlCLENBQUNDLGFBQWEsQ0FBQ2IsRUFBRSxDQUFDOztBQUVuQztBQUNBYyw4QkFBa0IsQ0FBQ0MsZ0JBQWdCLENBQUNmLEVBQUUsQ0FBQzs7QUFFdkM7QUFDQTtBQUNBOztBQUVBRixNQUFNLENBQUNrQixNQUFNLENBQUNmLElBQUksRUFBRSxZQUFNO0VBQ3RCZ0IsT0FBTyxDQUFDQyxHQUFHLENBQUMsMEJBQTBCLEdBQUdqQixJQUFJLENBQUM7QUFDbEQsQ0FBQyxDQUFDIiwiaWdub3JlTGlzdCI6W119","map":{"version":3,"names":["require","_express","_interopRequireDefault","_configEngine","_web","_cronJobContronler","_socketIoController","obj","__esModule","config","cookieParser","app","express","server","createServer","io","port","process","env","PORT","use","urlencoded","extended","json","configViewEngine","routes","initWebRouter","cronJobContronler","cronJobGame1p","socketIoController","sendMessageAdmin","listen","console","log"],"sourceRoot":"/www/wwwroot/21india/src/","sources":["server.js"],"sourcesContent":["import 'dotenv/config'\n\nimport express from 'express';\nimport configViewEngine from './config/configEngine';\nimport routes from './routes/web';\nimport cronJobContronler from './controllers/cronJobContronler';\nimport socketIoController from './controllers/socketIoController';\nrequire('dotenv').config();\nlet cookieParser = require('cookie-parser');\n\nconst app = express();\nconst server = require('http').createServer(app);\nconst io = require('socket.io')(server);\n\nconst port = process.env.PORT || 4321;\n\napp.use(cookieParser());\n// app.use(express.static('public'));\napp.use(express.urlencoded({ extended: true }));\napp.use(express.json());\n\n// setup viewEngine\nconfigViewEngine(app);\n// init Web Routes\nroutes.initWebRouter(app);\n\n// Cron game 1 Phut \ncronJobContronler.cronJobGame1p(io);\n\n// Check xem ai connect vào sever \nsocketIoController.sendMessageAdmin(io);\n\n// app.all('*', (req, res) => {\n//     return res.render(\"404.ejs\"); \n// });\n\nserver.listen(port, () => {\n    console.log(\"Connected success port: \" + port);\n});\n\n"],"mappings":";;AAAAA,OAAA;AAEA,IAAAC,QAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,aAAA,GAAAD,sBAAA,CAAAF,OAAA;AACA,IAAAI,IAAA,GAAAF,sBAAA,CAAAF,OAAA;AACA,IAAAK,kBAAA,GAAAH,sBAAA,CAAAF,OAAA;AACA,IAAAM,mBAAA,GAAAJ,sBAAA,CAAAF,OAAA;AAAkE,SAAAE,uBAAAK,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,gBAAAA,GAAA;AAClEP,OAAO,CAAC,QAAQ,CAAC,CAACS,MAAM,CAAC,CAAC;AAC1B,IAAIC,YAAY,GAAGV,OAAO,CAAC,eAAe,CAAC;AAE3C,IAAMW,GAAG,GAAG,IAAAC,mBAAO,EAAC,CAAC;AACrB,IAAMC,MAAM,GAAGb,OAAO,CAAC,MAAM,CAAC,CAACc,YAAY,CAACH,GAAG,CAAC;AAChD,IAAMI,EAAE,GAAGf,OAAO,CAAC,WAAW,CAAC,CAACa,MAAM,CAAC;AAEvC,IAAMG,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACC,IAAI,IAAI,IAAI;AAErCR,GAAG,CAACS,GAAG,CAACV,YAAY,CAAC,CAAC,CAAC;AACvB;AACAC,GAAG,CAACS,GAAG,CAACR,mBAAO,CAACS,UAAU,CAAC;EAAEC,QAAQ,EAAE;AAAK,CAAC,CAAC,CAAC;AAC/CX,GAAG,CAACS,GAAG,CAACR,mBAAO,CAACW,IAAI,CAAC,CAAC,CAAC;;AAEvB;AACA,IAAAC,wBAAgB,EAACb,GAAG,CAAC;AACrB;AACAc,eAAM,CAACC,aAAa,CAACf,GAAG,CAAC;;AAEzB;AACAgB,6BAAiB,CAACC,aAAa,CAACb,EAAE,CAAC;;AAEnC;AACAc,8BAAkB,CAACC,gBAAgB,CAACf,EAAE,CAAC;;AAEvC;AACA;AACA;;AAEAF,MAAM,CAACkB,MAAM,CAACf,IAAI,EAAE,YAAM;EACtBgB,OAAO,CAACC,GAAG,CAAC,0BAA0B,GAAGjB,IAAI,CAAC;AAClD,CAAC,CAAC","ignoreList":[]}},"mtime":1724100858000},"{\"assumptions\":{},\"sourceRoot\":\"/www/wwwroot/21india/src/config/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/www/wwwroot/21india\",\"filename\":\"/www/wwwroot/21india/src/config/configEngine.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/www/wwwroot/21india\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.5:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _express = _interopRequireDefault(require(\"express\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nvar configViewEngine = function configViewEngine(app) {\n  app.use(_express[\"default\"][\"static\"](\"./src/public\"));\n  app.set('view engine', \"ejs\");\n  app.set('views', \"./src/views\");\n};\nvar _default = exports[\"default\"] = configViewEngine;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZXhwcmVzcyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwib2JqIiwiX19lc01vZHVsZSIsImNvbmZpZ1ZpZXdFbmdpbmUiLCJhcHAiLCJ1c2UiLCJleHByZXNzIiwic2V0IiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIvd3d3L3d3d3Jvb3QvMjFpbmRpYS9zcmMvY29uZmlnLyIsInNvdXJjZXMiOlsiY29uZmlnRW5naW5lLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xyXG5cclxuY29uc3QgY29uZmlnVmlld0VuZ2luZSA9IChhcHApID0+IHtcclxuICAgIGFwcC51c2UoZXhwcmVzcy5zdGF0aWMoXCIuL3NyYy9wdWJsaWNcIikpO1xyXG4gICAgYXBwLnNldCgndmlldyBlbmdpbmUnLCBcImVqc1wiKTtcclxuICAgIGFwcC5zZXQoJ3ZpZXdzJywgXCIuL3NyYy92aWV3c1wiKTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY29uZmlnVmlld0VuZ2luZTsiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQUFBLFFBQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUE4QixTQUFBRCx1QkFBQUUsR0FBQSxXQUFBQSxHQUFBLElBQUFBLEdBQUEsQ0FBQUMsVUFBQSxHQUFBRCxHQUFBLGdCQUFBQSxHQUFBO0FBRTlCLElBQU1FLGdCQUFnQixHQUFHLFNBQW5CQSxnQkFBZ0JBLENBQUlDLEdBQUcsRUFBSztFQUM5QkEsR0FBRyxDQUFDQyxHQUFHLENBQUNDLG1CQUFPLFVBQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQztFQUN2Q0YsR0FBRyxDQUFDRyxHQUFHLENBQUMsYUFBYSxFQUFFLEtBQUssQ0FBQztFQUM3QkgsR0FBRyxDQUFDRyxHQUFHLENBQUMsT0FBTyxFQUFFLGFBQWEsQ0FBQztBQUNuQyxDQUFDO0FBQUEsSUFBQUMsUUFBQSxHQUFBQyxPQUFBLGNBRWNOLGdCQUFnQiIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["_express","_interopRequireDefault","require","obj","__esModule","configViewEngine","app","use","express","set","_default","exports"],"sourceRoot":"/www/wwwroot/21india/src/config/","sources":["configEngine.js"],"sourcesContent":["import express from 'express';\r\n\r\nconst configViewEngine = (app) => {\r\n    app.use(express.static(\"./src/public\"));\r\n    app.set('view engine', \"ejs\");\r\n    app.set('views', \"./src/views\");\r\n}\r\n\r\nexport default configViewEngine;"],"mappings":";;;;;;AAAA,IAAAA,QAAA,GAAAC,sBAAA,CAAAC,OAAA;AAA8B,SAAAD,uBAAAE,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,gBAAAA,GAAA;AAE9B,IAAME,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,GAAG,EAAK;EAC9BA,GAAG,CAACC,GAAG,CAACC,mBAAO,UAAO,CAAC,cAAc,CAAC,CAAC;EACvCF,GAAG,CAACG,GAAG,CAAC,aAAa,EAAE,KAAK,CAAC;EAC7BH,GAAG,CAACG,GAAG,CAAC,OAAO,EAAE,aAAa,CAAC;AACnC,CAAC;AAAA,IAAAC,QAAA,GAAAC,OAAA,cAEcN,gBAAgB","ignoreList":[]}},"mtime":1722459104000},"{\"assumptions\":{},\"sourceRoot\":\"/www/wwwroot/21india/src/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/www/wwwroot/21india\",\"filename\":\"/www/wwwroot/21india/src/routes/web.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/www/wwwroot/21india\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.5:development":{"value":{"code":"\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\nvar _accountController = _interopRequireDefault(require(\"../controllers/accountController\"));\nvar _homeController = _interopRequireDefault(require(\"../controllers/homeController\"));\nvar _winGoController = _interopRequireDefault(require(\"../controllers/winGoController\"));\nvar _userController = _interopRequireDefault(require(\"../controllers/userController\"));\nvar _middlewareController = _interopRequireDefault(require(\"../controllers/middlewareController\"));\nvar _adminController = _interopRequireDefault(require(\"../controllers/adminController\"));\nvar _dailyController = _interopRequireDefault(require(\"../controllers/dailyController\"));\nvar _k5Controller = _interopRequireDefault(require(\"../controllers/k5Controller\"));\nvar _k3Controller = _interopRequireDefault(require(\"../controllers/k3Controller\"));\nvar _paymentController = _interopRequireDefault(require(\"../controllers/paymentController\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nvar router = _express[\"default\"].Router();\nvar initWebRouter = function initWebRouter(app) {\n  // page account\n  router.get('/keFuMenu', _accountController[\"default\"].keFuMenu);\n  router.get('/login', _accountController[\"default\"].loginPage);\n  router.get('/register', _accountController[\"default\"].registerPage);\n  router.get('/forgot', _accountController[\"default\"].forgotPage);\n  router.post('/api/sent/otp/verify', _accountController[\"default\"].verifyCode);\n  router.post('/api/sent/otp/verify/reset', _accountController[\"default\"].verifyCodePass);\n  router.post('/api/resetPasword', _accountController[\"default\"].forGotPassword);\n\n  // page home\n  router.get('/', function (req, res) {\n    return res.redirect('/login');\n  });\n  router.get('/home', _homeController[\"default\"].homePage);\n  router.get('/checkIn', _middlewareController[\"default\"], _homeController[\"default\"].checkInPage);\n  router.get('/activity', _middlewareController[\"default\"], _homeController[\"default\"].activityPage);\n  router.get('/dailytask', _middlewareController[\"default\"], _homeController[\"default\"].dailytaskPage);\n  router.get('/invibonus', _middlewareController[\"default\"], _homeController[\"default\"].invibonusPage);\n  router.get('/rebate', _middlewareController[\"default\"], _homeController[\"default\"].rebatePage);\n  router.get('/jackpot', _middlewareController[\"default\"], _homeController[\"default\"].jackpotPage);\n  router.get('/vip', _middlewareController[\"default\"], _homeController[\"default\"].vipPage);\n  router.get('/checkDes', _middlewareController[\"default\"], _homeController[\"default\"].checkDes);\n  router.get('/checkRecord', _middlewareController[\"default\"], _homeController[\"default\"].checkRecord);\n  router.get('/wallet/transfer', _middlewareController[\"default\"], _homeController[\"default\"].transfer);\n  router.get('/promotion', _middlewareController[\"default\"], _homeController[\"default\"].promotionPage);\n  router.get('/promotion1', _middlewareController[\"default\"], _homeController[\"default\"].promotion1Page);\n  router.get('/promotion/myTeam', _middlewareController[\"default\"], _homeController[\"default\"].promotionmyTeamPage);\n  router.get('/promotion/promotionDes', _middlewareController[\"default\"], _homeController[\"default\"].promotionDesPage);\n  router.get('/promotion/comhistory', _middlewareController[\"default\"], _homeController[\"default\"].comhistoryPage);\n  router.get('/promotion/tutorial', _middlewareController[\"default\"], _homeController[\"default\"].tutorialPage);\n  router.get('/promotion/bonusrecord', _middlewareController[\"default\"], _homeController[\"default\"].bonusRecordPage);\n  router.get('/wallet', _middlewareController[\"default\"], _homeController[\"default\"].walletPage);\n  router.get('/wallet/recharge', _middlewareController[\"default\"], _homeController[\"default\"].rechargePage);\n  router.get('/wallet/withdrawal', _middlewareController[\"default\"], _homeController[\"default\"].withdrawalPage);\n  router.get('/wallet/rechargerecord', _middlewareController[\"default\"], _homeController[\"default\"].rechargerecordPage);\n  router.get('/wallet/withdrawalrecord', _middlewareController[\"default\"], _homeController[\"default\"].withdrawalrecordPage);\n  router.get('/wallet/addBank', _middlewareController[\"default\"], _homeController[\"default\"].addBank);\n  router.get('/wallet/transactionhistory', _middlewareController[\"default\"], _homeController[\"default\"].transactionhistoryPage);\n  router.get('/wallet/paynow/manual_upi', _middlewareController[\"default\"], _paymentController[\"default\"].initiateManualUPIPayment);\n  router.get('/wallet/paynow/manual_usdt', _middlewareController[\"default\"], _paymentController[\"default\"].initiateManualUSDTPayment);\n  router.post('/wallet/paynow/manual_upi_request', _middlewareController[\"default\"], _paymentController[\"default\"].addManualUPIPaymentRequest);\n  router.post('/wallet/paynow/manual_usdt_request', _middlewareController[\"default\"], _paymentController[\"default\"].addManualUSDTPaymentRequest);\n  router.post('/wallet/paynow/wowpay', _middlewareController[\"default\"], _paymentController[\"default\"].initiateWowPayPayment);\n  router.post('/wallet/verify/wowpay', _middlewareController[\"default\"], _paymentController[\"default\"].verifyWowPayPayment);\n  router.get('/wallet/verify/wowpay', _middlewareController[\"default\"], _paymentController[\"default\"].verifyWowPayPayment);\n  router.post('/wallet/paynow/upi', _middlewareController[\"default\"], _paymentController[\"default\"].initiateUPIPayment);\n  router.get('/wallet/verify/upi', _middlewareController[\"default\"], _paymentController[\"default\"].verifyUPIPayment);\n  router.get('/mian', _middlewareController[\"default\"], _homeController[\"default\"].mianPage);\n  router.get('/recordsalary', _middlewareController[\"default\"], _homeController[\"default\"].recordsalary);\n  router.get('/getrecord', _middlewareController[\"default\"], _homeController[\"default\"].getSalaryRecord);\n  router.get('/about', _middlewareController[\"default\"], _homeController[\"default\"].aboutPage);\n  router.get('/redenvelopes', _middlewareController[\"default\"], _homeController[\"default\"].redenvelopes);\n  router.get('/mian/forgot', _middlewareController[\"default\"], _homeController[\"default\"].forgot);\n  router.get('/newtutorial', _homeController[\"default\"].newtutorial);\n  router.get('/about/privacyPolicy', _middlewareController[\"default\"], _homeController[\"default\"].privacyPolicy);\n  router.get('/about/riskAgreement', _middlewareController[\"default\"], _homeController[\"default\"].riskAgreement);\n  router.get('/myProfile', _middlewareController[\"default\"], _homeController[\"default\"].myProfilePage);\n\n  // Routes\n  router.get('/fishing', _middlewareController[\"default\"], _homeController[\"default\"].fishingPage);\n  router.get('/casino', _middlewareController[\"default\"], _homeController[\"default\"].casinoPage);\n  router.get('/slots', _middlewareController[\"default\"], _homeController[\"default\"].slotsPage);\n  router.get('/poker', _middlewareController[\"default\"], _homeController[\"default\"].pokerPage);\n  router.get('/table', _middlewareController[\"default\"], _homeController[\"default\"].tablePage);\n\n  // BET wingo\n  router.get('/win', _middlewareController[\"default\"], _winGoController[\"default\"].winGoPage);\n  router.get('/win/3', _middlewareController[\"default\"], _winGoController[\"default\"].winGoPage3);\n  router.get('/win/5', _middlewareController[\"default\"], _winGoController[\"default\"].winGoPage5);\n  router.get('/win/10', _middlewareController[\"default\"], _winGoController[\"default\"].winGoPage10);\n\n  // BET K5D\n  router.get('/5d', _middlewareController[\"default\"], _k5Controller[\"default\"].K5DPage);\n  router.post('/api/webapi/action/5d/join', _middlewareController[\"default\"], _k5Controller[\"default\"].betK5D); // register\n  router.post('/api/webapi/5d/GetNoaverageEmerdList', _middlewareController[\"default\"], _k5Controller[\"default\"].listOrderOld); // register\n  router.post('/api/webapi/5d/GetMyEmerdList', _middlewareController[\"default\"], _k5Controller[\"default\"].GetMyEmerdList); // register\n\n  // BET K3\n  router.get('/k3', _middlewareController[\"default\"], _k3Controller[\"default\"].K3Page);\n  router.post('/api/webapi/action/k3/join', _middlewareController[\"default\"], _k3Controller[\"default\"].betK3); // register\n  router.post('/api/webapi/k3/GetNoaverageEmerdList', _middlewareController[\"default\"], _k3Controller[\"default\"].listOrderOld); // register\n  router.post('/api/webapi/k3/GetMyEmerdList', _middlewareController[\"default\"], _k3Controller[\"default\"].GetMyEmerdList); // register\n\n  // login | register \n  router.post('/api/webapi/login', _accountController[\"default\"].login); // login\n  router.post('/api/webapi/register', _accountController[\"default\"].register); // register\n  router.get('/aviator', _middlewareController[\"default\"], _userController[\"default\"].aviator);\n  router.get('/api/webapi/GetUserInfo', _middlewareController[\"default\"], _userController[\"default\"].userInfo); // get info account\n  router.put('/api/webapi/change/userInfo', _middlewareController[\"default\"], _userController[\"default\"].changeUser); // get info account\n  router.put('/api/webapi/change/pass', _middlewareController[\"default\"], _userController[\"default\"].changePassword); // get info account\n\n  // bet wingo\n  router.post('/api/webapi/action/join', _middlewareController[\"default\"], _winGoController[\"default\"].betWinGo); // register\n  router.post('/api/webapi/GetNoaverageEmerdList', _middlewareController[\"default\"], _winGoController[\"default\"].listOrderOld); // register\n  router.post('/api/webapi/GetMyEmerdList', _middlewareController[\"default\"], _winGoController[\"default\"].GetMyEmerdList); // register\n\n  // promotion\n  router.post('/api/webapi/promotion', _middlewareController[\"default\"], _userController[\"default\"].promotion); // register\n  router.post('/api/webapi/checkIn', _middlewareController[\"default\"], _userController[\"default\"].checkInHandling); // register\n  router.post('/api/webapi/check/Info', _middlewareController[\"default\"], _userController[\"default\"].infoUserBank); // register\n  router.post('/api/webapi/addBank', _middlewareController[\"default\"], _userController[\"default\"].addBank); // register\n  router.post('/api/webapi/otp', _middlewareController[\"default\"], _userController[\"default\"].verifyCode); // register\n  router.post('/api/webapi/use/redenvelope', _middlewareController[\"default\"], _userController[\"default\"].useRedenvelope); // register\n\n  // wallet\n  router.post('/api/webapi/recharge', _middlewareController[\"default\"], _userController[\"default\"].recharge);\n  router.post('/api/webapi/cancel_recharge', _middlewareController[\"default\"], _userController[\"default\"].cancelRecharge); // register\n  router.post('/wowpay/create', _middlewareController[\"default\"], _userController[\"default\"].wowpay);\n  router.post('/api/webapi/confirm_recharge', _middlewareController[\"default\"], _userController[\"default\"].confirmRecharge);\n  router.get('/api/webapi/myTeam', _middlewareController[\"default\"], _userController[\"default\"].listMyTeam); // register\n  router.get('/api/webapi/recharge/list', _middlewareController[\"default\"], _userController[\"default\"].listRecharge); // register\n  router.get('/api/webapi/withdraw/list', _middlewareController[\"default\"], _userController[\"default\"].listWithdraw); // register\n  router.post('/api/webapi/recharge/check', _middlewareController[\"default\"], _userController[\"default\"].recharge2); // register\n  router.post('/api/webapi/withdrawal', _middlewareController[\"default\"], _userController[\"default\"].withdrawal3); // register\n  router.post('/api/webapi/callback_bank', _middlewareController[\"default\"], _userController[\"default\"].callback_bank); // register\n  router.post('/api/webapi/recharge/update', _middlewareController[\"default\"], _userController[\"default\"].updateRecharge); // update recharge\n  router.post('/api/webapi/transfer', _middlewareController[\"default\"], _userController[\"default\"].transfer); // register\n  router.get('/api/webapi/transfer_history', _middlewareController[\"default\"], _userController[\"default\"].transferHistory); //\n  router.get('/api/webapi/confirm_recharge_usdt', _middlewareController[\"default\"], _userController[\"default\"].confirmUSDTRecharge); //\n  router.post('/api/webapi/confirm_recharge_usdt', _middlewareController[\"default\"], _userController[\"default\"].confirmUSDTRecharge); //\n\n  router.post('/api/webapi/search', _middlewareController[\"default\"], _userController[\"default\"].search); // register\n\n  // daily\n  router.get('/manager/index', _dailyController[\"default\"].middlewareDailyController, _dailyController[\"default\"].dailyPage);\n  router.get('/manager/listRecharge', _dailyController[\"default\"].middlewareDailyController, _dailyController[\"default\"].listRecharge);\n  router.get('/manager/listWithdraw', _dailyController[\"default\"].middlewareDailyController, _dailyController[\"default\"].listWithdraw);\n  router.get('/manager/members', _dailyController[\"default\"].middlewareDailyController, _dailyController[\"default\"].listMeber);\n  router.get('/manager/profileMember', _dailyController[\"default\"].middlewareDailyController, _dailyController[\"default\"].profileMember);\n  router.get('/manager/settings', _dailyController[\"default\"].middlewareDailyController, _dailyController[\"default\"].settingPage);\n  router.get('/manager/gifts', _dailyController[\"default\"].middlewareDailyController, _dailyController[\"default\"].giftPage);\n  router.get('/manager/support', _dailyController[\"default\"].middlewareDailyController, _dailyController[\"default\"].support);\n  router.get('/manager/member/info/:phone', _dailyController[\"default\"].middlewareDailyController, _dailyController[\"default\"].pageInfo);\n  router.post('/manager/member/info/:phone', _dailyController[\"default\"].middlewareDailyController, _dailyController[\"default\"].userInfo);\n  router.post('/manager/member/listRecharge/:phone', _dailyController[\"default\"].middlewareDailyController, _dailyController[\"default\"].listRechargeMem);\n  router.post('/manager/member/listWithdraw/:phone', _dailyController[\"default\"].middlewareDailyController, _dailyController[\"default\"].listWithdrawMem);\n  router.post('/manager/member/redenvelope/:phone', _dailyController[\"default\"].middlewareDailyController, _dailyController[\"default\"].listRedenvelope);\n  router.post('/manager/member/bet/:phone', _dailyController[\"default\"].middlewareDailyController, _dailyController[\"default\"].listBet);\n  router.post('/manager/settings/list', _dailyController[\"default\"].middlewareDailyController, _dailyController[\"default\"].settings);\n  router.post('/manager/createBonus', _dailyController[\"default\"].middlewareDailyController, _dailyController[\"default\"].createBonus);\n  router.post('/manager/listRedenvelops', _dailyController[\"default\"].middlewareDailyController, _dailyController[\"default\"].listRedenvelops);\n  router.post('/manager/listRecharge', _dailyController[\"default\"].middlewareDailyController, _dailyController[\"default\"].listRechargeP);\n  router.post('/manager/listWithdraw', _dailyController[\"default\"].middlewareDailyController, _dailyController[\"default\"].listWithdrawP);\n  router.post('/api/webapi/statistical', _dailyController[\"default\"].middlewareDailyController, _dailyController[\"default\"].statistical);\n  router.post('/manager/infoCtv', _dailyController[\"default\"].middlewareDailyController, _dailyController[\"default\"].infoCtv); // get info account\n  router.post('/manager/infoCtv/select', _dailyController[\"default\"].middlewareDailyController, _dailyController[\"default\"].infoCtv2); // get info account\n  router.post('/api/webapi/manager/listMember', _dailyController[\"default\"].middlewareDailyController, _dailyController[\"default\"].listMember); // get info account\n\n  router.post('/api/webapi/manager/buff', _dailyController[\"default\"].middlewareDailyController, _dailyController[\"default\"].buffMoney); // get info account\n\n  // admin\n  router.get('/admin/manager/index', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].adminPage); // get info account\n  router.get('/admin/manager/index/3', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].adminPage3); // get info account\n  router.get('/admin/manager/index/5', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].adminPage5); // get info account\n  router.get('/admin/manager/index/10', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].adminPage10); // get info account\n\n  router.get('/admin/manager/5d', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].adminPage5d); // get info account\n  router.get('/admin/manager/k3', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].adminPageK3); // get info account\n\n  router.get('/admin/manager/members', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].membersPage); // get info account\n  router.get('/admin/manager/createBonus', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].giftPage); // get info account\n  router.get('/admin/manager/ctv', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].ctvPage); // get info account\n  router.get('/admin/manager/ctv/profile/:phone', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].ctvProfilePage); // get info account\n\n  router.get('/admin/manager/settings', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].settings); // get info account\n  router.get('/admin/manager/listRedenvelops', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].listRedenvelops); // get info account\n  router.post('/admin/manager/infoCtv', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].infoCtv); // get info account\n  router.post('/admin/manager/infoCtv/select', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].infoCtv2); // get info account\n  router.post('/admin/manager/settings/bank', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].settingBank); // get info account\n  router.post('/admin/manager/settings/cskh', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].settingCskh); // get info account\n  router.post('/admin/manager/settings/buff', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].settingbuff); // get info account\n  router.post('/admin/manager/create/ctv', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].register); // get info account\n  router.post('/admin/manager/settings/get', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].settingGet); // get info account\n  router.post('/admin/manager/createBonus', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].createBonus); // get info account\n\n  router.post('/admin/member/listRecharge/:phone', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].listRechargeMem);\n  router.post('/admin/member/listWithdraw/:phone', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].listWithdrawMem);\n  router.post('/admin/member/redenvelope/:phone', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].listRedenvelope);\n  router.post('/admin/member/bet/:phone', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].listBet);\n  router.get('/admin/manager/recharge', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].rechargePage); // get info account\n  router.get('/admin/manager/withdraw', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].withdraw); // get info account\n  // router.get('/admin/manager/level', adminController.middlewareAdminController, adminController.level); // get info account\n  router.get('/admin/manager/levelSetting', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].levelSetting);\n  router.get('/admin/manager/CreatedSalaryRecord', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].CreatedSalaryRecord);\n  router.get('/admin/manager/rechargeRecord', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].rechargeRecord); // get info account\n  router.get('/admin/manager/withdrawRecord', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].withdrawRecord); // get info account\n  router.get('/admin/manager/statistical', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].statistical); // get info account\n  router.get('/admin/member/info/:id', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].infoMember);\n  router.get('/api/webapi/admin/getLevelInfo', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].getLevelInfo);\n  router.get('/api/webapi/admin/getSalary', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].getSalary);\n  router.post('/api/webapi/admin/updateLevel', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].updateLevel); // get info account\n  router.post('/api/webapi/admin/CreatedSalary', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].CreatedSalary); // get info account\n  router.post('/api/webapi/admin/listMember', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].listMember); // get info account\n  router.post('/api/webapi/admin/listctv', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].listCTV); // get info account\n  router.post('/api/webapi/admin/withdraw', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].handlWithdraw); // get info account\n  router.post('/api/webapi/admin/recharge', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].recharge); // get info account\n  router.post('/api/webapi/admin/rechargeDuyet', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].rechargeDuyet); // get info account\n  router.post('/api/webapi/admin/member/info', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].userInfo); // get info account\n  router.post('/api/webapi/admin/statistical', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].statistical2); // get info account\n\n  router.post('/api/webapi/admin/banned', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].banned); // get info account\n\n  router.post('/api/webapi/admin/totalJoin', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].totalJoin); // get info account\n  router.post('/api/webapi/admin/change', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].changeAdmin); // get info account\n  router.post('/api/webapi/admin/profileUser', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].profileUser); // get info account\n\n  // admin 5d \n  router.post('/api/webapi/admin/5d/listOrders', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].listOrderOld); // get info account\n  router.post('/api/webapi/admin/k3/listOrders', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].listOrderOldK3); // get info account\n  router.post('/api/webapi/admin/5d/editResult', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].editResult); // get info account\n  router.post('/api/webapi/admin/k3/editResult', _adminController[\"default\"].middlewareAdminController, _adminController[\"default\"].editResult2); // get info account\n\n  return app.use('/', router);\n};\nmodule.exports = {\n  initWebRouter: initWebRouter\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_express","_interopRequireDefault","require","_accountController","_homeController","_winGoController","_userController","_middlewareController","_adminController","_dailyController","_k5Controller","_k3Controller","_paymentController","obj","__esModule","router","express","Router","initWebRouter","app","get","accountController","keFuMenu","loginPage","registerPage","forgotPage","post","verifyCode","verifyCodePass","forGotPassword","req","res","redirect","homeController","homePage","middlewareController","checkInPage","activityPage","dailytaskPage","invibonusPage","rebatePage","jackpotPage","vipPage","checkDes","checkRecord","transfer","promotionPage","promotion1Page","promotionmyTeamPage","promotionDesPage","comhistoryPage","tutorialPage","bonusRecordPage","walletPage","rechargePage","withdrawalPage","rechargerecordPage","withdrawalrecordPage","addBank","transactionhistoryPage","paymentController","initiateManualUPIPayment","initiateManualUSDTPayment","addManualUPIPaymentRequest","addManualUSDTPaymentRequest","initiateWowPayPayment","verifyWowPayPayment","initiateUPIPayment","verifyUPIPayment","mianPage","recordsalary","getSalaryRecord","aboutPage","redenvelopes","forgot","newtutorial","privacyPolicy","riskAgreement","myProfilePage","fishingPage","casinoPage","slotsPage","pokerPage","tablePage","winGoController","winGoPage","winGoPage3","winGoPage5","winGoPage10","k5Controller","K5DPage","betK5D","listOrderOld","GetMyEmerdList","k3Controller","K3Page","betK3","login","register","userController","aviator","userInfo","put","changeUser","changePassword","betWinGo","promotion","checkInHandling","infoUserBank","useRedenvelope","recharge","cancelRecharge","wowpay","confirmRecharge","listMyTeam","listRecharge","listWithdraw","recharge2","withdrawal3","callback_bank","updateRecharge","transferHistory","confirmUSDTRecharge","search","dailyController","middlewareDailyController","dailyPage","listMeber","profileMember","settingPage","giftPage","support","pageInfo","listRechargeMem","listWithdrawMem","listRedenvelope","listBet","settings","createBonus","listRedenvelops","listRechargeP","listWithdrawP","statistical","infoCtv","infoCtv2","listMember","buffMoney","adminController","middlewareAdminController","adminPage","adminPage3","adminPage5","adminPage10","adminPage5d","adminPageK3","membersPage","ctvPage","ctvProfilePage","settingBank","settingCskh","settingbuff","settingGet","withdraw","levelSetting","CreatedSalaryRecord","rechargeRecord","withdrawRecord","infoMember","getLevelInfo","getSalary","updateLevel","CreatedSalary","listCTV","handlWithdraw","rechargeDuyet","statistical2","banned","totalJoin","changeAdmin","profileUser","listOrderOldK3","editResult","editResult2","use","module","exports"],"sourceRoot":"/www/wwwroot/21india/src/routes/","sources":["web.js"],"sourcesContent":["import express from 'express';\nimport accountController from '../controllers/accountController';\nimport homeController from '../controllers/homeController';\nimport winGoController from '../controllers/winGoController';\nimport userController from '../controllers/userController';\nimport middlewareController from '../controllers/middlewareController';\nimport adminController from '../controllers/adminController';\nimport dailyController from '../controllers/dailyController';\nimport k5Controller from '../controllers/k5Controller';\nimport k3Controller from '../controllers/k3Controller';\nimport paymentController from '../controllers/paymentController';\n\nlet router = express.Router();\n\nconst initWebRouter = (app) => {\n    // page account\n    router.get('/keFuMenu', accountController.keFuMenu);\n    router.get('/login', accountController.loginPage);\n    router.get('/register', accountController.registerPage);\n    router.get('/forgot', accountController.forgotPage);\n    router.post('/api/sent/otp/verify', accountController.verifyCode);\n    router.post('/api/sent/otp/verify/reset', accountController.verifyCodePass);\n    router.post('/api/resetPasword', accountController.forGotPassword);\n\n    // page home\n    router.get('/', (req, res) => {\n        return res.redirect('/login');\n    });\n    router.get('/home', homeController.homePage);\n\n    router.get('/checkIn', middlewareController, homeController.checkInPage);\n    router.get('/activity', middlewareController, homeController.activityPage);\n    router.get('/dailytask', middlewareController, homeController.dailytaskPage);\n    router.get('/invibonus', middlewareController, homeController.invibonusPage);\n    router.get('/rebate', middlewareController, homeController.rebatePage);\n    router.get('/jackpot', middlewareController, homeController.jackpotPage);\n    router.get('/vip', middlewareController, homeController.vipPage);\n    router.get('/checkDes', middlewareController, homeController.checkDes);\n    router.get('/checkRecord', middlewareController, homeController.checkRecord);\n    router.get('/wallet/transfer', middlewareController, homeController.transfer);\n\n    router.get('/promotion', middlewareController, homeController.promotionPage);\n    router.get('/promotion1', middlewareController, homeController.promotion1Page);\n    router.get('/promotion/myTeam', middlewareController, homeController.promotionmyTeamPage);\n    router.get('/promotion/promotionDes', middlewareController, homeController.promotionDesPage);\n    router.get('/promotion/comhistory', middlewareController, homeController.comhistoryPage);\n    router.get('/promotion/tutorial', middlewareController, homeController.tutorialPage);\n    router.get('/promotion/bonusrecord', middlewareController, homeController.bonusRecordPage);\n\n    router.get('/wallet', middlewareController, homeController.walletPage);\n    router.get('/wallet/recharge', middlewareController, homeController.rechargePage);\n    router.get('/wallet/withdrawal', middlewareController, homeController.withdrawalPage);\n    router.get('/wallet/rechargerecord', middlewareController, homeController.rechargerecordPage);\n    router.get('/wallet/withdrawalrecord', middlewareController, homeController.withdrawalrecordPage);\n    router.get('/wallet/addBank', middlewareController, homeController.addBank);\n    router.get('/wallet/transactionhistory', middlewareController, homeController.transactionhistoryPage);\n    \n\n    router.get('/wallet/paynow/manual_upi', middlewareController, paymentController.initiateManualUPIPayment);\n    router.get('/wallet/paynow/manual_usdt', middlewareController, paymentController.initiateManualUSDTPayment);\n    router.post('/wallet/paynow/manual_upi_request', middlewareController, paymentController.addManualUPIPaymentRequest);\n    router.post('/wallet/paynow/manual_usdt_request', middlewareController, paymentController.addManualUSDTPaymentRequest);\n    router.post('/wallet/paynow/wowpay', middlewareController, paymentController.initiateWowPayPayment);\n    router.post('/wallet/verify/wowpay', middlewareController, paymentController.verifyWowPayPayment);\n    router.get('/wallet/verify/wowpay', middlewareController, paymentController.verifyWowPayPayment);\n    router.post('/wallet/paynow/upi', middlewareController, paymentController.initiateUPIPayment);\n    router.get('/wallet/verify/upi', middlewareController, paymentController.verifyUPIPayment);\n\n    router.get('/mian', middlewareController, homeController.mianPage);\n\n    router.get('/recordsalary', middlewareController, homeController.recordsalary);\n    router.get('/getrecord', middlewareController, homeController.getSalaryRecord);\n    router.get('/about', middlewareController, homeController.aboutPage);\n    router.get('/redenvelopes', middlewareController, homeController.redenvelopes);\n    router.get('/mian/forgot', middlewareController, homeController.forgot);\n    router.get('/newtutorial', homeController.newtutorial);\n    router.get('/about/privacyPolicy', middlewareController, homeController.privacyPolicy);\n    router.get('/about/riskAgreement', middlewareController, homeController.riskAgreement);\n\n    router.get('/myProfile', middlewareController, homeController.myProfilePage);\n\n\n    // Routes\n    router.get('/fishing', middlewareController, homeController.fishingPage);\n    router.get('/casino', middlewareController, homeController.casinoPage);\n    router.get('/slots', middlewareController, homeController.slotsPage);\n    router.get('/poker', middlewareController, homeController.pokerPage);\n    router.get('/table', middlewareController, homeController.tablePage);\n\n\n\n    // BET wingo\n    router.get('/win', middlewareController, winGoController.winGoPage);\n    router.get('/win/3', middlewareController, winGoController.winGoPage3);\n    router.get('/win/5', middlewareController, winGoController.winGoPage5);\n    router.get('/win/10', middlewareController, winGoController.winGoPage10);\n\n    // BET K5D\n    router.get('/5d', middlewareController, k5Controller.K5DPage);\n    router.post('/api/webapi/action/5d/join', middlewareController, k5Controller.betK5D); // register\n    router.post('/api/webapi/5d/GetNoaverageEmerdList', middlewareController, k5Controller.listOrderOld); // register\n    router.post('/api/webapi/5d/GetMyEmerdList', middlewareController, k5Controller.GetMyEmerdList); // register\n\n    // BET K3\n    router.get('/k3', middlewareController, k3Controller.K3Page);\n\n    router.post('/api/webapi/action/k3/join', middlewareController, k3Controller.betK3); // register\n    router.post('/api/webapi/k3/GetNoaverageEmerdList', middlewareController, k3Controller.listOrderOld); // register\n    router.post('/api/webapi/k3/GetMyEmerdList', middlewareController, k3Controller.GetMyEmerdList); // register\n\n\n    // login | register \n    router.post('/api/webapi/login', accountController.login); // login\n    router.post('/api/webapi/register', accountController.register); // register\n    router.get('/aviator', middlewareController, userController.aviator);\n    router.get('/api/webapi/GetUserInfo', middlewareController, userController.userInfo); // get info account\n    router.put('/api/webapi/change/userInfo', middlewareController, userController.changeUser); // get info account\n    router.put('/api/webapi/change/pass', middlewareController, userController.changePassword); // get info account\n\n    // bet wingo\n    router.post('/api/webapi/action/join', middlewareController, winGoController.betWinGo); // register\n    router.post('/api/webapi/GetNoaverageEmerdList', middlewareController, winGoController.listOrderOld); // register\n    router.post('/api/webapi/GetMyEmerdList', middlewareController, winGoController.GetMyEmerdList); // register\n\n\n    // promotion\n    router.post('/api/webapi/promotion', middlewareController, userController.promotion); // register\n    router.post('/api/webapi/checkIn', middlewareController, userController.checkInHandling); // register\n    router.post('/api/webapi/check/Info', middlewareController, userController.infoUserBank); // register\n    router.post('/api/webapi/addBank', middlewareController, userController.addBank); // register\n    router.post('/api/webapi/otp', middlewareController, userController.verifyCode); // register\n    router.post('/api/webapi/use/redenvelope', middlewareController, userController.useRedenvelope); // register\n\n    // wallet\n    router.post('/api/webapi/recharge', middlewareController, userController.recharge);\n    router.post('/api/webapi/cancel_recharge', middlewareController, userController.cancelRecharge); // register\n    router.post('/wowpay/create', middlewareController, userController.wowpay);\n    router.post('/api/webapi/confirm_recharge', middlewareController, userController.confirmRecharge);\n    router.get('/api/webapi/myTeam', middlewareController, userController.listMyTeam); // register\n    router.get('/api/webapi/recharge/list', middlewareController, userController.listRecharge); // register\n    router.get('/api/webapi/withdraw/list', middlewareController, userController.listWithdraw); // register\n    router.post('/api/webapi/recharge/check', middlewareController, userController.recharge2); // register\n    router.post('/api/webapi/withdrawal', middlewareController, userController.withdrawal3); // register\n    router.post('/api/webapi/callback_bank', middlewareController, userController.callback_bank); // register\n    router.post('/api/webapi/recharge/update', middlewareController, userController.updateRecharge); // update recharge\n    router.post('/api/webapi/transfer', middlewareController, userController.transfer); // register\n    router.get('/api/webapi/transfer_history', middlewareController, userController.transferHistory); //\n    router.get('/api/webapi/confirm_recharge_usdt', middlewareController, userController.confirmUSDTRecharge); //\n    router.post('/api/webapi/confirm_recharge_usdt', middlewareController, userController.confirmUSDTRecharge); //\n\n    router.post('/api/webapi/search', middlewareController, userController.search); // register\n\n\n    // daily\n    router.get('/manager/index', dailyController.middlewareDailyController, dailyController.dailyPage);\n    router.get('/manager/listRecharge', dailyController.middlewareDailyController, dailyController.listRecharge);\n    router.get('/manager/listWithdraw', dailyController.middlewareDailyController, dailyController.listWithdraw);\n    router.get('/manager/members', dailyController.middlewareDailyController, dailyController.listMeber);\n    router.get('/manager/profileMember', dailyController.middlewareDailyController, dailyController.profileMember);\n    router.get('/manager/settings', dailyController.middlewareDailyController, dailyController.settingPage);\n    router.get('/manager/gifts', dailyController.middlewareDailyController, dailyController.giftPage);\n    router.get('/manager/support', dailyController.middlewareDailyController, dailyController.support);\n    router.get('/manager/member/info/:phone', dailyController.middlewareDailyController, dailyController.pageInfo);\n\n    router.post('/manager/member/info/:phone', dailyController.middlewareDailyController, dailyController.userInfo);\n    router.post('/manager/member/listRecharge/:phone', dailyController.middlewareDailyController, dailyController.listRechargeMem);\n    router.post('/manager/member/listWithdraw/:phone', dailyController.middlewareDailyController, dailyController.listWithdrawMem);\n    router.post('/manager/member/redenvelope/:phone', dailyController.middlewareDailyController, dailyController.listRedenvelope);\n    router.post('/manager/member/bet/:phone', dailyController.middlewareDailyController, dailyController.listBet);\n\n\n    router.post('/manager/settings/list', dailyController.middlewareDailyController, dailyController.settings);\n    router.post('/manager/createBonus', dailyController.middlewareDailyController, dailyController.createBonus);\n    router.post('/manager/listRedenvelops', dailyController.middlewareDailyController, dailyController.listRedenvelops);\n\n    router.post('/manager/listRecharge', dailyController.middlewareDailyController, dailyController.listRechargeP);\n    router.post('/manager/listWithdraw', dailyController.middlewareDailyController, dailyController.listWithdrawP);\n\n    router.post('/api/webapi/statistical', dailyController.middlewareDailyController, dailyController.statistical);\n    router.post('/manager/infoCtv', dailyController.middlewareDailyController, dailyController.infoCtv); // get info account\n    router.post('/manager/infoCtv/select', dailyController.middlewareDailyController, dailyController.infoCtv2); // get info account\n    router.post('/api/webapi/manager/listMember', dailyController.middlewareDailyController, dailyController.listMember); // get info account\n\n    router.post('/api/webapi/manager/buff', dailyController.middlewareDailyController, dailyController.buffMoney); // get info account\n\n\n    // admin\n    router.get('/admin/manager/index', adminController.middlewareAdminController, adminController.adminPage); // get info account\n    router.get('/admin/manager/index/3', adminController.middlewareAdminController, adminController.adminPage3); // get info account\n    router.get('/admin/manager/index/5', adminController.middlewareAdminController, adminController.adminPage5); // get info account\n    router.get('/admin/manager/index/10', adminController.middlewareAdminController, adminController.adminPage10); // get info account\n\n    router.get('/admin/manager/5d', adminController.middlewareAdminController, adminController.adminPage5d); // get info account\n    router.get('/admin/manager/k3', adminController.middlewareAdminController, adminController.adminPageK3); // get info account\n\n\n    router.get('/admin/manager/members', adminController.middlewareAdminController, adminController.membersPage); // get info account\n    router.get('/admin/manager/createBonus', adminController.middlewareAdminController, adminController.giftPage); // get info account\n    router.get('/admin/manager/ctv', adminController.middlewareAdminController, adminController.ctvPage); // get info account\n    router.get('/admin/manager/ctv/profile/:phone', adminController.middlewareAdminController, adminController.ctvProfilePage); // get info account\n\n    router.get('/admin/manager/settings', adminController.middlewareAdminController, adminController.settings); // get info account\n    router.get('/admin/manager/listRedenvelops', adminController.middlewareAdminController, adminController.listRedenvelops); // get info account\n    router.post('/admin/manager/infoCtv', adminController.middlewareAdminController, adminController.infoCtv); // get info account\n    router.post('/admin/manager/infoCtv/select', adminController.middlewareAdminController, adminController.infoCtv2); // get info account\n    router.post('/admin/manager/settings/bank', adminController.middlewareAdminController, adminController.settingBank); // get info account\n    router.post('/admin/manager/settings/cskh', adminController.middlewareAdminController, adminController.settingCskh); // get info account\n    router.post('/admin/manager/settings/buff', adminController.middlewareAdminController, adminController.settingbuff); // get info account\n    router.post('/admin/manager/create/ctv', adminController.middlewareAdminController, adminController.register); // get info account\n    router.post('/admin/manager/settings/get', adminController.middlewareAdminController, adminController.settingGet); // get info account\n    router.post('/admin/manager/createBonus', adminController.middlewareAdminController, adminController.createBonus); // get info account\n\n    router.post('/admin/member/listRecharge/:phone', adminController.middlewareAdminController, adminController.listRechargeMem);\n    router.post('/admin/member/listWithdraw/:phone', adminController.middlewareAdminController, adminController.listWithdrawMem);\n    router.post('/admin/member/redenvelope/:phone', adminController.middlewareAdminController, adminController.listRedenvelope);\n    router.post('/admin/member/bet/:phone', adminController.middlewareAdminController, adminController.listBet);\n\n\n    router.get('/admin/manager/recharge', adminController.middlewareAdminController, adminController.rechargePage); // get info account\n    router.get('/admin/manager/withdraw', adminController.middlewareAdminController, adminController.withdraw); // get info account\n    // router.get('/admin/manager/level', adminController.middlewareAdminController, adminController.level); // get info account\n    router.get('/admin/manager/levelSetting', adminController.middlewareAdminController, adminController.levelSetting);\n    router.get('/admin/manager/CreatedSalaryRecord', adminController.middlewareAdminController, adminController.CreatedSalaryRecord);\n    router.get('/admin/manager/rechargeRecord', adminController.middlewareAdminController, adminController.rechargeRecord); // get info account\n    router.get('/admin/manager/withdrawRecord', adminController.middlewareAdminController, adminController.withdrawRecord); // get info account\n    router.get('/admin/manager/statistical', adminController.middlewareAdminController, adminController.statistical); // get info account\n    router.get('/admin/member/info/:id', adminController.middlewareAdminController, adminController.infoMember);\n    router.get('/api/webapi/admin/getLevelInfo', adminController.middlewareAdminController, adminController.getLevelInfo);\n    router.get('/api/webapi/admin/getSalary', adminController.middlewareAdminController, adminController.getSalary);\n\n    router.post('/api/webapi/admin/updateLevel', adminController.middlewareAdminController, adminController.updateLevel); // get info account\n    router.post('/api/webapi/admin/CreatedSalary', adminController.middlewareAdminController, adminController.CreatedSalary); // get info account\n    router.post('/api/webapi/admin/listMember', adminController.middlewareAdminController, adminController.listMember); // get info account\n    router.post('/api/webapi/admin/listctv', adminController.middlewareAdminController, adminController.listCTV); // get info account\n    router.post('/api/webapi/admin/withdraw', adminController.middlewareAdminController, adminController.handlWithdraw); // get info account\n    router.post('/api/webapi/admin/recharge', adminController.middlewareAdminController, adminController.recharge); // get info account\n    router.post('/api/webapi/admin/rechargeDuyet', adminController.middlewareAdminController, adminController.rechargeDuyet); // get info account\n    router.post('/api/webapi/admin/member/info', adminController.middlewareAdminController, adminController.userInfo); // get info account\n    router.post('/api/webapi/admin/statistical', adminController.middlewareAdminController, adminController.statistical2); // get info account\n\n    router.post('/api/webapi/admin/banned', adminController.middlewareAdminController, adminController.banned); // get info account\n\n\n    router.post('/api/webapi/admin/totalJoin', adminController.middlewareAdminController, adminController.totalJoin); // get info account\n    router.post('/api/webapi/admin/change', adminController.middlewareAdminController, adminController.changeAdmin); // get info account\n    router.post('/api/webapi/admin/profileUser', adminController.middlewareAdminController, adminController.profileUser); // get info account\n\n    // admin 5d \n    router.post('/api/webapi/admin/5d/listOrders', adminController.middlewareAdminController, adminController.listOrderOld); // get info account\n    router.post('/api/webapi/admin/k3/listOrders', adminController.middlewareAdminController, adminController.listOrderOldK3); // get info account\n    router.post('/api/webapi/admin/5d/editResult', adminController.middlewareAdminController, adminController.editResult); // get info account\n    router.post('/api/webapi/admin/k3/editResult', adminController.middlewareAdminController, adminController.editResult2); // get info account\n\n    return app.use('/', router);\n}\n\nmodule.exports = {\n    initWebRouter,\n};"],"mappings":"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","ignoreList":[]}},"mtime":1723805454000},"{\"assumptions\":{},\"sourceRoot\":\"/www/wwwroot/21india/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/www/wwwroot/21india\",\"filename\":\"/www/wwwroot/21india/src/controllers/accountController.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/www/wwwroot/21india\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.5:development":{"value":{"code":"\"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _connectDB = _interopRequireDefault(require(\"../config/connectDB\"));\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\nvar _md = _interopRequireDefault(require(\"md5\"));\nvar _request = _interopRequireDefault(require(\"request\"));\nvar _express = _interopRequireDefault(require(\"express\"));\nvar _excluded = [\"password\", \"money\", \"ip\", \"veri\", \"ip_address\", \"status\", \"time\"];\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nrequire('dotenv').config();\nvar timeNow = Date.now();\nvar randomString = function randomString(length) {\n  var result = '';\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\nvar randomNumber = function randomNumber(min, max) {\n  return String(Math.floor(Math.random() * (max - min + 1)) + min);\n};\nvar isNumber = function isNumber(params) {\n  var pattern = /^[0-9]*\\d$/;\n  return pattern.test(params);\n};\nvar ipAddress = function ipAddress(req) {\n  var ip = '';\n  if (req.headers['x-forwarded-for']) {\n    ip = req.headers['x-forwarded-for'].split(\",\")[0];\n  } else if (req.connection && req.connection.remoteAddress) {\n    ip = req.connection.remoteAddress;\n  } else {\n    ip = req.ip;\n  }\n  return ip;\n};\nvar timeCreate = function timeCreate() {\n  var d = new Date();\n  var time = d.getTime();\n  return time;\n};\nvar loginPage = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(req, res) {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", res.render(\"account/login.ejs\"));\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function loginPage(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar registerPage = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(req, res) {\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          return _context2.abrupt(\"return\", res.render(\"account/register.ejs\"));\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function registerPage(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar forgotPage = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(req, res) {\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.abrupt(\"return\", res.render(\"account/forgot.ejs\"));\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return function forgotPage(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nvar login = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(req, res) {\n    var _req$body, username, pwd, _yield$connection$que, _yield$connection$que2, rows, _rows$, password, money, ip, veri, ip_address, status, time, others, accessToken;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          _req$body = req.body, username = _req$body.username, pwd = _req$body.pwd;\n          if (!(!username || !pwd || !username)) {\n            _context4.next = 3;\n            break;\n          }\n          return _context4.abrupt(\"return\", res.status(200).json({\n            message: 'ERROR!!!'\n          }));\n        case 3:\n          _context4.prev = 3;\n          _context4.next = 6;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE phone = ? AND password = ? ', [username, (0, _md[\"default\"])(pwd)]);\n        case 6:\n          _yield$connection$que = _context4.sent;\n          _yield$connection$que2 = _slicedToArray(_yield$connection$que, 1);\n          rows = _yield$connection$que2[0];\n          if (!(rows.length == 1)) {\n            _context4.next = 21;\n            break;\n          }\n          if (!(rows[0].status == 1)) {\n            _context4.next = 18;\n            break;\n          }\n          _rows$ = rows[0], password = _rows$.password, money = _rows$.money, ip = _rows$.ip, veri = _rows$.veri, ip_address = _rows$.ip_address, status = _rows$.status, time = _rows$.time, others = _objectWithoutProperties(_rows$, _excluded);\n          accessToken = _jsonwebtoken[\"default\"].sign({\n            user: _objectSpread({}, others),\n            timeNow: timeNow\n          }, process.env.JWT_ACCESS_TOKEN, {\n            expiresIn: \"1d\"\n          });\n          _context4.next = 15;\n          return _connectDB[\"default\"].execute('UPDATE `users` SET `token` = ? WHERE `phone` = ? ', [(0, _md[\"default\"])(accessToken), username]);\n        case 15:\n          return _context4.abrupt(\"return\", res.status(200).json({\n            message: 'Login Successfully!',\n            status: true,\n            token: accessToken,\n            value: (0, _md[\"default\"])(accessToken)\n          }));\n        case 18:\n          return _context4.abrupt(\"return\", res.status(200).json({\n            message: 'Account has been locked',\n            status: false\n          }));\n        case 19:\n          _context4.next = 22;\n          break;\n        case 21:\n          return _context4.abrupt(\"return\", res.status(200).json({\n            message: 'Incorrect Username or Password',\n            status: false\n          }));\n        case 22:\n          _context4.next = 27;\n          break;\n        case 24:\n          _context4.prev = 24;\n          _context4.t0 = _context4[\"catch\"](3);\n          if (_context4.t0) console.log(_context4.t0);\n        case 27:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4, null, [[3, 24]]);\n  }));\n  return function login(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nvar register = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(req, res) {\n    var now, _req$body2, username, pwd, invitecode, id_user, otp2, name_user, code, ip, time, _yield$connection$que3, _yield$connection$que4, check_u, _yield$connection$que5, _yield$connection$que6, check_i, _yield$connection$que7, _yield$connection$que8, check_ip, ctv, sql, _yield$connection$que9, _yield$connection$que10, check_code, levels, i, sql4;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          now = new Date().getTime();\n          _req$body2 = req.body, username = _req$body2.username, pwd = _req$body2.pwd, invitecode = _req$body2.invitecode;\n          id_user = randomNumber(10000, 99999);\n          otp2 = randomNumber(100000, 999999);\n          name_user = \"Member\" + randomNumber(10000, 99999);\n          code = randomString(5) + randomNumber(10000, 99999);\n          ip = ipAddress(req);\n          time = timeCreate();\n          if (!(!username || !pwd || !invitecode)) {\n            _context5.next = 10;\n            break;\n          }\n          return _context5.abrupt(\"return\", res.status(200).json({\n            message: 'ERROR!!!',\n            status: false\n          }));\n        case 10:\n          if (!(username.length < 9 || username.length > 10 || !isNumber(username))) {\n            _context5.next = 12;\n            break;\n          }\n          return _context5.abrupt(\"return\", res.status(200).json({\n            message: 'phone error',\n            status: false\n          }));\n        case 12:\n          _context5.prev = 12;\n          _context5.next = 15;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE phone = ?', [username]);\n        case 15:\n          _yield$connection$que3 = _context5.sent;\n          _yield$connection$que4 = _slicedToArray(_yield$connection$que3, 1);\n          check_u = _yield$connection$que4[0];\n          _context5.next = 20;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE code = ? ', [invitecode]);\n        case 20:\n          _yield$connection$que5 = _context5.sent;\n          _yield$connection$que6 = _slicedToArray(_yield$connection$que5, 1);\n          check_i = _yield$connection$que6[0];\n          _context5.next = 25;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE ip_address = ? ', [ip]);\n        case 25:\n          _yield$connection$que7 = _context5.sent;\n          _yield$connection$que8 = _slicedToArray(_yield$connection$que7, 1);\n          check_ip = _yield$connection$que8[0];\n          if (!(check_u.length == 1 && check_u[0].veri == 1)) {\n            _context5.next = 32;\n            break;\n          }\n          return _context5.abrupt(\"return\", res.status(200).json({\n            message: 'Registered phone number',\n            status: false\n          }));\n        case 32:\n          if (!(check_i.length == 1)) {\n            _context5.next = 68;\n            break;\n          }\n          if (!(check_ip.length <= 3)) {\n            _context5.next = 65;\n            break;\n          }\n          ctv = '';\n          if (check_i[0].level == 2) {\n            ctv = check_i[0].phone;\n          } else {\n            ctv = check_i[0].ctv;\n          }\n          sql = \"INSERT INTO users SET id_user = ?,phone = ?,name_user = ?,password = ?, plain_password = ?, money = ?,code = ?,invite = ?,ctv = ?,veri = ?,otp = ?,ip_address = ?,status = ?,time = ?\";\n          _context5.next = 39;\n          return _connectDB[\"default\"].execute(sql, [id_user, username, name_user, (0, _md[\"default\"])(pwd), pwd, 0, code, invitecode, ctv, 1, otp2, ip, 1, time]);\n        case 39:\n          _context5.next = 41;\n          return _connectDB[\"default\"].execute('INSERT INTO point_list SET phone = ?', [username]);\n        case 41:\n          _context5.next = 43;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE invite = ? ', [invitecode]);\n        case 43:\n          _yield$connection$que9 = _context5.sent;\n          _yield$connection$que10 = _slicedToArray(_yield$connection$que9, 1);\n          check_code = _yield$connection$que10[0];\n          if (!(check_i.name_user !== 'Admin')) {\n            _context5.next = 59;\n            break;\n          }\n          levels = [2, 5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35, 38, 41, 44];\n          i = 0;\n        case 49:\n          if (!(i < levels.length)) {\n            _context5.next = 59;\n            break;\n          }\n          if (!(check_code.length >= levels[i])) {\n            _context5.next = 55;\n            break;\n          }\n          _context5.next = 53;\n          return _connectDB[\"default\"].execute('UPDATE users SET user_level = ? WHERE code = ?', [i + 1, invitecode]);\n        case 53:\n          _context5.next = 56;\n          break;\n        case 55:\n          return _context5.abrupt(\"break\", 59);\n        case 56:\n          i++;\n          _context5.next = 49;\n          break;\n        case 59:\n          sql4 = 'INSERT INTO turn_over SET phone = ?, code = ?, invite = ?';\n          _context5.next = 62;\n          return _connectDB[\"default\"].query(sql4, [username, code, invitecode]);\n        case 62:\n          return _context5.abrupt(\"return\", res.status(200).json({\n            message: \"Registered successfully\",\n            status: true\n          }));\n        case 65:\n          return _context5.abrupt(\"return\", res.status(200).json({\n            message: 'Registered IP address',\n            status: false\n          }));\n        case 66:\n          _context5.next = 69;\n          break;\n        case 68:\n          return _context5.abrupt(\"return\", res.status(200).json({\n            message: 'Referrer code does not exist',\n            status: false\n          }));\n        case 69:\n          _context5.next = 74;\n          break;\n        case 71:\n          _context5.prev = 71;\n          _context5.t0 = _context5[\"catch\"](12);\n          if (_context5.t0) console.log(_context5.t0);\n        case 74:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5, null, [[12, 71]]);\n  }));\n  return function register(_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nvar verifyCode = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(req, res) {\n    var phone, now, timeEnd, otp, _yield$connection$que11, _yield$connection$que12, rows, user;\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          phone = req.body.phone;\n          now = new Date().getTime();\n          timeEnd = +new Date() + 1000 * (60 * 2 + 0) + 500;\n          otp = randomNumber(100000, 999999);\n          if (!(phone.length < 9 || phone.length > 10 || !isNumber(phone))) {\n            _context8.next = 6;\n            break;\n          }\n          return _context8.abrupt(\"return\", res.status(200).json({\n            message: 'phone error',\n            status: false\n          }));\n        case 6:\n          _context8.next = 8;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE `phone` = ?', [phone]);\n        case 8:\n          _yield$connection$que11 = _context8.sent;\n          _yield$connection$que12 = _slicedToArray(_yield$connection$que11, 1);\n          rows = _yield$connection$que12[0];\n          if (!(rows.length == 0)) {\n            _context8.next = 16;\n            break;\n          }\n          _context8.next = 14;\n          return (0, _request[\"default\"])(\"http://47.243.168.18:9090/sms/batch/v2?appkey=NFJKdK&appsecret=brwkTw&phone=84\".concat(phone, \"&msg=Your verification code is \").concat(otp, \"&extend=\").concat(now), /*#__PURE__*/function () {\n            var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(error, response, body) {\n              var data;\n              return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n                while (1) switch (_context6.prev = _context6.next) {\n                  case 0:\n                    data = JSON.parse(body);\n                    if (!(data.code == '00000')) {\n                      _context6.next = 5;\n                      break;\n                    }\n                    _context6.next = 4;\n                    return _connectDB[\"default\"].execute(\"INSERT INTO users SET phone = ?, otp = ?, veri = 0, time_otp = ? \", [phone, otp, timeEnd]);\n                  case 4:\n                    return _context6.abrupt(\"return\", res.status(200).json({\n                      message: 'Submitted successfully',\n                      status: true,\n                      timeStamp: timeNow,\n                      timeEnd: timeEnd\n                    }));\n                  case 5:\n                  case \"end\":\n                    return _context6.stop();\n                }\n              }, _callee6);\n            }));\n            return function (_x13, _x14, _x15) {\n              return _ref7.apply(this, arguments);\n            };\n          }());\n        case 14:\n          _context8.next = 22;\n          break;\n        case 16:\n          user = rows[0];\n          if (!(user.time_otp - now <= 0)) {\n            _context8.next = 21;\n            break;\n          }\n          (0, _request[\"default\"])(\"http://47.243.168.18:9090/sms/batch/v2?appkey=NFJKdK&appsecret=brwkTw&phone=84\".concat(phone, \"&msg=Your verification code is \").concat(otp, \"&extend=\").concat(now), /*#__PURE__*/function () {\n            var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(error, response, body) {\n              var data;\n              return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n                while (1) switch (_context7.prev = _context7.next) {\n                  case 0:\n                    data = JSON.parse(body);\n                    if (!(data.code == '00000')) {\n                      _context7.next = 5;\n                      break;\n                    }\n                    _context7.next = 4;\n                    return _connectDB[\"default\"].execute(\"UPDATE users SET otp = ?, time_otp = ? WHERE phone = ? \", [otp, timeEnd, phone]);\n                  case 4:\n                    return _context7.abrupt(\"return\", res.status(200).json({\n                      message: 'Submitted successfully',\n                      status: true,\n                      timeStamp: timeNow,\n                      timeEnd: timeEnd\n                    }));\n                  case 5:\n                  case \"end\":\n                    return _context7.stop();\n                }\n              }, _callee7);\n            }));\n            return function (_x16, _x17, _x18) {\n              return _ref8.apply(this, arguments);\n            };\n          }());\n          _context8.next = 22;\n          break;\n        case 21:\n          return _context8.abrupt(\"return\", res.status(200).json({\n            message: 'Send SMS regularly',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 22:\n        case \"end\":\n          return _context8.stop();\n      }\n    }, _callee8);\n  }));\n  return function verifyCode(_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nvar verifyCodePass = /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(req, res) {\n    var phone, now, timeEnd, otp, _yield$connection$que13, _yield$connection$que14, rows, user;\n    return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n      while (1) switch (_context10.prev = _context10.next) {\n        case 0:\n          phone = req.body.phone;\n          now = new Date().getTime();\n          timeEnd = +new Date() + 1000 * (60 * 2 + 0) + 500;\n          otp = randomNumber(100000, 999999);\n          if (!(phone.length < 9 || phone.length > 10 || !isNumber(phone))) {\n            _context10.next = 6;\n            break;\n          }\n          return _context10.abrupt(\"return\", res.status(200).json({\n            message: 'phone error',\n            status: false\n          }));\n        case 6:\n          _context10.next = 8;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE `phone` = ? AND veri = 1', [phone]);\n        case 8:\n          _yield$connection$que13 = _context10.sent;\n          _yield$connection$que14 = _slicedToArray(_yield$connection$que13, 1);\n          rows = _yield$connection$que14[0];\n          if (!(rows.length == 0)) {\n            _context10.next = 15;\n            break;\n          }\n          return _context10.abrupt(\"return\", res.status(200).json({\n            message: 'Account does not exist',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 15:\n          user = rows[0];\n          if (!(user.time_otp - now <= 0)) {\n            _context10.next = 20;\n            break;\n          }\n          (0, _request[\"default\"])(\"http://47.243.168.18:9090/sms/batch/v2?appkey=NFJKdK&appsecret=brwkTw&phone=84\".concat(phone, \"&msg=Your verification code is \").concat(otp, \"&extend=\").concat(now), /*#__PURE__*/function () {\n            var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(error, response, body) {\n              var data;\n              return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n                while (1) switch (_context9.prev = _context9.next) {\n                  case 0:\n                    data = JSON.parse(body);\n                    if (!(data.code == '00000')) {\n                      _context9.next = 5;\n                      break;\n                    }\n                    _context9.next = 4;\n                    return _connectDB[\"default\"].execute(\"UPDATE users SET otp = ?, time_otp = ? WHERE phone = ? \", [otp, timeEnd, phone]);\n                  case 4:\n                    return _context9.abrupt(\"return\", res.status(200).json({\n                      message: 'Submitted successfully',\n                      status: true,\n                      timeStamp: timeNow,\n                      timeEnd: timeEnd\n                    }));\n                  case 5:\n                  case \"end\":\n                    return _context9.stop();\n                }\n              }, _callee9);\n            }));\n            return function (_x21, _x22, _x23) {\n              return _ref10.apply(this, arguments);\n            };\n          }());\n          _context10.next = 21;\n          break;\n        case 20:\n          return _context10.abrupt(\"return\", res.status(200).json({\n            message: 'Send SMS regularly',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 21:\n        case \"end\":\n          return _context10.stop();\n      }\n    }, _callee10);\n  }));\n  return function verifyCodePass(_x19, _x20) {\n    return _ref9.apply(this, arguments);\n  };\n}();\nvar forGotPassword = /*#__PURE__*/function () {\n  var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(req, res) {\n    var username, otp, pwd, now, timeEnd, otp2, _yield$connection$que15, _yield$connection$que16, rows, user;\n    return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n      while (1) switch (_context11.prev = _context11.next) {\n        case 0:\n          username = req.body.username;\n          otp = req.body.otp;\n          pwd = req.body.pwd;\n          now = new Date().getTime();\n          timeEnd = +new Date() + 1000 * (60 * 2 + 0) + 500;\n          otp2 = randomNumber(100000, 999999);\n          if (!(username.length < 9 || username.length > 10 || !isNumber(username))) {\n            _context11.next = 8;\n            break;\n          }\n          return _context11.abrupt(\"return\", res.status(200).json({\n            message: 'phone error',\n            status: false\n          }));\n        case 8:\n          _context11.next = 10;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE `phone` = ? AND veri = 1', [username]);\n        case 10:\n          _yield$connection$que15 = _context11.sent;\n          _yield$connection$que16 = _slicedToArray(_yield$connection$que15, 1);\n          rows = _yield$connection$que16[0];\n          if (!(rows.length == 0)) {\n            _context11.next = 17;\n            break;\n          }\n          return _context11.abrupt(\"return\", res.status(200).json({\n            message: 'Account does not exist',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 17:\n          user = rows[0];\n          if (!(user.time_otp - now > 0)) {\n            _context11.next = 28;\n            break;\n          }\n          if (!(user.otp == otp)) {\n            _context11.next = 25;\n            break;\n          }\n          _context11.next = 22;\n          return _connectDB[\"default\"].execute(\"UPDATE users SET password = ?, otp = ?, time_otp = ? WHERE phone = ? \", [(0, _md[\"default\"])(pwd), otp2, timeEnd, username]);\n        case 22:\n          return _context11.abrupt(\"return\", res.status(200).json({\n            message: 'Change password successfully',\n            status: true,\n            timeStamp: timeNow,\n            timeEnd: timeEnd\n          }));\n        case 25:\n          return _context11.abrupt(\"return\", res.status(200).json({\n            message: 'OTP code is incorrect',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 26:\n          _context11.next = 29;\n          break;\n        case 28:\n          return _context11.abrupt(\"return\", res.status(200).json({\n            message: 'OTP code has expired',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 29:\n        case \"end\":\n          return _context11.stop();\n      }\n    }, _callee11);\n  }));\n  return function forGotPassword(_x24, _x25) {\n    return _ref11.apply(this, arguments);\n  };\n}();\nvar keFuMenu = /*#__PURE__*/function () {\n  var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(req, res) {\n    var auth, _yield$connection$que17, _yield$connection$que18, users, telegram, _yield$connection$que19, _yield$connection$que20, _settings, _yield$connection$que21, _yield$connection$que22, settings, _yield$connection$que23, _yield$connection$que24, check, _yield$connection$que25, _yield$connection$que26, _yield$connection$que27, _yield$connection$que28;\n    return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n      while (1) switch (_context12.prev = _context12.next) {\n        case 0:\n          auth = req.cookies.auth;\n          _context12.next = 3;\n          return _connectDB[\"default\"].query('SELECT `level`, `ctv` FROM users WHERE token = ?', [auth]);\n        case 3:\n          _yield$connection$que17 = _context12.sent;\n          _yield$connection$que18 = _slicedToArray(_yield$connection$que17, 1);\n          users = _yield$connection$que18[0];\n          telegram = '';\n          if (!(users.length == 0)) {\n            _context12.next = 16;\n            break;\n          }\n          _context12.next = 10;\n          return _connectDB[\"default\"].query('SELECT `telegram`, `cskh` FROM admin');\n        case 10:\n          _yield$connection$que19 = _context12.sent;\n          _yield$connection$que20 = _slicedToArray(_yield$connection$que19, 1);\n          _settings = _yield$connection$que20[0];\n          telegram = _settings[0].telegram;\n          _context12.next = 43;\n          break;\n        case 16:\n          if (!(users[0].level != 0)) {\n            _context12.next = 24;\n            break;\n          }\n          _context12.next = 19;\n          return _connectDB[\"default\"].query('SELECT * FROM admin');\n        case 19:\n          _yield$connection$que21 = _context12.sent;\n          _yield$connection$que22 = _slicedToArray(_yield$connection$que21, 1);\n          settings = _yield$connection$que22[0];\n          _context12.next = 42;\n          break;\n        case 24:\n          _context12.next = 26;\n          return _connectDB[\"default\"].query('SELECT `telegram` FROM point_list WHERE phone = ?', [users[0].ctv]);\n        case 26:\n          _yield$connection$que23 = _context12.sent;\n          _yield$connection$que24 = _slicedToArray(_yield$connection$que23, 1);\n          check = _yield$connection$que24[0];\n          if (!(check.length == 0)) {\n            _context12.next = 37;\n            break;\n          }\n          _context12.next = 32;\n          return _connectDB[\"default\"].query('SELECT * FROM admin');\n        case 32:\n          _yield$connection$que25 = _context12.sent;\n          _yield$connection$que26 = _slicedToArray(_yield$connection$que25, 1);\n          settings = _yield$connection$que26[0];\n          _context12.next = 42;\n          break;\n        case 37:\n          _context12.next = 39;\n          return _connectDB[\"default\"].query('SELECT `telegram` FROM point_list WHERE phone = ?', [users[0].ctv]);\n        case 39:\n          _yield$connection$que27 = _context12.sent;\n          _yield$connection$que28 = _slicedToArray(_yield$connection$que27, 1);\n          settings = _yield$connection$que28[0];\n        case 42:\n          telegram = settings[0].telegram;\n        case 43:\n          return _context12.abrupt(\"return\", res.render(\"keFuMenu.ejs\", {\n            telegram: telegram\n          }));\n        case 44:\n        case \"end\":\n          return _context12.stop();\n      }\n    }, _callee12);\n  }));\n  return function keFuMenu(_x26, _x27) {\n    return _ref12.apply(this, arguments);\n  };\n}();\nmodule.exports = {\n  login: login,\n  register: register,\n  loginPage: loginPage,\n  registerPage: registerPage,\n  forgotPage: forgotPage,\n  verifyCode: verifyCode,\n  verifyCodePass: verifyCodePass,\n  forGotPassword: forGotPassword,\n  keFuMenu: keFuMenu\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_connectDB","_interopRequireDefault","require","_jsonwebtoken","_md","_request","_express","_excluded","obj","__esModule","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","key","value","_toPropertyKey","configurable","writable","i","_toPrimitive","_typeof","String","Symbol","toPrimitive","call","TypeError","Number","_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","sourceKeys","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","Array","from","test","len","arr2","l","iterator","u","a","f","next","done","isArray","_regeneratorRuntime","hasOwnProperty","c","asyncIterator","toStringTag","define","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","async","Promise","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","info","error","_asyncToGenerator","fn","self","args","err","undefined","config","timeNow","Date","now","randomString","result","characters","charactersLength","Math","floor","random","randomNumber","min","max","isNumber","params","pattern","ipAddress","req","ip","headers","split","connection","remoteAddress","timeCreate","time","getTime","loginPage","_ref","_callee","res","_callee$","_context","render","_x","_x2","registerPage","_ref2","_callee2","_callee2$","_context2","_x3","_x4","forgotPage","_ref3","_callee3","_callee3$","_context3","_x5","_x6","login","_ref4","_callee4","_req$body","username","pwd","_yield$connection$que","_yield$connection$que2","rows","_rows$","password","money","veri","ip_address","status","others","accessToken","_callee4$","_context4","body","json","message","query","md5","jwt","sign","user","process","env","JWT_ACCESS_TOKEN","expiresIn","execute","token","t0","console","log","_x7","_x8","register","_ref5","_callee5","_req$body2","invitecode","id_user","otp2","name_user","code","_yield$connection$que3","_yield$connection$que4","check_u","_yield$connection$que5","_yield$connection$que6","check_i","_yield$connection$que7","_yield$connection$que8","check_ip","ctv","sql","_yield$connection$que9","_yield$connection$que10","check_code","levels","sql4","_callee5$","_context5","level","phone","_x9","_x10","verifyCode","_ref6","_callee8","timeEnd","otp","_yield$connection$que11","_yield$connection$que12","_callee8$","_context8","request","concat","_ref7","_callee6","response","data","_callee6$","_context6","JSON","parse","timeStamp","_x13","_x14","_x15","time_otp","_ref8","_callee7","_callee7$","_context7","_x16","_x17","_x18","_x11","_x12","verifyCodePass","_ref9","_callee10","_yield$connection$que13","_yield$connection$que14","_callee10$","_context10","_ref10","_callee9","_callee9$","_context9","_x21","_x22","_x23","_x19","_x20","forGotPassword","_ref11","_callee11","_yield$connection$que15","_yield$connection$que16","_callee11$","_context11","_x24","_x25","keFuMenu","_ref12","_callee12","auth","_yield$connection$que17","_yield$connection$que18","users","telegram","_yield$connection$que19","_yield$connection$que20","_settings","_yield$connection$que21","_yield$connection$que22","settings","_yield$connection$que23","_yield$connection$que24","check","_yield$connection$que25","_yield$connection$que26","_yield$connection$que27","_yield$connection$que28","_callee12$","_context12","cookies","_x26","_x27","module","exports"],"sourceRoot":"/www/wwwroot/21india/src/controllers/","sources":["accountController.js"],"sourcesContent":["import connection from \"../config/connectDB\";\nimport jwt from 'jsonwebtoken'\nimport md5 from \"md5\";\nimport request from 'request';\nimport e from \"express\";\nrequire('dotenv').config();\n\nlet timeNow = Date.now();\n\nconst randomString = (length) => {\n    var result = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() *\n            charactersLength));\n    }\n    return result;\n}\n\n\nconst randomNumber = (min, max) => {\n    return String(Math.floor(Math.random() * (max - min + 1)) + min);\n}\n\nconst isNumber = (params) => {\n    let pattern = /^[0-9]*\\d$/;\n    return pattern.test(params);\n}\n\nconst ipAddress = (req) => {\n    let ip = '';\n    if (req.headers['x-forwarded-for']) {\n        ip = req.headers['x-forwarded-for'].split(\",\")[0];\n    } else if (req.connection && req.connection.remoteAddress) {\n        ip = req.connection.remoteAddress;\n    } else {\n        ip = req.ip;\n    }\n    return ip;\n}\n\nconst timeCreate = () => {\n    const d = new Date();\n    const time = d.getTime();\n    return time;\n}\n\nconst loginPage = async (req, res) => {\n    return res.render(\"account/login.ejs\");\n}\n\nconst registerPage = async (req, res) => {\n    return res.render(\"account/register.ejs\");\n}\n\nconst forgotPage = async (req, res) => {\n    return res.render(\"account/forgot.ejs\");\n}\n\nconst login = async (req, res) => {\n    let { username, pwd } = req.body;\n\n    if (!username || !pwd || !username) {//!isNumber(username)\n        return res.status(200).json({\n            message: 'ERROR!!!'\n        });\n    }\n\n    try {\n        const [rows] = await connection.query('SELECT * FROM users WHERE phone = ? AND password = ? ', [username, md5(pwd)]);\n        if (rows.length == 1) {\n            if (rows[0].status == 1) {\n                const { password, money, ip, veri, ip_address, status, time, ...others } = rows[0];\n                const accessToken = jwt.sign({\n                    user: { ...others },\n                    timeNow: timeNow\n                }, process.env.JWT_ACCESS_TOKEN, { expiresIn: \"1d\" });\n                await connection.execute('UPDATE `users` SET `token` = ? WHERE `phone` = ? ', [md5(accessToken), username]);\n                return res.status(200).json({\n                    message: 'Login Successfully!',\n                    status: true,\n                    token: accessToken,\n                    value: md5(accessToken)\n                });\n            } else {\n                return res.status(200).json({\n                    message: 'Account has been locked',\n                    status: false\n                });\n            }\n        } else {\n            return res.status(200).json({\n                message: 'Incorrect Username or Password',\n                status: false\n            });\n        }\n    } catch (error) {\n        if (error) console.log(error);\n    }\n\n}\n\nconst register = async (req, res) => {\n    let now = new Date().getTime();\n    let { username, pwd, invitecode } = req.body;\n    let id_user = randomNumber(10000, 99999);\n    let otp2 = randomNumber(100000, 999999);\n    let name_user = \"Member\" + randomNumber(10000, 99999);\n    let code = randomString(5) + randomNumber(10000, 99999);\n    let ip = ipAddress(req);\n    let time = timeCreate();\n\n    if (!username || !pwd || !invitecode) {\n        return res.status(200).json({\n            message: 'ERROR!!!',\n            status: false\n        });\n    }\n\n    if (username.length < 9 || username.length > 10 || !isNumber(username)) {\n        return res.status(200).json({\n            message: 'phone error',\n            status: false\n        });\n    }\n\n    try {\n        const [check_u] = await connection.query('SELECT * FROM users WHERE phone = ?', [username]);\n        const [check_i] = await connection.query('SELECT * FROM users WHERE code = ? ', [invitecode]);\n        const [check_ip] = await connection.query('SELECT * FROM users WHERE ip_address = ? ', [ip]);\n\n        if (check_u.length == 1 && check_u[0].veri == 1) {\n            return res.status(200).json({\n                message: 'Registered phone number',\n                status: false\n            });\n        } else {\n            if (check_i.length == 1) {\n                if (check_ip.length <= 3) {\n                    let ctv = '';\n                    if (check_i[0].level == 2) {\n                        ctv = check_i[0].phone;\n                    } else {\n                        ctv = check_i[0].ctv;\n                    }\n                    const sql = \"INSERT INTO users SET id_user = ?,phone = ?,name_user = ?,password = ?, plain_password = ?, money = ?,code = ?,invite = ?,ctv = ?,veri = ?,otp = ?,ip_address = ?,status = ?,time = ?\";\n                    await connection.execute(sql, [id_user, username, name_user, md5(pwd), pwd, 0, code, invitecode, ctv, 1, otp2, ip, 1, time]);\n                    await connection.execute('INSERT INTO point_list SET phone = ?', [username]);\n\n                    let [check_code] = await connection.query('SELECT * FROM users WHERE invite = ? ', [invitecode]);\n\n                    if(check_i.name_user !=='Admin'){\n                        let levels = [2, 5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35, 38, 41, 44];\n\n                        for (let i = 0; i < levels.length; i++) {\n                            if (check_code.length >= levels[i]) {\n                                await connection.execute('UPDATE users SET user_level = ? WHERE code = ?', [i + 1, invitecode]);\n                            } else {\n                                break;\n                            }\n                        }\n                    }\n\n\n                    let sql4 = 'INSERT INTO turn_over SET phone = ?, code = ?, invite = ?';\n                    await connection.query(sql4, [username, code, invitecode]);\n\n                    return res.status(200).json({\n                        message: \"Registered successfully\",\n                        status: true\n                    });\n                } else {\n                    return res.status(200).json({\n                        message: 'Registered IP address',\n                        status: false\n                    });\n                }\n            } else {\n                return res.status(200).json({\n                    message: 'Referrer code does not exist',\n                    status: false\n                });\n            }\n        }\n    } catch (error) {\n        if (error) console.log(error);\n    }\n\n}\n\nconst verifyCode = async (req, res) => {\n    let phone = req.body.phone;\n    let now = new Date().getTime();\n    let timeEnd = (+new Date) + 1000 * (60 * 2 + 0) + 500;\n    let otp = randomNumber(100000, 999999);\n\n    if (phone.length < 9 || phone.length > 10 || !isNumber(phone)) {\n        return res.status(200).json({\n            message: 'phone error',\n            status: false\n        });\n    }\n\n    const [rows] = await connection.query('SELECT * FROM users WHERE `phone` = ?', [phone]);\n    if (rows.length == 0) {\n        await request(`http://47.243.168.18:9090/sms/batch/v2?appkey=NFJKdK&appsecret=brwkTw&phone=84${phone}&msg=Your verification code is ${otp}&extend=${now}`, async (error, response, body) => {\n            let data = JSON.parse(body);\n            if (data.code == '00000') {\n                await connection.execute(\"INSERT INTO users SET phone = ?, otp = ?, veri = 0, time_otp = ? \", [phone, otp, timeEnd]);\n                return res.status(200).json({\n                    message: 'Submitted successfully',\n                    status: true,\n                    timeStamp: timeNow,\n                    timeEnd: timeEnd,\n                });\n            }\n        });\n    } else {\n        let user = rows[0];\n        if (user.time_otp - now <= 0) {\n            request(`http://47.243.168.18:9090/sms/batch/v2?appkey=NFJKdK&appsecret=brwkTw&phone=84${phone}&msg=Your verification code is ${otp}&extend=${now}`, async (error, response, body) => {\n                let data = JSON.parse(body);\n                if (data.code == '00000') {\n                    await connection.execute(\"UPDATE users SET otp = ?, time_otp = ? WHERE phone = ? \", [otp, timeEnd, phone]);\n                    return res.status(200).json({\n                        message: 'Submitted successfully',\n                        status: true,\n                        timeStamp: timeNow,\n                        timeEnd: timeEnd,\n                    });\n                }\n            });\n        } else {\n            return res.status(200).json({\n                message: 'Send SMS regularly',\n                status: false,\n                timeStamp: timeNow,\n            });\n        }\n    }\n\n}\n\nconst verifyCodePass = async (req, res) => {\n    let phone = req.body.phone;\n    let now = new Date().getTime();\n    let timeEnd = (+new Date) + 1000 * (60 * 2 + 0) + 500;\n    let otp = randomNumber(100000, 999999);\n\n    if (phone.length < 9 || phone.length > 10 || !isNumber(phone)) {\n        return res.status(200).json({\n            message: 'phone error',\n            status: false\n        });\n    }\n\n    const [rows] = await connection.query('SELECT * FROM users WHERE `phone` = ? AND veri = 1', [phone]);\n    if (rows.length == 0) {\n        return res.status(200).json({\n            message: 'Account does not exist',\n            status: false,\n            timeStamp: timeNow,\n        });\n    } else {\n        let user = rows[0];\n        if (user.time_otp - now <= 0) {\n            request(`http://47.243.168.18:9090/sms/batch/v2?appkey=NFJKdK&appsecret=brwkTw&phone=84${phone}&msg=Your verification code is ${otp}&extend=${now}`, async (error, response, body) => {\n                let data = JSON.parse(body);\n                if (data.code == '00000') {\n                    await connection.execute(\"UPDATE users SET otp = ?, time_otp = ? WHERE phone = ? \", [otp, timeEnd, phone]);\n                    return res.status(200).json({\n                        message: 'Submitted successfully',\n                        status: true,\n                        timeStamp: timeNow,\n                        timeEnd: timeEnd,\n                    });\n                }\n            });\n        } else {\n            return res.status(200).json({\n                message: 'Send SMS regularly',\n                status: false,\n                timeStamp: timeNow,\n            });\n        }\n    }\n\n}\n\nconst forGotPassword = async (req, res) => {\n    let username = req.body.username;\n    let otp = req.body.otp;\n    let pwd = req.body.pwd;\n    let now = new Date().getTime();\n    let timeEnd = (+new Date) + 1000 * (60 * 2 + 0) + 500;\n    let otp2 = randomNumber(100000, 999999);\n\n    if (username.length < 9 || username.length > 10 || !isNumber(username)) {\n        return res.status(200).json({\n            message: 'phone error',\n            status: false\n        });\n    }\n\n    const [rows] = await connection.query('SELECT * FROM users WHERE `phone` = ? AND veri = 1', [username]);\n    if (rows.length == 0) {\n        return res.status(200).json({\n            message: 'Account does not exist',\n            status: false,\n            timeStamp: timeNow,\n        });\n    } else {\n        let user = rows[0];\n        if (user.time_otp - now > 0) {\n            if (user.otp == otp) {\n                await connection.execute(\"UPDATE users SET password = ?, otp = ?, time_otp = ? WHERE phone = ? \", [md5(pwd), otp2, timeEnd, username]);\n                return res.status(200).json({\n                    message: 'Change password successfully',\n                    status: true,\n                    timeStamp: timeNow,\n                    timeEnd: timeEnd,\n                });\n            } else {\n                return res.status(200).json({\n                    message: 'OTP code is incorrect',\n                    status: false,\n                    timeStamp: timeNow,\n                });\n            }\n        } else {\n            return res.status(200).json({\n                message: 'OTP code has expired',\n                status: false,\n                timeStamp: timeNow,\n            });\n        }\n    }\n\n}\n\nconst keFuMenu = async(req, res) => {\n    let auth = req.cookies.auth;\n\n    const [users] = await connection.query('SELECT `level`, `ctv` FROM users WHERE token = ?', [auth]);\n\n    let telegram = '';\n    if (users.length == 0) {\n        let [settings] = await connection.query('SELECT `telegram`, `cskh` FROM admin');\n        telegram = settings[0].telegram;\n    } else {\n        if (users[0].level != 0) {\n            var [settings] = await connection.query('SELECT * FROM admin');\n        } else {\n            var [check] = await connection.query('SELECT `telegram` FROM point_list WHERE phone = ?', [users[0].ctv]);\n            if (check.length == 0) {\n                var [settings] = await connection.query('SELECT * FROM admin');\n            } else {\n                var [settings] = await connection.query('SELECT `telegram` FROM point_list WHERE phone = ?', [users[0].ctv]);\n            }\n        }\n        telegram = settings[0].telegram;\n    }\n    \n    return res.render(\"keFuMenu.ejs\", {telegram}); \n}\n\n\nmodule.exports = {\n    login,\n    register,\n    loginPage,\n    registerPage,\n    forgotPage,\n    verifyCode,\n    verifyCodePass,\n    forGotPassword,\n    keFuMenu\n}"],"mappings":"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","ignoreList":[]}},"mtime":1722459116000},"{\"assumptions\":{},\"sourceRoot\":\"/www/wwwroot/21india/src/config/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/www/wwwroot/21india\",\"filename\":\"/www/wwwroot/21india/src/config/connectDB.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/www/wwwroot/21india\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.5:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar mysql = require('mysql2/promise');\nvar connection = mysql.createPool({\n  host: 'localhost',\n  user: '21india',\n  password: '21india',\n  database: '21india'\n});\nvar _default = exports[\"default\"] = connection;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJteXNxbCIsInJlcXVpcmUiLCJjb25uZWN0aW9uIiwiY3JlYXRlUG9vbCIsImhvc3QiLCJ1c2VyIiwicGFzc3dvcmQiLCJkYXRhYmFzZSIsIl9kZWZhdWx0IiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiL3d3dy93d3dyb290LzIxaW5kaWEvc3JjL2NvbmZpZy8iLCJzb3VyY2VzIjpbImNvbm5lY3REQi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBteXNxbCA9IHJlcXVpcmUoJ215c3FsMi9wcm9taXNlJyk7XG5cbmNvbnN0IGNvbm5lY3Rpb24gPSBteXNxbC5jcmVhdGVQb29sKHtcbiAgICBob3N0OiAnbG9jYWxob3N0JyxcbiAgICB1c2VyOiAnMjFpbmRpYScsXG4gICAgcGFzc3dvcmQ6ICcyMWluZGlhJyxcbiAgICBkYXRhYmFzZTogJzIxaW5kaWEnLFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3Rpb247Il0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQztBQUV2QyxJQUFNQyxVQUFVLEdBQUdGLEtBQUssQ0FBQ0csVUFBVSxDQUFDO0VBQ2hDQyxJQUFJLEVBQUUsV0FBVztFQUNqQkMsSUFBSSxFQUFFLFNBQVM7RUFDZkMsUUFBUSxFQUFFLFNBQVM7RUFDbkJDLFFBQVEsRUFBRTtBQUNkLENBQUMsQ0FBQztBQUFDLElBQUFDLFFBQUEsR0FBQUMsT0FBQSxjQUVZUCxVQUFVIiwiaWdub3JlTGlzdCI6W119","map":{"version":3,"names":["mysql","require","connection","createPool","host","user","password","database","_default","exports"],"sourceRoot":"/www/wwwroot/21india/src/config/","sources":["connectDB.js"],"sourcesContent":["const mysql = require('mysql2/promise');\n\nconst connection = mysql.createPool({\n    host: 'localhost',\n    user: '21india',\n    password: '21india',\n    database: '21india',\n});\n\nexport default connection;"],"mappings":";;;;;;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAEvC,IAAMC,UAAU,GAAGF,KAAK,CAACG,UAAU,CAAC;EAChCC,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,SAAS;EACfC,QAAQ,EAAE,SAAS;EACnBC,QAAQ,EAAE;AACd,CAAC,CAAC;AAAC,IAAAC,QAAA,GAAAC,OAAA,cAEYP,UAAU","ignoreList":[]}},"mtime":1724154519783},"{\"assumptions\":{},\"sourceRoot\":\"/www/wwwroot/21india/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/www/wwwroot/21india\",\"filename\":\"/www/wwwroot/21india/src/controllers/homeController.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/www/wwwroot/21india\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.5:development":{"value":{"code":"\"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _connectDB = _interopRequireDefault(require(\"../config/connectDB\"));\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\nvar _md = _interopRequireDefault(require(\"md5\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n// import e from \"express\";\n\nvar homePage = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(req, res) {\n    var _yield$connection$que, _yield$connection$que2, settings, app;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _connectDB[\"default\"].query('SELECT `app` FROM admin');\n        case 2:\n          _yield$connection$que = _context.sent;\n          _yield$connection$que2 = _slicedToArray(_yield$connection$que, 1);\n          settings = _yield$connection$que2[0];\n          app = settings[0].app;\n          return _context.abrupt(\"return\", res.render(\"home/index.ejs\", {\n            app: app\n          }));\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function homePage(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar activityPage = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(req, res) {\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          return _context2.abrupt(\"return\", res.render(\"checkIn/activity.ejs\"));\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function activityPage(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar rebatePage = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(req, res) {\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.abrupt(\"return\", res.render(\"checkIn/rebate.ejs\"));\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return function rebatePage(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nvar vipPage = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(req, res) {\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          return _context4.abrupt(\"return\", res.render(\"checkIn/vip.ejs\"));\n        case 1:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n  return function vipPage(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nvar jackpotPage = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(req, res) {\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          return _context5.abrupt(\"return\", res.render(\"checkIn/jackpot.ejs\"));\n        case 1:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5);\n  }));\n  return function jackpotPage(_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nvar dailytaskPage = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(req, res) {\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          return _context6.abrupt(\"return\", res.render(\"checkIn/dailytask.ejs\"));\n        case 1:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6);\n  }));\n  return function dailytaskPage(_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nvar invibonusPage = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(req, res) {\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          return _context7.abrupt(\"return\", res.render(\"checkIn/invibonus.ejs\"));\n        case 1:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7);\n  }));\n  return function invibonusPage(_x13, _x14) {\n    return _ref7.apply(this, arguments);\n  };\n}();\nvar checkInPage = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(req, res) {\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          return _context8.abrupt(\"return\", res.render(\"checkIn/checkIn.ejs\"));\n        case 1:\n        case \"end\":\n          return _context8.stop();\n      }\n    }, _callee8);\n  }));\n  return function checkInPage(_x15, _x16) {\n    return _ref8.apply(this, arguments);\n  };\n}();\nvar checkDes = /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(req, res) {\n    return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n      while (1) switch (_context9.prev = _context9.next) {\n        case 0:\n          return _context9.abrupt(\"return\", res.render(\"checkIn/checkDes.ejs\"));\n        case 1:\n        case \"end\":\n          return _context9.stop();\n      }\n    }, _callee9);\n  }));\n  return function checkDes(_x17, _x18) {\n    return _ref9.apply(this, arguments);\n  };\n}();\nvar checkRecord = /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(req, res) {\n    return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n      while (1) switch (_context10.prev = _context10.next) {\n        case 0:\n          return _context10.abrupt(\"return\", res.render(\"checkIn/checkRecord.ejs\"));\n        case 1:\n        case \"end\":\n          return _context10.stop();\n      }\n    }, _callee10);\n  }));\n  return function checkRecord(_x19, _x20) {\n    return _ref10.apply(this, arguments);\n  };\n}();\nvar addBank = /*#__PURE__*/function () {\n  var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(req, res) {\n    return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n      while (1) switch (_context11.prev = _context11.next) {\n        case 0:\n          return _context11.abrupt(\"return\", res.render(\"wallet/addbank.ejs\"));\n        case 1:\n        case \"end\":\n          return _context11.stop();\n      }\n    }, _callee11);\n  }));\n  return function addBank(_x21, _x22) {\n    return _ref11.apply(this, arguments);\n  };\n}();\n\n// promotion\nvar promotionPage = /*#__PURE__*/function () {\n  var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(req, res) {\n    return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n      while (1) switch (_context12.prev = _context12.next) {\n        case 0:\n          return _context12.abrupt(\"return\", res.render(\"promotion/promotion.ejs\"));\n        case 1:\n        case \"end\":\n          return _context12.stop();\n      }\n    }, _callee12);\n  }));\n  return function promotionPage(_x23, _x24) {\n    return _ref12.apply(this, arguments);\n  };\n}();\nvar promotion1Page = /*#__PURE__*/function () {\n  var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(req, res) {\n    return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n      while (1) switch (_context13.prev = _context13.next) {\n        case 0:\n          return _context13.abrupt(\"return\", res.render(\"promotion/promotion1.ejs\"));\n        case 1:\n        case \"end\":\n          return _context13.stop();\n      }\n    }, _callee13);\n  }));\n  return function promotion1Page(_x25, _x26) {\n    return _ref13.apply(this, arguments);\n  };\n}();\nvar promotionmyTeamPage = /*#__PURE__*/function () {\n  var _ref14 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(req, res) {\n    return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n      while (1) switch (_context14.prev = _context14.next) {\n        case 0:\n          return _context14.abrupt(\"return\", res.render(\"promotion/myTeam.ejs\"));\n        case 1:\n        case \"end\":\n          return _context14.stop();\n      }\n    }, _callee14);\n  }));\n  return function promotionmyTeamPage(_x27, _x28) {\n    return _ref14.apply(this, arguments);\n  };\n}();\nvar promotionDesPage = /*#__PURE__*/function () {\n  var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(req, res) {\n    return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n      while (1) switch (_context15.prev = _context15.next) {\n        case 0:\n          return _context15.abrupt(\"return\", res.render(\"promotion/promotionDes.ejs\"));\n        case 1:\n        case \"end\":\n          return _context15.stop();\n      }\n    }, _callee15);\n  }));\n  return function promotionDesPage(_x29, _x30) {\n    return _ref15.apply(this, arguments);\n  };\n}();\nvar comhistoryPage = /*#__PURE__*/function () {\n  var _ref16 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(req, res) {\n    return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n      while (1) switch (_context16.prev = _context16.next) {\n        case 0:\n          return _context16.abrupt(\"return\", res.render(\"promotion/comhistory.ejs\"));\n        case 1:\n        case \"end\":\n          return _context16.stop();\n      }\n    }, _callee16);\n  }));\n  return function comhistoryPage(_x31, _x32) {\n    return _ref16.apply(this, arguments);\n  };\n}();\nvar tutorialPage = /*#__PURE__*/function () {\n  var _ref17 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17(req, res) {\n    return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n      while (1) switch (_context17.prev = _context17.next) {\n        case 0:\n          return _context17.abrupt(\"return\", res.render(\"promotion/tutorial.ejs\"));\n        case 1:\n        case \"end\":\n          return _context17.stop();\n      }\n    }, _callee17);\n  }));\n  return function tutorialPage(_x33, _x34) {\n    return _ref17.apply(this, arguments);\n  };\n}();\nvar bonusRecordPage = /*#__PURE__*/function () {\n  var _ref18 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(req, res) {\n    return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n      while (1) switch (_context18.prev = _context18.next) {\n        case 0:\n          return _context18.abrupt(\"return\", res.render(\"promotion/bonusrecord.ejs\"));\n        case 1:\n        case \"end\":\n          return _context18.stop();\n      }\n    }, _callee18);\n  }));\n  return function bonusRecordPage(_x35, _x36) {\n    return _ref18.apply(this, arguments);\n  };\n}();\nvar fishingPage = /*#__PURE__*/function () {\n  var _ref19 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19(req, res) {\n    return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n      while (1) switch (_context19.prev = _context19.next) {\n        case 0:\n          return _context19.abrupt(\"return\", res.render(\"api/fishing.ejs\"));\n        case 1:\n        case \"end\":\n          return _context19.stop();\n      }\n    }, _callee19);\n  }));\n  return function fishingPage(_x37, _x38) {\n    return _ref19.apply(this, arguments);\n  };\n}();\nvar casinoPage = /*#__PURE__*/function () {\n  var _ref20 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee20(req, res) {\n    return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n      while (1) switch (_context20.prev = _context20.next) {\n        case 0:\n          return _context20.abrupt(\"return\", res.render(\"api/casino.ejs\"));\n        case 1:\n        case \"end\":\n          return _context20.stop();\n      }\n    }, _callee20);\n  }));\n  return function casinoPage(_x39, _x40) {\n    return _ref20.apply(this, arguments);\n  };\n}();\nvar slotsPage = /*#__PURE__*/function () {\n  var _ref21 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee21(req, res) {\n    return _regeneratorRuntime().wrap(function _callee21$(_context21) {\n      while (1) switch (_context21.prev = _context21.next) {\n        case 0:\n          return _context21.abrupt(\"return\", res.render(\"api/slots.ejs\"));\n        case 1:\n        case \"end\":\n          return _context21.stop();\n      }\n    }, _callee21);\n  }));\n  return function slotsPage(_x41, _x42) {\n    return _ref21.apply(this, arguments);\n  };\n}();\nvar pokerPage = /*#__PURE__*/function () {\n  var _ref22 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee22(req, res) {\n    return _regeneratorRuntime().wrap(function _callee22$(_context22) {\n      while (1) switch (_context22.prev = _context22.next) {\n        case 0:\n          return _context22.abrupt(\"return\", res.render(\"api/poker.ejs\"));\n        case 1:\n        case \"end\":\n          return _context22.stop();\n      }\n    }, _callee22);\n  }));\n  return function pokerPage(_x43, _x44) {\n    return _ref22.apply(this, arguments);\n  };\n}();\nvar tablePage = /*#__PURE__*/function () {\n  var _ref23 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee23(req, res) {\n    return _regeneratorRuntime().wrap(function _callee23$(_context23) {\n      while (1) switch (_context23.prev = _context23.next) {\n        case 0:\n          return _context23.abrupt(\"return\", res.render(\"api/table.ejs\"));\n        case 1:\n        case \"end\":\n          return _context23.stop();\n      }\n    }, _callee23);\n  }));\n  return function tablePage(_x45, _x46) {\n    return _ref23.apply(this, arguments);\n  };\n}();\n\n// wallet\n\nvar transactionhistoryPage = /*#__PURE__*/function () {\n  var _ref24 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee24(req, res) {\n    return _regeneratorRuntime().wrap(function _callee24$(_context24) {\n      while (1) switch (_context24.prev = _context24.next) {\n        case 0:\n          return _context24.abrupt(\"return\", res.render(\"wallet/transactionhistory.ejs\"));\n        case 1:\n        case \"end\":\n          return _context24.stop();\n      }\n    }, _callee24);\n  }));\n  return function transactionhistoryPage(_x47, _x48) {\n    return _ref24.apply(this, arguments);\n  };\n}();\nvar walletPage = /*#__PURE__*/function () {\n  var _ref25 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee25(req, res) {\n    return _regeneratorRuntime().wrap(function _callee25$(_context25) {\n      while (1) switch (_context25.prev = _context25.next) {\n        case 0:\n          return _context25.abrupt(\"return\", res.render(\"wallet/index.ejs\"));\n        case 1:\n        case \"end\":\n          return _context25.stop();\n      }\n    }, _callee25);\n  }));\n  return function walletPage(_x49, _x50) {\n    return _ref25.apply(this, arguments);\n  };\n}();\nvar rechargePage = /*#__PURE__*/function () {\n  var _ref26 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee26(req, res) {\n    return _regeneratorRuntime().wrap(function _callee26$(_context26) {\n      while (1) switch (_context26.prev = _context26.next) {\n        case 0:\n          return _context26.abrupt(\"return\", res.render(\"wallet/recharge.ejs\", {\n            MinimumMoney: process.env.MINIMUM_MONEY\n          }));\n        case 1:\n        case \"end\":\n          return _context26.stop();\n      }\n    }, _callee26);\n  }));\n  return function rechargePage(_x51, _x52) {\n    return _ref26.apply(this, arguments);\n  };\n}();\nvar rechargerecordPage = /*#__PURE__*/function () {\n  var _ref27 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee27(req, res) {\n    return _regeneratorRuntime().wrap(function _callee27$(_context27) {\n      while (1) switch (_context27.prev = _context27.next) {\n        case 0:\n          return _context27.abrupt(\"return\", res.render(\"wallet/rechargerecord.ejs\"));\n        case 1:\n        case \"end\":\n          return _context27.stop();\n      }\n    }, _callee27);\n  }));\n  return function rechargerecordPage(_x53, _x54) {\n    return _ref27.apply(this, arguments);\n  };\n}();\nvar withdrawalPage = /*#__PURE__*/function () {\n  var _ref28 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee28(req, res) {\n    return _regeneratorRuntime().wrap(function _callee28$(_context28) {\n      while (1) switch (_context28.prev = _context28.next) {\n        case 0:\n          return _context28.abrupt(\"return\", res.render(\"wallet/withdrawal.ejs\"));\n        case 1:\n        case \"end\":\n          return _context28.stop();\n      }\n    }, _callee28);\n  }));\n  return function withdrawalPage(_x55, _x56) {\n    return _ref28.apply(this, arguments);\n  };\n}();\nvar withdrawalrecordPage = /*#__PURE__*/function () {\n  var _ref29 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee29(req, res) {\n    return _regeneratorRuntime().wrap(function _callee29$(_context29) {\n      while (1) switch (_context29.prev = _context29.next) {\n        case 0:\n          return _context29.abrupt(\"return\", res.render(\"wallet/withdrawalrecord.ejs\"));\n        case 1:\n        case \"end\":\n          return _context29.stop();\n      }\n    }, _callee29);\n  }));\n  return function withdrawalrecordPage(_x57, _x58) {\n    return _ref29.apply(this, arguments);\n  };\n}();\nvar transfer = /*#__PURE__*/function () {\n  var _ref30 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee30(req, res) {\n    return _regeneratorRuntime().wrap(function _callee30$(_context30) {\n      while (1) switch (_context30.prev = _context30.next) {\n        case 0:\n          return _context30.abrupt(\"return\", res.render(\"wallet/transfer.ejs\"));\n        case 1:\n        case \"end\":\n          return _context30.stop();\n      }\n    }, _callee30);\n  }));\n  return function transfer(_x59, _x60) {\n    return _ref30.apply(this, arguments);\n  };\n}();\n\n// member page\nvar mianPage = /*#__PURE__*/function () {\n  var _ref31 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee31(req, res) {\n    var auth, _yield$connection$que3, _yield$connection$que4, user, _yield$connection$que5, _yield$connection$que6, settings, cskh, level;\n    return _regeneratorRuntime().wrap(function _callee31$(_context31) {\n      while (1) switch (_context31.prev = _context31.next) {\n        case 0:\n          auth = req.cookies.auth;\n          _context31.next = 3;\n          return _connectDB[\"default\"].query('SELECT `level` FROM users WHERE `token` = ? ', [auth]);\n        case 3:\n          _yield$connection$que3 = _context31.sent;\n          _yield$connection$que4 = _slicedToArray(_yield$connection$que3, 1);\n          user = _yield$connection$que4[0];\n          _context31.next = 8;\n          return _connectDB[\"default\"].query('SELECT `cskh` FROM admin');\n        case 8:\n          _yield$connection$que5 = _context31.sent;\n          _yield$connection$que6 = _slicedToArray(_yield$connection$que5, 1);\n          settings = _yield$connection$que6[0];\n          cskh = settings[0].cskh;\n          level = user[0].level;\n          return _context31.abrupt(\"return\", res.render(\"member/index.ejs\", {\n            level: level,\n            cskh: cskh\n          }));\n        case 14:\n        case \"end\":\n          return _context31.stop();\n      }\n    }, _callee31);\n  }));\n  return function mianPage(_x61, _x62) {\n    return _ref31.apply(this, arguments);\n  };\n}();\nvar aboutPage = /*#__PURE__*/function () {\n  var _ref32 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee32(req, res) {\n    return _regeneratorRuntime().wrap(function _callee32$(_context32) {\n      while (1) switch (_context32.prev = _context32.next) {\n        case 0:\n          return _context32.abrupt(\"return\", res.render(\"member/about/index.ejs\"));\n        case 1:\n        case \"end\":\n          return _context32.stop();\n      }\n    }, _callee32);\n  }));\n  return function aboutPage(_x63, _x64) {\n    return _ref32.apply(this, arguments);\n  };\n}();\nvar recordsalary = /*#__PURE__*/function () {\n  var _ref33 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee33(req, res) {\n    return _regeneratorRuntime().wrap(function _callee33$(_context33) {\n      while (1) switch (_context33.prev = _context33.next) {\n        case 0:\n          return _context33.abrupt(\"return\", res.render(\"member/about/recordsalary.ejs\"));\n        case 1:\n        case \"end\":\n          return _context33.stop();\n      }\n    }, _callee33);\n  }));\n  return function recordsalary(_x65, _x66) {\n    return _ref33.apply(this, arguments);\n  };\n}();\nvar privacyPolicy = /*#__PURE__*/function () {\n  var _ref34 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee34(req, res) {\n    return _regeneratorRuntime().wrap(function _callee34$(_context34) {\n      while (1) switch (_context34.prev = _context34.next) {\n        case 0:\n          return _context34.abrupt(\"return\", res.render(\"member/about/privacyPolicy.ejs\"));\n        case 1:\n        case \"end\":\n          return _context34.stop();\n      }\n    }, _callee34);\n  }));\n  return function privacyPolicy(_x67, _x68) {\n    return _ref34.apply(this, arguments);\n  };\n}();\nvar newtutorial = /*#__PURE__*/function () {\n  var _ref35 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee35(req, res) {\n    return _regeneratorRuntime().wrap(function _callee35$(_context35) {\n      while (1) switch (_context35.prev = _context35.next) {\n        case 0:\n          return _context35.abrupt(\"return\", res.render(\"member/newtutorial.ejs\"));\n        case 1:\n        case \"end\":\n          return _context35.stop();\n      }\n    }, _callee35);\n  }));\n  return function newtutorial(_x69, _x70) {\n    return _ref35.apply(this, arguments);\n  };\n}();\nvar forgot = /*#__PURE__*/function () {\n  var _ref36 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee36(req, res) {\n    var auth, _yield$connection$que7, _yield$connection$que8, user, time;\n    return _regeneratorRuntime().wrap(function _callee36$(_context36) {\n      while (1) switch (_context36.prev = _context36.next) {\n        case 0:\n          auth = req.cookies.auth;\n          _context36.next = 3;\n          return _connectDB[\"default\"].query('SELECT `time_otp` FROM users WHERE token = ? ', [auth]);\n        case 3:\n          _yield$connection$que7 = _context36.sent;\n          _yield$connection$que8 = _slicedToArray(_yield$connection$que7, 1);\n          user = _yield$connection$que8[0];\n          time = user[0].time_otp;\n          return _context36.abrupt(\"return\", res.render(\"member/forgot.ejs\", {\n            time: time\n          }));\n        case 8:\n        case \"end\":\n          return _context36.stop();\n      }\n    }, _callee36);\n  }));\n  return function forgot(_x71, _x72) {\n    return _ref36.apply(this, arguments);\n  };\n}();\nvar redenvelopes = /*#__PURE__*/function () {\n  var _ref37 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee37(req, res) {\n    return _regeneratorRuntime().wrap(function _callee37$(_context37) {\n      while (1) switch (_context37.prev = _context37.next) {\n        case 0:\n          return _context37.abrupt(\"return\", res.render(\"member/redenvelopes.ejs\"));\n        case 1:\n        case \"end\":\n          return _context37.stop();\n      }\n    }, _callee37);\n  }));\n  return function redenvelopes(_x73, _x74) {\n    return _ref37.apply(this, arguments);\n  };\n}();\nvar riskAgreement = /*#__PURE__*/function () {\n  var _ref38 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee38(req, res) {\n    return _regeneratorRuntime().wrap(function _callee38$(_context38) {\n      while (1) switch (_context38.prev = _context38.next) {\n        case 0:\n          return _context38.abrupt(\"return\", res.render(\"member/about/riskAgreement.ejs\"));\n        case 1:\n        case \"end\":\n          return _context38.stop();\n      }\n    }, _callee38);\n  }));\n  return function riskAgreement(_x75, _x76) {\n    return _ref38.apply(this, arguments);\n  };\n}();\nvar myProfilePage = /*#__PURE__*/function () {\n  var _ref39 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee39(req, res) {\n    return _regeneratorRuntime().wrap(function _callee39$(_context39) {\n      while (1) switch (_context39.prev = _context39.next) {\n        case 0:\n          return _context39.abrupt(\"return\", res.render(\"member/myProfile.ejs\"));\n        case 1:\n        case \"end\":\n          return _context39.stop();\n      }\n    }, _callee39);\n  }));\n  return function myProfilePage(_x77, _x78) {\n    return _ref39.apply(this, arguments);\n  };\n}();\nvar getSalaryRecord = /*#__PURE__*/function () {\n  var _ref40 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee40(req, res) {\n    var auth, _yield$connection$que9, _yield$connection$que10, rows, rowstr, _yield$connection$que11, _yield$connection$que12, getPhone;\n    return _regeneratorRuntime().wrap(function _callee40$(_context40) {\n      while (1) switch (_context40.prev = _context40.next) {\n        case 0:\n          auth = req.cookies.auth;\n          _context40.next = 3;\n          return _connectDB[\"default\"].query(\"SELECT * FROM users WHERE token = ?\", [auth]);\n        case 3:\n          _yield$connection$que9 = _context40.sent;\n          _yield$connection$que10 = _slicedToArray(_yield$connection$que9, 1);\n          rows = _yield$connection$que10[0];\n          rowstr = rows[0];\n          if (rows) {\n            _context40.next = 9;\n            break;\n          }\n          return _context40.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false\n          }));\n        case 9:\n          _context40.next = 11;\n          return _connectDB[\"default\"].query(\"SELECT * FROM salary WHERE phone = ? ORDER BY time DESC\", [rowstr.phone]);\n        case 11:\n          _yield$connection$que11 = _context40.sent;\n          _yield$connection$que12 = _slicedToArray(_yield$connection$que11, 1);\n          getPhone = _yield$connection$que12[0];\n          console.log(\"asdasdasd : \" + [rows.phone]);\n          return _context40.abrupt(\"return\", res.status(200).json({\n            message: 'Success',\n            status: true,\n            data: {},\n            rows: getPhone\n          }));\n        case 16:\n        case \"end\":\n          return _context40.stop();\n      }\n    }, _callee40);\n  }));\n  return function getSalaryRecord(_x79, _x80) {\n    return _ref40.apply(this, arguments);\n  };\n}();\nmodule.exports = {\n  homePage: homePage,\n  checkInPage: checkInPage,\n  invibonusPage: invibonusPage,\n  rebatePage: rebatePage,\n  jackpotPage: jackpotPage,\n  vipPage: vipPage,\n  activityPage: activityPage,\n  dailytaskPage: dailytaskPage,\n  promotionPage: promotionPage,\n  promotion1Page: promotion1Page,\n  walletPage: walletPage,\n  mianPage: mianPage,\n  myProfilePage: myProfilePage,\n  promotionmyTeamPage: promotionmyTeamPage,\n  promotionDesPage: promotionDesPage,\n  comhistoryPage: comhistoryPage,\n  tutorialPage: tutorialPage,\n  bonusRecordPage: bonusRecordPage,\n  rechargePage: rechargePage,\n  rechargerecordPage: rechargerecordPage,\n  withdrawalPage: withdrawalPage,\n  withdrawalrecordPage: withdrawalrecordPage,\n  aboutPage: aboutPage,\n  fishingPage: fishingPage,\n  casinoPage: casinoPage,\n  slotsPage: slotsPage,\n  pokerPage: pokerPage,\n  tablePage: tablePage,\n  privacyPolicy: privacyPolicy,\n  riskAgreement: riskAgreement,\n  newtutorial: newtutorial,\n  redenvelopes: redenvelopes,\n  forgot: forgot,\n  checkDes: checkDes,\n  checkRecord: checkRecord,\n  addBank: addBank,\n  transfer: transfer,\n  recordsalary: recordsalary,\n  getSalaryRecord: getSalaryRecord,\n  transactionhistoryPage: transactionhistoryPage\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_connectDB","_interopRequireDefault","require","_jsonwebtoken","_md","obj","__esModule","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","minLen","_arrayLikeToArray","toString","Array","from","test","len","arr2","isArray","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","homePage","_ref","_callee","req","res","_yield$connection$que","_yield$connection$que2","settings","app","_callee$","_context","connection","query","render","_x","_x2","activityPage","_ref2","_callee2","_callee2$","_context2","_x3","_x4","rebatePage","_ref3","_callee3","_callee3$","_context3","_x5","_x6","vipPage","_ref4","_callee4","_callee4$","_context4","_x7","_x8","jackpotPage","_ref5","_callee5","_callee5$","_context5","_x9","_x10","dailytaskPage","_ref6","_callee6","_callee6$","_context6","_x11","_x12","invibonusPage","_ref7","_callee7","_callee7$","_context7","_x13","_x14","checkInPage","_ref8","_callee8","_callee8$","_context8","_x15","_x16","checkDes","_ref9","_callee9","_callee9$","_context9","_x17","_x18","checkRecord","_ref10","_callee10","_callee10$","_context10","_x19","_x20","addBank","_ref11","_callee11","_callee11$","_context11","_x21","_x22","promotionPage","_ref12","_callee12","_callee12$","_context12","_x23","_x24","promotion1Page","_ref13","_callee13","_callee13$","_context13","_x25","_x26","promotionmyTeamPage","_ref14","_callee14","_callee14$","_context14","_x27","_x28","promotionDesPage","_ref15","_callee15","_callee15$","_context15","_x29","_x30","comhistoryPage","_ref16","_callee16","_callee16$","_context16","_x31","_x32","tutorialPage","_ref17","_callee17","_callee17$","_context17","_x33","_x34","bonusRecordPage","_ref18","_callee18","_callee18$","_context18","_x35","_x36","fishingPage","_ref19","_callee19","_callee19$","_context19","_x37","_x38","casinoPage","_ref20","_callee20","_callee20$","_context20","_x39","_x40","slotsPage","_ref21","_callee21","_callee21$","_context21","_x41","_x42","pokerPage","_ref22","_callee22","_callee22$","_context22","_x43","_x44","tablePage","_ref23","_callee23","_callee23$","_context23","_x45","_x46","transactionhistoryPage","_ref24","_callee24","_callee24$","_context24","_x47","_x48","walletPage","_ref25","_callee25","_callee25$","_context25","_x49","_x50","rechargePage","_ref26","_callee26","_callee26$","_context26","MinimumMoney","process","env","MINIMUM_MONEY","_x51","_x52","rechargerecordPage","_ref27","_callee27","_callee27$","_context27","_x53","_x54","withdrawalPage","_ref28","_callee28","_callee28$","_context28","_x55","_x56","withdrawalrecordPage","_ref29","_callee29","_callee29$","_context29","_x57","_x58","transfer","_ref30","_callee30","_callee30$","_context30","_x59","_x60","mianPage","_ref31","_callee31","auth","_yield$connection$que3","_yield$connection$que4","user","_yield$connection$que5","_yield$connection$que6","cskh","level","_callee31$","_context31","cookies","_x61","_x62","aboutPage","_ref32","_callee32","_callee32$","_context32","_x63","_x64","recordsalary","_ref33","_callee33","_callee33$","_context33","_x65","_x66","privacyPolicy","_ref34","_callee34","_callee34$","_context34","_x67","_x68","newtutorial","_ref35","_callee35","_callee35$","_context35","_x69","_x70","forgot","_ref36","_callee36","_yield$connection$que7","_yield$connection$que8","time","_callee36$","_context36","time_otp","_x71","_x72","redenvelopes","_ref37","_callee37","_callee37$","_context37","_x73","_x74","riskAgreement","_ref38","_callee38","_callee38$","_context38","_x75","_x76","myProfilePage","_ref39","_callee39","_callee39$","_context39","_x77","_x78","getSalaryRecord","_ref40","_callee40","_yield$connection$que9","_yield$connection$que10","rows","rowstr","_yield$connection$que11","_yield$connection$que12","getPhone","_callee40$","_context40","status","json","message","phone","console","log","data","_x79","_x80","module","exports"],"sourceRoot":"/www/wwwroot/21india/src/controllers/","sources":["homeController.js"],"sourcesContent":["import connection from \"../config/connectDB\";\nimport jwt from 'jsonwebtoken'\nimport md5 from \"md5\";\n// import e from \"express\";\n\nconst homePage = async (req, res) => {\n    const [settings] = await connection.query('SELECT `app` FROM admin');\n    let app = settings[0].app;\n    return res.render(\"home/index.ejs\", { app });\n}\n\nconst activityPage = async (req, res) => {\n    return res.render(\"checkIn/activity.ejs\");\n}\n\nconst rebatePage = async (req, res) => {\n    return res.render(\"checkIn/rebate.ejs\");\n}\n\nconst vipPage = async (req, res) => {\n    return res.render(\"checkIn/vip.ejs\");\n}\n\nconst jackpotPage = async (req, res) => {\n    return res.render(\"checkIn/jackpot.ejs\");\n}\n\nconst dailytaskPage = async (req, res) => {\n    return res.render(\"checkIn/dailytask.ejs\");\n}\n\nconst invibonusPage = async (req, res) => {\n    return res.render(\"checkIn/invibonus.ejs\");\n}\n\nconst checkInPage = async (req, res) => {\n    return res.render(\"checkIn/checkIn.ejs\");\n}\n\nconst checkDes = async (req, res) => {\n    return res.render(\"checkIn/checkDes.ejs\");\n}\n\nconst checkRecord = async (req, res) => {\n    return res.render(\"checkIn/checkRecord.ejs\");\n}\n\nconst addBank = async (req, res) => {\n    return res.render(\"wallet/addbank.ejs\");\n}\n\n// promotion\nconst promotionPage = async (req, res) => {\n    return res.render(\"promotion/promotion.ejs\");\n}\n\nconst promotion1Page = async (req, res) => {\n    return res.render(\"promotion/promotion1.ejs\");\n}\n\nconst promotionmyTeamPage = async (req, res) => {\n    return res.render(\"promotion/myTeam.ejs\");\n}\n\nconst promotionDesPage = async (req, res) => {\n    return res.render(\"promotion/promotionDes.ejs\");\n}\n\nconst comhistoryPage = async (req, res) => {\n    return res.render(\"promotion/comhistory.ejs\");\n}\n\nconst tutorialPage = async (req, res) => {\n    return res.render(\"promotion/tutorial.ejs\");\n}\n\nconst bonusRecordPage = async (req, res) => {\n    return res.render(\"promotion/bonusrecord.ejs\");\n}\n\nconst fishingPage = async (req, res) => { \n    return res.render(\"api/fishing.ejs\");\n}\n\nconst casinoPage = async (req, res) => { \n    return res.render(\"api/casino.ejs\");\n}\n\nconst slotsPage = async (req, res) => { \n    return res.render(\"api/slots.ejs\");\n}\n\nconst pokerPage = async (req, res) => {\n    return res.render(\"api/poker.ejs\");\n}\n\nconst tablePage = async (req, res) => {\n    return res.render(\"api/table.ejs\");\n}\n\n\n\n// wallet\n\n\nconst transactionhistoryPage = async (req, res) => {\n    return res.render(\"wallet/transactionhistory.ejs\");\n}\n\n\nconst walletPage = async (req, res) => {\n    return res.render(\"wallet/index.ejs\");\n}\n\nconst rechargePage = async (req, res) => {\n    return res.render(\"wallet/recharge.ejs\", {\n        MinimumMoney: process.env.MINIMUM_MONEY\n    });\n}\n\nconst rechargerecordPage = async (req, res) => {\n    return res.render(\"wallet/rechargerecord.ejs\");\n}\n\nconst withdrawalPage = async (req, res) => {\n    return res.render(\"wallet/withdrawal.ejs\");\n}\n\nconst withdrawalrecordPage = async (req, res) => {\n    return res.render(\"wallet/withdrawalrecord.ejs\");\n}\nconst transfer = async (req, res) => {\n    return res.render(\"wallet/transfer.ejs\");\n}\n\n// member page\nconst mianPage = async (req, res) => {\n    let auth = req.cookies.auth;\n    const [user] = await connection.query('SELECT `level` FROM users WHERE `token` = ? ', [auth]);\n    const [settings] = await connection.query('SELECT `cskh` FROM admin');\n    let cskh = settings[0].cskh;\n    let level = user[0].level;\n    return res.render(\"member/index.ejs\", { level, cskh });\n}\nconst aboutPage = async (req, res) => {\n    return res.render(\"member/about/index.ejs\");\n}\n\nconst recordsalary = async (req, res) => {\n    return res.render(\"member/about/recordsalary.ejs\");\n}\n\nconst privacyPolicy = async (req, res) => {\n    return res.render(\"member/about/privacyPolicy.ejs\");\n}\n\nconst newtutorial = async (req, res) => {\n    return res.render(\"member/newtutorial.ejs\");\n}\n\nconst forgot = async (req, res) => {\n    let auth = req.cookies.auth;\n    const [user] = await connection.query('SELECT `time_otp` FROM users WHERE token = ? ', [auth]);\n    let time = user[0].time_otp;\n    return res.render(\"member/forgot.ejs\", { time });\n}\n\nconst redenvelopes = async (req, res) => {\n    return res.render(\"member/redenvelopes.ejs\");\n}\n\nconst riskAgreement = async (req, res) => {\n    return res.render(\"member/about/riskAgreement.ejs\");\n}\n\nconst myProfilePage = async (req, res) => {\n    return res.render(\"member/myProfile.ejs\");\n}\n\nconst getSalaryRecord = async (req, res) => {\n    const auth = req.cookies.auth;\n\n    const [rows] = await connection.query(`SELECT * FROM users WHERE token = ?`, [auth]);\n    let rowstr = rows[0];\n    if (!rows) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n\n        });\n    }\n    const [getPhone] = await connection.query(\n        `SELECT * FROM salary WHERE phone = ? ORDER BY time DESC`,\n        [rowstr.phone]\n    );\n\n\n    console.log(\"asdasdasd : \" + [rows.phone])\n    return res.status(200).json({\n        message: 'Success',\n        status: true,\n        data: {\n\n        },\n        rows: getPhone,\n    })\n}\nmodule.exports = {\n    homePage,\n    checkInPage,\n    invibonusPage,\n    rebatePage,\n    jackpotPage,\n    vipPage,\n    activityPage,\n    dailytaskPage,\n    promotionPage,\n    promotion1Page,\n    walletPage,\n    mianPage,\n    myProfilePage,\n    promotionmyTeamPage,\n    promotionDesPage,\n    comhistoryPage,\n    tutorialPage,\n    bonusRecordPage,\n    rechargePage,\n    rechargerecordPage,\n    withdrawalPage,\n    withdrawalrecordPage,\n    aboutPage,\n    fishingPage,\n    casinoPage,\n    slotsPage,\n    pokerPage,\n    tablePage,\n    privacyPolicy,\n    riskAgreement,\n    newtutorial,\n    redenvelopes,\n    forgot,\n    checkDes,\n    checkRecord,\n    addBank,\n    transfer,\n    recordsalary,\n    getSalaryRecord,\n    transactionhistoryPage,\n}"],"mappings":"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","ignoreList":[]}},"mtime":1722085142000},"{\"assumptions\":{},\"sourceRoot\":\"/www/wwwroot/21india/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/www/wwwroot/21india\",\"filename\":\"/www/wwwroot/21india/src/controllers/winGoController.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/www/wwwroot/21india\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.5:development":{"value":{"code":"\"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _connectDB = _interopRequireDefault(require(\"../config/connectDB\"));\nvar _excluded = [\"id\", \"phone\", \"code\", \"invite\", \"level\", \"game\"];\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n// import jwt from 'jsonwebtoken'\n// import md5 from \"md5\";\n// import e from \"express\";\nrequire('dotenv').config();\nvar winGoPage = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(req, res) {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", res.render(\"bet/wingo/win.ejs\"));\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function winGoPage(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar winGoPage3 = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(req, res) {\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          return _context2.abrupt(\"return\", res.render(\"bet/wingo/win3.ejs\"));\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function winGoPage3(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar winGoPage5 = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(req, res) {\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.abrupt(\"return\", res.render(\"bet/wingo/win5.ejs\"));\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return function winGoPage5(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nvar winGoPage10 = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(req, res) {\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          return _context4.abrupt(\"return\", res.render(\"bet/wingo/win10.ejs\"));\n        case 1:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n  return function winGoPage10(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nvar isNumber = function isNumber(params) {\n  var pattern = /^[0-9]*\\d$/;\n  return pattern.test(params);\n};\nfunction formateT(params) {\n  var result = params < 10 ? \"0\" + params : params;\n  return result;\n}\nfunction timerJoin() {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var addHours = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var date = '';\n  if (params) {\n    date = new Date(Number(params));\n  } else {\n    date = new Date();\n  }\n  date.setHours(date.getHours() + addHours);\n  var years = formateT(date.getFullYear());\n  var months = formateT(date.getMonth() + 1);\n  var days = formateT(date.getDate());\n  var hours = date.getHours() % 12;\n  hours = hours === 0 ? 12 : hours;\n  var ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n  var minutes = formateT(date.getMinutes());\n  var seconds = formateT(date.getSeconds());\n  return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;\n}\nvar rosesPlus = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(auth, money) {\n    var _yield$connection$que, _yield$connection$que2, level, _yield$connection$que3, _yield$connection$que4, user, userInfo, _yield$connection$que5, _yield$connection$que6, f1, infoF1, levelIndex, rosesF, timeNow, sql2, sql3, _yield$connection$que7, _yield$connection$que8, fNext;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return _connectDB[\"default\"].query('SELECT * FROM level ');\n        case 2:\n          _yield$connection$que = _context5.sent;\n          _yield$connection$que2 = _slicedToArray(_yield$connection$que, 1);\n          level = _yield$connection$que2[0];\n          _context5.next = 7;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`, `invite`, `user_level`, `total_money` FROM users WHERE token = ? AND veri = 1 LIMIT 1 ', [auth]);\n        case 7:\n          _yield$connection$que3 = _context5.sent;\n          _yield$connection$que4 = _slicedToArray(_yield$connection$que3, 1);\n          user = _yield$connection$que4[0];\n          userInfo = user[0];\n          _context5.next = 13;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`, `invite`, `rank`, `user_level`, `total_money` FROM users WHERE code = ? AND veri = 1 LIMIT 1 ', [userInfo.invite]);\n        case 13:\n          _yield$connection$que5 = _context5.sent;\n          _yield$connection$que6 = _slicedToArray(_yield$connection$que5, 1);\n          f1 = _yield$connection$que6[0];\n          if (!(userInfo.total_money >= 100)) {\n            _context5.next = 47;\n            break;\n          }\n          if (!(f1.length > 0)) {\n            _context5.next = 47;\n            break;\n          }\n          infoF1 = f1[0];\n          levelIndex = 1;\n        case 20:\n          if (!(levelIndex <= 6)) {\n            _context5.next = 47;\n            break;\n          }\n          rosesF = 0;\n          if (!(infoF1.user_level >= levelIndex && infoF1.total_money >= 100)) {\n            _context5.next = 34;\n            break;\n          }\n          rosesF = money / 100 * level[levelIndex - 1].f1;\n          if (!(rosesF > 0)) {\n            _context5.next = 34;\n            break;\n          }\n          _context5.next = 27;\n          return _connectDB[\"default\"].query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF, rosesF, rosesF, infoF1.phone]);\n        case 27:\n          timeNow = Date.now();\n          sql2 = \"INSERT INTO roses SET \\n                            phone = ?,\\n                            code = ?,\\n                            invite = ?,\\n                            f1 = ?,\\n                            time = ?\";\n          _context5.next = 31;\n          return _connectDB[\"default\"].execute(sql2, [infoF1.phone, infoF1.code, infoF1.invite, rosesF, timeNow]);\n        case 31:\n          sql3 = \"\\n                            INSERT INTO turn_over (phone, code, invite, daily_turn_over, total_turn_over)\\n                            VALUES (?, ?, ?, ?, ?)\\n                            ON DUPLICATE KEY UPDATE\\n                            daily_turn_over = daily_turn_over + VALUES(daily_turn_over),\\n                            total_turn_over = total_turn_over + VALUES(total_turn_over)\\n                            \";\n          _context5.next = 34;\n          return _connectDB[\"default\"].execute(sql3, [infoF1.phone, infoF1.code, infoF1.invite, money, money]);\n        case 34:\n          _context5.next = 36;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`, `invite`, `rank`, `user_level`, `total_money` FROM users WHERE code = ? AND veri = 1 LIMIT 1 ', [infoF1.invite]);\n        case 36:\n          _yield$connection$que7 = _context5.sent;\n          _yield$connection$que8 = _slicedToArray(_yield$connection$que7, 1);\n          fNext = _yield$connection$que8[0];\n          if (!(fNext.length > 0)) {\n            _context5.next = 43;\n            break;\n          }\n          infoF1 = fNext[0];\n          _context5.next = 44;\n          break;\n        case 43:\n          return _context5.abrupt(\"break\", 47);\n        case 44:\n          levelIndex++;\n          _context5.next = 20;\n          break;\n        case 47:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5);\n  }));\n  return function rosesPlus(_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\n// const rosesPlus = async (auth, money) => {\n//     const [level] = await connection.query('SELECT * FROM level ');\n//     let level0 = level[0];\n\n//     const [user] = await connection.query('SELECT `phone`, `code`, `invite` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n//     let userInfo = user[0];\n//     const [f1] = await connection.query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [userInfo.invite]);\n//     if (money >= 10000) {\n//         if (f1.length > 0) {\n//             let infoF1 = f1[0];\n//             let rosesF1 = (money / 100) * level0.f1;\n//             await connection.query('UPDATE users SET money = money + ?, roses_f1 = roses_f1 + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF1, rosesF1, rosesF1, rosesF1, infoF1.phone]);\n//             const [f2] = await connection.query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [infoF1.invite]);\n//             if (f2.length > 0) {\n//                 let infoF2 = f2[0];\n//                 let rosesF2 = (money / 100) * level0.f2;\n//                 await connection.query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF2, rosesF2, rosesF2, infoF2.phone]);\n//                 const [f3] = await connection.query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [infoF2.invite]);\n//                 if (f3.length > 0) {\n//                     let infoF3 = f3[0];\n//                     let rosesF3 = (money / 100) * level0.f3;\n//                     await connection.query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF3, rosesF3, rosesF3, infoF3.phone]);\n//                     const [f4] = await connection.query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [infoF3.invite]);\n//                     if (f4.length > 0) {\n//                         let infoF4 = f4[0];\n//                         let rosesF4 = (money / 100) * level0.f4;\n//                         await connection.query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF4, rosesF4, rosesF4, infoF4.phone]);\n//                     }\n//                 }\n//             }\n\n//         }\n//     }\n// }\n\n// const rosesPlus = async (auth, money) => {\n//     const [level] = await connection.query('SELECT * FROM level ');\n\n//     const [user] = await connection.query('SELECT `phone`, `code`, `invite`, `user_level` FROM users WHERE token = ? AND veri = 1 LIMIT 1 ', [auth]);\n//     let userInfo = user[0];\n//     const [f1] = await connection.query('SELECT `phone`, `code`, `invite`, `rank`, `user_level` FROM users WHERE code = ? AND veri = 1 LIMIT 1 ', [userInfo.invite]);\n\n//     if (money < 300) {\n//         return; // No need to proceed if money is less than 300\n//     }\n\n//     if (f1.length === 0) {\n//         return; // No referrer found\n//     }\n\n//     let infoF1 = f1[0];\n\n//     const f2 = await connection.query('SELECT `phone`, `code`, `invite`, `rank`, `user_level` FROM users WHERE code = ? AND veri = 1 LIMIT 1 ', [infoF1.invite]);\n//     if (f2.length > 0) {\n//         let infoF2 = f2[0];\n//         if (infoF2.user_level >= 2) {\n//             let rosesF2 = (money / 100) * level[1].f1;\n//             await connection.query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF2, rosesF2, rosesF2, infoF2.phone]);\n//         }\n\n//         const f3 = await connection.query('SELECT `phone`, `code`, `invite`, `rank`, `user_level` FROM users WHERE code = ? AND veri = 1 LIMIT 1 ', [infoF2.invite]);\n//         if (f3.length > 0) {\n//             let infoF3 = f3[0];\n//             if (infoF3.user_level >= 3) {\n//                 let rosesF3 = (money / 100) * level[2].f1;\n//                 await connection.query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF3, rosesF3, rosesF3, infoF3.phone]);\n//             }\n\n//             const f4 = await connection.query('SELECT `phone`, `code`, `invite`, `rank`, `user_level` FROM users WHERE code = ? AND veri = 1 LIMIT 1 ', [infoF3.invite]);\n//             if (f4.length > 0) {\n//                 let infoF4 = f4[0];\n//                 if (infoF4.user_level >= 4) {\n//                     let rosesF4 = (money / 100) * level[3].f1;\n//                     await connection.query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF4, rosesF4, rosesF4, infoF4.phone]);\n//                 }\n//             }\n//         }\n//     }\n// }\n\n// const rosesPlus = async (auth, money) => {\n//     const [level] = await connection.query('SELECT * FROM level ');\n//     const [user] = await connection.query('SELECT `phone`, `code`, `invite` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n//     let userInfo = user[0];\n//     const [f1] = await connection.query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [userInfo.invite]);\n//     let infoF1 = f1[0];\n\n//     const [check_invite] = await connection.query('SELECT * FROM users WHERE invite = ?', [userInfo.invite]);\n//     if (money >= 300) {\n//         let levels = [2, 5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35, 38, 41, 44];\n//         let levelIndex = levels.findIndex(levelThreshold => check_invite.length < levelThreshold);\n\n//         if (levelIndex !== -1) {\n//             let rosesF1 = (money / 100) * level[levelIndex].f1;\n//             await connection.query('UPDATE users SET money = money + ?, roses_f1 = roses_f1 + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF1, rosesF1, rosesF1, rosesF1, infoF1.phone]);\n//         }\n//     }\n// }\n\nvar betWinGo = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(req, res) {\n    var _req$body, typeid, join, x, money, auth, gameJoin, _yield$connection$que9, _yield$connection$que10, winGoNow, _yield$connection$que11, _yield$connection$que12, user, userInfo, period, fee, total, timeNow, check, date, years, months, days, id_product, formatTime, color, checkJoin, result, timerJoin, checkTime, sql, _yield$connection$que13, _yield$connection$que14, users;\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          timerJoin = function _timerJoin() {\n            var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n            var addHours = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var date = '';\n            if (params) {\n              date = new Date(Number(params));\n            } else {\n              date = new Date();\n            }\n            date.setHours(date.getHours() + addHours);\n            var years = formateT(date.getFullYear());\n            var months = formateT(date.getMonth() + 1);\n            var days = formateT(date.getDate());\n            var hours = date.getHours() % 12;\n            hours = hours === 0 ? 12 : hours;\n            var ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n            var minutes = formateT(date.getMinutes());\n            var seconds = formateT(date.getSeconds());\n            return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;\n          };\n          _req$body = req.body, typeid = _req$body.typeid, join = _req$body.join, x = _req$body.x, money = _req$body.money;\n          auth = req.cookies.auth;\n          if (!(typeid != 1 && typeid != 3 && typeid != 5 && typeid != 10)) {\n            _context6.next = 5;\n            break;\n          }\n          return _context6.abrupt(\"return\", res.status(200).json({\n            message: 'Error!',\n            status: true\n          }));\n        case 5:\n          gameJoin = '';\n          if (typeid == 1) gameJoin = 'wingo';\n          if (typeid == 3) gameJoin = 'wingo3';\n          if (typeid == 5) gameJoin = 'wingo5';\n          if (typeid == 10) gameJoin = 'wingo10';\n          _context6.next = 12;\n          return _connectDB[\"default\"].query(\"SELECT period FROM wingo WHERE status = 0 AND game = '\".concat(gameJoin, \"' ORDER BY id DESC LIMIT 1 \"));\n        case 12:\n          _yield$connection$que9 = _context6.sent;\n          _yield$connection$que10 = _slicedToArray(_yield$connection$que9, 1);\n          winGoNow = _yield$connection$que10[0];\n          _context6.next = 17;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`, `invite`, `level`, `money` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n        case 17:\n          _yield$connection$que11 = _context6.sent;\n          _yield$connection$que12 = _slicedToArray(_yield$connection$que11, 1);\n          user = _yield$connection$que12[0];\n          if (!(!winGoNow[0] || !user[0] || !isNumber(x) || !isNumber(money))) {\n            _context6.next = 22;\n            break;\n          }\n          return _context6.abrupt(\"return\", res.status(200).json({\n            message: 'Error!',\n            status: true\n          }));\n        case 22:\n          userInfo = user[0];\n          period = winGoNow[0].period;\n          fee = x * money * 0.02;\n          total = x * money - fee;\n          timeNow = Date.now();\n          check = userInfo.money - total;\n          date = new Date();\n          years = formateT(date.getFullYear());\n          months = formateT(date.getMonth() + 1);\n          days = formateT(date.getDate());\n          id_product = years + months + days + Math.floor(Math.random() * 1000000000000000);\n          formatTime = timerJoin();\n          color = '';\n          if (join == 'l') {\n            color = 'big';\n          } else if (join == 'n') {\n            color = 'small';\n          } else if (join == 't') {\n            color = 'violet';\n          } else if (join == 'd') {\n            color = 'red';\n          } else if (join == 'x') {\n            color = 'green';\n          } else if (join == '0') {\n            color = 'red-violet';\n          } else if (join == '5') {\n            color = 'green-violet';\n          } else if (join % 2 == 0) {\n            color = 'red';\n          } else if (join % 2 != 0) {\n            color = 'green';\n          }\n          checkJoin = '';\n          if (!isNumber(join) && join == 'l' || join == 'n') {\n            checkJoin = \"\\n        <div data-v-a9660e98=\\\"\\\" class=\\\"van-image\\\" style=\\\"width: 30px; height: 30px;\\\">\\n            <img src=\\\"/images/\".concat(join == 'n' ? 'small' : 'big', \".png\\\" class=\\\"van-image__img\\\">\\n        </div>\\n        \");\n          } else {\n            checkJoin = \"\\n        <span data-v-a9660e98=\\\"\\\">\".concat(isNumber(join) ? join : '', \"</span>\\n        \");\n          }\n          result = \"\\n    <div data-v-a9660e98=\\\"\\\" issuenumber=\\\"\".concat(period, \"\\\" addtime=\\\"\").concat(formatTime, \"\\\" rowid=\\\"1\\\" class=\\\"hb\\\">\\n        <div data-v-a9660e98=\\\"\\\" class=\\\"item c-row\\\">\\n            <div data-v-a9660e98=\\\"\\\" class=\\\"result\\\">\\n                <div data-v-a9660e98=\\\"\\\" class=\\\"select select-\").concat(color, \"\\\">\\n                    \").concat(checkJoin, \"\\n                </div>\\n            </div>\\n            <div data-v-a9660e98=\\\"\\\" class=\\\"c-row c-row-between info\\\">\\n                <div data-v-a9660e98=\\\"\\\">\\n                    <div data-v-a9660e98=\\\"\\\" class=\\\"issueName\\\">\\n                        \").concat(period, \"\\n                    </div>\\n                    <div data-v-a9660e98=\\\"\\\" class=\\\"tiem\\\">\").concat(formatTime, \"</div>\\n                </div>\\n            </div>\\n        </div>\\n        <!---->\\n    </div>\\n    \");\n          checkTime = timerJoin(date.getTime());\n          if (!(check >= 0)) {\n            _context6.next = 56;\n            break;\n          }\n          sql = \"INSERT INTO minutes_1 SET \\n        id_product = ?,\\n        phone = ?,\\n        code = ?,\\n        invite = ?,\\n        stage = ?,\\n        level = ?,\\n        money = ?,\\n        amount = ?,\\n        fee = ?,\\n        get = ?,\\n        game = ?,\\n        bet = ?,\\n        status = ?,\\n        today = ?,\\n        time = ?\";\n          _context6.next = 44;\n          return _connectDB[\"default\"].execute(sql, [id_product, userInfo.phone, userInfo.code, userInfo.invite, period, userInfo.level, total, x, fee, 0, gameJoin, join, 0, checkTime, timeNow]);\n        case 44:\n          _context6.next = 46;\n          return _connectDB[\"default\"].execute('UPDATE `users` SET `money` = `money` - ? WHERE `token` = ? ', [money * x, auth]);\n        case 46:\n          _context6.next = 48;\n          return _connectDB[\"default\"].query('SELECT `money`, `level` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n        case 48:\n          _yield$connection$que13 = _context6.sent;\n          _yield$connection$que14 = _slicedToArray(_yield$connection$que13, 1);\n          users = _yield$connection$que14[0];\n          _context6.next = 53;\n          return rosesPlus(auth, money * x);\n        case 53:\n          return _context6.abrupt(\"return\", res.status(200).json({\n            message: 'Successful bet',\n            status: true,\n            data: result,\n            change: users[0].level,\n            money: users[0].money\n          }));\n        case 56:\n          return _context6.abrupt(\"return\", res.status(200).json({\n            message: 'The amount is not enough',\n            status: false\n          }));\n        case 57:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6);\n  }));\n  return function betWinGo(_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nvar listOrderOld = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(req, res) {\n    var _req$body2, typeid, pageno, pageto, auth, _yield$connection$que15, _yield$connection$que16, user, game, _yield$connection$que17, _yield$connection$que18, wingo, _yield$connection$que19, _yield$connection$que20, wingoAll, _yield$connection$que21, _yield$connection$que22, period, page;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          _req$body2 = req.body, typeid = _req$body2.typeid, pageno = _req$body2.pageno, pageto = _req$body2.pageto;\n          if (!(typeid != 1 && typeid != 3 && typeid != 5 && typeid != 10)) {\n            _context7.next = 3;\n            break;\n          }\n          return _context7.abrupt(\"return\", res.status(200).json({\n            message: 'Error!',\n            status: true\n          }));\n        case 3:\n          if (!(pageno < 0 || pageto < 0)) {\n            _context7.next = 5;\n            break;\n          }\n          return _context7.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            status: false\n          }));\n        case 5:\n          auth = req.cookies.auth;\n          _context7.next = 8;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`, `invite`, `level`, `money` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n        case 8:\n          _yield$connection$que15 = _context7.sent;\n          _yield$connection$que16 = _slicedToArray(_yield$connection$que15, 1);\n          user = _yield$connection$que16[0];\n          game = '';\n          if (typeid == 1) game = 'wingo';\n          if (typeid == 3) game = 'wingo3';\n          if (typeid == 5) game = 'wingo5';\n          if (typeid == 10) game = 'wingo10';\n          _context7.next = 18;\n          return _connectDB[\"default\"].query(\"SELECT * FROM wingo WHERE status != 0 AND game = '\".concat(game, \"' ORDER BY id DESC LIMIT \").concat(pageno, \", \").concat(pageto, \" \"));\n        case 18:\n          _yield$connection$que17 = _context7.sent;\n          _yield$connection$que18 = _slicedToArray(_yield$connection$que17, 1);\n          wingo = _yield$connection$que18[0];\n          _context7.next = 23;\n          return _connectDB[\"default\"].query(\"SELECT * FROM wingo WHERE status != 0 AND game = '\".concat(game, \"' \"));\n        case 23:\n          _yield$connection$que19 = _context7.sent;\n          _yield$connection$que20 = _slicedToArray(_yield$connection$que19, 1);\n          wingoAll = _yield$connection$que20[0];\n          _context7.next = 28;\n          return _connectDB[\"default\"].query(\"SELECT period FROM wingo WHERE status = 0 AND game = '\".concat(game, \"' ORDER BY id DESC LIMIT 1 \"));\n        case 28:\n          _yield$connection$que21 = _context7.sent;\n          _yield$connection$que22 = _slicedToArray(_yield$connection$que21, 1);\n          period = _yield$connection$que22[0];\n          if (wingo[0]) {\n            _context7.next = 33;\n            break;\n          }\n          return _context7.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            status: false\n          }));\n        case 33:\n          if (!(!pageno || !pageto || !user[0] || !wingo[0] || !period[0])) {\n            _context7.next = 35;\n            break;\n          }\n          return _context7.abrupt(\"return\", res.status(200).json({\n            message: 'Error!',\n            status: true\n          }));\n        case 35:\n          page = Math.ceil(wingoAll.length / 10);\n          return _context7.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"Receive success\",\n            data: {\n              gameslist: wingo\n            },\n            period: period[0].period,\n            page: page,\n            status: true\n          }));\n        case 37:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7);\n  }));\n  return function listOrderOld(_x13, _x14) {\n    return _ref7.apply(this, arguments);\n  };\n}();\nvar GetMyEmerdList = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(req, res) {\n    var _req$body3, typeid, pageno, pageto, auth, game, _yield$connection$que23, _yield$connection$que24, user, _yield$connection$que25, _yield$connection$que26, minutes_1, _yield$connection$que27, _yield$connection$que28, minutes_1All, page, datas;\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          _req$body3 = req.body, typeid = _req$body3.typeid, pageno = _req$body3.pageno, pageto = _req$body3.pageto; // if (!pageno || !pageto) {\n          //     pageno = 0;\n          //     pageto = 10;\n          // }\n          if (!(typeid != 1 && typeid != 3 && typeid != 5 && typeid != 10)) {\n            _context8.next = 3;\n            break;\n          }\n          return _context8.abrupt(\"return\", res.status(200).json({\n            message: 'Error!',\n            status: true\n          }));\n        case 3:\n          if (!(pageno < 0 || pageto < 0)) {\n            _context8.next = 5;\n            break;\n          }\n          return _context8.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            status: false\n          }));\n        case 5:\n          auth = req.cookies.auth;\n          game = '';\n          if (typeid == 1) game = 'wingo';\n          if (typeid == 3) game = 'wingo3';\n          if (typeid == 5) game = 'wingo5';\n          if (typeid == 10) game = 'wingo10';\n          _context8.next = 13;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`, `invite`, `level`, `money` FROM users WHERE token = ? AND veri = 1 LIMIT 1 ', [auth]);\n        case 13:\n          _yield$connection$que23 = _context8.sent;\n          _yield$connection$que24 = _slicedToArray(_yield$connection$que23, 1);\n          user = _yield$connection$que24[0];\n          _context8.next = 18;\n          return _connectDB[\"default\"].query(\"SELECT * FROM minutes_1 WHERE phone = ? AND game = '\".concat(game, \"' ORDER BY id DESC LIMIT \").concat(Number(pageno) + ',' + Number(pageto)), [user[0].phone]);\n        case 18:\n          _yield$connection$que25 = _context8.sent;\n          _yield$connection$que26 = _slicedToArray(_yield$connection$que25, 1);\n          minutes_1 = _yield$connection$que26[0];\n          _context8.next = 23;\n          return _connectDB[\"default\"].query(\"SELECT * FROM minutes_1 WHERE phone = ? AND game = '\".concat(game, \"' ORDER BY id DESC \"), [user[0].phone]);\n        case 23:\n          _yield$connection$que27 = _context8.sent;\n          _yield$connection$que28 = _slicedToArray(_yield$connection$que27, 1);\n          minutes_1All = _yield$connection$que28[0];\n          if (minutes_1[0]) {\n            _context8.next = 28;\n            break;\n          }\n          return _context8.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            status: false\n          }));\n        case 28:\n          if (!(!pageno || !pageto || !user[0] || !minutes_1[0])) {\n            _context8.next = 30;\n            break;\n          }\n          return _context8.abrupt(\"return\", res.status(200).json({\n            message: 'Error!',\n            status: true\n          }));\n        case 30:\n          page = Math.ceil(minutes_1All.length / 10);\n          datas = minutes_1.map(function (data) {\n            var id = data.id,\n              phone = data.phone,\n              code = data.code,\n              invite = data.invite,\n              level = data.level,\n              game = data.game,\n              others = _objectWithoutProperties(data, _excluded);\n            return others;\n          });\n          return _context8.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"Receive success\",\n            data: {\n              gameslist: datas\n            },\n            page: page,\n            status: true\n          }));\n        case 33:\n        case \"end\":\n          return _context8.stop();\n      }\n    }, _callee8);\n  }));\n  return function GetMyEmerdList(_x15, _x16) {\n    return _ref8.apply(this, arguments);\n  };\n}();\nvar addWinGo = /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(game) {\n    var join, _yield$connection$que29, _yield$connection$que30, winGoNow, _yield$connection$que31, _yield$connection$que32, setting, period, amount, _yield$connection$que33, _yield$connection$que34, minPlayers, betColumns, totalMoneyPromises, categories, smallestCategory, colorBets, betsForCategory, availableBets, lowestBet, _betColumns, _categories, _colorBets, _smallestCategory, _betsForCategory, _availableBets, _lowestBet, timeNow, nextResult, newArr, result, arr, check, i, sql;\n    return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n      while (1) switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.prev = 0;\n          join = '';\n          if (game == 1) join = 'wingo';\n          if (game == 3) join = 'wingo3';\n          if (game == 5) join = 'wingo5';\n          if (game == 10) join = 'wingo10';\n          _context11.next = 8;\n          return _connectDB[\"default\"].query(\"SELECT period FROM wingo WHERE status = 0 AND game = \\\"\".concat(join, \"\\\" ORDER BY id DESC LIMIT 1 \"));\n        case 8:\n          _yield$connection$que29 = _context11.sent;\n          _yield$connection$que30 = _slicedToArray(_yield$connection$que29, 1);\n          winGoNow = _yield$connection$que30[0];\n          _context11.next = 13;\n          return _connectDB[\"default\"].query('SELECT * FROM `admin` ');\n        case 13:\n          _yield$connection$que31 = _context11.sent;\n          _yield$connection$que32 = _slicedToArray(_yield$connection$que31, 1);\n          setting = _yield$connection$que32[0];\n          period = winGoNow[0].period; // cầu hiện tại\n          amount = Math.floor(Math.random() * 10);\n          _context11.next = 20;\n          return _connectDB[\"default\"].query(\"SELECT * FROM minutes_1 WHERE status = 0 AND game = \\\"\".concat(join, \"\\\"\"));\n        case 20:\n          _yield$connection$que33 = _context11.sent;\n          _yield$connection$que34 = _slicedToArray(_yield$connection$que33, 1);\n          minPlayers = _yield$connection$que34[0];\n          if (!(minPlayers.length >= 2)) {\n            _context11.next = 37;\n            break;\n          }\n          betColumns = [\n          // red_small \n          {\n            name: 'red_0',\n            bets: ['0', 't', 'd', 'n']\n          }, {\n            name: 'red_2',\n            bets: ['2', 'd', 'n']\n          }, {\n            name: 'red_4',\n            bets: ['4', 'd', 'n']\n          },\n          // green small \n          {\n            name: 'green_1',\n            bets: ['1', 'x', 'n']\n          }, {\n            name: 'green_3',\n            bets: ['3', 'x', 'n']\n          },\n          // green big \n          {\n            name: 'green_5',\n            bets: ['5', 'x', 't', 'l']\n          }, {\n            name: 'green_7',\n            bets: ['7', 'x', 'l']\n          }, {\n            name: 'green_9',\n            bets: ['9', 'x', 'l']\n          },\n          // red big \n          {\n            name: 'red_6',\n            bets: ['6', 'd', 'l']\n          }, {\n            name: 'red_8',\n            bets: ['8', 'd', 'l']\n          }];\n          totalMoneyPromises = betColumns.map( /*#__PURE__*/function () {\n            var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(column) {\n              var _yield$connection$que35, _yield$connection$que36, result;\n              return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n                while (1) switch (_context9.prev = _context9.next) {\n                  case 0:\n                    _context9.next = 2;\n                    return _connectDB[\"default\"].query(\"\\n                SELECT SUM(money) AS total_money\\n                FROM minutes_1\\n                WHERE game = \\\"\".concat(join, \"\\\" AND status = 0 AND bet IN (\").concat(column.bets.map(function (bet) {\n                      return \"\\\"\".concat(bet, \"\\\"\");\n                    }).join(','), \")\\n            \"));\n                  case 2:\n                    _yield$connection$que35 = _context9.sent;\n                    _yield$connection$que36 = _slicedToArray(_yield$connection$que35, 1);\n                    result = _yield$connection$que36[0];\n                    return _context9.abrupt(\"return\", {\n                      name: column.name,\n                      total_money: result[0].total_money ? parseInt(result[0].total_money) : 0\n                    });\n                  case 6:\n                  case \"end\":\n                    return _context9.stop();\n                }\n              }, _callee9);\n            }));\n            return function (_x18) {\n              return _ref10.apply(this, arguments);\n            };\n          }());\n          _context11.next = 28;\n          return Promise.all(totalMoneyPromises);\n        case 28:\n          categories = _context11.sent;\n          smallestCategory = categories.reduce(function (smallest, category) {\n            return smallest === null || category.total_money < smallest.total_money ? category : smallest;\n          }, null);\n          colorBets = {\n            red_6: [6],\n            red_8: [8],\n            red_2: [2],\n            //0 removed \n            red_4: [4],\n            green_3: [3],\n            green_7: [7],\n            //5 removed\n            green_9: [9],\n            //\n            green_1: [1],\n            green_5: [5],\n            red_0: [0]\n          };\n          betsForCategory = colorBets[smallestCategory.name] || [];\n          availableBets = betsForCategory.filter(function (bet) {\n            return !categories.find(function (category) {\n              return category.name === smallestCategory.name && category.total_money < smallestCategory.total_money;\n            });\n          });\n          if (availableBets.length > 0) {\n            lowestBet = availableBets[0];\n          } else {\n            lowestBet = betsForCategory.reduce(function (lowest, bet) {\n              return bet < lowest ? bet : lowest;\n            });\n          }\n          amount = lowestBet;\n          _context11.next = 48;\n          break;\n        case 37:\n          if (!(minPlayers.length === 1 && parseFloat(minPlayers[0].money) >= 20)) {\n            _context11.next = 48;\n            break;\n          }\n          _betColumns = [{\n            name: 'red_small',\n            bets: ['0', '2', '4', 'd', 'n']\n          }, {\n            name: 'red_big',\n            bets: ['6', '8', 'd', 'l']\n          }, {\n            name: 'green_big',\n            bets: ['5', '7', '9', 'x', 'l']\n          }, {\n            name: 'green_small',\n            bets: ['1', '3', 'x', 'n']\n          }, {\n            name: 'violet_small',\n            bets: ['0', 't', 'n']\n          }, {\n            name: 'violet_big',\n            bets: ['5', 't', 'l']\n          }];\n          _context11.next = 41;\n          return Promise.all(_betColumns.map( /*#__PURE__*/function () {\n            var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(column) {\n              var _result$;\n              var _yield$connection$que37, _yield$connection$que38, result;\n              return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n                while (1) switch (_context10.prev = _context10.next) {\n                  case 0:\n                    _context10.next = 2;\n                    return _connectDB[\"default\"].query(\"\\n                    SELECT SUM(money) AS total_money\\n                    FROM minutes_1\\n                    WHERE game = \\\"\".concat(join, \"\\\" AND status = 0 AND bet IN (\").concat(column.bets.map(function (bet) {\n                      return \"\\\"\".concat(bet, \"\\\"\");\n                    }).join(','), \")\\n                \"));\n                  case 2:\n                    _yield$connection$que37 = _context10.sent;\n                    _yield$connection$que38 = _slicedToArray(_yield$connection$que37, 1);\n                    result = _yield$connection$que38[0];\n                    return _context10.abrupt(\"return\", {\n                      name: column.name,\n                      total_money: parseInt((_result$ = result[0]) === null || _result$ === void 0 ? void 0 : _result$.total_money) || 0\n                    });\n                  case 6:\n                  case \"end\":\n                    return _context10.stop();\n                }\n              }, _callee10);\n            }));\n            return function (_x19) {\n              return _ref11.apply(this, arguments);\n            };\n          }()));\n        case 41:\n          _categories = _context11.sent;\n          _colorBets = {\n            red_big: [6, 8],\n            red_small: [2, 4],\n            //0 removed \n            green_big: [7, 9],\n            //5 removed\n            green_small: [1, 3],\n            violet_big: [5],\n            violet_small: [0]\n          };\n          _smallestCategory = _categories.reduce(function (smallest, category) {\n            return !smallest || category.total_money < smallest.total_money ? category : smallest;\n          });\n          _betsForCategory = _colorBets[_smallestCategory.name] || [];\n          _availableBets = _betsForCategory.filter(function (bet) {\n            return !_categories.find(function (category) {\n              return category.name === _smallestCategory.name && category.total_money < _smallestCategory.total_money;\n            });\n          });\n          _lowestBet = _availableBets.length > 0 ? _availableBets[0] : Math.min.apply(Math, _toConsumableArray(_betsForCategory));\n          amount = _lowestBet;\n        case 48:\n          // xanh đỏ tím\n          timeNow = Date.now();\n          nextResult = '';\n          if (game == 1) nextResult = setting[0].wingo1;\n          if (game == 3) nextResult = setting[0].wingo3;\n          if (game == 5) nextResult = setting[0].wingo5;\n          if (game == 10) nextResult = setting[0].wingo10;\n          newArr = '';\n          if (!(nextResult == '-1')) {\n            _context11.next = 61;\n            break;\n          }\n          _context11.next = 58;\n          return _connectDB[\"default\"].execute(\"UPDATE wingo SET amount = ?,status = ? WHERE period = ? AND game = \\\"\".concat(join, \"\\\"\"), [amount, 1, period]);\n        case 58:\n          newArr = '-1';\n          _context11.next = 68;\n          break;\n        case 61:\n          result = '';\n          arr = nextResult.split('|');\n          check = arr.length;\n          if (check == 1) {\n            newArr = '-1';\n          } else {\n            for (i = 1; i < arr.length; i++) {\n              newArr += arr[i] + '|';\n            }\n            newArr = newArr.slice(0, -1);\n          }\n          result = arr[0];\n          _context11.next = 68;\n          return _connectDB[\"default\"].execute(\"UPDATE wingo SET amount = ?,status = ? WHERE period = ? AND game = \\\"\".concat(join, \"\\\"\"), [result, 1, period]);\n        case 68:\n          sql = \"INSERT INTO wingo SET \\n        period = ?,\\n        amount = ?,\\n        game = ?,\\n        status = ?,\\n        time = ?\";\n          _context11.next = 71;\n          return _connectDB[\"default\"].execute(sql, [Number(period) + 1, 0, join, 0, timeNow]);\n        case 71:\n          if (game == 1) join = 'wingo1';\n          if (game == 3) join = 'wingo3';\n          if (game == 5) join = 'wingo5';\n          if (game == 10) join = 'wingo10';\n          _context11.next = 77;\n          return _connectDB[\"default\"].execute(\"UPDATE admin SET \".concat(join, \" = ?\"), [newArr]);\n        case 77:\n          _context11.next = 82;\n          break;\n        case 79:\n          _context11.prev = 79;\n          _context11.t0 = _context11[\"catch\"](0);\n          if (_context11.t0) {\n            console.log(_context11.t0);\n          }\n        case 82:\n        case \"end\":\n          return _context11.stop();\n      }\n    }, _callee11, null, [[0, 79]]);\n  }));\n  return function addWinGo(_x17) {\n    return _ref9.apply(this, arguments);\n  };\n}();\nvar handlingWinGo1P = /*#__PURE__*/function () {\n  var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(typeid) {\n    var game, _yield$connection$que39, _yield$connection$que40, winGoNow, result, _yield$connection$exe, _yield$connection$exe2, order, i, orders, _result, bet, total, id, phone, nhan_duoc, _yield$connection$exe3, _yield$connection$exe4, users, totals, sql;\n    return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n      while (1) switch (_context12.prev = _context12.next) {\n        case 0:\n          game = '';\n          if (typeid == 1) game = 'wingo';\n          if (typeid == 3) game = 'wingo3';\n          if (typeid == 5) game = 'wingo5';\n          if (typeid == 10) game = 'wingo10';\n          _context12.next = 7;\n          return _connectDB[\"default\"].query(\"SELECT * FROM wingo WHERE status != 0 AND game = '\".concat(game, \"' ORDER BY id DESC LIMIT 1 \"));\n        case 7:\n          _yield$connection$que39 = _context12.sent;\n          _yield$connection$que40 = _slicedToArray(_yield$connection$que39, 1);\n          winGoNow = _yield$connection$que40[0];\n          _context12.next = 12;\n          return _connectDB[\"default\"].execute(\"UPDATE minutes_1 SET result = ? WHERE status = 0 AND game = '\".concat(game, \"'\"), [winGoNow[0].amount]);\n        case 12:\n          result = Number(winGoNow[0].amount);\n          _context12.t0 = result;\n          _context12.next = _context12.t0 === 0 ? 16 : _context12.t0 === 1 ? 19 : _context12.t0 === 2 ? 22 : _context12.t0 === 3 ? 25 : _context12.t0 === 4 ? 28 : _context12.t0 === 5 ? 31 : _context12.t0 === 6 ? 34 : _context12.t0 === 7 ? 37 : _context12.t0 === 8 ? 40 : _context12.t0 === 9 ? 43 : 46;\n          break;\n        case 16:\n          _context12.next = 18;\n          return _connectDB[\"default\"].execute(\"UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \\\"\".concat(game, \"\\\" AND bet != \\\"l\\\" AND bet != \\\"n\\\" AND bet != \\\"d\\\" AND bet != \\\"0\\\" AND bet != \\\"t\\\" \"), []);\n        case 18:\n          return _context12.abrupt(\"break\", 47);\n        case 19:\n          _context12.next = 21;\n          return _connectDB[\"default\"].execute(\"UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \\\"\".concat(game, \"\\\" AND bet != \\\"l\\\" AND bet != \\\"n\\\" AND bet != \\\"x\\\" AND bet != \\\"1\\\" \"), []);\n        case 21:\n          return _context12.abrupt(\"break\", 47);\n        case 22:\n          _context12.next = 24;\n          return _connectDB[\"default\"].execute(\"UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \\\"\".concat(game, \"\\\" AND bet != \\\"l\\\" AND bet != \\\"n\\\" AND bet != \\\"d\\\" AND bet != \\\"2\\\" \"), []);\n        case 24:\n          return _context12.abrupt(\"break\", 47);\n        case 25:\n          _context12.next = 27;\n          return _connectDB[\"default\"].execute(\"UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \\\"\".concat(game, \"\\\" AND bet != \\\"l\\\" AND bet != \\\"n\\\" AND bet != \\\"x\\\" AND bet != \\\"3\\\" \"), []);\n        case 27:\n          return _context12.abrupt(\"break\", 47);\n        case 28:\n          _context12.next = 30;\n          return _connectDB[\"default\"].execute(\"UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \\\"\".concat(game, \"\\\" AND bet != \\\"l\\\" AND bet != \\\"n\\\" AND bet != \\\"d\\\" AND bet != \\\"4\\\" \"), []);\n        case 30:\n          return _context12.abrupt(\"break\", 47);\n        case 31:\n          _context12.next = 33;\n          return _connectDB[\"default\"].execute(\"UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \\\"\".concat(game, \"\\\" AND bet != \\\"l\\\" AND bet != \\\"n\\\" AND bet != \\\"x\\\" AND bet != \\\"5\\\" AND bet != \\\"t\\\" \"), []);\n        case 33:\n          return _context12.abrupt(\"break\", 47);\n        case 34:\n          _context12.next = 36;\n          return _connectDB[\"default\"].execute(\"UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \\\"\".concat(game, \"\\\" AND bet != \\\"l\\\" AND bet != \\\"n\\\" AND bet != \\\"d\\\" AND bet != \\\"6\\\" \"), []);\n        case 36:\n          return _context12.abrupt(\"break\", 47);\n        case 37:\n          _context12.next = 39;\n          return _connectDB[\"default\"].execute(\"UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \\\"\".concat(game, \"\\\" AND bet != \\\"l\\\" AND bet != \\\"n\\\" AND bet != \\\"x\\\" AND bet != \\\"7\\\" \"), []);\n        case 39:\n          return _context12.abrupt(\"break\", 47);\n        case 40:\n          _context12.next = 42;\n          return _connectDB[\"default\"].execute(\"UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \\\"\".concat(game, \"\\\" AND bet != \\\"l\\\" AND bet != \\\"n\\\" AND bet != \\\"d\\\" AND bet != \\\"8\\\" \"), []);\n        case 42:\n          return _context12.abrupt(\"break\", 47);\n        case 43:\n          _context12.next = 45;\n          return _connectDB[\"default\"].execute(\"UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \\\"\".concat(game, \"\\\" AND bet != \\\"l\\\" AND bet != \\\"n\\\" AND bet != \\\"x\\\" AND bet != \\\"9\\\" \"), []);\n        case 45:\n          return _context12.abrupt(\"break\", 47);\n        case 46:\n          return _context12.abrupt(\"break\", 47);\n        case 47:\n          if (!(result < 5)) {\n            _context12.next = 52;\n            break;\n          }\n          _context12.next = 50;\n          return _connectDB[\"default\"].execute(\"UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \\\"\".concat(game, \"\\\" AND bet = \\\"l\\\" \"), []);\n        case 50:\n          _context12.next = 54;\n          break;\n        case 52:\n          _context12.next = 54;\n          return _connectDB[\"default\"].execute(\"UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \\\"\".concat(game, \"\\\" AND bet = \\\"n\\\" \"), []);\n        case 54:\n          _context12.next = 56;\n          return _connectDB[\"default\"].execute(\"SELECT * FROM minutes_1 WHERE status = 0 AND game = '\".concat(game, \"' \"));\n        case 56:\n          _yield$connection$exe = _context12.sent;\n          _yield$connection$exe2 = _slicedToArray(_yield$connection$exe, 1);\n          order = _yield$connection$exe2[0];\n          i = 0;\n        case 60:\n          if (!(i < order.length)) {\n            _context12.next = 83;\n            break;\n          }\n          orders = order[i];\n          _result = orders.result;\n          bet = orders.bet;\n          total = orders.money;\n          id = orders.id;\n          phone = orders.phone;\n          nhan_duoc = 0; // x - green\n          // t - Violet\n          // d - red \n          // Sirf 1-4 aur 6-9 tk hi *9 aana chahiye\n          // Aur 0 aur 5 pe *4.5\n          // Aur red aur green pe *2\n          // 1,2,3,4,6,7,8,9\n          if (bet == 'l' || bet == 'n') {\n            nhan_duoc = total * 2;\n          } else {\n            if (_result == 0 || _result == 5) {\n              if (bet == 'd' || bet == 'x') {\n                nhan_duoc = total * 1.5;\n              } else if (bet == 't') {\n                nhan_duoc = total * 4.5;\n              } else if (bet == \"0\" || bet == \"5\") {\n                nhan_duoc = total * 4.5;\n              }\n            } else {\n              if (_result == 1 && bet == \"1\") {\n                nhan_duoc = total * 9;\n              } else {\n                if (_result == 1 && bet == 'x') {\n                  nhan_duoc = total * 2;\n                }\n              }\n              if (_result == 2 && bet == \"2\") {\n                nhan_duoc = total * 9;\n              } else {\n                if (_result == 2 && bet == 'd') {\n                  nhan_duoc = total * 2;\n                }\n              }\n              if (_result == 3 && bet == \"3\") {\n                nhan_duoc = total * 9;\n              } else {\n                if (_result == 3 && bet == 'x') {\n                  nhan_duoc = total * 2;\n                }\n              }\n              if (_result == 4 && bet == \"4\") {\n                nhan_duoc = total * 9;\n              } else {\n                if (_result == 4 && bet == 'd') {\n                  nhan_duoc = total * 2;\n                }\n              }\n              if (_result == 6 && bet == \"6\") {\n                nhan_duoc = total * 9;\n              } else {\n                if (_result == 6 && bet == 'd') {\n                  nhan_duoc = total * 2;\n                }\n              }\n              if (_result == 7 && bet == \"7\") {\n                nhan_duoc = total * 9;\n              } else {\n                if (_result == 7 && bet == 'x') {\n                  nhan_duoc = total * 2;\n                }\n              }\n              if (_result == 8 && bet == \"8\") {\n                nhan_duoc = total * 9;\n              } else {\n                if (_result == 8 && bet == 'd') {\n                  nhan_duoc = total * 2;\n                }\n              }\n              if (_result == 9 && bet == \"9\") {\n                nhan_duoc = total * 9;\n              } else {\n                if (_result == 9 && bet == 'x') {\n                  nhan_duoc = total * 2;\n                }\n              }\n            }\n          }\n          _context12.next = 71;\n          return _connectDB[\"default\"].execute('SELECT `money` FROM `users` WHERE `phone` = ?', [phone]);\n        case 71:\n          _yield$connection$exe3 = _context12.sent;\n          _yield$connection$exe4 = _slicedToArray(_yield$connection$exe3, 1);\n          users = _yield$connection$exe4[0];\n          totals = parseFloat(users[0].money) + parseFloat(nhan_duoc);\n          _context12.next = 77;\n          return _connectDB[\"default\"].execute('UPDATE `minutes_1` SET `get` = ?, `status` = 1 WHERE `id` = ? ', [parseFloat(nhan_duoc), id]);\n        case 77:\n          sql = 'UPDATE `users` SET `money` = ? WHERE `phone` = ? ';\n          _context12.next = 80;\n          return _connectDB[\"default\"].execute(sql, [totals, phone]);\n        case 80:\n          i++;\n          _context12.next = 60;\n          break;\n        case 83:\n        case \"end\":\n          return _context12.stop();\n      }\n    }, _callee12);\n  }));\n  return function handlingWinGo1P(_x20) {\n    return _ref12.apply(this, arguments);\n  };\n}();\nmodule.exports = {\n  winGoPage: winGoPage,\n  betWinGo: betWinGo,\n  listOrderOld: listOrderOld,\n  GetMyEmerdList: GetMyEmerdList,\n  handlingWinGo1P: handlingWinGo1P,\n  addWinGo: addWinGo,\n  winGoPage3: winGoPage3,\n  winGoPage5: winGoPage5,\n  winGoPage10: winGoPage10\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_connectDB","_interopRequireDefault","require","_excluded","obj","__esModule","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","Array","from","isArray","_arrayLikeToArray","_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","key","i","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","sourceKeys","keys","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","o","minLen","n","toString","slice","constructor","name","test","len","arr2","r","l","t","e","u","a","f","next","done","push","value","_regeneratorRuntime","hasOwnProperty","defineProperty","c","asyncIterator","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","async","Promise","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","config","winGoPage","_ref","_callee","req","res","_callee$","_context","render","_x","_x2","winGoPage3","_ref2","_callee2","_callee2$","_context2","_x3","_x4","winGoPage5","_ref3","_callee3","_callee3$","_context3","_x5","_x6","winGoPage10","_ref4","_callee4","_callee4$","_context4","_x7","_x8","isNumber","params","pattern","formateT","result","timerJoin","addHours","date","Date","Number","setHours","getHours","years","getFullYear","months","getMonth","days","getDate","hours","ampm","minutes","getMinutes","seconds","getSeconds","rosesPlus","_ref5","_callee5","auth","money","_yield$connection$que","_yield$connection$que2","level","_yield$connection$que3","_yield$connection$que4","user","userInfo","_yield$connection$que5","_yield$connection$que6","f1","infoF1","levelIndex","rosesF","timeNow","sql2","sql3","_yield$connection$que7","_yield$connection$que8","fNext","_callee5$","_context5","connection","query","invite","total_money","user_level","phone","now","execute","code","_x9","_x10","betWinGo","_ref6","_callee6","_req$body","typeid","join","x","gameJoin","_yield$connection$que9","_yield$connection$que10","winGoNow","_yield$connection$que11","_yield$connection$que12","period","fee","total","check","id_product","formatTime","color","checkJoin","checkTime","sql","_yield$connection$que13","_yield$connection$que14","users","_callee6$","_context6","_timerJoin","body","cookies","status","json","message","concat","Math","floor","random","getTime","data","change","_x11","_x12","listOrderOld","_ref7","_callee7","_req$body2","pageno","pageto","_yield$connection$que15","_yield$connection$que16","game","_yield$connection$que17","_yield$connection$que18","wingo","_yield$connection$que19","_yield$connection$que20","wingoAll","_yield$connection$que21","_yield$connection$que22","page","_callee7$","_context7","msg","gameslist","ceil","_x13","_x14","GetMyEmerdList","_ref8","_callee8","_req$body3","_yield$connection$que23","_yield$connection$que24","_yield$connection$que25","_yield$connection$que26","minutes_1","_yield$connection$que27","_yield$connection$que28","minutes_1All","datas","_callee8$","_context8","map","id","others","_x15","_x16","addWinGo","_ref9","_callee11","_yield$connection$que29","_yield$connection$que30","_yield$connection$que31","_yield$connection$que32","setting","amount","_yield$connection$que33","_yield$connection$que34","minPlayers","betColumns","totalMoneyPromises","categories","smallestCategory","colorBets","betsForCategory","availableBets","lowestBet","_betColumns","_categories","_colorBets","_smallestCategory","_betsForCategory","_availableBets","_lowestBet","nextResult","newArr","_callee11$","_context11","bets","_ref10","_callee9","column","_yield$connection$que35","_yield$connection$que36","_callee9$","_context9","bet","parseInt","_x18","all","reduce","smallest","category","red_6","red_8","red_2","red_4","green_3","green_7","green_9","green_1","green_5","red_0","filter","find","lowest","parseFloat","_ref11","_callee10","_result$","_yield$connection$que37","_yield$connection$que38","_callee10$","_context10","_x19","red_big","red_small","green_big","green_small","violet_big","violet_small","min","wingo1","wingo3","wingo5","wingo10","split","t0","console","log","_x17","handlingWinGo1P","_ref12","_callee12","_yield$connection$que39","_yield$connection$que40","_yield$connection$exe","_yield$connection$exe2","order","orders","_result","nhan_duoc","_yield$connection$exe3","_yield$connection$exe4","totals","_callee12$","_context12","_x20","module","exports"],"sourceRoot":"/www/wwwroot/21india/src/controllers/","sources":["winGoController.js"],"sourcesContent":["import connection from \"../config/connectDB\";\n// import jwt from 'jsonwebtoken'\n// import md5 from \"md5\";\n// import e from \"express\";\nrequire('dotenv').config();\n\n\nconst winGoPage = async (req, res) => {\n    return res.render(\"bet/wingo/win.ejs\");\n}\n\nconst winGoPage3 = async (req, res) => {\n    return res.render(\"bet/wingo/win3.ejs\");\n}\n\nconst winGoPage5 = async (req, res) => {\n    return res.render(\"bet/wingo/win5.ejs\");\n}\n\nconst winGoPage10 = async (req, res) => {\n    return res.render(\"bet/wingo/win10.ejs\");\n}\n\n\nconst isNumber = (params) => {\n    let pattern = /^[0-9]*\\d$/;\n    return pattern.test(params);\n}\n\nfunction formateT(params) {\n    let result = (params < 10) ? \"0\" + params : params;\n    return result;\n}\n\nfunction timerJoin(params = '', addHours = 0) {\n    let date = '';\n    if (params) {\n        date = new Date(Number(params));\n    } else {\n        date = new Date();\n    }\n\n    date.setHours(date.getHours() + addHours);\n\n    let years = formateT(date.getFullYear());\n    let months = formateT(date.getMonth() + 1);\n    let days = formateT(date.getDate());\n\n    let hours = date.getHours() % 12;\n    hours = hours === 0 ? 12 : hours;\n    let ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n\n    let minutes = formateT(date.getMinutes());\n    let seconds = formateT(date.getSeconds());\n\n    return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;\n}\n\nconst rosesPlus = async (auth, money) => {\n    const [level] = await connection.query('SELECT * FROM level ');\n\n    const [user] = await connection.query('SELECT `phone`, `code`, `invite`, `user_level`, `total_money` FROM users WHERE token = ? AND veri = 1 LIMIT 1 ', [auth]);\n    let userInfo = user[0];\n    const [f1] = await connection.query('SELECT `phone`, `code`, `invite`, `rank`, `user_level`, `total_money` FROM users WHERE code = ? AND veri = 1 LIMIT 1 ', [userInfo.invite]);\n\n    if (userInfo.total_money >= 100) {\n        if (f1.length > 0) {\n            let infoF1 = f1[0];\n            for (let levelIndex = 1; levelIndex <= 6; levelIndex++) {\n                let rosesF = 0;\n                if (infoF1.user_level >= levelIndex && infoF1.total_money >= 100) {\n                    rosesF = (money / 100) * level[levelIndex - 1].f1;\n                    if (rosesF > 0) {\n                        await connection.query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF, rosesF, rosesF, infoF1.phone]);\n                        let timeNow = Date.now();\n                        const sql2 = `INSERT INTO roses SET \n                            phone = ?,\n                            code = ?,\n                            invite = ?,\n                            f1 = ?,\n                            time = ?`;\n                        await connection.execute(sql2, [infoF1.phone, infoF1.code, infoF1.invite, rosesF, timeNow]);\n\n                        const sql3 = `\n                            INSERT INTO turn_over (phone, code, invite, daily_turn_over, total_turn_over)\n                            VALUES (?, ?, ?, ?, ?)\n                            ON DUPLICATE KEY UPDATE\n                            daily_turn_over = daily_turn_over + VALUES(daily_turn_over),\n                            total_turn_over = total_turn_over + VALUES(total_turn_over)\n                            `;\n\n                        await connection.execute(sql3, [infoF1.phone, infoF1.code, infoF1.invite, money, money]);\n                    }\n                }\n                const [fNext] = await connection.query('SELECT `phone`, `code`, `invite`, `rank`, `user_level`, `total_money` FROM users WHERE code = ? AND veri = 1 LIMIT 1 ', [infoF1.invite]);\n                if (fNext.length > 0) {\n                    infoF1 = fNext[0];\n                } else {\n                    break;\n                }\n            }\n        }\n    }\n}\n\n\n\n// const rosesPlus = async (auth, money) => {\n//     const [level] = await connection.query('SELECT * FROM level ');\n//     let level0 = level[0];\n\n//     const [user] = await connection.query('SELECT `phone`, `code`, `invite` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n//     let userInfo = user[0];\n//     const [f1] = await connection.query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [userInfo.invite]);\n//     if (money >= 10000) {\n//         if (f1.length > 0) {\n//             let infoF1 = f1[0];\n//             let rosesF1 = (money / 100) * level0.f1;\n//             await connection.query('UPDATE users SET money = money + ?, roses_f1 = roses_f1 + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF1, rosesF1, rosesF1, rosesF1, infoF1.phone]);\n//             const [f2] = await connection.query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [infoF1.invite]);\n//             if (f2.length > 0) {\n//                 let infoF2 = f2[0];\n//                 let rosesF2 = (money / 100) * level0.f2;\n//                 await connection.query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF2, rosesF2, rosesF2, infoF2.phone]);\n//                 const [f3] = await connection.query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [infoF2.invite]);\n//                 if (f3.length > 0) {\n//                     let infoF3 = f3[0];\n//                     let rosesF3 = (money / 100) * level0.f3;\n//                     await connection.query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF3, rosesF3, rosesF3, infoF3.phone]);\n//                     const [f4] = await connection.query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [infoF3.invite]);\n//                     if (f4.length > 0) {\n//                         let infoF4 = f4[0];\n//                         let rosesF4 = (money / 100) * level0.f4;\n//                         await connection.query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF4, rosesF4, rosesF4, infoF4.phone]);\n//                     }\n//                 }\n//             }\n\n//         }\n//     }\n// }\n\n\n// const rosesPlus = async (auth, money) => {\n//     const [level] = await connection.query('SELECT * FROM level ');\n\n//     const [user] = await connection.query('SELECT `phone`, `code`, `invite`, `user_level` FROM users WHERE token = ? AND veri = 1 LIMIT 1 ', [auth]);\n//     let userInfo = user[0];\n//     const [f1] = await connection.query('SELECT `phone`, `code`, `invite`, `rank`, `user_level` FROM users WHERE code = ? AND veri = 1 LIMIT 1 ', [userInfo.invite]);\n\n//     if (money < 300) {\n//         return; // No need to proceed if money is less than 300\n//     }\n\n//     if (f1.length === 0) {\n//         return; // No referrer found\n//     }\n\n//     let infoF1 = f1[0];\n\n//     const f2 = await connection.query('SELECT `phone`, `code`, `invite`, `rank`, `user_level` FROM users WHERE code = ? AND veri = 1 LIMIT 1 ', [infoF1.invite]);\n//     if (f2.length > 0) {\n//         let infoF2 = f2[0];\n//         if (infoF2.user_level >= 2) {\n//             let rosesF2 = (money / 100) * level[1].f1;\n//             await connection.query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF2, rosesF2, rosesF2, infoF2.phone]);\n//         }\n\n//         const f3 = await connection.query('SELECT `phone`, `code`, `invite`, `rank`, `user_level` FROM users WHERE code = ? AND veri = 1 LIMIT 1 ', [infoF2.invite]);\n//         if (f3.length > 0) {\n//             let infoF3 = f3[0];\n//             if (infoF3.user_level >= 3) {\n//                 let rosesF3 = (money / 100) * level[2].f1;\n//                 await connection.query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF3, rosesF3, rosesF3, infoF3.phone]);\n//             }\n\n//             const f4 = await connection.query('SELECT `phone`, `code`, `invite`, `rank`, `user_level` FROM users WHERE code = ? AND veri = 1 LIMIT 1 ', [infoF3.invite]);\n//             if (f4.length > 0) {\n//                 let infoF4 = f4[0];\n//                 if (infoF4.user_level >= 4) {\n//                     let rosesF4 = (money / 100) * level[3].f1;\n//                     await connection.query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF4, rosesF4, rosesF4, infoF4.phone]);\n//                 }\n//             }\n//         }\n//     }\n// }\n\n\n// const rosesPlus = async (auth, money) => {\n//     const [level] = await connection.query('SELECT * FROM level ');\n//     const [user] = await connection.query('SELECT `phone`, `code`, `invite` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n//     let userInfo = user[0];\n//     const [f1] = await connection.query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [userInfo.invite]);\n//     let infoF1 = f1[0];\n\n//     const [check_invite] = await connection.query('SELECT * FROM users WHERE invite = ?', [userInfo.invite]);\n//     if (money >= 300) {\n//         let levels = [2, 5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35, 38, 41, 44];\n//         let levelIndex = levels.findIndex(levelThreshold => check_invite.length < levelThreshold);\n\n//         if (levelIndex !== -1) {\n//             let rosesF1 = (money / 100) * level[levelIndex].f1;\n//             await connection.query('UPDATE users SET money = money + ?, roses_f1 = roses_f1 + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF1, rosesF1, rosesF1, rosesF1, infoF1.phone]);\n//         }\n//     }\n// }\n\n\nconst betWinGo = async (req, res) => {\n    let { typeid, join, x, money } = req.body;\n    let auth = req.cookies.auth;\n\n    if (typeid != 1 && typeid != 3 && typeid != 5 && typeid != 10) {\n        return res.status(200).json({\n            message: 'Error!',\n            status: true\n        });\n    }\n\n\n    let gameJoin = '';\n    if (typeid == 1) gameJoin = 'wingo';\n    if (typeid == 3) gameJoin = 'wingo3';\n    if (typeid == 5) gameJoin = 'wingo5';\n    if (typeid == 10) gameJoin = 'wingo10';\n    const [winGoNow] = await connection.query(`SELECT period FROM wingo WHERE status = 0 AND game = '${gameJoin}' ORDER BY id DESC LIMIT 1 `);\n    const [user] = await connection.query('SELECT `phone`, `code`, `invite`, `level`, `money` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n    if (!winGoNow[0] || !user[0] || !isNumber(x) || !isNumber(money)) {\n        return res.status(200).json({\n            message: 'Error!',\n            status: true\n        });\n    }\n\n    let userInfo = user[0];\n    let period = winGoNow[0].period;\n    let fee = (x * money) * 0.02;\n    let total = (x * money) - fee;\n    let timeNow = Date.now();\n    let check = userInfo.money - total;\n\n    let date = new Date();\n    let years = formateT(date.getFullYear());\n    let months = formateT(date.getMonth() + 1);\n    let days = formateT(date.getDate());\n    let id_product = years + months + days + Math.floor(Math.random() * 1000000000000000);\n\n    let formatTime = timerJoin();\n\n    let color = '';\n    if (join == 'l') {\n        color = 'big';\n    } else if (join == 'n') {\n        color = 'small';\n    } else if (join == 't') {\n        color = 'violet';\n    } else if (join == 'd') {\n        color = 'red';\n    } else if (join == 'x') {\n        color = 'green';\n    } else if (join == '0') {\n        color = 'red-violet';\n    } else if (join == '5') {\n        color = 'green-violet';\n    } else if (join % 2 == 0) {\n        color = 'red';\n    } else if (join % 2 != 0) {\n        color = 'green';\n    }\n\n    let checkJoin = '';\n\n    if (!isNumber(join) && join == 'l' || join == 'n') {\n        checkJoin = `\n        <div data-v-a9660e98=\"\" class=\"van-image\" style=\"width: 30px; height: 30px;\">\n            <img src=\"/images/${(join == 'n') ? 'small' : 'big'}.png\" class=\"van-image__img\">\n        </div>\n        `\n    } else {\n        checkJoin =\n            `\n        <span data-v-a9660e98=\"\">${(isNumber(join)) ? join : ''}</span>\n        `\n    }\n\n\n    let result = `\n    <div data-v-a9660e98=\"\" issuenumber=\"${period}\" addtime=\"${formatTime}\" rowid=\"1\" class=\"hb\">\n        <div data-v-a9660e98=\"\" class=\"item c-row\">\n            <div data-v-a9660e98=\"\" class=\"result\">\n                <div data-v-a9660e98=\"\" class=\"select select-${(color)}\">\n                    ${checkJoin}\n                </div>\n            </div>\n            <div data-v-a9660e98=\"\" class=\"c-row c-row-between info\">\n                <div data-v-a9660e98=\"\">\n                    <div data-v-a9660e98=\"\" class=\"issueName\">\n                        ${period}\n                    </div>\n                    <div data-v-a9660e98=\"\" class=\"tiem\">${formatTime}</div>\n                </div>\n            </div>\n        </div>\n        <!---->\n    </div>\n    `;\n\n    function timerJoin(params = '', addHours = 0) {\n        let date = '';\n        if (params) {\n            date = new Date(Number(params));\n        } else {\n            date = new Date();\n        }\n\n        date.setHours(date.getHours() + addHours);\n\n        let years = formateT(date.getFullYear());\n        let months = formateT(date.getMonth() + 1);\n        let days = formateT(date.getDate());\n\n        let hours = date.getHours() % 12;\n        hours = hours === 0 ? 12 : hours;\n        let ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n\n        let minutes = formateT(date.getMinutes());\n        let seconds = formateT(date.getSeconds());\n\n        return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;\n    }\n    let checkTime = timerJoin(date.getTime());\n\n    if (check >= 0) {\n        const sql = `INSERT INTO minutes_1 SET \n        id_product = ?,\n        phone = ?,\n        code = ?,\n        invite = ?,\n        stage = ?,\n        level = ?,\n        money = ?,\n        amount = ?,\n        fee = ?,\n        get = ?,\n        game = ?,\n        bet = ?,\n        status = ?,\n        today = ?,\n        time = ?`;\n        await connection.execute(sql, [id_product, userInfo.phone, userInfo.code, userInfo.invite, period, userInfo.level, total, x, fee, 0, gameJoin, join, 0, checkTime, timeNow]);\n        await connection.execute('UPDATE `users` SET `money` = `money` - ? WHERE `token` = ? ', [money * x, auth]);\n        const [users] = await connection.query('SELECT `money`, `level` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n        await rosesPlus(auth, money * x);\n        // const [level] = await connection.query('SELECT * FROM level ');\n        // let level0 = level[0];\n        // const sql2 = `INSERT INTO roses SET \n        // phone = ?,\n        // code = ?,\n        // invite = ?,\n        // f1 = ?,\n        // f2 = ?,\n        // f3 = ?,\n        // f4 = ?,\n        // time = ?`;\n        // let total_m = money * x;\n        // let f1 = (total_m / 100) * level0.f1;\n        // let f2 = (total_m / 100) * level0.f2;\n        // let f3 = (total_m / 100) * level0.f3;\n        // let f4 = (total_m / 100) * level0.f4;\n        // await connection.execute(sql2, [userInfo.phone, userInfo.code, userInfo.invite, f1, f2, f3, f4, timeNow]);\n        // console.log(level);\n        return res.status(200).json({\n            message: 'Successful bet',\n            status: true,\n            data: result,\n            change: users[0].level,\n            money: users[0].money,\n        });\n    } else {\n        return res.status(200).json({\n            message: 'The amount is not enough',\n            status: false\n        });\n    }\n}\n\nconst listOrderOld = async (req, res) => {\n    let { typeid, pageno, pageto } = req.body;\n\n    if (typeid != 1 && typeid != 3 && typeid != 5 && typeid != 10) {\n        return res.status(200).json({\n            message: 'Error!',\n            status: true\n        });\n    }\n    if (pageno < 0 || pageto < 0) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n    let auth = req.cookies.auth;\n    const [user] = await connection.query('SELECT `phone`, `code`, `invite`, `level`, `money` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n\n    let game = '';\n    if (typeid == 1) game = 'wingo';\n    if (typeid == 3) game = 'wingo3';\n    if (typeid == 5) game = 'wingo5';\n    if (typeid == 10) game = 'wingo10';\n\n    const [wingo] = await connection.query(`SELECT * FROM wingo WHERE status != 0 AND game = '${game}' ORDER BY id DESC LIMIT ${pageno}, ${pageto} `);\n    const [wingoAll] = await connection.query(`SELECT * FROM wingo WHERE status != 0 AND game = '${game}' `);\n    const [period] = await connection.query(`SELECT period FROM wingo WHERE status = 0 AND game = '${game}' ORDER BY id DESC LIMIT 1 `);\n    if (!wingo[0]) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n    if (!pageno || !pageto || !user[0] || !wingo[0] || !period[0]) {\n        return res.status(200).json({\n            message: 'Error!',\n            status: true\n        });\n    }\n    let page = Math.ceil(wingoAll.length / 10);\n    return res.status(200).json({\n        code: 0,\n        msg: \"Receive success\",\n        data: {\n            gameslist: wingo,\n        },\n        period: period[0].period,\n        page: page,\n        status: true\n    });\n}\n\nconst GetMyEmerdList = async (req, res) => {\n    let { typeid, pageno, pageto } = req.body;\n\n    // if (!pageno || !pageto) {\n    //     pageno = 0;\n    //     pageto = 10;\n    // }\n\n    if (typeid != 1 && typeid != 3 && typeid != 5 && typeid != 10) {\n        return res.status(200).json({\n            message: 'Error!',\n            status: true\n        });\n    }\n\n    if (pageno < 0 || pageto < 0) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n    let auth = req.cookies.auth;\n\n    let game = '';\n    if (typeid == 1) game = 'wingo';\n    if (typeid == 3) game = 'wingo3';\n    if (typeid == 5) game = 'wingo5';\n    if (typeid == 10) game = 'wingo10';\n\n    const [user] = await connection.query('SELECT `phone`, `code`, `invite`, `level`, `money` FROM users WHERE token = ? AND veri = 1 LIMIT 1 ', [auth]);\n    const [minutes_1] = await connection.query(`SELECT * FROM minutes_1 WHERE phone = ? AND game = '${game}' ORDER BY id DESC LIMIT ${Number(pageno) + ',' + Number(pageto)}`, [user[0].phone]);\n    const [minutes_1All] = await connection.query(`SELECT * FROM minutes_1 WHERE phone = ? AND game = '${game}' ORDER BY id DESC `, [user[0].phone]);\n\n    if (!minutes_1[0]) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n    if (!pageno || !pageto || !user[0] || !minutes_1[0]) {\n        return res.status(200).json({\n            message: 'Error!',\n            status: true\n        });\n    }\n    let page = Math.ceil(minutes_1All.length / 10);\n\n    let datas = minutes_1.map((data) => {\n        let { id, phone, code, invite, level, game, ...others } = data;\n        return others;\n    });\n\n    return res.status(200).json({\n        code: 0,\n        msg: \"Receive success\",\n        data: {\n            gameslist: datas,\n        },\n        page: page,\n        status: true\n    });\n}\n\nconst addWinGo = async (game) => {\n    try {\n        let join = '';\n        if (game == 1) join = 'wingo';\n        if (game == 3) join = 'wingo3';\n        if (game == 5) join = 'wingo5';\n        if (game == 10) join = 'wingo10';\n\n        const [winGoNow] = await connection.query(`SELECT period FROM wingo WHERE status = 0 AND game = \"${join}\" ORDER BY id DESC LIMIT 1 `);\n        const [setting] = await connection.query('SELECT * FROM `admin` ');\n        let period = winGoNow[0].period; // cầu hiện tại\n        let amount = Math.floor(Math.random() * 10);\n        const [minPlayers] = await connection.query(`SELECT * FROM minutes_1 WHERE status = 0 AND game = \"${join}\"`);\n        if (minPlayers.length >= 2) {\n            const betColumns = [\n                // red_small \n                { name: 'red_0', bets: ['0', 't', 'd', 'n'] },\n                { name: 'red_2', bets: ['2', 'd', 'n'] },\n                { name: 'red_4', bets: ['4', 'd', 'n'] },\n                // green small \n                { name: 'green_1', bets: ['1', 'x', 'n'] },\n                { name: 'green_3', bets: ['3', 'x', 'n'] },\n                // green big \n                { name: 'green_5', bets: ['5', 'x', 't', 'l'] },\n                { name: 'green_7', bets: ['7', 'x', 'l'] },\n                { name: 'green_9', bets: ['9', 'x', 'l'] },\n                // red big \n                { name: 'red_6', bets: ['6', 'd', 'l'] },\n                { name: 'red_8', bets: ['8', 'd', 'l'] }\n            ];\n\n            const totalMoneyPromises = betColumns.map(async column => {\n                const [result] = await connection.query(`\n                SELECT SUM(money) AS total_money\n                FROM minutes_1\n                WHERE game = \"${join}\" AND status = 0 AND bet IN (${column.bets.map(bet => `\"${bet}\"`).join(',')})\n            `);\n                return { name: column.name, total_money: result[0].total_money ? parseInt(result[0].total_money) : 0 };\n            });\n\n            const categories = await Promise.all(totalMoneyPromises);\n            let smallestCategory = categories.reduce((smallest, category) =>\n                (smallest === null || category.total_money < smallest.total_money) ? category : smallest\n                , null);\n            const colorBets = {\n                red_6: [6],\n                red_8: [8],\n                red_2: [2], //0 removed \n                red_4: [4],\n                green_3: [3],\n                green_7: [7], //5 removed\n                green_9: [9], //\n                green_1: [1],\n                green_5: [5],\n                red_0: [0],\n            };\n\n            const betsForCategory = colorBets[smallestCategory.name] || [];\n            const availableBets = betsForCategory.filter(bet =>\n                !categories.find(category => category.name === smallestCategory.name && category.total_money < smallestCategory.total_money)\n            );\n            let lowestBet;\n            if (availableBets.length > 0) {\n                lowestBet = availableBets[0];\n            } else {\n                lowestBet = betsForCategory.reduce((lowest, bet) =>\n                    (bet < lowest) ? bet : lowest\n                );\n            }\n\n            amount = lowestBet;\n        } else if (minPlayers.length === 1 && parseFloat(minPlayers[0].money) >= 20) {\n            const betColumns = [\n                { name: 'red_small', bets: ['0', '2', '4', 'd', 'n'] },\n                { name: 'red_big', bets: ['6', '8', 'd', 'l'] },\n                { name: 'green_big', bets: ['5', '7', '9', 'x', 'l'] },\n                { name: 'green_small', bets: ['1', '3', 'x', 'n'] },\n                { name: 'violet_small', bets: ['0', 't', 'n'] },\n                { name: 'violet_big', bets: ['5', 't', 'l'] }\n            ];\n\n            const categories = await Promise.all(betColumns.map(async column => {\n                const [result] = await connection.query(`\n                    SELECT SUM(money) AS total_money\n                    FROM minutes_1\n                    WHERE game = \"${join}\" AND status = 0 AND bet IN (${column.bets.map(bet => `\"${bet}\"`).join(',')})\n                `);\n                return { name: column.name, total_money: parseInt(result[0]?.total_money) || 0 };\n            }));\n\n            const colorBets = {\n                red_big: [6, 8],\n                red_small: [2, 4], //0 removed \n                green_big: [7, 9], //5 removed\n                green_small: [1, 3],\n                violet_big: [5],\n                violet_small: [0],\n            };\n\n            const smallestCategory = categories.reduce((smallest, category) =>\n                (!smallest || category.total_money < smallest.total_money) ? category : smallest\n            );\n\n            const betsForCategory = colorBets[smallestCategory.name] || [];\n            const availableBets = betsForCategory.filter(bet =>\n                !categories.find(category => category.name === smallestCategory.name && category.total_money < smallestCategory.total_money)\n            );\n\n            const lowestBet = availableBets.length > 0 ? availableBets[0] : Math.min(...betsForCategory);\n            amount = lowestBet;\n        }\n\n        // xanh đỏ tím\n        let timeNow = Date.now();\n\n        let nextResult = '';\n        if (game == 1) nextResult = setting[0].wingo1;\n        if (game == 3) nextResult = setting[0].wingo3;\n        if (game == 5) nextResult = setting[0].wingo5;\n        if (game == 10) nextResult = setting[0].wingo10;\n\n        let newArr = '';\n        if (nextResult == '-1') {\n            await connection.execute(`UPDATE wingo SET amount = ?,status = ? WHERE period = ? AND game = \"${join}\"`, [amount, 1, period]);\n            newArr = '-1';\n        } else {\n            let result = '';\n            let arr = nextResult.split('|');\n            let check = arr.length;\n            if (check == 1) {\n                newArr = '-1';\n            } else {\n                for (let i = 1; i < arr.length; i++) {\n                    newArr += arr[i] + '|';\n                }\n                newArr = newArr.slice(0, -1);\n            }\n            result = arr[0];\n            await connection.execute(`UPDATE wingo SET amount = ?,status = ? WHERE period = ? AND game = \"${join}\"`, [result, 1, period]);\n        }\n        const sql = `INSERT INTO wingo SET \n        period = ?,\n        amount = ?,\n        game = ?,\n        status = ?,\n        time = ?`;\n\n        await connection.execute(sql, [Number(period) + 1, 0, join, 0, timeNow]);\n\n        if (game == 1) join = 'wingo1';\n        if (game == 3) join = 'wingo3';\n        if (game == 5) join = 'wingo5';\n        if (game == 10) join = 'wingo10';\n\n        await connection.execute(`UPDATE admin SET ${join} = ?`, [newArr]);\n    } catch (error) {\n        if (error) {\n            console.log(error);\n        }\n    }\n}\n\n\n\nconst handlingWinGo1P = async (typeid) => {\n\n    let game = '';\n    if (typeid == 1) game = 'wingo';\n    if (typeid == 3) game = 'wingo3';\n    if (typeid == 5) game = 'wingo5';\n    if (typeid == 10) game = 'wingo10';\n\n    const [winGoNow] = await connection.query(`SELECT * FROM wingo WHERE status != 0 AND game = '${game}' ORDER BY id DESC LIMIT 1 `);\n\n    // update ket qua\n    await connection.execute(`UPDATE minutes_1 SET result = ? WHERE status = 0 AND game = '${game}'`, [winGoNow[0].amount]);\n    let result = Number(winGoNow[0].amount);\n    switch (result) {\n        case 0:\n            await connection.execute(`UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \"${game}\" AND bet != \"l\" AND bet != \"n\" AND bet != \"d\" AND bet != \"0\" AND bet != \"t\" `, []);\n            break;\n        case 1:\n            await connection.execute(`UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \"${game}\" AND bet != \"l\" AND bet != \"n\" AND bet != \"x\" AND bet != \"1\" `, []);\n            break;\n        case 2:\n            await connection.execute(`UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \"${game}\" AND bet != \"l\" AND bet != \"n\" AND bet != \"d\" AND bet != \"2\" `, []);\n            break;\n        case 3:\n            await connection.execute(`UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \"${game}\" AND bet != \"l\" AND bet != \"n\" AND bet != \"x\" AND bet != \"3\" `, []);\n            break;\n        case 4:\n            await connection.execute(`UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \"${game}\" AND bet != \"l\" AND bet != \"n\" AND bet != \"d\" AND bet != \"4\" `, []);\n            break;\n        case 5:\n            await connection.execute(`UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \"${game}\" AND bet != \"l\" AND bet != \"n\" AND bet != \"x\" AND bet != \"5\" AND bet != \"t\" `, []);\n            break;\n        case 6:\n            await connection.execute(`UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \"${game}\" AND bet != \"l\" AND bet != \"n\" AND bet != \"d\" AND bet != \"6\" `, []);\n            break;\n        case 7:\n            await connection.execute(`UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \"${game}\" AND bet != \"l\" AND bet != \"n\" AND bet != \"x\" AND bet != \"7\" `, []);\n            break;\n        case 8:\n            await connection.execute(`UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \"${game}\" AND bet != \"l\" AND bet != \"n\" AND bet != \"d\" AND bet != \"8\" `, []);\n            break;\n        case 9:\n            await connection.execute(`UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \"${game}\" AND bet != \"l\" AND bet != \"n\" AND bet != \"x\" AND bet != \"9\" `, []);\n            break;\n        default:\n            break;\n    }\n\n    if (result < 5) {\n        await connection.execute(`UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \"${game}\" AND bet = \"l\" `, []);\n    } else {\n        await connection.execute(`UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \"${game}\" AND bet = \"n\" `, []);\n    }\n\n    // lấy ra danh sách đặt cược chưa xử lý\n    const [order] = await connection.execute(`SELECT * FROM minutes_1 WHERE status = 0 AND game = '${game}' `);\n    for (let i = 0; i < order.length; i++) {\n        let orders = order[i];\n        let result = orders.result;\n        let bet = orders.bet;\n        let total = orders.money;\n        let id = orders.id;\n        let phone = orders.phone;\n        var nhan_duoc = 0;\n        // x - green\n        // t - Violet\n        // d - red \n\n        // Sirf 1-4 aur 6-9 tk hi *9 aana chahiye\n        // Aur 0 aur 5 pe *4.5\n        // Aur red aur green pe *2\n        // 1,2,3,4,6,7,8,9\n\n\n        if (bet == 'l' || bet == 'n') {\n            nhan_duoc = total * 2;\n        } else {\n            if (result == 0 || result == 5) {\n                if (bet == 'd' || bet == 'x') {\n                    nhan_duoc = total * 1.5;\n                } else if (bet == 't') {\n                    nhan_duoc = total * 4.5;\n                } else if (bet == \"0\" || bet == \"5\") {\n                    nhan_duoc = total * 4.5;\n                }\n            } else {\n                if (result == 1 && bet == \"1\") {\n                    nhan_duoc = total * 9;\n                } else {\n                    if (result == 1 && bet == 'x') {\n                        nhan_duoc = total * 2;\n                    }\n                }\n                if (result == 2 && bet == \"2\") {\n                    nhan_duoc = total * 9;\n                } else {\n                    if (result == 2 && bet == 'd') {\n                        nhan_duoc = total * 2;\n                    }\n                }\n                if (result == 3 && bet == \"3\") {\n                    nhan_duoc = total * 9;\n                } else {\n                    if (result == 3 && bet == 'x') {\n                        nhan_duoc = total * 2;\n                    }\n                }\n                if (result == 4 && bet == \"4\") {\n                    nhan_duoc = total * 9;\n                } else {\n                    if (result == 4 && bet == 'd') {\n                        nhan_duoc = total * 2;\n                    }\n                }\n                if (result == 6 && bet == \"6\") {\n                    nhan_duoc = total * 9;\n                } else {\n                    if (result == 6 && bet == 'd') {\n                        nhan_duoc = total * 2;\n                    }\n                }\n                if (result == 7 && bet == \"7\") {\n                    nhan_duoc = total * 9;\n                } else {\n                    if (result == 7 && bet == 'x') {\n                        nhan_duoc = total * 2;\n                    }\n                }\n                if (result == 8 && bet == \"8\") {\n                    nhan_duoc = total * 9;\n                } else {\n                    if (result == 8 && bet == 'd') {\n                        nhan_duoc = total * 2;\n                    }\n                }\n                if (result == 9 && bet == \"9\") {\n                    nhan_duoc = total * 9;\n                } else {\n                    if (result == 9 && bet == 'x') {\n                        nhan_duoc = total * 2;\n                    }\n                }\n            }\n        }\n        const [users] = await connection.execute('SELECT `money` FROM `users` WHERE `phone` = ?', [phone]);\n        let totals = parseFloat(users[0].money) + parseFloat(nhan_duoc);\n        await connection.execute('UPDATE `minutes_1` SET `get` = ?, `status` = 1 WHERE `id` = ? ', [parseFloat(nhan_duoc), id]);\n        const sql = 'UPDATE `users` SET `money` = ? WHERE `phone` = ? ';\n        await connection.execute(sql, [totals, phone]);\n    }\n}\n\nmodule.exports = {\n    winGoPage,\n    betWinGo,\n    listOrderOld,\n    GetMyEmerdList,\n    handlingWinGo1P,\n    addWinGo,\n    winGoPage3,\n    winGoPage5,\n    winGoPage10\n}"],"mappings":"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","ignoreList":[]}},"mtime":1722459116000},"{\"assumptions\":{},\"sourceRoot\":\"/www/wwwroot/21india/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/www/wwwroot/21india\",\"filename\":\"/www/wwwroot/21india/src/controllers/userController.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/www/wwwroot/21india\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.5:development":{"value":{"code":"\"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _connectDB = _interopRequireDefault(require(\"../config/connectDB\"));\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\nvar _md = _interopRequireDefault(require(\"md5\"));\nvar _request = _interopRequireDefault(require(\"request\"));\nvar _excluded = [\"id\", \"password\", \"ip\", \"veri\", \"ip_address\", \"status\", \"time\", \"token\"];\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nvar axios = require('axios');\nvar timeNow = Date.now();\nvar randomNumber = function randomNumber(min, max) {\n  return String(Math.floor(Math.random() * (max - min + 1)) + min);\n};\nvar verifyCode = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(req, res) {\n    var auth, now, timeEnd, otp, user;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          auth = req.cookies.auth;\n          now = new Date().getTime();\n          timeEnd = +new Date() + 1000 * (60 * 2 + 0) + 500;\n          otp = randomNumber(100000, 999999);\n          _context2.next = 6;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE `token` = ? ', [auth]);\n        case 6:\n          conswit[rows] = _context2.sent;\n          if (rows) {\n            _context2.next = 9;\n            break;\n          }\n          return _context2.abrupt(\"return\", res.status(200).json({\n            message: 'Account does not exist',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 9:\n          user = rows[0];\n          if (!(user.time_otp - now <= 0)) {\n            _context2.next = 14;\n            break;\n          }\n          (0, _request[\"default\"])(\"http://47.243.168.18:9090/sms/batch/v2?appkey=NFJKdK&appsecret=brwkTw&phone=84\".concat(user.phone, \"&msg=Your verification code is \").concat(otp, \"&extend=\").concat(now), /*#__PURE__*/function () {\n            var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(error, response, body) {\n              var data;\n              return _regeneratorRuntime().wrap(function _callee$(_context) {\n                while (1) switch (_context.prev = _context.next) {\n                  case 0:\n                    data = JSON.parse(body);\n                    if (!(data.code == '00000')) {\n                      _context.next = 5;\n                      break;\n                    }\n                    _context.next = 4;\n                    return _connectDB[\"default\"].execute(\"UPDATE users SET otp = ?, time_otp = ? WHERE phone = ? \", [otp, timeEnd, user.phone]);\n                  case 4:\n                    return _context.abrupt(\"return\", res.status(200).json({\n                      message: 'Submitted successfully',\n                      status: true,\n                      timeStamp: timeNow,\n                      timeEnd: timeEnd\n                    }));\n                  case 5:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }, _callee);\n            }));\n            return function (_x3, _x4, _x5) {\n              return _ref2.apply(this, arguments);\n            };\n          }());\n          _context2.next = 15;\n          break;\n        case 14:\n          return _context2.abrupt(\"return\", res.status(200).json({\n            message: 'Send SMS regularly.',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function verifyCode(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar aviator = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(req, res) {\n    var auth;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          auth = req.cookies.auth;\n          res.redirect(\"https://bdg2.89lottery.xyz/theninja/src/api/userapi.php?action=loginandregisterbyauth&token=\".concat(auth));\n          //res.redirect(`https://jetx.asia/#/jet/loginbyauth/${auth}`);\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return function aviator(_x6, _x7) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nvar userInfo = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(req, res) {\n    var auth, _yield$connection$que, _yield$connection$que2, rows, _yield$connection$que3, _yield$connection$que4, recharge, totalRecharge, _yield$connection$que5, _yield$connection$que6, withdraw, totalWithdraw, _rows$, id, password, ip, veri, ip_address, status, time, token, others;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          auth = req.cookies.auth;\n          if (auth) {\n            _context4.next = 3;\n            break;\n          }\n          return _context4.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 3:\n          _context4.next = 5;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE `token` = ? ', [auth]);\n        case 5:\n          _yield$connection$que = _context4.sent;\n          _yield$connection$que2 = _slicedToArray(_yield$connection$que, 1);\n          rows = _yield$connection$que2[0];\n          if (rows) {\n            _context4.next = 10;\n            break;\n          }\n          return _context4.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 10:\n          _context4.next = 12;\n          return _connectDB[\"default\"].query('SELECT * FROM recharge WHERE `phone` = ? AND status = 1', [rows[0].phone]);\n        case 12:\n          _yield$connection$que3 = _context4.sent;\n          _yield$connection$que4 = _slicedToArray(_yield$connection$que3, 1);\n          recharge = _yield$connection$que4[0];\n          totalRecharge = 0;\n          recharge.forEach(function (data) {\n            totalRecharge += data.money;\n          });\n          _context4.next = 19;\n          return _connectDB[\"default\"].query('SELECT * FROM withdraw WHERE `phone` = ? AND status = 1', [rows[0].phone]);\n        case 19:\n          _yield$connection$que5 = _context4.sent;\n          _yield$connection$que6 = _slicedToArray(_yield$connection$que5, 1);\n          withdraw = _yield$connection$que6[0];\n          totalWithdraw = 0;\n          withdraw.forEach(function (data) {\n            totalWithdraw += data.money;\n          });\n          _rows$ = rows[0], id = _rows$.id, password = _rows$.password, ip = _rows$.ip, veri = _rows$.veri, ip_address = _rows$.ip_address, status = _rows$.status, time = _rows$.time, token = _rows$.token, others = _objectWithoutProperties(_rows$, _excluded);\n          return _context4.abrupt(\"return\", res.status(200).json({\n            message: 'Success',\n            status: true,\n            data: {\n              code: others.code,\n              id_user: others.id_user,\n              name_user: others.name_user,\n              phone_user: others.phone,\n              money_user: others.money\n            },\n            totalRecharge: totalRecharge,\n            totalWithdraw: totalWithdraw,\n            timeStamp: timeNow\n          }));\n        case 26:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n  return function userInfo(_x8, _x9) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nvar changeUser = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(req, res) {\n    var auth, name, type, _yield$connection$que7, _yield$connection$que8, rows;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          auth = req.cookies.auth;\n          name = req.body.name;\n          type = req.body.type;\n          _context5.next = 5;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE `token` = ? ', [auth]);\n        case 5:\n          _yield$connection$que7 = _context5.sent;\n          _yield$connection$que8 = _slicedToArray(_yield$connection$que7, 1);\n          rows = _yield$connection$que8[0];\n          if (!(!rows || !type || !name)) {\n            _context5.next = 10;\n            break;\n          }\n          return _context5.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 10:\n          ;\n          _context5.t0 = type;\n          _context5.next = _context5.t0 === 'editname' ? 14 : 18;\n          break;\n        case 14:\n          _context5.next = 16;\n          return _connectDB[\"default\"].query('UPDATE users SET name_user = ? WHERE `token` = ? ', [name, auth]);\n        case 16:\n          return _context5.abrupt(\"return\", res.status(200).json({\n            message: 'Username modification successful',\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 18:\n          return _context5.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 20:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5);\n  }));\n  return function changeUser(_x10, _x11) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nvar changePassword = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(req, res) {\n    var auth, password, newPassWord, _yield$connection$que9, _yield$connection$que10, rows;\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          auth = req.cookies.auth;\n          password = req.body.password;\n          newPassWord = req.body.newPassWord; // let otp = req.body.otp;\n          if (!(!password || !newPassWord)) {\n            _context6.next = 5;\n            break;\n          }\n          return _context6.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 5:\n          ;\n          _context6.next = 8;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE `token` = ? AND `password` = ? ', [auth, (0, _md[\"default\"])(password)]);\n        case 8:\n          _yield$connection$que9 = _context6.sent;\n          _yield$connection$que10 = _slicedToArray(_yield$connection$que9, 1);\n          rows = _yield$connection$que10[0];\n          if (!(rows.length == 0)) {\n            _context6.next = 13;\n            break;\n          }\n          return _context6.abrupt(\"return\", res.status(200).json({\n            message: 'Incorrect password',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 13:\n          ;\n\n          // let getTimeEnd = Number(rows[0].time_otp);\n          // let tet = new Date(getTimeEnd).getTime();\n          // var now = new Date().getTime();\n          // var timeRest = tet - now;\n          // if (timeRest <= 0) {\n          //     return res.status(200).json({\n          //         message: 'Mã OTP đã hết hiệu lực',\n          //         status: false,\n          //         timeStamp: timeNow,\n          //     });\n          // }\n\n          // const [check_otp] = await connection.query('SELECT * FROM users WHERE `token` = ? AND `password` = ? AND otp = ? ', [auth, md5(password), otp]);\n          // if(check_otp.length == 0) return res.status(200).json({\n          //     message: 'Mã OTP không chính xác',\n          //     status: false,\n          //     timeStamp: timeNow,\n          // });;\n          _context6.next = 16;\n          return _connectDB[\"default\"].query('UPDATE users SET otp = ?, password = ?, plain_password = ? WHERE `token` = ? ', [randomNumber(100000, 999999), (0, _md[\"default\"])(newPassWord), newPassWord, auth]);\n        case 16:\n          return _context6.abrupt(\"return\", res.status(200).json({\n            message: 'Password modification successful',\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 17:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6);\n  }));\n  return function changePassword(_x12, _x13) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nvar checkInHandling = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(req, res) {\n    var auth, data, _yield$connection$que11, _yield$connection$que12, rows, _yield$connection$que13, _yield$connection$que14, point_list, _yield$connection$que15, _yield$connection$que16, point_lists, check, _point_list, get, _yield$connection$que17, _yield$connection$que18, _point_lists, _check, _point_list2, _get, _yield$connection$que19, _yield$connection$que20, _point_lists2, _check2, _point_list3, _get2, _yield$connection$que21, _yield$connection$que22, _point_lists3, _check3, _point_list4, _get3, _yield$connection$que23, _yield$connection$que24, _point_lists4, _check4, _point_list5, _get4, _yield$connection$que25, _yield$connection$que26, _point_lists5, _check5, _point_list6, _get5, _yield$connection$que27, _yield$connection$que28, _point_lists6, _check6, _point_list7, _get6;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          auth = req.cookies.auth;\n          data = req.body.data;\n          if (auth) {\n            _context7.next = 4;\n            break;\n          }\n          return _context7.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 4:\n          ;\n          _context7.next = 7;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE `token` = ? ', [auth]);\n        case 7:\n          _yield$connection$que11 = _context7.sent;\n          _yield$connection$que12 = _slicedToArray(_yield$connection$que11, 1);\n          rows = _yield$connection$que12[0];\n          if (rows) {\n            _context7.next = 12;\n            break;\n          }\n          return _context7.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 12:\n          ;\n          if (data) {\n            _context7.next = 20;\n            break;\n          }\n          _context7.next = 16;\n          return _connectDB[\"default\"].query('SELECT * FROM point_list WHERE `phone` = ? ', [rows[0].phone]);\n        case 16:\n          _yield$connection$que13 = _context7.sent;\n          _yield$connection$que14 = _slicedToArray(_yield$connection$que13, 1);\n          point_list = _yield$connection$que14[0];\n          return _context7.abrupt(\"return\", res.status(200).json({\n            message: 'No More Data',\n            datas: point_list,\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 20:\n          if (!data) {\n            _context7.next = 189;\n            break;\n          }\n          if (!(data == 1)) {\n            _context7.next = 44;\n            break;\n          }\n          _context7.next = 24;\n          return _connectDB[\"default\"].query('SELECT * FROM point_list WHERE `phone` = ? ', [rows[0].phone]);\n        case 24:\n          _yield$connection$que15 = _context7.sent;\n          _yield$connection$que16 = _slicedToArray(_yield$connection$que15, 1);\n          point_lists = _yield$connection$que16[0];\n          check = rows[0].money;\n          _point_list = point_lists[0];\n          get = 300;\n          if (!(check >= data && _point_list.total1 != 0)) {\n            _context7.next = 38;\n            break;\n          }\n          _context7.next = 33;\n          return _connectDB[\"default\"].query('UPDATE users SET money = money + ? WHERE phone = ? ', [_point_list.total1, rows[0].phone]);\n        case 33:\n          _context7.next = 35;\n          return _connectDB[\"default\"].query('UPDATE point_list SET total1 = ? WHERE phone = ? ', [0, rows[0].phone]);\n        case 35:\n          return _context7.abrupt(\"return\", res.status(200).json({\n            message: \"You just received \\u20B9 \".concat(_point_list.total1, \".00\"),\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 38:\n          if (!(check < get && _point_list.total1 != 0)) {\n            _context7.next = 42;\n            break;\n          }\n          return _context7.abrupt(\"return\", res.status(200).json({\n            message: 'Please Recharge ₹ 300 to claim gift.',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 42:\n          if (!(_point_list.total1 == 0)) {\n            _context7.next = 44;\n            break;\n          }\n          return _context7.abrupt(\"return\", res.status(200).json({\n            message: 'You have already received this gift',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 44:\n          ;\n          if (!(data == 2)) {\n            _context7.next = 68;\n            break;\n          }\n          _context7.next = 48;\n          return _connectDB[\"default\"].query('SELECT * FROM point_list WHERE `phone` = ? ', [rows[0].phone]);\n        case 48:\n          _yield$connection$que17 = _context7.sent;\n          _yield$connection$que18 = _slicedToArray(_yield$connection$que17, 1);\n          _point_lists = _yield$connection$que18[0];\n          _check = rows[0].money;\n          _point_list2 = _point_lists[0];\n          _get = 3000;\n          if (!(_check >= _get && _point_list2.total2 != 0)) {\n            _context7.next = 62;\n            break;\n          }\n          _context7.next = 57;\n          return _connectDB[\"default\"].query('UPDATE users SET money = money + ? WHERE phone = ? ', [_point_list2.total2, rows[0].phone]);\n        case 57:\n          _context7.next = 59;\n          return _connectDB[\"default\"].query('UPDATE point_list SET total2 = ? WHERE phone = ? ', [0, rows[0].phone]);\n        case 59:\n          return _context7.abrupt(\"return\", res.status(200).json({\n            message: \"You just received \\u20B9 \".concat(_point_list2.total2, \".00\"),\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 62:\n          if (!(_check < _get && _point_list2.total2 != 0)) {\n            _context7.next = 66;\n            break;\n          }\n          return _context7.abrupt(\"return\", res.status(200).json({\n            message: 'Please Recharge ₹ 3000 to claim gift.',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 66:\n          if (!(_point_list2.total2 == 0)) {\n            _context7.next = 68;\n            break;\n          }\n          return _context7.abrupt(\"return\", res.status(200).json({\n            message: 'You have already received this gift',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 68:\n          ;\n          if (!(data == 3)) {\n            _context7.next = 92;\n            break;\n          }\n          _context7.next = 72;\n          return _connectDB[\"default\"].query('SELECT * FROM point_list WHERE `phone` = ? ', [rows[0].phone]);\n        case 72:\n          _yield$connection$que19 = _context7.sent;\n          _yield$connection$que20 = _slicedToArray(_yield$connection$que19, 1);\n          _point_lists2 = _yield$connection$que20[0];\n          _check2 = rows[0].money;\n          _point_list3 = _point_lists2[0];\n          _get2 = 6000;\n          if (!(_check2 >= _get2 && _point_list3.total3 != 0)) {\n            _context7.next = 86;\n            break;\n          }\n          _context7.next = 81;\n          return _connectDB[\"default\"].query('UPDATE users SET money = money + ? WHERE phone = ? ', [_point_list3.total3, rows[0].phone]);\n        case 81:\n          _context7.next = 83;\n          return _connectDB[\"default\"].query('UPDATE point_list SET total3 = ? WHERE phone = ? ', [0, rows[0].phone]);\n        case 83:\n          return _context7.abrupt(\"return\", res.status(200).json({\n            message: \"You just received \\u20B9 \".concat(_point_list3.total3, \".00\"),\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 86:\n          if (!(_check2 < _get2 && _point_list3.total3 != 0)) {\n            _context7.next = 90;\n            break;\n          }\n          return _context7.abrupt(\"return\", res.status(200).json({\n            message: 'Please Recharge ₹ 6000 to claim gift.',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 90:\n          if (!(_point_list3.total3 == 0)) {\n            _context7.next = 92;\n            break;\n          }\n          return _context7.abrupt(\"return\", res.status(200).json({\n            message: 'You have already received this gift',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 92:\n          ;\n          if (!(data == 4)) {\n            _context7.next = 116;\n            break;\n          }\n          _context7.next = 96;\n          return _connectDB[\"default\"].query('SELECT * FROM point_list WHERE `phone` = ? ', [rows[0].phone]);\n        case 96:\n          _yield$connection$que21 = _context7.sent;\n          _yield$connection$que22 = _slicedToArray(_yield$connection$que21, 1);\n          _point_lists3 = _yield$connection$que22[0];\n          _check3 = rows[0].money;\n          _point_list4 = _point_lists3[0];\n          _get3 = 12000;\n          if (!(_check3 >= _get3 && _point_list4.total4 != 0)) {\n            _context7.next = 110;\n            break;\n          }\n          _context7.next = 105;\n          return _connectDB[\"default\"].query('UPDATE users SET money = money + ? WHERE phone = ? ', [_point_list4.total4, rows[0].phone]);\n        case 105:\n          _context7.next = 107;\n          return _connectDB[\"default\"].query('UPDATE point_list SET total4 = ? WHERE phone = ? ', [0, rows[0].phone]);\n        case 107:\n          return _context7.abrupt(\"return\", res.status(200).json({\n            message: \"You just received \\u20B9 \".concat(_point_list4.total4, \".00\"),\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 110:\n          if (!(_check3 < _get3 && _point_list4.total4 != 0)) {\n            _context7.next = 114;\n            break;\n          }\n          return _context7.abrupt(\"return\", res.status(200).json({\n            message: 'Please Recharge ₹ 12000 to claim gift.',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 114:\n          if (!(_point_list4.total4 == 0)) {\n            _context7.next = 116;\n            break;\n          }\n          return _context7.abrupt(\"return\", res.status(200).json({\n            message: 'You have already received this gift',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 116:\n          ;\n          if (!(data == 5)) {\n            _context7.next = 140;\n            break;\n          }\n          _context7.next = 120;\n          return _connectDB[\"default\"].query('SELECT * FROM point_list WHERE `phone` = ? ', [rows[0].phone]);\n        case 120:\n          _yield$connection$que23 = _context7.sent;\n          _yield$connection$que24 = _slicedToArray(_yield$connection$que23, 1);\n          _point_lists4 = _yield$connection$que24[0];\n          _check4 = rows[0].money;\n          _point_list5 = _point_lists4[0];\n          _get4 = 28000;\n          if (!(_check4 >= _get4 && _point_list5.total5 != 0)) {\n            _context7.next = 134;\n            break;\n          }\n          _context7.next = 129;\n          return _connectDB[\"default\"].query('UPDATE users SET money = money + ? WHERE phone = ? ', [_point_list5.total5, rows[0].phone]);\n        case 129:\n          _context7.next = 131;\n          return _connectDB[\"default\"].query('UPDATE point_list SET total5 = ? WHERE phone = ? ', [0, rows[0].phone]);\n        case 131:\n          return _context7.abrupt(\"return\", res.status(200).json({\n            message: \"You just received \\u20B9 \".concat(_point_list5.total5, \".00\"),\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 134:\n          if (!(_check4 < _get4 && _point_list5.total5 != 0)) {\n            _context7.next = 138;\n            break;\n          }\n          return _context7.abrupt(\"return\", res.status(200).json({\n            message: 'Please Recharge ₹ 28000 to claim gift.',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 138:\n          if (!(_point_list5.total5 == 0)) {\n            _context7.next = 140;\n            break;\n          }\n          return _context7.abrupt(\"return\", res.status(200).json({\n            message: 'You have already received this gift',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 140:\n          ;\n          if (!(data == 6)) {\n            _context7.next = 164;\n            break;\n          }\n          _context7.next = 144;\n          return _connectDB[\"default\"].query('SELECT * FROM point_list WHERE `phone` = ? ', [rows[0].phone]);\n        case 144:\n          _yield$connection$que25 = _context7.sent;\n          _yield$connection$que26 = _slicedToArray(_yield$connection$que25, 1);\n          _point_lists5 = _yield$connection$que26[0];\n          _check5 = rows[0].money;\n          _point_list6 = _point_lists5[0];\n          _get5 = 100000;\n          if (!(_check5 >= _get5 && _point_list6.total6 != 0)) {\n            _context7.next = 158;\n            break;\n          }\n          _context7.next = 153;\n          return _connectDB[\"default\"].query('UPDATE users SET money = money + ? WHERE phone = ? ', [_point_list6.total6, rows[0].phone]);\n        case 153:\n          _context7.next = 155;\n          return _connectDB[\"default\"].query('UPDATE point_list SET total6 = ? WHERE phone = ? ', [0, rows[0].phone]);\n        case 155:\n          return _context7.abrupt(\"return\", res.status(200).json({\n            message: \"You just received \\u20B9 \".concat(_point_list6.total6, \".00\"),\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 158:\n          if (!(_check5 < _get5 && _point_list6.total6 != 0)) {\n            _context7.next = 162;\n            break;\n          }\n          return _context7.abrupt(\"return\", res.status(200).json({\n            message: 'Please Recharge ₹ 100000 to claim gift.',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 162:\n          if (!(_point_list6.total6 == 0)) {\n            _context7.next = 164;\n            break;\n          }\n          return _context7.abrupt(\"return\", res.status(200).json({\n            message: 'You have already received this gift',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 164:\n          ;\n          if (!(data == 7)) {\n            _context7.next = 188;\n            break;\n          }\n          _context7.next = 168;\n          return _connectDB[\"default\"].query('SELECT * FROM point_list WHERE `phone` = ? ', [rows[0].phone]);\n        case 168:\n          _yield$connection$que27 = _context7.sent;\n          _yield$connection$que28 = _slicedToArray(_yield$connection$que27, 1);\n          _point_lists6 = _yield$connection$que28[0];\n          _check6 = rows[0].money;\n          _point_list7 = _point_lists6[0];\n          _get6 = 200000;\n          if (!(_check6 >= _get6 && _point_list7.total7 != 0)) {\n            _context7.next = 182;\n            break;\n          }\n          _context7.next = 177;\n          return _connectDB[\"default\"].query('UPDATE users SET money = money + ? WHERE phone = ? ', [_point_list7.total7, rows[0].phone]);\n        case 177:\n          _context7.next = 179;\n          return _connectDB[\"default\"].query('UPDATE point_list SET total7 = ? WHERE phone = ? ', [0, rows[0].phone]);\n        case 179:\n          return _context7.abrupt(\"return\", res.status(200).json({\n            message: \"You just received \\u20B9 \".concat(_point_list7.total7, \".00\"),\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 182:\n          if (!(_check6 < _get6 && _point_list7.total7 != 0)) {\n            _context7.next = 186;\n            break;\n          }\n          return _context7.abrupt(\"return\", res.status(200).json({\n            message: 'Please Recharge ₹200000 to claim gift.',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 186:\n          if (!(_point_list7.total7 == 0)) {\n            _context7.next = 188;\n            break;\n          }\n          return _context7.abrupt(\"return\", res.status(200).json({\n            message: 'You have already received this gift',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 188:\n          ;\n        case 189:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7);\n  }));\n  return function checkInHandling(_x14, _x15) {\n    return _ref7.apply(this, arguments);\n  };\n}();\nfunction formateT(params) {\n  var result = params < 10 ? \"0\" + params : params;\n  return result;\n}\nfunction timerJoin() {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var addHours = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var date = '';\n  if (params) {\n    date = new Date(Number(params));\n  } else {\n    date = new Date();\n  }\n  date.setHours(date.getHours() + addHours);\n  var years = formateT(date.getFullYear());\n  var months = formateT(date.getMonth() + 1);\n  var days = formateT(date.getDate());\n  var hours = date.getHours() % 12;\n  hours = hours === 0 ? 12 : hours;\n  var ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n  var minutes = formateT(date.getMinutes());\n  var seconds = formateT(date.getSeconds());\n  return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;\n}\nvar promotion = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(req, res) {\n    var auth, _yield$connection$que29, _yield$connection$que30, user, _yield$connection$que31, _yield$connection$que32, level, userInfo, _yield$connection$que33, _yield$connection$que34, f1s, f1_today, i, f1_time, check, f_all_today, _i, f1_code, _f1_time, check_f1, _yield$connection$que35, _yield$connection$que36, f2s, _i2, f2_code, f2_time, check_f2, _yield$connection$que37, _yield$connection$que38, f3s, _i3, f3_code, f3_time, check_f3, _yield$connection$que39, _yield$connection$que40, f4s, _i4, f4_code, f4_time, check_f4, f2, _i5, _f1_code, _yield$connection$que41, _yield$connection$que42, _f2s, f3, _i6, _f1_code2, _yield$connection$que43, _yield$connection$que44, _f2s2, _i7, _f2_code, _yield$connection$que45, _yield$connection$que46, _f3s, f4, _i8, _f1_code3, _yield$connection$que47, _yield$connection$que48, _f2s3, _i9, _f2_code2, _yield$connection$que49, _yield$connection$que50, _f3s2, _i10, _f3_code, _yield$connection$que51, _yield$connection$que52, _f4s, selectedData, fetchInvitesByCode, _fetchInvitesByCode, _iterator, _step, initialInfoF1, rosesF1, rosesAll, rosesAdd;\n    return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n      while (1) switch (_context9.prev = _context9.next) {\n        case 0:\n          _fetchInvitesByCode = function _fetchInvitesByCode3() {\n            _fetchInvitesByCode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(code) {\n              var depth,\n                _yield$connection$que53,\n                _yield$connection$que54,\n                inviteData,\n                _iterator2,\n                _step2,\n                invite,\n                _args8 = arguments;\n              return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n                while (1) switch (_context8.prev = _context8.next) {\n                  case 0:\n                    depth = _args8.length > 1 && _args8[1] !== undefined ? _args8[1] : 1;\n                    if (!(depth > 6)) {\n                      _context8.next = 3;\n                      break;\n                    }\n                    return _context8.abrupt(\"return\");\n                  case 3:\n                    _context8.next = 5;\n                    return _connectDB[\"default\"].query('SELECT `id_user`,`name_user`,`phone`, `code`, `invite`, `rank`, `user_level`, `total_money` FROM users WHERE `invite` = ?', [code]);\n                  case 5:\n                    _yield$connection$que53 = _context8.sent;\n                    _yield$connection$que54 = _slicedToArray(_yield$connection$que53, 1);\n                    inviteData = _yield$connection$que54[0];\n                    if (!(inviteData.length > 0)) {\n                      _context8.next = 27;\n                      break;\n                    }\n                    _iterator2 = _createForOfIteratorHelper(inviteData);\n                    _context8.prev = 10;\n                    _iterator2.s();\n                  case 12:\n                    if ((_step2 = _iterator2.n()).done) {\n                      _context8.next = 19;\n                      break;\n                    }\n                    invite = _step2.value;\n                    selectedData.push(invite);\n                    _context8.next = 17;\n                    return fetchInvitesByCode(invite.code, depth + 1);\n                  case 17:\n                    _context8.next = 12;\n                    break;\n                  case 19:\n                    _context8.next = 24;\n                    break;\n                  case 21:\n                    _context8.prev = 21;\n                    _context8.t0 = _context8[\"catch\"](10);\n                    _iterator2.e(_context8.t0);\n                  case 24:\n                    _context8.prev = 24;\n                    _iterator2.f();\n                    return _context8.finish(24);\n                  case 27:\n                  case \"end\":\n                    return _context8.stop();\n                }\n              }, _callee8, null, [[10, 21, 24, 27]]);\n            }));\n            return _fetchInvitesByCode.apply(this, arguments);\n          };\n          fetchInvitesByCode = function _fetchInvitesByCode2(_x18) {\n            return _fetchInvitesByCode.apply(this, arguments);\n          };\n          auth = req.cookies.auth;\n          if (auth) {\n            _context9.next = 5;\n            break;\n          }\n          return _context9.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 5:\n          _context9.next = 7;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite`, `roses_f`, `roses_f1`, `roses_today` FROM users WHERE `token` = ? ', [auth]);\n        case 7:\n          _yield$connection$que29 = _context9.sent;\n          _yield$connection$que30 = _slicedToArray(_yield$connection$que29, 1);\n          user = _yield$connection$que30[0];\n          _context9.next = 12;\n          return _connectDB[\"default\"].query('SELECT * FROM level');\n        case 12:\n          _yield$connection$que31 = _context9.sent;\n          _yield$connection$que32 = _slicedToArray(_yield$connection$que31, 1);\n          level = _yield$connection$que32[0];\n          if (user) {\n            _context9.next = 17;\n            break;\n          }\n          return _context9.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 17:\n          userInfo = user[0]; // Directly referred level-1 users\n          _context9.next = 20;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [userInfo.code]);\n        case 20:\n          _yield$connection$que33 = _context9.sent;\n          _yield$connection$que34 = _slicedToArray(_yield$connection$que33, 1);\n          f1s = _yield$connection$que34[0];\n          // Directly referred users today\n          f1_today = 0;\n          for (i = 0; i < f1s.length; i++) {\n            f1_time = f1s[i].time;\n            check = timerJoin(f1_time) == timerJoin() ? true : false;\n            if (check) {\n              f1_today += 1;\n            }\n          }\n\n          // All direct referrals today\n          f_all_today = 0;\n          _i = 0;\n        case 27:\n          if (!(_i < f1s.length)) {\n            _context9.next = 69;\n            break;\n          }\n          f1_code = f1s[_i].code;\n          _f1_time = f1s[_i].time;\n          check_f1 = timerJoin(_f1_time) == timerJoin() ? true : false;\n          if (check_f1) f_all_today += 1;\n\n          // Total level-2 referrals today\n          _context9.next = 34;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [f1_code]);\n        case 34:\n          _yield$connection$que35 = _context9.sent;\n          _yield$connection$que36 = _slicedToArray(_yield$connection$que35, 1);\n          f2s = _yield$connection$que36[0];\n          _i2 = 0;\n        case 38:\n          if (!(_i2 < f2s.length)) {\n            _context9.next = 66;\n            break;\n          }\n          f2_code = f2s[_i2].code;\n          f2_time = f2s[_i2].time;\n          check_f2 = timerJoin(f2_time) == timerJoin() ? true : false;\n          if (check_f2) f_all_today += 1;\n\n          // Total level-3 referrals today\n          _context9.next = 45;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [f2_code]);\n        case 45:\n          _yield$connection$que37 = _context9.sent;\n          _yield$connection$que38 = _slicedToArray(_yield$connection$que37, 1);\n          f3s = _yield$connection$que38[0];\n          _i3 = 0;\n        case 49:\n          if (!(_i3 < f3s.length)) {\n            _context9.next = 63;\n            break;\n          }\n          f3_code = f3s[_i3].code;\n          f3_time = f3s[_i3].time;\n          check_f3 = timerJoin(f3_time) == timerJoin() ? true : false;\n          if (check_f3) f_all_today += 1;\n\n          // Total level-4 referrals today\n          _context9.next = 56;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [f3_code]);\n        case 56:\n          _yield$connection$que39 = _context9.sent;\n          _yield$connection$que40 = _slicedToArray(_yield$connection$que39, 1);\n          f4s = _yield$connection$que40[0];\n          for (_i4 = 0; _i4 < f4s.length; _i4++) {\n            f4_code = f4s[_i4].code;\n            f4_time = f4s[_i4].time;\n            check_f4 = timerJoin(f4_time) == timerJoin() ? true : false;\n            if (check_f4) f_all_today += 1;\n          }\n        case 60:\n          _i3++;\n          _context9.next = 49;\n          break;\n        case 63:\n          _i2++;\n          _context9.next = 38;\n          break;\n        case 66:\n          _i++;\n          _context9.next = 27;\n          break;\n        case 69:\n          // Total level-2 referrals\n          f2 = 0;\n          _i5 = 0;\n        case 71:\n          if (!(_i5 < f1s.length)) {\n            _context9.next = 82;\n            break;\n          }\n          _f1_code = f1s[_i5].code;\n          _context9.next = 75;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [_f1_code]);\n        case 75:\n          _yield$connection$que41 = _context9.sent;\n          _yield$connection$que42 = _slicedToArray(_yield$connection$que41, 1);\n          _f2s = _yield$connection$que42[0];\n          f2 += _f2s.length;\n        case 79:\n          _i5++;\n          _context9.next = 71;\n          break;\n        case 82:\n          // Total level-3 referrals\n          f3 = 0;\n          _i6 = 0;\n        case 84:\n          if (!(_i6 < f1s.length)) {\n            _context9.next = 106;\n            break;\n          }\n          _f1_code2 = f1s[_i6].code;\n          _context9.next = 88;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [_f1_code2]);\n        case 88:\n          _yield$connection$que43 = _context9.sent;\n          _yield$connection$que44 = _slicedToArray(_yield$connection$que43, 1);\n          _f2s2 = _yield$connection$que44[0];\n          _i7 = 0;\n        case 92:\n          if (!(_i7 < _f2s2.length)) {\n            _context9.next = 103;\n            break;\n          }\n          _f2_code = _f2s2[_i7].code;\n          _context9.next = 96;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [_f2_code]);\n        case 96:\n          _yield$connection$que45 = _context9.sent;\n          _yield$connection$que46 = _slicedToArray(_yield$connection$que45, 1);\n          _f3s = _yield$connection$que46[0];\n          if (_f3s.length > 0) f3 += _f3s.length;\n        case 100:\n          _i7++;\n          _context9.next = 92;\n          break;\n        case 103:\n          _i6++;\n          _context9.next = 84;\n          break;\n        case 106:\n          // Total level-4 referrals\n          f4 = 0;\n          _i8 = 0;\n        case 108:\n          if (!(_i8 < f1s.length)) {\n            _context9.next = 141;\n            break;\n          }\n          _f1_code3 = f1s[_i8].code;\n          _context9.next = 112;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [_f1_code3]);\n        case 112:\n          _yield$connection$que47 = _context9.sent;\n          _yield$connection$que48 = _slicedToArray(_yield$connection$que47, 1);\n          _f2s3 = _yield$connection$que48[0];\n          _i9 = 0;\n        case 116:\n          if (!(_i9 < _f2s3.length)) {\n            _context9.next = 138;\n            break;\n          }\n          _f2_code2 = _f2s3[_i9].code;\n          _context9.next = 120;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [_f2_code2]);\n        case 120:\n          _yield$connection$que49 = _context9.sent;\n          _yield$connection$que50 = _slicedToArray(_yield$connection$que49, 1);\n          _f3s2 = _yield$connection$que50[0];\n          _i10 = 0;\n        case 124:\n          if (!(_i10 < _f3s2.length)) {\n            _context9.next = 135;\n            break;\n          }\n          _f3_code = _f3s2[_i10].code;\n          _context9.next = 128;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [_f3_code]);\n        case 128:\n          _yield$connection$que51 = _context9.sent;\n          _yield$connection$que52 = _slicedToArray(_yield$connection$que51, 1);\n          _f4s = _yield$connection$que52[0];\n          if (_f4s.length > 0) f4 += _f4s.length;\n        case 132:\n          _i10++;\n          _context9.next = 124;\n          break;\n        case 135:\n          _i9++;\n          _context9.next = 116;\n          break;\n        case 138:\n          _i8++;\n          _context9.next = 108;\n          break;\n        case 141:\n          selectedData = [];\n          if (!(f1s.length > 0)) {\n            _context9.next = 161;\n            break;\n          }\n          _iterator = _createForOfIteratorHelper(f1s);\n          _context9.prev = 144;\n          _iterator.s();\n        case 146:\n          if ((_step = _iterator.n()).done) {\n            _context9.next = 153;\n            break;\n          }\n          initialInfoF1 = _step.value;\n          selectedData.push(initialInfoF1);\n          _context9.next = 151;\n          return fetchInvitesByCode(initialInfoF1.code);\n        case 151:\n          _context9.next = 146;\n          break;\n        case 153:\n          _context9.next = 158;\n          break;\n        case 155:\n          _context9.prev = 155;\n          _context9.t0 = _context9[\"catch\"](144);\n          _iterator.e(_context9.t0);\n        case 158:\n          _context9.prev = 158;\n          _iterator.f();\n          return _context9.finish(158);\n        case 161:\n          rosesF1 = parseFloat(userInfo.roses_f);\n          rosesAll = parseFloat(userInfo.roses_f1);\n          rosesAdd = rosesF1 + rosesAll;\n          return _context9.abrupt(\"return\", res.status(200).json({\n            message: 'Receive success',\n            level: level,\n            info: user,\n            status: true,\n            invite: {\n              f1: f1s.length,\n              total_f: selectedData.length,\n              f1_today: f1_today,\n              f_all_today: f_all_today,\n              roses_f1: userInfo.roses_f1,\n              roses_f: userInfo.roses_f,\n              roses_all: rosesAdd,\n              roses_today: userInfo.roses_today\n            },\n            timeStamp: timeNow\n          }));\n        case 165:\n        case \"end\":\n          return _context9.stop();\n      }\n    }, _callee9, null, [[144, 155, 158, 161]]);\n  }));\n  return function promotion(_x16, _x17) {\n    return _ref8.apply(this, arguments);\n  };\n}();\nvar myTeam = /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(req, res) {\n    var auth, _yield$connection$que55, _yield$connection$que56, user, _yield$connection$que57, _yield$connection$que58, level;\n    return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n      while (1) switch (_context10.prev = _context10.next) {\n        case 0:\n          auth = req.cookies.auth;\n          if (auth) {\n            _context10.next = 3;\n            break;\n          }\n          return _context10.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 3:\n          _context10.next = 5;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? ', [auth]);\n        case 5:\n          _yield$connection$que55 = _context10.sent;\n          _yield$connection$que56 = _slicedToArray(_yield$connection$que55, 1);\n          user = _yield$connection$que56[0];\n          _context10.next = 10;\n          return _connectDB[\"default\"].query('SELECT * FROM level');\n        case 10:\n          _yield$connection$que57 = _context10.sent;\n          _yield$connection$que58 = _slicedToArray(_yield$connection$que57, 1);\n          level = _yield$connection$que58[0];\n          if (user) {\n            _context10.next = 15;\n            break;\n          }\n          return _context10.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 15:\n          ;\n          return _context10.abrupt(\"return\", res.status(200).json({\n            message: 'Receive success',\n            level: level,\n            info: user,\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 17:\n        case \"end\":\n          return _context10.stop();\n      }\n    }, _callee10);\n  }));\n  return function myTeam(_x19, _x20) {\n    return _ref9.apply(this, arguments);\n  };\n}();\nvar listMyTeam = /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(req, res) {\n    var auth, _yield$connection$que59, _yield$connection$que60, user, userInfo, _yield$connection$que61, _yield$connection$que62, f1, _yield$connection$que63, _yield$connection$que64, mem, _yield$connection$que65, _yield$connection$que66, total_roses, selectedData, fetchUserDataByCode, _fetchUserDataByCode, newMem;\n    return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n      while (1) switch (_context12.prev = _context12.next) {\n        case 0:\n          _fetchUserDataByCode = function _fetchUserDataByCode3() {\n            _fetchUserDataByCode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(code) {\n              var depth,\n                _yield$connection$que67,\n                _yield$connection$que68,\n                userData,\n                _iterator3,\n                _step3,\n                _turnoverData$,\n                _turnoverData$2,\n                _user,\n                _yield$connection$que69,\n                _yield$connection$que70,\n                turnoverData,\n                _yield$connection$que71,\n                _yield$connection$que72,\n                inviteCountData,\n                inviteCount,\n                userObject,\n                _args11 = arguments;\n              return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n                while (1) switch (_context11.prev = _context11.next) {\n                  case 0:\n                    depth = _args11.length > 1 && _args11[1] !== undefined ? _args11[1] : 1;\n                    if (!(depth > 6)) {\n                      _context11.next = 3;\n                      break;\n                    }\n                    return _context11.abrupt(\"return\");\n                  case 3:\n                    _context11.next = 5;\n                    return _connectDB[\"default\"].query('SELECT `id_user`, `name_user`, `phone`, `code`, `invite`, `rank`, `total_money` FROM users WHERE `invite` = ?', [code]);\n                  case 5:\n                    _yield$connection$que67 = _context11.sent;\n                    _yield$connection$que68 = _slicedToArray(_yield$connection$que67, 1);\n                    userData = _yield$connection$que68[0];\n                    if (!(userData.length > 0)) {\n                      _context11.next = 39;\n                      break;\n                    }\n                    _iterator3 = _createForOfIteratorHelper(userData);\n                    _context11.prev = 10;\n                    _iterator3.s();\n                  case 12:\n                    if ((_step3 = _iterator3.n()).done) {\n                      _context11.next = 31;\n                      break;\n                    }\n                    _user = _step3.value;\n                    _context11.next = 16;\n                    return _connectDB[\"default\"].query('SELECT `phone`, `daily_turn_over`, `total_turn_over` FROM turn_over WHERE `phone` = ?', [_user.phone]);\n                  case 16:\n                    _yield$connection$que69 = _context11.sent;\n                    _yield$connection$que70 = _slicedToArray(_yield$connection$que69, 1);\n                    turnoverData = _yield$connection$que70[0];\n                    _context11.next = 21;\n                    return _connectDB[\"default\"].query('SELECT COUNT(*) as invite_count FROM users WHERE `invite` = ?', [_user.code]);\n                  case 21:\n                    _yield$connection$que71 = _context11.sent;\n                    _yield$connection$que72 = _slicedToArray(_yield$connection$que71, 1);\n                    inviteCountData = _yield$connection$que72[0];\n                    inviteCount = inviteCountData[0].invite_count;\n                    userObject = _objectSpread(_objectSpread({}, _user), {}, {\n                      invite_count: inviteCount,\n                      user_level: depth,\n                      daily_turn_over: ((_turnoverData$ = turnoverData[0]) === null || _turnoverData$ === void 0 ? void 0 : _turnoverData$.daily_turn_over) || 0,\n                      total_turn_over: ((_turnoverData$2 = turnoverData[0]) === null || _turnoverData$2 === void 0 ? void 0 : _turnoverData$2.total_turn_over) || 0\n                    });\n                    selectedData.push(userObject);\n                    _context11.next = 29;\n                    return fetchUserDataByCode(_user.code, depth + 1);\n                  case 29:\n                    _context11.next = 12;\n                    break;\n                  case 31:\n                    _context11.next = 36;\n                    break;\n                  case 33:\n                    _context11.prev = 33;\n                    _context11.t0 = _context11[\"catch\"](10);\n                    _iterator3.e(_context11.t0);\n                  case 36:\n                    _context11.prev = 36;\n                    _iterator3.f();\n                    return _context11.finish(36);\n                  case 39:\n                  case \"end\":\n                    return _context11.stop();\n                }\n              }, _callee11, null, [[10, 33, 36, 39]]);\n            }));\n            return _fetchUserDataByCode.apply(this, arguments);\n          };\n          fetchUserDataByCode = function _fetchUserDataByCode2(_x23) {\n            return _fetchUserDataByCode.apply(this, arguments);\n          };\n          auth = req.cookies.auth;\n          if (auth) {\n            _context12.next = 5;\n            break;\n          }\n          return _context12.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 5:\n          _context12.next = 7;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? ', [auth]);\n        case 7:\n          _yield$connection$que59 = _context12.sent;\n          _yield$connection$que60 = _slicedToArray(_yield$connection$que59, 1);\n          user = _yield$connection$que60[0];\n          if (user) {\n            _context12.next = 12;\n            break;\n          }\n          return _context12.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 12:\n          ;\n          userInfo = user[0];\n          _context12.next = 16;\n          return _connectDB[\"default\"].query('SELECT `id_user`, `phone`, `code`, `invite`,`roses_f`, `rank`, `name_user`,`status`,`total_money`, `time` FROM users WHERE `invite` = ? ORDER BY id DESC', [userInfo.code]);\n        case 16:\n          _yield$connection$que61 = _context12.sent;\n          _yield$connection$que62 = _slicedToArray(_yield$connection$que61, 1);\n          f1 = _yield$connection$que62[0];\n          _context12.next = 21;\n          return _connectDB[\"default\"].query('SELECT `id_user`, `phone`, `time` FROM users WHERE `invite` = ? ORDER BY id DESC LIMIT 100', [userInfo.code]);\n        case 21:\n          _yield$connection$que63 = _context12.sent;\n          _yield$connection$que64 = _slicedToArray(_yield$connection$que63, 1);\n          mem = _yield$connection$que64[0];\n          _context12.next = 26;\n          return _connectDB[\"default\"].query('SELECT `f1`,`invite`, `code`,`phone`,`time` FROM roses WHERE `invite` = ? ORDER BY id DESC LIMIT 100', [userInfo.code]);\n        case 26:\n          _yield$connection$que65 = _context12.sent;\n          _yield$connection$que66 = _slicedToArray(_yield$connection$que65, 1);\n          total_roses = _yield$connection$que66[0];\n          selectedData = [];\n          _context12.next = 32;\n          return fetchUserDataByCode(userInfo.code);\n        case 32:\n          newMem = [];\n          mem.map(function (data) {\n            var objectMem = {\n              id_user: data.id_user,\n              phone: '91' + data.phone.slice(0, 1) + '****' + String(data.phone.slice(-4)),\n              time: data.time\n            };\n            return newMem.push(objectMem);\n          });\n          return _context12.abrupt(\"return\", res.status(200).json({\n            message: 'Receive success',\n            f1: selectedData,\n            f1_direct: f1,\n            mem: newMem,\n            total_roses: total_roses,\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 35:\n        case \"end\":\n          return _context12.stop();\n      }\n    }, _callee12);\n  }));\n  return function listMyTeam(_x21, _x22) {\n    return _ref10.apply(this, arguments);\n  };\n}();\nvar wowpay = /*#__PURE__*/function () {\n  var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(req, res) {\n    var auth, money;\n    return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n      while (1) switch (_context13.prev = _context13.next) {\n        case 0:\n          auth = req.cookies.auth;\n          money = req.body.money; // Fetching the user's mobile number from the database using auth token\n          // Your existing controller code here\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }, _callee13);\n  }));\n  return function wowpay(_x24, _x25) {\n    return _ref11.apply(this, arguments);\n  };\n}();\nvar recharge = /*#__PURE__*/function () {\n  var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(req, res) {\n    var auth, money, type, typeid, minimumMoney, _yield$connection$que73, _yield$connection$que74, user, userInfo, _yield$connection$que75, _yield$connection$que76, recharge, _formateT, _timerJoin, time, date, checkTime, id_time, id_order, client_transaction_id, formData, sql, _yield$connection$que77, _yield$connection$que78, _recharge, moneyString, apiData, apiResponse, _sql, _yield$connection$que79, _yield$connection$que80, _recharge2;\n    return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n      while (1) switch (_context14.prev = _context14.next) {\n        case 0:\n          auth = req.cookies.auth;\n          money = req.body.money;\n          type = req.body.type;\n          typeid = req.body.typeid;\n          minimumMoney = process.env.MINIMUM_MONEY;\n          if (!(type != 'cancel')) {\n            _context14.next = 8;\n            break;\n          }\n          if (!(!auth || !money || money < minimumMoney - 1)) {\n            _context14.next = 8;\n            break;\n          }\n          return _context14.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 8:\n          _context14.next = 10;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`name_user`,`invite` FROM users WHERE `token` = ? ', [auth]);\n        case 10:\n          _yield$connection$que73 = _context14.sent;\n          _yield$connection$que74 = _slicedToArray(_yield$connection$que73, 1);\n          user = _yield$connection$que74[0];\n          userInfo = user[0];\n          if (user) {\n            _context14.next = 16;\n            break;\n          }\n          return _context14.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 16:\n          ;\n          if (!(type == 'cancel')) {\n            _context14.next = 21;\n            break;\n          }\n          _context14.next = 20;\n          return _connectDB[\"default\"].query('UPDATE recharge SET status = 2 WHERE phone = ? AND id_order = ? AND status = ? ', [userInfo.phone, typeid, 0]);\n        case 20:\n          return _context14.abrupt(\"return\", res.status(200).json({\n            message: 'Cancelled order successfully',\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 21:\n          _context14.next = 23;\n          return _connectDB[\"default\"].query('SELECT * FROM recharge WHERE phone = ? AND status = ? ', [userInfo.phone, 0]);\n        case 23:\n          _yield$connection$que75 = _context14.sent;\n          _yield$connection$que76 = _slicedToArray(_yield$connection$que75, 1);\n          recharge = _yield$connection$que76[0];\n          if (!(recharge.length == 0)) {\n            _context14.next = 73;\n            break;\n          }\n          _formateT = function _formateT(params) {\n            var result = params < 10 ? \"0\" + params : params;\n            return result;\n          };\n          _timerJoin = function _timerJoin() {\n            var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n            var addHours = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var date = '';\n            if (params) {\n              date = new Date(Number(params));\n            } else {\n              date = new Date();\n            }\n            date.setHours(date.getHours() + addHours);\n            var years = _formateT(date.getFullYear());\n            var months = _formateT(date.getMonth() + 1);\n            var days = _formateT(date.getDate());\n            var hours = date.getHours() % 12;\n            hours = hours === 0 ? 12 : hours;\n            var ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n            var minutes = _formateT(date.getMinutes());\n            var seconds = _formateT(date.getSeconds());\n            return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;\n          };\n          time = new Date().getTime();\n          date = new Date();\n          checkTime = _timerJoin(time);\n          id_time = date.getUTCFullYear() + '' + date.getUTCMonth() + 1 + '' + date.getUTCDate();\n          id_order = Math.floor(Math.random() * (99999999999999 - 10000000000000 + 1)) + 10000000000000; // let vat = Math.floor(Math.random() * (2000 - 0 + 1) ) + 0;\n          money = Number(money);\n          client_transaction_id = id_time + id_order;\n          formData = {\n            username: process.env.accountBank,\n            secret_key: process.env.secret_key,\n            client_transaction: client_transaction_id,\n            amount: money\n          };\n          if (!(type == 'momo')) {\n            _context14.next = 47;\n            break;\n          }\n          sql = \"INSERT INTO recharge SET \\n            id_order = ?,\\n            transaction_id = ?,\\n            phone = ?,\\n            money = ?,\\n            type = ?,\\n            status = ?,\\n            today = ?,\\n            url = ?,\\n            time = ?\";\n          _context14.next = 41;\n          return _connectDB[\"default\"].execute(sql, [client_transaction_id, 'NULL', userInfo.phone, money, type, 0, checkTime, 'NULL', time]);\n        case 41:\n          _context14.next = 43;\n          return _connectDB[\"default\"].query('SELECT * FROM recharge WHERE phone = ? AND status = ? ', [userInfo.phone, 0]);\n        case 43:\n          _yield$connection$que77 = _context14.sent;\n          _yield$connection$que78 = _slicedToArray(_yield$connection$que77, 1);\n          _recharge = _yield$connection$que78[0];\n          return _context14.abrupt(\"return\", res.status(200).json({\n            message: 'Received successfully',\n            datas: _recharge[0],\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 47:\n          moneyString = money.toString();\n          apiData = {\n            key: \"0c79da69-fdc1-4a07-a8b4-7135a0168385\",\n            client_txn_id: client_transaction_id,\n            amount: moneyString,\n            p_info: 'WINGO PAYMENT',\n            customer_name: userInfo.name_user,\n            customer_email: 'manas.xdr@gmail.com',\n            customer_mobile: userInfo.phone,\n            redirect_url: \"https://247cashwin.cloud/wallet/verify/upi\",\n            udf1: 'TIRANGA'\n          };\n          _context14.prev = 49;\n          _context14.next = 52;\n          return axios.post('https://api.ekqr.in/api/create_order', apiData);\n        case 52:\n          apiResponse = _context14.sent;\n          if (!(apiResponse.data.status == true)) {\n            _context14.next = 65;\n            break;\n          }\n          _sql = \"INSERT INTO recharge SET \\n                id_order = ?,\\n                transaction_id = ?,\\n                phone = ?,\\n                money = ?,\\n                type = ?,\\n                status = ?,\\n                today = ?,\\n                url = ?,\\n                time = ?\";\n          _context14.next = 57;\n          return _connectDB[\"default\"].execute(_sql, [client_transaction_id, '0', userInfo.phone, money, type, 0, checkTime, '0', timeNow]);\n        case 57:\n          _context14.next = 59;\n          return _connectDB[\"default\"].query('SELECT * FROM recharge WHERE phone = ? AND status = ? ', [userInfo.phone, 0]);\n        case 59:\n          _yield$connection$que79 = _context14.sent;\n          _yield$connection$que80 = _slicedToArray(_yield$connection$que79, 1);\n          _recharge2 = _yield$connection$que80[0];\n          return _context14.abrupt(\"return\", res.status(200).json({\n            message: 'Received successfully',\n            datas: _recharge2[0],\n            payment_url: apiResponse.data.data.payment_url,\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 65:\n          return _context14.abrupt(\"return\", res.status(500).json({\n            message: 'Failed to create order',\n            status: false\n          }));\n        case 66:\n          _context14.next = 71;\n          break;\n        case 68:\n          _context14.prev = 68;\n          _context14.t0 = _context14[\"catch\"](49);\n          return _context14.abrupt(\"return\", res.status(500).json({\n            message: 'API request failed',\n            status: false\n          }));\n        case 71:\n          _context14.next = 74;\n          break;\n        case 73:\n          return _context14.abrupt(\"return\", res.status(200).json({\n            message: 'Received successfully',\n            datas: recharge[0],\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 74:\n        case \"end\":\n          return _context14.stop();\n      }\n    }, _callee14, null, [[49, 68]]);\n  }));\n  return function recharge(_x26, _x27) {\n    return _ref12.apply(this, arguments);\n  };\n}();\nvar cancelRecharge = /*#__PURE__*/function () {\n  var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(req, res) {\n    var auth, _yield$connection$que81, _yield$connection$que82, user, _userInfo, result;\n    return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n      while (1) switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.prev = 0;\n          auth = req.cookies.auth;\n          if (auth) {\n            _context15.next = 4;\n            break;\n          }\n          return _context15.abrupt(\"return\", res.status(200).json({\n            message: 'Authorization is required to access this API!',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 4:\n          _context15.next = 6;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`name_user`,`invite` FROM users WHERE `token` = ? ', [auth]);\n        case 6:\n          _yield$connection$que81 = _context15.sent;\n          _yield$connection$que82 = _slicedToArray(_yield$connection$que81, 1);\n          user = _yield$connection$que82[0];\n          if (user) {\n            _context15.next = 11;\n            break;\n          }\n          return _context15.abrupt(\"return\", res.status(200).json({\n            message: 'Authorization is required to access this API!',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 11:\n          _userInfo = user[0];\n          _context15.next = 14;\n          return _connectDB[\"default\"].query('DELETE FROM recharge WHERE phone = ? AND status = ?', [_userInfo.phone, 0]);\n        case 14:\n          result = _context15.sent;\n          if (!(result.affectedRows > 0)) {\n            _context15.next = 19;\n            break;\n          }\n          return _context15.abrupt(\"return\", res.status(200).json({\n            message: 'All the pending recharges has been deleted successfully!',\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 19:\n          return _context15.abrupt(\"return\", res.status(200).json({\n            message: 'There was no pending recharges for this user or delete operation has been failed!',\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 20:\n          _context15.next = 26;\n          break;\n        case 22:\n          _context15.prev = 22;\n          _context15.t0 = _context15[\"catch\"](0);\n          console.error(\"API error: \", _context15.t0);\n          return _context15.abrupt(\"return\", res.status(500).json({\n            message: 'API Request failed!',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 26:\n        case \"end\":\n          return _context15.stop();\n      }\n    }, _callee15, null, [[0, 22]]);\n  }));\n  return function cancelRecharge(_x28, _x29) {\n    return _ref13.apply(this, arguments);\n  };\n}();\nvar addBank = /*#__PURE__*/function () {\n  var _ref14 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(req, res) {\n    var auth, name_bank, name_user, stk, email, sdt, tinh, time, _yield$connection$que83, _yield$connection$que84, user, userInfo, _yield$connection$que85, _yield$connection$que86, user_bank, _yield$connection$que87, _yield$connection$que88, user_bank2, sql;\n    return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n      while (1) switch (_context16.prev = _context16.next) {\n        case 0:\n          auth = req.cookies.auth;\n          name_bank = req.body.name_bank;\n          name_user = req.body.name_user;\n          stk = req.body.stk;\n          email = req.body.email;\n          sdt = req.body.sdt;\n          tinh = req.body.tinh;\n          time = new Date().getTime();\n          if (!(!auth || !name_bank || !name_user || !stk || !email || !stk || !tinh)) {\n            _context16.next = 10;\n            break;\n          }\n          return _context16.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 10:\n          _context16.next = 12;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? ', [auth]);\n        case 12:\n          _yield$connection$que83 = _context16.sent;\n          _yield$connection$que84 = _slicedToArray(_yield$connection$que83, 1);\n          user = _yield$connection$que84[0];\n          userInfo = user[0];\n          if (user) {\n            _context16.next = 18;\n            break;\n          }\n          return _context16.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 18:\n          ;\n          _context16.next = 21;\n          return _connectDB[\"default\"].query('SELECT * FROM user_bank WHERE tinh = ? ', [tinh]);\n        case 21:\n          _yield$connection$que85 = _context16.sent;\n          _yield$connection$que86 = _slicedToArray(_yield$connection$que85, 1);\n          user_bank = _yield$connection$que86[0];\n          _context16.next = 26;\n          return _connectDB[\"default\"].query('SELECT * FROM user_bank WHERE phone = ? ', [userInfo.phone]);\n        case 26:\n          _yield$connection$que87 = _context16.sent;\n          _yield$connection$que88 = _slicedToArray(_yield$connection$que87, 1);\n          user_bank2 = _yield$connection$que88[0];\n          if (!(user_bank.length == 0 && user_bank2.length == 0)) {\n            _context16.next = 36;\n            break;\n          }\n          sql = \"INSERT INTO user_bank SET \\n        phone = ?,\\n        name_bank = ?,\\n        name_user = ?,\\n        stk = ?,\\n        email = ?,\\n        sdt = ?,\\n        tinh = ?,\\n        \\n        time = ?\";\n          _context16.next = 33;\n          return _connectDB[\"default\"].execute(sql, [userInfo.phone, name_bank, name_user, stk, email, sdt, tinh, time]);\n        case 33:\n          return _context16.abrupt(\"return\", res.status(200).json({\n            message: 'Successfully added bank',\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 36:\n          if (!(user_bank.length == 0)) {\n            _context16.next = 42;\n            break;\n          }\n          _context16.next = 39;\n          return _connectDB[\"default\"].query('UPDATE user_bank SET tinh = ? WHERE phone = ? ', [tinh, userInfo.phone]);\n        case 39:\n          return _context16.abrupt(\"return\", res.status(200).json({\n            message: 'KYC Already Done',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 42:\n          if (!(user_bank2.length > 0)) {\n            _context16.next = 46;\n            break;\n          }\n          _context16.next = 45;\n          return _connectDB[\"default\"].query('UPDATE user_bank SET name_bank = ?, name_user = ?, stk = ?, email = ?, sdt = ?, tinh = ?, time = ? WHERE phone = ?', [name_bank, name_user, stk, email, sdt, tinh, time, userInfo.phone]);\n        case 45:\n          return _context16.abrupt(\"return\", res.status(200).json({\n            message: 'your account is updated',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 46:\n        case \"end\":\n          return _context16.stop();\n      }\n    }, _callee16);\n  }));\n  return function addBank(_x30, _x31) {\n    return _ref14.apply(this, arguments);\n  };\n}();\nvar infoUserBank = /*#__PURE__*/function () {\n  var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17(req, res) {\n    var auth, _yield$connection$que89, _yield$connection$que90, user, userInfo, formateT, timerJoin, date, checkTime, _yield$connection$que91, _yield$connection$que92, recharge, _yield$connection$que93, _yield$connection$que94, minutes_1, total, total2, fee, result, _yield$connection$que95, _yield$connection$que96, userBank;\n    return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n      while (1) switch (_context17.prev = _context17.next) {\n        case 0:\n          timerJoin = function _timerJoin2() {\n            var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n            var addHours = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var date = '';\n            if (params) {\n              date = new Date(Number(params));\n            } else {\n              date = new Date();\n            }\n            date.setHours(date.getHours() + addHours);\n            var years = formateT(date.getFullYear());\n            var months = formateT(date.getMonth() + 1);\n            var days = formateT(date.getDate());\n            var hours = date.getHours() % 12;\n            hours = hours === 0 ? 12 : hours;\n            var ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n            var minutes = formateT(date.getMinutes());\n            var seconds = formateT(date.getSeconds());\n            return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;\n          };\n          formateT = function _formateT2(params) {\n            var result = params < 10 ? \"0\" + params : params;\n            return result;\n          };\n          auth = req.cookies.auth;\n          if (auth) {\n            _context17.next = 5;\n            break;\n          }\n          return _context17.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 5:\n          _context17.next = 7;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite`, `money` FROM users WHERE `token` = ? ', [auth]);\n        case 7:\n          _yield$connection$que89 = _context17.sent;\n          _yield$connection$que90 = _slicedToArray(_yield$connection$que89, 1);\n          user = _yield$connection$que90[0];\n          userInfo = user[0];\n          if (user) {\n            _context17.next = 13;\n            break;\n          }\n          return _context17.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 13:\n          ;\n          date = new Date().getTime();\n          checkTime = timerJoin(date);\n          _context17.next = 18;\n          return _connectDB[\"default\"].query('SELECT * FROM recharge WHERE phone = ? AND status = 1', [userInfo.phone]);\n        case 18:\n          _yield$connection$que91 = _context17.sent;\n          _yield$connection$que92 = _slicedToArray(_yield$connection$que91, 1);\n          recharge = _yield$connection$que92[0];\n          _context17.next = 23;\n          return _connectDB[\"default\"].query('SELECT * FROM minutes_1 WHERE phone = ?', [userInfo.phone]);\n        case 23:\n          _yield$connection$que93 = _context17.sent;\n          _yield$connection$que94 = _slicedToArray(_yield$connection$que93, 1);\n          minutes_1 = _yield$connection$que94[0];\n          total = 0;\n          recharge.forEach(function (data) {\n            total += parseFloat(data.money);\n          });\n          total2 = 0;\n          minutes_1.forEach(function (data) {\n            total2 += parseFloat(data.money);\n          });\n          fee = 0;\n          minutes_1.forEach(function (data) {\n            fee += parseFloat(data.fee);\n          });\n          result = Math.max(result, 0);\n          result = 0;\n          if (total - total2 > 0) result = total - total2 - fee;\n          _context17.next = 37;\n          return _connectDB[\"default\"].query('SELECT * FROM user_bank WHERE phone = ? ', [userInfo.phone]);\n        case 37:\n          _yield$connection$que95 = _context17.sent;\n          _yield$connection$que96 = _slicedToArray(_yield$connection$que95, 1);\n          userBank = _yield$connection$que96[0];\n          return _context17.abrupt(\"return\", res.status(200).json({\n            message: 'Received successfully',\n            datas: userBank,\n            userInfo: user,\n            result: result,\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 41:\n        case \"end\":\n          return _context17.stop();\n      }\n    }, _callee17);\n  }));\n  return function infoUserBank(_x32, _x33) {\n    return _ref15.apply(this, arguments);\n  };\n}();\nvar withdrawal3 = /*#__PURE__*/function () {\n  var _ref16 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(req, res) {\n    var auth, money, password, _yield$connection$que97, _yield$connection$que98, user, userInfo, date, id_time, id_order, formateT, timerJoin, dates, checkTime, _yield$connection$que99, _yield$connection$que100, recharge, _yield$connection$que101, _yield$connection$que102, minutes_1, total, total2, result, _yield$connection$que103, _yield$connection$que104, user_bank, _yield$connection$que105, _yield$connection$que106, withdraw, infoBank, sql;\n    return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n      while (1) switch (_context18.prev = _context18.next) {\n        case 0:\n          timerJoin = function _timerJoin3() {\n            var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n            var addHours = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var date = '';\n            if (params) {\n              date = new Date(Number(params));\n            } else {\n              date = new Date();\n            }\n            date.setHours(date.getHours() + addHours);\n            var years = formateT(date.getFullYear());\n            var months = formateT(date.getMonth() + 1);\n            var days = formateT(date.getDate());\n            var hours = date.getHours() % 12;\n            hours = hours === 0 ? 12 : hours;\n            var ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n            var minutes = formateT(date.getMinutes());\n            var seconds = formateT(date.getSeconds());\n            return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;\n          };\n          formateT = function _formateT3(params) {\n            var result = params < 10 ? \"0\" + params : params;\n            return result;\n          };\n          auth = req.cookies.auth;\n          money = req.body.money;\n          password = req.body.password;\n          if (!(!auth || !money || !password || money < 299)) {\n            _context18.next = 7;\n            break;\n          }\n          return _context18.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 7:\n          _context18.next = 9;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite`, `money` FROM users WHERE `token` = ? AND password = ?', [auth, (0, _md[\"default\"])(password)]);\n        case 9:\n          _yield$connection$que97 = _context18.sent;\n          _yield$connection$que98 = _slicedToArray(_yield$connection$que97, 1);\n          user = _yield$connection$que98[0];\n          if (!(user.length == 0)) {\n            _context18.next = 14;\n            break;\n          }\n          return _context18.abrupt(\"return\", res.status(200).json({\n            message: 'incorrect password',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 14:\n          ;\n          userInfo = user[0];\n          date = new Date();\n          id_time = date.getUTCFullYear() + '' + date.getUTCMonth() + 1 + '' + date.getUTCDate();\n          id_order = Math.floor(Math.random() * (99999999999999 - 10000000000000 + 1)) + 10000000000000;\n          dates = new Date().getTime();\n          checkTime = timerJoin(dates);\n          _context18.next = 23;\n          return _connectDB[\"default\"].query('SELECT * FROM recharge WHERE phone = ? AND status = 1', [userInfo.phone]);\n        case 23:\n          _yield$connection$que99 = _context18.sent;\n          _yield$connection$que100 = _slicedToArray(_yield$connection$que99, 1);\n          recharge = _yield$connection$que100[0];\n          _context18.next = 28;\n          return _connectDB[\"default\"].query('SELECT * FROM minutes_1 WHERE phone = ?', [userInfo.phone]);\n        case 28:\n          _yield$connection$que101 = _context18.sent;\n          _yield$connection$que102 = _slicedToArray(_yield$connection$que101, 1);\n          minutes_1 = _yield$connection$que102[0];\n          total = 0;\n          recharge.forEach(function (data) {\n            total += parseFloat(data.money);\n          });\n          total2 = 0;\n          minutes_1.forEach(function (data) {\n            total2 += parseFloat(data.money);\n          });\n          result = 0;\n          if (total - total2 > 0) result = total - total2;\n          result = Math.max(result, 0);\n          _context18.next = 40;\n          return _connectDB[\"default\"].query('SELECT * FROM user_bank WHERE `phone` = ?', [userInfo.phone]);\n        case 40:\n          _yield$connection$que103 = _context18.sent;\n          _yield$connection$que104 = _slicedToArray(_yield$connection$que103, 1);\n          user_bank = _yield$connection$que104[0];\n          _context18.next = 45;\n          return _connectDB[\"default\"].query('SELECT * FROM withdraw WHERE `phone` = ? AND today = ?', [userInfo.phone, checkTime]);\n        case 45:\n          _yield$connection$que105 = _context18.sent;\n          _yield$connection$que106 = _slicedToArray(_yield$connection$que105, 1);\n          withdraw = _yield$connection$que106[0];\n          if (!(user_bank.length != 0)) {\n            _context18.next = 75;\n            break;\n          }\n          if (!(withdraw.length < 3)) {\n            _context18.next = 72;\n            break;\n          }\n          if (!(userInfo.money - money >= 0)) {\n            _context18.next = 69;\n            break;\n          }\n          if (!(result == 0)) {\n            _context18.next = 66;\n            break;\n          }\n          if (!(total - total2 >= 0)) {\n            _context18.next = 57;\n            break;\n          }\n          if (!(result == 0)) {\n            _context18.next = 55;\n            break;\n          }\n          return _context18.abrupt(\"return\", res.status(200).json({\n            message: 'The total bet is not enough to fulfill the request',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 55:\n          _context18.next = 64;\n          break;\n        case 57:\n          infoBank = user_bank[0];\n          sql = \"INSERT INTO withdraw SET \\n                    id_order = ?,\\n                    phone = ?,\\n                    money = ?,\\n                    stk = ?,\\n                    name_bank = ?,\\n                    ifsc = ?,\\n                    name_user = ?,\\n                    status = ?,\\n                    today = ?,\\n                    time = ?\";\n          _context18.next = 61;\n          return _connectDB[\"default\"].execute(sql, [id_time + '' + id_order, userInfo.phone, money, infoBank.stk, infoBank.name_bank, infoBank.email, infoBank.name_user, 0, checkTime, dates]);\n        case 61:\n          _context18.next = 63;\n          return _connectDB[\"default\"].query('UPDATE users SET money = money - ? WHERE phone = ? ', [money, userInfo.phone]);\n        case 63:\n          return _context18.abrupt(\"return\", res.status(200).json({\n            message: 'Withdrawal successful',\n            status: true,\n            money: userInfo.money - money,\n            timeStamp: timeNow\n          }));\n        case 64:\n          _context18.next = 67;\n          break;\n        case 66:\n          return _context18.abrupt(\"return\", res.status(200).json({\n            message: 'The total bet is not enough to fulfill the request',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 67:\n          _context18.next = 70;\n          break;\n        case 69:\n          return _context18.abrupt(\"return\", res.status(200).json({\n            message: 'The balance is not enough to fulfill the request',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 70:\n          _context18.next = 73;\n          break;\n        case 72:\n          return _context18.abrupt(\"return\", res.status(200).json({\n            message: 'You can only make 2 withdrawals per day',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 73:\n          _context18.next = 76;\n          break;\n        case 75:\n          return _context18.abrupt(\"return\", res.status(200).json({\n            message: 'Please link your bank first',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 76:\n        case \"end\":\n          return _context18.stop();\n      }\n    }, _callee18);\n  }));\n  return function withdrawal3(_x34, _x35) {\n    return _ref16.apply(this, arguments);\n  };\n}();\nvar transfer = /*#__PURE__*/function () {\n  var _ref17 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19(req, res) {\n    var auth, amount, receiver_phone, date, id_order, time, client_transaction_id, _yield$connection$que107, _yield$connection$que108, user, userInfo, sender_phone, sender_money, formateT, timerJoin, dates, checkTime, _yield$connection$que109, _yield$connection$que110, recharge, _yield$connection$que111, _yield$connection$que112, minutes_1, total, total2, result, _yield$connection$que113, _yield$connection$que114, receiver, money, total_money, sql, sql_recharge;\n    return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n      while (1) switch (_context19.prev = _context19.next) {\n        case 0:\n          timerJoin = function _timerJoin4() {\n            var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n            var addHours = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var date = '';\n            if (params) {\n              date = new Date(Number(params));\n            } else {\n              date = new Date();\n            }\n            date.setHours(date.getHours() + addHours);\n            var years = formateT(date.getFullYear());\n            var months = formateT(date.getMonth() + 1);\n            var days = formateT(date.getDate());\n            var hours = date.getHours() % 12;\n            hours = hours === 0 ? 12 : hours;\n            var ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n            var minutes = formateT(date.getMinutes());\n            var seconds = formateT(date.getSeconds());\n            return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;\n          };\n          formateT = function _formateT4(params) {\n            var result = params < 10 ? \"0\" + params : params;\n            return result;\n          };\n          auth = req.cookies.auth;\n          amount = req.body.amount;\n          receiver_phone = req.body.phone;\n          date = new Date(); // let id_time = date.getUTCFullYear() + '' + (date.getUTCMonth() + 1) + '' + date.getUTCDate();\n          id_order = Math.floor(Math.random() * (99999999999999 - 10000000000000 + 1)) + 10000000000000;\n          time = new Date().getTime();\n          client_transaction_id = id_order;\n          _context19.next = 11;\n          return _connectDB[\"default\"].query('SELECT `phone`,`money`, `code`,`invite` FROM users WHERE `token` = ? ', [auth]);\n        case 11:\n          _yield$connection$que107 = _context19.sent;\n          _yield$connection$que108 = _slicedToArray(_yield$connection$que107, 1);\n          user = _yield$connection$que108[0];\n          userInfo = user[0];\n          sender_phone = userInfo.phone;\n          sender_money = parseInt(userInfo.money);\n          if (user) {\n            _context19.next = 19;\n            break;\n          }\n          return _context19.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 19:\n          ;\n          dates = new Date().getTime();\n          checkTime = timerJoin(dates);\n          _context19.next = 24;\n          return _connectDB[\"default\"].query('SELECT * FROM recharge WHERE phone = ? AND status = 1 ', [userInfo.phone]);\n        case 24:\n          _yield$connection$que109 = _context19.sent;\n          _yield$connection$que110 = _slicedToArray(_yield$connection$que109, 1);\n          recharge = _yield$connection$que110[0];\n          _context19.next = 29;\n          return _connectDB[\"default\"].query('SELECT * FROM minutes_1 WHERE phone = ? ', [userInfo.phone]);\n        case 29:\n          _yield$connection$que111 = _context19.sent;\n          _yield$connection$que112 = _slicedToArray(_yield$connection$que111, 1);\n          minutes_1 = _yield$connection$que112[0];\n          total = 0;\n          recharge.forEach(function (data) {\n            total += data.money;\n          });\n          total2 = 0;\n          minutes_1.forEach(function (data) {\n            total2 += data.money;\n          });\n          result = 0;\n          if (total - total2 > 0) result = total - total2;\n\n          // console.log('date:', result);\n          if (!(result == 0)) {\n            _context19.next = 63;\n            break;\n          }\n          if (!(sender_money >= amount)) {\n            _context19.next = 60;\n            break;\n          }\n          _context19.next = 42;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE `phone` = ?', [receiver_phone]);\n        case 42:\n          _yield$connection$que113 = _context19.sent;\n          _yield$connection$que114 = _slicedToArray(_yield$connection$que113, 1);\n          receiver = _yield$connection$que114[0];\n          if (!(receiver.length === 1 && sender_phone !== receiver_phone)) {\n            _context19.next = 57;\n            break;\n          }\n          money = sender_money - amount;\n          total_money = amount + receiver[0].total_money; // await connection.query('UPDATE users SET money = ? WHERE phone = ?', [money, sender_phone]);\n          // await connection.query(`UPDATE users SET money = money + ? WHERE phone = ?`, [amount, receiver_phone]);\n          sql = \"INSERT INTO balance_transfer (sender_phone, receiver_phone, amount) VALUES (?, ?, ?)\";\n          _context19.next = 51;\n          return _connectDB[\"default\"].execute(sql, [sender_phone, receiver_phone, amount]);\n        case 51:\n          sql_recharge = \"INSERT INTO recharge (id_order, transaction_id, phone, money, type, status, today, url, time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)\";\n          _context19.next = 54;\n          return _connectDB[\"default\"].execute(sql_recharge, [client_transaction_id, 0, receiver_phone, amount, 'wallet', 0, checkTime, 0, time]);\n        case 54:\n          return _context19.abrupt(\"return\", res.status(200).json({\n            message: \"Requested \".concat(amount, \" sent successfully\"),\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 57:\n          return _context19.abrupt(\"return\", res.status(200).json({\n            message: \"\".concat(receiver_phone, \" is not a valid user mobile number\"),\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 58:\n          _context19.next = 61;\n          break;\n        case 60:\n          return _context19.abrupt(\"return\", res.status(200).json({\n            message: 'Your balance is not enough',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 61:\n          _context19.next = 64;\n          break;\n        case 63:\n          return _context19.abrupt(\"return\", res.status(200).json({\n            message: 'The total bet is not enough to fulfill the request',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 64:\n        case \"end\":\n          return _context19.stop();\n      }\n    }, _callee19);\n  }));\n  return function transfer(_x36, _x37) {\n    return _ref17.apply(this, arguments);\n  };\n}();\n\n// get transfer balance data \nvar transferHistory = /*#__PURE__*/function () {\n  var _ref18 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee20(req, res) {\n    var auth, _yield$connection$que115, _yield$connection$que116, user, userInfo, _yield$connection$que117, _yield$connection$que118, history, _yield$connection$que119, _yield$connection$que120, receive;\n    return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n      while (1) switch (_context20.prev = _context20.next) {\n        case 0:\n          auth = req.cookies.auth;\n          _context20.next = 3;\n          return _connectDB[\"default\"].query('SELECT `phone`,`money`, `code`,`invite` FROM users WHERE `token` = ? ', [auth]);\n        case 3:\n          _yield$connection$que115 = _context20.sent;\n          _yield$connection$que116 = _slicedToArray(_yield$connection$que115, 1);\n          user = _yield$connection$que116[0];\n          userInfo = user[0];\n          if (user) {\n            _context20.next = 9;\n            break;\n          }\n          return _context20.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 9:\n          ;\n          _context20.next = 12;\n          return _connectDB[\"default\"].query('SELECT * FROM balance_transfer WHERE sender_phone = ?', [userInfo.phone]);\n        case 12:\n          _yield$connection$que117 = _context20.sent;\n          _yield$connection$que118 = _slicedToArray(_yield$connection$que117, 1);\n          history = _yield$connection$que118[0];\n          _context20.next = 17;\n          return _connectDB[\"default\"].query('SELECT * FROM balance_transfer WHERE receiver_phone = ?', [userInfo.phone]);\n        case 17:\n          _yield$connection$que119 = _context20.sent;\n          _yield$connection$que120 = _slicedToArray(_yield$connection$que119, 1);\n          receive = _yield$connection$que120[0];\n          if (!(receive.length > 0 || history.length > 0)) {\n            _context20.next = 22;\n            break;\n          }\n          return _context20.abrupt(\"return\", res.status(200).json({\n            message: 'Success',\n            receive: receive,\n            datas: history,\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 22:\n        case \"end\":\n          return _context20.stop();\n      }\n    }, _callee20);\n  }));\n  return function transferHistory(_x38, _x39) {\n    return _ref18.apply(this, arguments);\n  };\n}();\nvar recharge2 = /*#__PURE__*/function () {\n  var _ref19 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee21(req, res) {\n    var auth, money, _yield$connection$que121, _yield$connection$que122, user, userInfo, _yield$connection$que123, _yield$connection$que124, recharge, _yield$connection$que125, _yield$connection$que126, bank_recharge;\n    return _regeneratorRuntime().wrap(function _callee21$(_context21) {\n      while (1) switch (_context21.prev = _context21.next) {\n        case 0:\n          auth = req.cookies.auth;\n          money = req.body.money;\n          if (auth) {\n            _context21.next = 4;\n            break;\n          }\n          return _context21.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 4:\n          _context21.next = 6;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? ', [auth]);\n        case 6:\n          _yield$connection$que121 = _context21.sent;\n          _yield$connection$que122 = _slicedToArray(_yield$connection$que121, 1);\n          user = _yield$connection$que122[0];\n          userInfo = user[0];\n          if (user) {\n            _context21.next = 12;\n            break;\n          }\n          return _context21.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 12:\n          ;\n          _context21.next = 15;\n          return _connectDB[\"default\"].query('SELECT * FROM recharge WHERE phone = ? AND status = ? ', [userInfo.phone, 0]);\n        case 15:\n          _yield$connection$que123 = _context21.sent;\n          _yield$connection$que124 = _slicedToArray(_yield$connection$que123, 1);\n          recharge = _yield$connection$que124[0];\n          _context21.next = 20;\n          return _connectDB[\"default\"].query('SELECT * FROM bank_recharge');\n        case 20:\n          _yield$connection$que125 = _context21.sent;\n          _yield$connection$que126 = _slicedToArray(_yield$connection$que125, 1);\n          bank_recharge = _yield$connection$que126[0];\n          if (!(recharge.length != 0)) {\n            _context21.next = 27;\n            break;\n          }\n          return _context21.abrupt(\"return\", res.status(200).json({\n            message: 'Received successfully',\n            datas: recharge[0],\n            infoBank: bank_recharge,\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 27:\n          return _context21.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 28:\n        case \"end\":\n          return _context21.stop();\n      }\n    }, _callee21);\n  }));\n  return function recharge2(_x40, _x41) {\n    return _ref19.apply(this, arguments);\n  };\n}();\nvar listRecharge = /*#__PURE__*/function () {\n  var _ref20 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee22(req, res) {\n    var auth, _yield$connection$que127, _yield$connection$que128, user, userInfo, _yield$connection$que129, _yield$connection$que130, recharge;\n    return _regeneratorRuntime().wrap(function _callee22$(_context22) {\n      while (1) switch (_context22.prev = _context22.next) {\n        case 0:\n          auth = req.cookies.auth;\n          if (auth) {\n            _context22.next = 3;\n            break;\n          }\n          return _context22.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 3:\n          _context22.next = 5;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? ', [auth]);\n        case 5:\n          _yield$connection$que127 = _context22.sent;\n          _yield$connection$que128 = _slicedToArray(_yield$connection$que127, 1);\n          user = _yield$connection$que128[0];\n          userInfo = user[0];\n          if (user) {\n            _context22.next = 11;\n            break;\n          }\n          return _context22.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 11:\n          ;\n          _context22.next = 14;\n          return _connectDB[\"default\"].query('SELECT * FROM recharge WHERE phone = ? ORDER BY id DESC ', [userInfo.phone]);\n        case 14:\n          _yield$connection$que129 = _context22.sent;\n          _yield$connection$que130 = _slicedToArray(_yield$connection$que129, 1);\n          recharge = _yield$connection$que130[0];\n          return _context22.abrupt(\"return\", res.status(200).json({\n            message: 'Receive success',\n            datas: recharge,\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 18:\n        case \"end\":\n          return _context22.stop();\n      }\n    }, _callee22);\n  }));\n  return function listRecharge(_x42, _x43) {\n    return _ref20.apply(this, arguments);\n  };\n}();\nvar search = /*#__PURE__*/function () {\n  var _ref21 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee23(req, res) {\n    var auth, phone, _yield$connection$que131, _yield$connection$que132, user, userInfo, _yield$connection$que133, _yield$connection$que134, users, _yield$connection$que135, _yield$connection$que136, _users;\n    return _regeneratorRuntime().wrap(function _callee23$(_context23) {\n      while (1) switch (_context23.prev = _context23.next) {\n        case 0:\n          auth = req.cookies.auth;\n          phone = req.body.phone;\n          if (auth) {\n            _context23.next = 4;\n            break;\n          }\n          return _context23.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 4:\n          _context23.next = 6;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite`, `level` FROM users WHERE `token` = ? ', [auth]);\n        case 6:\n          _yield$connection$que131 = _context23.sent;\n          _yield$connection$que132 = _slicedToArray(_yield$connection$que131, 1);\n          user = _yield$connection$que132[0];\n          if (!(user.length == 0)) {\n            _context23.next = 11;\n            break;\n          }\n          return _context23.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 11:\n          ;\n          userInfo = user[0];\n          if (!(userInfo.level == 1)) {\n            _context23.next = 22;\n            break;\n          }\n          _context23.next = 16;\n          return _connectDB[\"default\"].query(\"SELECT * FROM users WHERE phone = ? ORDER BY id DESC \", [phone]);\n        case 16:\n          _yield$connection$que133 = _context23.sent;\n          _yield$connection$que134 = _slicedToArray(_yield$connection$que133, 1);\n          users = _yield$connection$que134[0];\n          return _context23.abrupt(\"return\", res.status(200).json({\n            message: 'Receive success',\n            datas: users,\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 22:\n          if (!(userInfo.level == 2)) {\n            _context23.next = 39;\n            break;\n          }\n          _context23.next = 25;\n          return _connectDB[\"default\"].query(\"SELECT * FROM users WHERE phone = ? ORDER BY id DESC \", [phone]);\n        case 25:\n          _yield$connection$que135 = _context23.sent;\n          _yield$connection$que136 = _slicedToArray(_yield$connection$que135, 1);\n          _users = _yield$connection$que136[0];\n          if (!(_users.length == 0)) {\n            _context23.next = 32;\n            break;\n          }\n          return _context23.abrupt(\"return\", res.status(200).json({\n            message: 'Receive success',\n            datas: [],\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 32:\n          if (!(_users[0].ctv == userInfo.phone)) {\n            _context23.next = 36;\n            break;\n          }\n          return _context23.abrupt(\"return\", res.status(200).json({\n            message: 'Receive success',\n            datas: _users,\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 36:\n          return _context23.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 37:\n          _context23.next = 40;\n          break;\n        case 39:\n          return _context23.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 40:\n        case \"end\":\n          return _context23.stop();\n      }\n    }, _callee23);\n  }));\n  return function search(_x44, _x45) {\n    return _ref21.apply(this, arguments);\n  };\n}();\nvar listWithdraw = /*#__PURE__*/function () {\n  var _ref22 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee24(req, res) {\n    var auth, _yield$connection$que137, _yield$connection$que138, user, userInfo, _yield$connection$que139, _yield$connection$que140, recharge;\n    return _regeneratorRuntime().wrap(function _callee24$(_context24) {\n      while (1) switch (_context24.prev = _context24.next) {\n        case 0:\n          auth = req.cookies.auth;\n          if (auth) {\n            _context24.next = 3;\n            break;\n          }\n          return _context24.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 3:\n          _context24.next = 5;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? ', [auth]);\n        case 5:\n          _yield$connection$que137 = _context24.sent;\n          _yield$connection$que138 = _slicedToArray(_yield$connection$que137, 1);\n          user = _yield$connection$que138[0];\n          userInfo = user[0];\n          if (user) {\n            _context24.next = 11;\n            break;\n          }\n          return _context24.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 11:\n          ;\n          _context24.next = 14;\n          return _connectDB[\"default\"].query('SELECT * FROM withdraw WHERE phone = ? ORDER BY id DESC ', [userInfo.phone]);\n        case 14:\n          _yield$connection$que139 = _context24.sent;\n          _yield$connection$que140 = _slicedToArray(_yield$connection$que139, 1);\n          recharge = _yield$connection$que140[0];\n          return _context24.abrupt(\"return\", res.status(200).json({\n            message: 'Receive success',\n            datas: recharge,\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 18:\n        case \"end\":\n          return _context24.stop();\n      }\n    }, _callee24);\n  }));\n  return function listWithdraw(_x46, _x47) {\n    return _ref22.apply(this, arguments);\n  };\n}();\nvar useRedenvelope = /*#__PURE__*/function () {\n  var _ref23 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee25(req, res) {\n    var auth, code, _yield$connection$que141, _yield$connection$que142, user, userInfo, _yield$connection$que143, _yield$connection$que144, redenvelopes, infoRe, d, time, sql;\n    return _regeneratorRuntime().wrap(function _callee25$(_context25) {\n      while (1) switch (_context25.prev = _context25.next) {\n        case 0:\n          auth = req.cookies.auth;\n          code = req.body.code;\n          if (!(!auth || !code)) {\n            _context25.next = 4;\n            break;\n          }\n          return _context25.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 4:\n          _context25.next = 6;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? ', [auth]);\n        case 6:\n          _yield$connection$que141 = _context25.sent;\n          _yield$connection$que142 = _slicedToArray(_yield$connection$que141, 1);\n          user = _yield$connection$que142[0];\n          userInfo = user[0];\n          if (user) {\n            _context25.next = 12;\n            break;\n          }\n          return _context25.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 12:\n          ;\n          _context25.next = 15;\n          return _connectDB[\"default\"].query('SELECT * FROM redenvelopes WHERE id_redenvelope = ?', [code]);\n        case 15:\n          _yield$connection$que143 = _context25.sent;\n          _yield$connection$que144 = _slicedToArray(_yield$connection$que143, 1);\n          redenvelopes = _yield$connection$que144[0];\n          if (!(redenvelopes.length == 0)) {\n            _context25.next = 22;\n            break;\n          }\n          return _context25.abrupt(\"return\", res.status(200).json({\n            message: 'Redemption code error',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 22:\n          infoRe = redenvelopes[0];\n          d = new Date();\n          time = d.getTime();\n          if (!(infoRe.status == 0)) {\n            _context25.next = 36;\n            break;\n          }\n          _context25.next = 28;\n          return _connectDB[\"default\"].query('UPDATE redenvelopes SET used = ?, status = ? WHERE `id_redenvelope` = ? ', [0, 1, infoRe.id_redenvelope]);\n        case 28:\n          _context25.next = 30;\n          return _connectDB[\"default\"].query('UPDATE users SET money = money + ? WHERE `phone` = ? ', [infoRe.money, userInfo.phone]);\n        case 30:\n          sql = 'INSERT INTO redenvelopes_used SET phone = ?, phone_used = ?, id_redenvelops = ?, money = ?, `time` = ? ';\n          _context25.next = 33;\n          return _connectDB[\"default\"].query(sql, [infoRe.phone, userInfo.phone, infoRe.id_redenvelope, infoRe.money, time]);\n        case 33:\n          return _context25.abrupt(\"return\", res.status(200).json({\n            message: \"Received successfully +\".concat(infoRe.money),\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 36:\n          return _context25.abrupt(\"return\", res.status(200).json({\n            message: 'Gift code already used',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 37:\n        case \"end\":\n          return _context25.stop();\n      }\n    }, _callee25);\n  }));\n  return function useRedenvelope(_x48, _x49) {\n    return _ref23.apply(this, arguments);\n  };\n}();\nvar callback_bank = /*#__PURE__*/function () {\n  var _ref24 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee26(req, res) {\n    var transaction_id, client_transaction_id, amount, requested_datetime, expired_datetime, payment_datetime, status, _yield$connection$que145, _yield$connection$que146, info;\n    return _regeneratorRuntime().wrap(function _callee26$(_context26) {\n      while (1) switch (_context26.prev = _context26.next) {\n        case 0:\n          transaction_id = req.body.transaction_id;\n          client_transaction_id = req.body.client_transaction_id;\n          amount = req.body.amount;\n          requested_datetime = req.body.requested_datetime;\n          expired_datetime = req.body.expired_datetime;\n          payment_datetime = req.body.payment_datetime;\n          status = req.body.status;\n          if (transaction_id) {\n            _context26.next = 9;\n            break;\n          }\n          return _context26.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 9:\n          if (!(status == 2)) {\n            _context26.next = 22;\n            break;\n          }\n          _context26.next = 12;\n          return _connectDB[\"default\"].query(\"UPDATE recharge SET status = 1 WHERE id_order = ?\", [client_transaction_id]);\n        case 12:\n          _context26.next = 14;\n          return _connectDB[\"default\"].query(\"SELECT * FROM recharge WHERE id_order = ?\", [client_transaction_id]);\n        case 14:\n          _yield$connection$que145 = _context26.sent;\n          _yield$connection$que146 = _slicedToArray(_yield$connection$que145, 1);\n          info = _yield$connection$que146[0];\n          _context26.next = 19;\n          return _connectDB[\"default\"].query('UPDATE users SET money = money + ?, total_money = total_money + ? WHERE phone = ? ', [info[0].money, info[0].money, info[0].phone]);\n        case 19:\n          return _context26.abrupt(\"return\", res.status(200).json({\n            message: 0,\n            status: true\n          }));\n        case 22:\n          _context26.next = 24;\n          return _connectDB[\"default\"].query(\"UPDATE recharge SET status = 2 WHERE id = ?\", [id]);\n        case 24:\n          return _context26.abrupt(\"return\", res.status(200).json({\n            message: 'Cancellation successful',\n            status: true,\n            datas: recharge\n          }));\n        case 25:\n        case \"end\":\n          return _context26.stop();\n      }\n    }, _callee26);\n  }));\n  return function callback_bank(_x50, _x51) {\n    return _ref24.apply(this, arguments);\n  };\n}();\nvar confirmRecharge = /*#__PURE__*/function () {\n  var _ref25 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee27(req, res) {\n    var _req$body;\n    var auth, client_txn_id, _yield$connection$que147, _yield$connection$que148, user, userInfo, _yield$connection$que149, _yield$connection$que150, recharge, rechargeData, date, dd, mm, yyyy, formattedDate, apiData, apiResponse, apiRecord, money;\n    return _regeneratorRuntime().wrap(function _callee27$(_context27) {\n      while (1) switch (_context27.prev = _context27.next) {\n        case 0:\n          auth = req.cookies.auth; //let money = req.body.money;\n          //let paymentUrl = req.body.payment_url;\n          client_txn_id = (_req$body = req.body) === null || _req$body === void 0 ? void 0 : _req$body.client_txn_id;\n          if (client_txn_id) {\n            _context27.next = 4;\n            break;\n          }\n          return _context27.abrupt(\"return\", res.status(200).json({\n            message: 'client_txn_id is required',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 4:\n          if (auth) {\n            _context27.next = 6;\n            break;\n          }\n          return _context27.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 6:\n          _context27.next = 8;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? ', [auth]);\n        case 8:\n          _yield$connection$que147 = _context27.sent;\n          _yield$connection$que148 = _slicedToArray(_yield$connection$que147, 1);\n          user = _yield$connection$que148[0];\n          userInfo = user[0];\n          if (user) {\n            _context27.next = 14;\n            break;\n          }\n          return _context27.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 14:\n          ;\n          _context27.next = 17;\n          return _connectDB[\"default\"].query('SELECT * FROM recharge WHERE phone = ? AND status = ? ', [userInfo.phone, 0]);\n        case 17:\n          _yield$connection$que149 = _context27.sent;\n          _yield$connection$que150 = _slicedToArray(_yield$connection$que149, 1);\n          recharge = _yield$connection$que150[0];\n          if (!(recharge.length != 0)) {\n            _context27.next = 61;\n            break;\n          }\n          rechargeData = recharge[0];\n          date = new Date(rechargeData.today);\n          dd = String(date.getDate()).padStart(2, '0');\n          mm = String(date.getMonth() + 1).padStart(2, '0');\n          yyyy = date.getFullYear();\n          formattedDate = \"\".concat(dd, \"-\").concat(mm, \"-\").concat(yyyy);\n          apiData = {\n            key: \"0c79da69-fdc1-4a07-a8b4-7135a0168385\",\n            client_txn_id: client_txn_id,\n            txn_date: formattedDate\n          };\n          _context27.prev = 28;\n          _context27.next = 31;\n          return axios.post('https://api.ekqr.in/api/check_order_status', apiData);\n        case 31:\n          apiResponse = _context27.sent;\n          console.log(apiResponse.data);\n          apiRecord = apiResponse.data.data;\n          if (!(apiRecord.status === \"scanning\")) {\n            _context27.next = 36;\n            break;\n          }\n          return _context27.abrupt(\"return\", res.status(200).json({\n            message: 'Waiting for confirmation',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 36:\n          if (!(apiRecord.client_txn_id === rechargeData.id_order && apiRecord.customer_mobile === rechargeData.phone && apiRecord.amount === rechargeData.money)) {\n            _context27.next = 53;\n            break;\n          }\n          if (!(apiRecord.status === 'success')) {\n            _context27.next = 46;\n            break;\n          }\n          _context27.next = 40;\n          return _connectDB[\"default\"].query(\"UPDATE recharge SET status = 1 WHERE id = ? AND id_order = ? AND phone = ? AND money = ?\", [rechargeData.id, apiRecord.client_txn_id, apiRecord.customer_mobile, apiRecord.amount]);\n        case 40:\n          // const [code] = await connection.query(`SELECT invite, total_money from users WHERE phone = ?`, [apiRecord.customer_mobile]);\n          // const [data] = await connection.query('SELECT recharge_bonus_2, recharge_bonus FROM admin WHERE id = 1');\n          // let selfBonus = info[0].money * (data[0].recharge_bonus_2 / 100);\n          // let money = info[0].money + selfBonus;\n          money = apiRecord.amount;\n          _context27.next = 43;\n          return _connectDB[\"default\"].query('UPDATE users SET money = money + ?, total_money = total_money + ? WHERE phone = ? ', [money, money, apiRecord.customer_mobile]);\n        case 43:\n          return _context27.abrupt(\"return\", res.status(200).json({\n            message: 'Successful application confirmation',\n            status: true,\n            datas: recharge\n          }));\n        case 46:\n          if (!(apiRecord.status === 'failure' || apiRecord.status === 'close')) {\n            _context27.next = 51;\n            break;\n          }\n          console.log(apiRecord.status);\n          _context27.next = 50;\n          return _connectDB[\"default\"].query(\"UPDATE recharge SET status = 2 WHERE id = ? AND id_order = ? AND phone = ? AND money = ?\", [rechargeData.id, apiRecord.client_txn_id, apiRecord.customer_mobile, apiRecord.amount]);\n        case 50:\n          return _context27.abrupt(\"return\", res.status(200).json({\n            message: 'Payment failure',\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 51:\n          _context27.next = 54;\n          break;\n        case 53:\n          return _context27.abrupt(\"return\", res.status(200).json({\n            message: 'Mismtach data',\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 54:\n          _context27.next = 59;\n          break;\n        case 56:\n          _context27.prev = 56;\n          _context27.t0 = _context27[\"catch\"](28);\n          console.error(_context27.t0);\n        case 59:\n          _context27.next = 62;\n          break;\n        case 61:\n          return _context27.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 62:\n        case \"end\":\n          return _context27.stop();\n      }\n    }, _callee27, null, [[28, 56]]);\n  }));\n  return function confirmRecharge(_x52, _x53) {\n    return _ref25.apply(this, arguments);\n  };\n}();\nvar confirmUSDTRecharge = /*#__PURE__*/function () {\n  var _ref26 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee28(req, res) {\n    return _regeneratorRuntime().wrap(function _callee28$(_context28) {\n      while (1) switch (_context28.prev = _context28.next) {\n        case 0:\n          console.log(res === null || res === void 0 ? void 0 : res.body);\n          console.log(res === null || res === void 0 ? void 0 : res.query);\n          console.log(res === null || res === void 0 ? void 0 : res.cookies);\n          // let auth = req.cookies.auth;\n          // //let money = req.body.money;\n          // //let paymentUrl = req.body.payment_url;\n          // let client_txn_id = req.body?.client_txn_id;\n\n          // if (!client_txn_id) {\n          //     return res.status(200).json({\n          //         message: 'client_txn_id is required',\n          //         status: false,\n          //         timeStamp: timeNow,\n          //     })\n          // }\n\n          // if (!auth) {\n          //     return res.status(200).json({\n          //         message: 'Failed',\n          //         status: false,\n          //         timeStamp: timeNow,\n          //     })\n          // }\n\n          // const [user] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? ', [auth]);\n          // let userInfo = user[0];\n\n          // if (!user) {\n          //     return res.status(200).json({\n          //         message: 'Failed',\n          //         status: false,\n          //         timeStamp: timeNow,\n          //     });\n          // };\n\n          // const [recharge] = await connection.query('SELECT * FROM recharge WHERE phone = ? AND status = ? ', [userInfo.phone, 0]);\n\n          // if (recharge.length != 0) {\n          //     const rechargeData = recharge[0];\n          //     const date = new Date(rechargeData.today);\n          //     const dd = String(date.getDate()).padStart(2, '0');\n          //     const mm = String(date.getMonth() + 1).padStart(2, '0');\n          //     const yyyy = date.getFullYear();\n          //     const formattedDate = `${dd}-${mm}-${yyyy}`;\n          //     const apiData = {\n          //         key: process.env.PAYMENT_KEY,\n          //         client_txn_id: client_txn_id,\n          //         txn_date: formattedDate,\n          //     };\n          //     try {\n          //         const apiResponse = await axios.post('https://api.ekqr.in/api/check_order_status', apiData);\n          //         const apiRecord = apiResponse.data.data;\n          //         if (apiRecord.status === \"scanning\") {\n          //             return res.status(200).json({\n          //                 message: 'Waiting for confirmation',\n          //                 status: false,\n          //                 timeStamp: timeNow,\n          //             });\n          //         }\n          //         if (apiRecord.client_txn_id === rechargeData.id_order && apiRecord.customer_mobile === rechargeData.phone && apiRecord.amount === rechargeData.money) {\n          //             if (apiRecord.status === 'success') {\n          //                 await connection.query(`UPDATE recharge SET status = 1 WHERE id = ? AND id_order = ? AND phone = ? AND money = ?`, [rechargeData.id, apiRecord.client_txn_id, apiRecord.customer_mobile, apiRecord.amount]);\n          //                 // const [code] = await connection.query(`SELECT invite, total_money from users WHERE phone = ?`, [apiRecord.customer_mobile]);\n          //                 // const [data] = await connection.query('SELECT recharge_bonus_2, recharge_bonus FROM admin WHERE id = 1');\n          //                 // let selfBonus = info[0].money * (data[0].recharge_bonus_2 / 100);\n          //                 // let money = info[0].money + selfBonus;\n          //                 let money = apiRecord.amount;\n          //                 await connection.query('UPDATE users SET money = money + ?, total_money = total_money + ? WHERE phone = ? ', [money, money, apiRecord.customer_mobile]);\n          //                 // let rechargeBonus;\n          //                 // if (code[0].total_money <= 0) {\n          //                 //     rechargeBonus = apiRecord.customer_mobile * (data[0].recharge_bonus / 100);\n          //                 // }\n          //                 // else {\n          //                 //     rechargeBonus = apiRecord.customer_mobile * (data[0].recharge_bonus_2 / 100);\n          //                 // }\n          //                 // const percent = rechargeBonus;\n          //                 // await connection.query('UPDATE users SET money = money + ?, total_money = total_money + ? WHERE code = ?', [money, money, code[0].invite]);\n\n          //                 return res.status(200).json({\n          //                     message: 'Successful application confirmation',\n          //                     status: true,\n          //                     datas: recharge,\n          //                 });\n          //             } else if (apiRecord.status === 'failure' || apiRecord.status === 'close') {\n          //                 console.log(apiRecord.status)\n          //                 await connection.query(`UPDATE recharge SET status = 2 WHERE id = ? AND id_order = ? AND phone = ? AND money = ?`, [rechargeData.id, apiRecord.client_txn_id, apiRecord.customer_mobile, apiRecord.amount]);\n          //                 return res.status(200).json({\n          //                     message: 'Payment failure',\n          //                     status: true,\n          //                     timeStamp: timeNow,\n          //                 });\n          //             }\n          //         } else {\n          //             return res.status(200).json({\n          //                 message: 'Mismtach data',\n          //                 status: true,\n          //                 timeStamp: timeNow,\n          //             });\n          //         }\n          //     } catch (error) {\n          //         console.error(error);\n          //     }\n          // } else {\n          //     return res.status(200).json({\n          //         message: 'Failed',\n          //         status: false,\n          //         timeStamp: timeNow,\n          //     });\n          // }\n        case 3:\n        case \"end\":\n          return _context28.stop();\n      }\n    }, _callee28);\n  }));\n  return function confirmUSDTRecharge(_x54, _x55) {\n    return _ref26.apply(this, arguments);\n  };\n}();\nvar updateRecharge = /*#__PURE__*/function () {\n  var _ref27 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee29(req, res) {\n    var auth, money, order_id, data, _yield$connection$que151, _yield$connection$que152, user, userInfo, _yield$connection$que153, _yield$connection$que154, utr, utrInfo;\n    return _regeneratorRuntime().wrap(function _callee29$(_context29) {\n      while (1) switch (_context29.prev = _context29.next) {\n        case 0:\n          auth = req.cookies.auth;\n          money = req.body.money;\n          order_id = req.body.id_order;\n          data = req.body.inputData; // if (type != 'upi') {\n          //     if (!auth || !money || money < 300) {\n          //         return res.status(200).json({\n          //             message: 'upi failed',\n          //             status: false,\n          //             timeStamp: timeNow,\n          //         })\n          //     }\n          // }\n          _context29.next = 6;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? ', [auth]);\n        case 6:\n          _yield$connection$que151 = _context29.sent;\n          _yield$connection$que152 = _slicedToArray(_yield$connection$que151, 1);\n          user = _yield$connection$que152[0];\n          userInfo = user[0];\n          if (user) {\n            _context29.next = 12;\n            break;\n          }\n          return _context29.abrupt(\"return\", res.status(200).json({\n            message: 'user not found',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 12:\n          ;\n          _context29.next = 15;\n          return _connectDB[\"default\"].query('SELECT * FROM recharge WHERE `utr` = ? ', [data]);\n        case 15:\n          _yield$connection$que153 = _context29.sent;\n          _yield$connection$que154 = _slicedToArray(_yield$connection$que153, 1);\n          utr = _yield$connection$que154[0];\n          utrInfo = utr[0];\n          if (utrInfo) {\n            _context29.next = 25;\n            break;\n          }\n          _context29.next = 22;\n          return _connectDB[\"default\"].query('UPDATE recharge SET utr = ? WHERE phone = ? AND id_order = ?', [data, userInfo.phone, order_id]);\n        case 22:\n          return _context29.abrupt(\"return\", res.status(200).json({\n            message: 'UTR updated',\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 25:\n          return _context29.abrupt(\"return\", res.status(200).json({\n            message: 'UTR is already in use',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 26:\n        case \"end\":\n          return _context29.stop();\n      }\n    }, _callee29);\n  }));\n  return function updateRecharge(_x56, _x57) {\n    return _ref27.apply(this, arguments);\n  };\n}();\nmodule.exports = {\n  userInfo: userInfo,\n  changeUser: changeUser,\n  promotion: promotion,\n  myTeam: myTeam,\n  wowpay: wowpay,\n  recharge: recharge,\n  recharge2: recharge2,\n  listRecharge: listRecharge,\n  listWithdraw: listWithdraw,\n  changePassword: changePassword,\n  checkInHandling: checkInHandling,\n  infoUserBank: infoUserBank,\n  addBank: addBank,\n  withdrawal3: withdrawal3,\n  transfer: transfer,\n  transferHistory: transferHistory,\n  callback_bank: callback_bank,\n  listMyTeam: listMyTeam,\n  verifyCode: verifyCode,\n  aviator: aviator,\n  useRedenvelope: useRedenvelope,\n  search: search,\n  updateRecharge: updateRecharge,\n  confirmRecharge: confirmRecharge,\n  cancelRecharge: cancelRecharge,\n  confirmUSDTRecharge: confirmUSDTRecharge\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_connectDB","_interopRequireDefault","require","_jsonwebtoken","_md","_request","_excluded","obj","__esModule","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","key","value","_toPropertyKey","configurable","writable","i","_toPrimitive","_typeof","String","Symbol","toPrimitive","call","TypeError","Number","_createForOfIteratorHelper","allowArrayLike","it","iterator","Array","isArray","_unsupportedIterableToArray","F","s","n","done","_e","f","normalCompletion","didErr","err","step","next","_e2","_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","sourceKeys","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","minLen","_arrayLikeToArray","toString","slice","constructor","name","from","test","len","arr2","l","u","a","_regeneratorRuntime","hasOwnProperty","c","asyncIterator","toStringTag","define","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","async","Promise","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","info","error","_asyncToGenerator","fn","self","args","undefined","axios","timeNow","Date","now","randomNumber","min","max","Math","floor","random","verifyCode","_ref","_callee2","req","res","auth","timeEnd","otp","user","_callee2$","_context2","cookies","getTime","connection","query","conswit","rows","status","json","message","timeStamp","time_otp","request","concat","phone","_ref2","_callee","response","body","data","_callee$","_context","JSON","parse","code","execute","_x3","_x4","_x5","_x","_x2","aviator","_ref3","_callee3","_callee3$","_context3","redirect","_x6","_x7","userInfo","_ref4","_callee4","_yield$connection$que","_yield$connection$que2","_yield$connection$que3","_yield$connection$que4","recharge","totalRecharge","_yield$connection$que5","_yield$connection$que6","withdraw","totalWithdraw","_rows$","id","password","ip","veri","ip_address","time","token","others","_callee4$","_context4","money","id_user","name_user","phone_user","money_user","_x8","_x9","changeUser","_ref5","_callee5","_yield$connection$que7","_yield$connection$que8","_callee5$","_context5","t0","_x10","_x11","changePassword","_ref6","_callee6","newPassWord","_yield$connection$que9","_yield$connection$que10","_callee6$","_context6","md5","_x12","_x13","checkInHandling","_ref7","_callee7","_yield$connection$que11","_yield$connection$que12","_yield$connection$que13","_yield$connection$que14","point_list","_yield$connection$que15","_yield$connection$que16","point_lists","check","_point_list","get","_yield$connection$que17","_yield$connection$que18","_point_lists","_check","_point_list2","_get","_yield$connection$que19","_yield$connection$que20","_point_lists2","_check2","_point_list3","_get2","_yield$connection$que21","_yield$connection$que22","_point_lists3","_check3","_point_list4","_get3","_yield$connection$que23","_yield$connection$que24","_point_lists4","_check4","_point_list5","_get4","_yield$connection$que25","_yield$connection$que26","_point_lists5","_check5","_point_list6","_get5","_yield$connection$que27","_yield$connection$que28","_point_lists6","_check6","_point_list7","_get6","_callee7$","_context7","datas","total1","total2","total3","total4","total5","total6","total7","_x14","_x15","formateT","params","result","timerJoin","addHours","date","setHours","getHours","years","getFullYear","months","getMonth","days","getDate","hours","ampm","minutes","getMinutes","seconds","getSeconds","promotion","_ref8","_callee9","_yield$connection$que29","_yield$connection$que30","_yield$connection$que31","_yield$connection$que32","level","_yield$connection$que33","_yield$connection$que34","f1s","f1_today","f1_time","f_all_today","_i","f1_code","_f1_time","check_f1","_yield$connection$que35","_yield$connection$que36","f2s","_i2","f2_code","f2_time","check_f2","_yield$connection$que37","_yield$connection$que38","f3s","_i3","f3_code","f3_time","check_f3","_yield$connection$que39","_yield$connection$que40","f4s","_i4","f4_code","f4_time","check_f4","f2","_i5","_f1_code","_yield$connection$que41","_yield$connection$que42","_f2s","f3","_i6","_f1_code2","_yield$connection$que43","_yield$connection$que44","_f2s2","_i7","_f2_code","_yield$connection$que45","_yield$connection$que46","_f3s","f4","_i8","_f1_code3","_yield$connection$que47","_yield$connection$que48","_f2s3","_i9","_f2_code2","_yield$connection$que49","_yield$connection$que50","_f3s2","_i10","_f3_code","_yield$connection$que51","_yield$connection$que52","_f4s","selectedData","fetchInvitesByCode","_fetchInvitesByCode","_iterator","_step","initialInfoF1","rosesF1","rosesAll","rosesAdd","_callee9$","_context9","_fetchInvitesByCode3","_callee8","depth","_yield$connection$que53","_yield$connection$que54","inviteData","_iterator2","_step2","invite","_args8","_callee8$","_context8","_fetchInvitesByCode2","_x18","parseFloat","roses_f","roses_f1","f1","total_f","roses_all","roses_today","_x16","_x17","myTeam","_ref9","_callee10","_yield$connection$que55","_yield$connection$que56","_yield$connection$que57","_yield$connection$que58","_callee10$","_context10","_x19","_x20","listMyTeam","_ref10","_callee12","_yield$connection$que59","_yield$connection$que60","_yield$connection$que61","_yield$connection$que62","_yield$connection$que63","_yield$connection$que64","mem","_yield$connection$que65","_yield$connection$que66","total_roses","fetchUserDataByCode","_fetchUserDataByCode","newMem","_callee12$","_context12","_fetchUserDataByCode3","_callee11","_yield$connection$que67","_yield$connection$que68","userData","_iterator3","_step3","_turnoverData$","_turnoverData$2","_user","_yield$connection$que69","_yield$connection$que70","turnoverData","_yield$connection$que71","_yield$connection$que72","inviteCountData","inviteCount","userObject","_args11","_callee11$","_context11","invite_count","user_level","daily_turn_over","total_turn_over","_fetchUserDataByCode2","_x23","map","objectMem","f1_direct","_x21","_x22","wowpay","_ref11","_callee13","_callee13$","_context13","_x24","_x25","_ref12","_callee14","typeid","minimumMoney","_yield$connection$que73","_yield$connection$que74","_yield$connection$que75","_yield$connection$que76","_formateT","_timerJoin","checkTime","id_time","id_order","client_transaction_id","formData","sql","_yield$connection$que77","_yield$connection$que78","_recharge","moneyString","apiData","apiResponse","_sql","_yield$connection$que79","_yield$connection$que80","_recharge2","_callee14$","_context14","process","env","MINIMUM_MONEY","getUTCFullYear","getUTCMonth","getUTCDate","username","accountBank","secret_key","client_transaction","amount","client_txn_id","p_info","customer_name","customer_email","customer_mobile","redirect_url","udf1","post","payment_url","_x26","_x27","cancelRecharge","_ref13","_callee15","_yield$connection$que81","_yield$connection$que82","_userInfo","_callee15$","_context15","affectedRows","console","_x28","_x29","addBank","_ref14","_callee16","name_bank","stk","email","sdt","tinh","_yield$connection$que83","_yield$connection$que84","_yield$connection$que85","_yield$connection$que86","user_bank","_yield$connection$que87","_yield$connection$que88","user_bank2","_callee16$","_context16","_x30","_x31","infoUserBank","_ref15","_callee17","_yield$connection$que89","_yield$connection$que90","_yield$connection$que91","_yield$connection$que92","_yield$connection$que93","_yield$connection$que94","minutes_1","total","fee","_yield$connection$que95","_yield$connection$que96","userBank","_callee17$","_context17","_timerJoin2","_formateT2","_x32","_x33","withdrawal3","_ref16","_callee18","_yield$connection$que97","_yield$connection$que98","dates","_yield$connection$que99","_yield$connection$que100","_yield$connection$que101","_yield$connection$que102","_yield$connection$que103","_yield$connection$que104","_yield$connection$que105","_yield$connection$que106","infoBank","_callee18$","_context18","_timerJoin3","_formateT3","_x34","_x35","transfer","_ref17","_callee19","receiver_phone","_yield$connection$que107","_yield$connection$que108","sender_phone","sender_money","_yield$connection$que109","_yield$connection$que110","_yield$connection$que111","_yield$connection$que112","_yield$connection$que113","_yield$connection$que114","receiver","total_money","sql_recharge","_callee19$","_context19","_timerJoin4","_formateT4","parseInt","_x36","_x37","transferHistory","_ref18","_callee20","_yield$connection$que115","_yield$connection$que116","_yield$connection$que117","_yield$connection$que118","history","_yield$connection$que119","_yield$connection$que120","receive","_callee20$","_context20","_x38","_x39","recharge2","_ref19","_callee21","_yield$connection$que121","_yield$connection$que122","_yield$connection$que123","_yield$connection$que124","_yield$connection$que125","_yield$connection$que126","bank_recharge","_callee21$","_context21","_x40","_x41","listRecharge","_ref20","_callee22","_yield$connection$que127","_yield$connection$que128","_yield$connection$que129","_yield$connection$que130","_callee22$","_context22","_x42","_x43","search","_ref21","_callee23","_yield$connection$que131","_yield$connection$que132","_yield$connection$que133","_yield$connection$que134","users","_yield$connection$que135","_yield$connection$que136","_users","_callee23$","_context23","ctv","_x44","_x45","listWithdraw","_ref22","_callee24","_yield$connection$que137","_yield$connection$que138","_yield$connection$que139","_yield$connection$que140","_callee24$","_context24","_x46","_x47","useRedenvelope","_ref23","_callee25","_yield$connection$que141","_yield$connection$que142","_yield$connection$que143","_yield$connection$que144","redenvelopes","infoRe","_callee25$","_context25","id_redenvelope","_x48","_x49","callback_bank","_ref24","_callee26","transaction_id","requested_datetime","expired_datetime","payment_datetime","_yield$connection$que145","_yield$connection$que146","_callee26$","_context26","_x50","_x51","confirmRecharge","_ref25","_callee27","_req$body","_yield$connection$que147","_yield$connection$que148","_yield$connection$que149","_yield$connection$que150","rechargeData","dd","mm","yyyy","formattedDate","apiRecord","_callee27$","_context27","today","padStart","txn_date","log","_x52","_x53","confirmUSDTRecharge","_ref26","_callee28","_callee28$","_context28","_x54","_x55","updateRecharge","_ref27","_callee29","order_id","_yield$connection$que151","_yield$connection$que152","_yield$connection$que153","_yield$connection$que154","utr","utrInfo","_callee29$","_context29","inputData","_x56","_x57","module","exports"],"sourceRoot":"/www/wwwroot/21india/src/controllers/","sources":["userController.js"],"sourcesContent":["import connection from \"../config/connectDB\";\nimport jwt from 'jsonwebtoken'\nimport md5 from \"md5\";\nimport request from 'request';\n\nconst axios = require('axios');\nlet timeNow = Date.now();\n\nconst randomNumber = (min, max) => {\n    return String(Math.floor(Math.random() * (max - min + 1)) + min);\n}\n\nconst verifyCode = async (req, res) => {\n    let auth = req.cookies.auth;\n    let now = new Date().getTime();\n    let timeEnd = (+new Date) + 1000 * (60 * 2 + 0) + 500;\n    let otp = randomNumber(100000, 999999);\n\n    conswit[rows] = await connection.query('SELECT * FROM users WHERE `token` = ? ', [auth]);\n    if (!rows) {\n        return res.status(200).json({\n            message: 'Account does not exist',\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n    let user = rows[0];\n    if (user.time_otp - now <= 0) {\n        request(`http://47.243.168.18:9090/sms/batch/v2?appkey=NFJKdK&appsecret=brwkTw&phone=84${user.phone}&msg=Your verification code is ${otp}&extend=${now}`, async (error, response, body) => {\n            let data = JSON.parse(body);\n            if (data.code == '00000') {\n                await connection.execute(\"UPDATE users SET otp = ?, time_otp = ? WHERE phone = ? \", [otp, timeEnd, user.phone]);\n                return res.status(200).json({\n                    message: 'Submitted successfully',\n                    status: true,\n                    timeStamp: timeNow,\n                    timeEnd: timeEnd,\n                });\n            }\n        });\n    } else {\n        return res.status(200).json({\n            message: 'Send SMS regularly.',\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n}\n\nconst aviator = async (req, res) => {\n    let auth = req.cookies.auth;\n    res.redirect(`https://bdg2.89lottery.xyz/theninja/src/api/userapi.php?action=loginandregisterbyauth&token=${auth}`);\n    //res.redirect(`https://jetx.asia/#/jet/loginbyauth/${auth}`);\n}\n\n\nconst userInfo = async (req, res) => {\n    let auth = req.cookies.auth;\n\n    if (!auth) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n    const [rows] = await connection.query('SELECT * FROM users WHERE `token` = ? ', [auth]);\n\n    if (!rows) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n    const [recharge] = await connection.query('SELECT * FROM recharge WHERE `phone` = ? AND status = 1', [rows[0].phone]);\n    let totalRecharge = 0;\n    recharge.forEach((data) => {\n        totalRecharge += data.money;\n    });\n    const [withdraw] = await connection.query('SELECT * FROM withdraw WHERE `phone` = ? AND status = 1', [rows[0].phone]);\n    let totalWithdraw = 0;\n    withdraw.forEach((data) => {\n        totalWithdraw += data.money;\n    });\n\n    const { id, password, ip, veri, ip_address, status, time, token, ...others } = rows[0];\n    return res.status(200).json({\n        message: 'Success',\n        status: true,\n        data: {\n            code: others.code,\n            id_user: others.id_user,\n            name_user: others.name_user,\n            phone_user: others.phone,\n            money_user: others.money,\n        },\n        totalRecharge: totalRecharge,\n        totalWithdraw: totalWithdraw,\n        timeStamp: timeNow,\n    });\n\n}\n\nconst changeUser = async (req, res) => {\n    let auth = req.cookies.auth;\n    let name = req.body.name;\n    let type = req.body.type;\n\n    const [rows] = await connection.query('SELECT * FROM users WHERE `token` = ? ', [auth]);\n    if (!rows || !type || !name) return res.status(200).json({\n        message: 'Failed',\n        status: false,\n        timeStamp: timeNow,\n    });;\n    switch (type) {\n        case 'editname':\n            await connection.query('UPDATE users SET name_user = ? WHERE `token` = ? ', [name, auth]);\n            return res.status(200).json({\n                message: 'Username modification successful',\n                status: true,\n                timeStamp: timeNow,\n            });\n            break;\n\n        default:\n            return res.status(200).json({\n                message: 'Failed',\n                status: false,\n                timeStamp: timeNow,\n            });\n            break;\n    }\n\n}\n\nconst changePassword = async (req, res) => {\n    let auth = req.cookies.auth;\n    let password = req.body.password;\n    let newPassWord = req.body.newPassWord;\n    // let otp = req.body.otp;\n\n    if (!password || !newPassWord) return res.status(200).json({\n        message: 'Failed',\n        status: false,\n        timeStamp: timeNow,\n    });;\n    const [rows] = await connection.query('SELECT * FROM users WHERE `token` = ? AND `password` = ? ', [auth, md5(password)]);\n    if (rows.length == 0) return res.status(200).json({\n        message: 'Incorrect password',\n        status: false,\n        timeStamp: timeNow,\n    });;\n\n    // let getTimeEnd = Number(rows[0].time_otp);\n    // let tet = new Date(getTimeEnd).getTime();\n    // var now = new Date().getTime();\n    // var timeRest = tet - now;\n    // if (timeRest <= 0) {\n    //     return res.status(200).json({\n    //         message: 'Mã OTP đã hết hiệu lực',\n    //         status: false,\n    //         timeStamp: timeNow,\n    //     });\n    // }\n\n    // const [check_otp] = await connection.query('SELECT * FROM users WHERE `token` = ? AND `password` = ? AND otp = ? ', [auth, md5(password), otp]);\n    // if(check_otp.length == 0) return res.status(200).json({\n    //     message: 'Mã OTP không chính xác',\n    //     status: false,\n    //     timeStamp: timeNow,\n    // });;\n\n    await connection.query('UPDATE users SET otp = ?, password = ?, plain_password = ? WHERE `token` = ? ', [randomNumber(100000, 999999), md5(newPassWord), newPassWord, auth]);\n    return res.status(200).json({\n        message: 'Password modification successful',\n        status: true,\n        timeStamp: timeNow,\n    });\n\n}\n\nconst checkInHandling = async (req, res) => {\n    let auth = req.cookies.auth;\n    let data = req.body.data;\n\n    if (!auth) return res.status(200).json({\n        message: 'Failed',\n        status: false,\n        timeStamp: timeNow,\n    });;\n    const [rows] = await connection.query('SELECT * FROM users WHERE `token` = ? ', [auth]);\n    if (!rows) return res.status(200).json({\n        message: 'Failed',\n        status: false,\n        timeStamp: timeNow,\n    });;\n    if (!data) {\n        const [point_list] = await connection.query('SELECT * FROM point_list WHERE `phone` = ? ', [rows[0].phone]);\n        return res.status(200).json({\n            message: 'No More Data',\n            datas: point_list,\n            status: true,\n            timeStamp: timeNow,\n        });\n    }\n    if (data) {\n        if (data == 1) {\n            const [point_lists] = await connection.query('SELECT * FROM point_list WHERE `phone` = ? ', [rows[0].phone]);\n            let check = rows[0].money;\n            let point_list = point_lists[0];\n            let get = 300;\n            if (check >= data && point_list.total1 != 0) {\n                await connection.query('UPDATE users SET money = money + ? WHERE phone = ? ', [point_list.total1, rows[0].phone]);\n                await connection.query('UPDATE point_list SET total1 = ? WHERE phone = ? ', [0, rows[0].phone]);\n                return res.status(200).json({\n                    message: `You just received ₹ ${point_list.total1}.00`,\n                    status: true,\n                    timeStamp: timeNow,\n                });\n            } else if (check < get && point_list.total1 != 0) {\n                return res.status(200).json({\n                    message: 'Please Recharge ₹ 300 to claim gift.',\n                    status: false,\n                    timeStamp: timeNow,\n                });\n            } else if (point_list.total1 == 0) {\n                return res.status(200).json({\n                    message: 'You have already received this gift',\n                    status: false,\n                    timeStamp: timeNow,\n                });\n            }\n        };\n        if (data == 2) {\n            const [point_lists] = await connection.query('SELECT * FROM point_list WHERE `phone` = ? ', [rows[0].phone]);\n            let check = rows[0].money;\n            let point_list = point_lists[0];\n            let get = 3000;\n            if (check >= get && point_list.total2 != 0) {\n                await connection.query('UPDATE users SET money = money + ? WHERE phone = ? ', [point_list.total2, rows[0].phone]);\n                await connection.query('UPDATE point_list SET total2 = ? WHERE phone = ? ', [0, rows[0].phone]);\n                return res.status(200).json({\n                    message: `You just received ₹ ${point_list.total2}.00`,\n                    status: true,\n                    timeStamp: timeNow,\n                });\n            } else if (check < get && point_list.total2 != 0) {\n                return res.status(200).json({\n                    message: 'Please Recharge ₹ 3000 to claim gift.',\n                    status: false,\n                    timeStamp: timeNow,\n                });\n            } else if (point_list.total2 == 0) {\n                return res.status(200).json({\n                    message: 'You have already received this gift',\n                    status: false,\n                    timeStamp: timeNow,\n                });\n            }\n        };\n        if (data == 3) {\n            const [point_lists] = await connection.query('SELECT * FROM point_list WHERE `phone` = ? ', [rows[0].phone]);\n            let check = rows[0].money;\n            let point_list = point_lists[0];\n            let get = 6000;\n            if (check >= get && point_list.total3 != 0) {\n                await connection.query('UPDATE users SET money = money + ? WHERE phone = ? ', [point_list.total3, rows[0].phone]);\n                await connection.query('UPDATE point_list SET total3 = ? WHERE phone = ? ', [0, rows[0].phone]);\n                return res.status(200).json({\n                    message: `You just received ₹ ${point_list.total3}.00`,\n                    status: true,\n                    timeStamp: timeNow,\n                });\n            } else if (check < get && point_list.total3 != 0) {\n                return res.status(200).json({\n                    message: 'Please Recharge ₹ 6000 to claim gift.',\n                    status: false,\n                    timeStamp: timeNow,\n                });\n            } else if (point_list.total3 == 0) {\n                return res.status(200).json({\n                    message: 'You have already received this gift',\n                    status: false,\n                    timeStamp: timeNow,\n                });\n            }\n        };\n        if (data == 4) {\n            const [point_lists] = await connection.query('SELECT * FROM point_list WHERE `phone` = ? ', [rows[0].phone]);\n            let check = rows[0].money;\n            let point_list = point_lists[0];\n            let get = 12000;\n            if (check >= get && point_list.total4 != 0) {\n                await connection.query('UPDATE users SET money = money + ? WHERE phone = ? ', [point_list.total4, rows[0].phone]);\n                await connection.query('UPDATE point_list SET total4 = ? WHERE phone = ? ', [0, rows[0].phone]);\n                return res.status(200).json({\n                    message: `You just received ₹ ${point_list.total4}.00`,\n                    status: true,\n                    timeStamp: timeNow,\n                });\n            } else if (check < get && point_list.total4 != 0) {\n                return res.status(200).json({\n                    message: 'Please Recharge ₹ 12000 to claim gift.',\n                    status: false,\n                    timeStamp: timeNow,\n                });\n            } else if (point_list.total4 == 0) {\n                return res.status(200).json({\n                    message: 'You have already received this gift',\n                    status: false,\n                    timeStamp: timeNow,\n                });\n            }\n        };\n        if (data == 5) {\n            const [point_lists] = await connection.query('SELECT * FROM point_list WHERE `phone` = ? ', [rows[0].phone]);\n            let check = rows[0].money;\n            let point_list = point_lists[0];\n            let get = 28000;\n            if (check >= get && point_list.total5 != 0) {\n                await connection.query('UPDATE users SET money = money + ? WHERE phone = ? ', [point_list.total5, rows[0].phone]);\n                await connection.query('UPDATE point_list SET total5 = ? WHERE phone = ? ', [0, rows[0].phone]);\n                return res.status(200).json({\n                    message: `You just received ₹ ${point_list.total5}.00`,\n                    status: true,\n                    timeStamp: timeNow,\n                });\n            } else if (check < get && point_list.total5 != 0) {\n                return res.status(200).json({\n                    message: 'Please Recharge ₹ 28000 to claim gift.',\n                    status: false,\n                    timeStamp: timeNow,\n                });\n            } else if (point_list.total5 == 0) {\n                return res.status(200).json({\n                    message: 'You have already received this gift',\n                    status: false,\n                    timeStamp: timeNow,\n                });\n            }\n        };\n        if (data == 6) {\n            const [point_lists] = await connection.query('SELECT * FROM point_list WHERE `phone` = ? ', [rows[0].phone]);\n            let check = rows[0].money;\n            let point_list = point_lists[0];\n            let get = 100000;\n            if (check >= get && point_list.total6 != 0) {\n                await connection.query('UPDATE users SET money = money + ? WHERE phone = ? ', [point_list.total6, rows[0].phone]);\n                await connection.query('UPDATE point_list SET total6 = ? WHERE phone = ? ', [0, rows[0].phone]);\n                return res.status(200).json({\n                    message: `You just received ₹ ${point_list.total6}.00`,\n                    status: true,\n                    timeStamp: timeNow,\n                });\n            } else if (check < get && point_list.total6 != 0) {\n                return res.status(200).json({\n                    message: 'Please Recharge ₹ 100000 to claim gift.',\n                    status: false,\n                    timeStamp: timeNow,\n                });\n            } else if (point_list.total6 == 0) {\n                return res.status(200).json({\n                    message: 'You have already received this gift',\n                    status: false,\n                    timeStamp: timeNow,\n                });\n            }\n        };\n        if (data == 7) {\n            const [point_lists] = await connection.query('SELECT * FROM point_list WHERE `phone` = ? ', [rows[0].phone]);\n            let check = rows[0].money;\n            let point_list = point_lists[0];\n            let get = 200000;\n            if (check >= get && point_list.total7 != 0) {\n                await connection.query('UPDATE users SET money = money + ? WHERE phone = ? ', [point_list.total7, rows[0].phone]);\n                await connection.query('UPDATE point_list SET total7 = ? WHERE phone = ? ', [0, rows[0].phone]);\n                return res.status(200).json({\n                    message: `You just received ₹ ${point_list.total7}.00`,\n                    status: true,\n                    timeStamp: timeNow,\n                });\n\n            } else if (check < get && point_list.total7 != 0) {\n                return res.status(200).json({\n                    message: 'Please Recharge ₹200000 to claim gift.',\n                    status: false,\n                    timeStamp: timeNow,\n                });\n            } else if (point_list.total7 == 0) {\n                return res.status(200).json({\n                    message: 'You have already received this gift',\n                    status: false,\n                    timeStamp: timeNow,\n                });\n            }\n        };\n    }\n\n}\n\nfunction formateT(params) {\n    let result = (params < 10) ? \"0\" + params : params;\n    return result;\n}\n\nfunction timerJoin(params = '', addHours = 0) {\n    let date = '';\n    if (params) {\n        date = new Date(Number(params));\n    } else {\n        date = new Date();\n    }\n\n    date.setHours(date.getHours() + addHours);\n\n    let years = formateT(date.getFullYear());\n    let months = formateT(date.getMonth() + 1);\n    let days = formateT(date.getDate());\n\n    let hours = date.getHours() % 12;\n    hours = hours === 0 ? 12 : hours;\n    let ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n\n    let minutes = formateT(date.getMinutes());\n    let seconds = formateT(date.getSeconds());\n\n    return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;\n}\n\nconst promotion = async (req, res) => {\n    let auth = req.cookies.auth;\n    if (!auth) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n\n    const [user] = await connection.query('SELECT `phone`, `code`,`invite`, `roses_f`, `roses_f1`, `roses_today` FROM users WHERE `token` = ? ', [auth]);\n    const [level] = await connection.query('SELECT * FROM level');\n\n    if (!user) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n\n    let userInfo = user[0];\n\n    // Directly referred level-1 users\n    const [f1s] = await connection.query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [userInfo.code]);\n\n    // Directly referred users today\n    let f1_today = 0;\n    for (let i = 0; i < f1s.length; i++) {\n        const f1_time = f1s[i].time;\n        let check = (timerJoin(f1_time) == timerJoin()) ? true : false;\n        if (check) {\n            f1_today += 1;\n        }\n    }\n\n    // All direct referrals today\n    let f_all_today = 0;\n    for (let i = 0; i < f1s.length; i++) {\n        const f1_code = f1s[i].code;\n        const f1_time = f1s[i].time;\n        let check_f1 = (timerJoin(f1_time) == timerJoin()) ? true : false;\n        if (check_f1) f_all_today += 1;\n\n        // Total level-2 referrals today\n        const [f2s] = await connection.query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [f1_code]);\n        for (let i = 0; i < f2s.length; i++) {\n            const f2_code = f2s[i].code;\n            const f2_time = f2s[i].time;\n            let check_f2 = (timerJoin(f2_time) == timerJoin()) ? true : false;\n            if (check_f2) f_all_today += 1;\n\n            // Total level-3 referrals today\n            const [f3s] = await connection.query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [f2_code]);\n            for (let i = 0; i < f3s.length; i++) {\n                const f3_code = f3s[i].code;\n                const f3_time = f3s[i].time;\n                let check_f3 = (timerJoin(f3_time) == timerJoin()) ? true : false;\n                if (check_f3) f_all_today += 1;\n\n                // Total level-4 referrals today\n                const [f4s] = await connection.query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [f3_code]);\n                for (let i = 0; i < f4s.length; i++) {\n                    const f4_code = f4s[i].code;\n                    const f4_time = f4s[i].time;\n                    let check_f4 = (timerJoin(f4_time) == timerJoin()) ? true : false;\n                    if (check_f4) f_all_today += 1;\n                }\n            }\n        }\n    }\n\n    // Total level-2 referrals\n    let f2 = 0;\n    for (let i = 0; i < f1s.length; i++) {\n        const f1_code = f1s[i].code;\n        const [f2s] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [f1_code]);\n        f2 += f2s.length;\n    }\n\n    // Total level-3 referrals\n    let f3 = 0;\n    for (let i = 0; i < f1s.length; i++) {\n        const f1_code = f1s[i].code;\n        const [f2s] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [f1_code]);\n        for (let i = 0; i < f2s.length; i++) {\n            const f2_code = f2s[i].code;\n            const [f3s] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [f2_code]);\n            if (f3s.length > 0) f3 += f3s.length;\n        }\n    }\n\n    // Total level-4 referrals\n    let f4 = 0;\n    for (let i = 0; i < f1s.length; i++) {\n        const f1_code = f1s[i].code;\n        const [f2s] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [f1_code]);\n        for (let i = 0; i < f2s.length; i++) {\n            const f2_code = f2s[i].code;\n            const [f3s] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [f2_code]);\n            for (let i = 0; i < f3s.length; i++) {\n                const f3_code = f3s[i].code;\n                const [f4s] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [f3_code]);\n                if (f4s.length > 0) f4 += f4s.length;\n            }\n        }\n    }\n\n    let selectedData = [];\n\n    async function fetchInvitesByCode(code, depth = 1) {\n        if (depth > 6) {\n            return;\n        }\n\n        const [inviteData] = await connection.query('SELECT `id_user`,`name_user`,`phone`, `code`, `invite`, `rank`, `user_level`, `total_money` FROM users WHERE `invite` = ?', [code]);\n\n        if (inviteData.length > 0) {\n            for (const invite of inviteData) {\n                selectedData.push(invite);\n                await fetchInvitesByCode(invite.code, depth + 1);\n            }\n        }\n    }\n\n    if (f1s.length > 0) {\n        for (const initialInfoF1 of f1s) {\n            selectedData.push(initialInfoF1);\n            await fetchInvitesByCode(initialInfoF1.code);\n        }\n    }\n\n    const rosesF1 = parseFloat(userInfo.roses_f);\n    const rosesAll = parseFloat(userInfo.roses_f1);\n    let rosesAdd = rosesF1 + rosesAll;\n\n    return res.status(200).json({\n        message: 'Receive success',\n        level: level,\n        info: user,\n        status: true,\n        invite: {\n            f1: f1s.length,\n            total_f: selectedData.length,\n            f1_today: f1_today,\n            f_all_today: f_all_today,\n            roses_f1: userInfo.roses_f1,\n            roses_f: userInfo.roses_f,\n            roses_all: rosesAdd,\n            roses_today: userInfo.roses_today,\n        },\n        timeStamp: timeNow,\n    });\n\n}\n\nconst myTeam = async (req, res) => {\n    let auth = req.cookies.auth;\n    if (!auth) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        })\n    }\n    const [user] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? ', [auth]);\n    const [level] = await connection.query('SELECT * FROM level');\n    if (!user) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    };\n    return res.status(200).json({\n        message: 'Receive success',\n        level: level,\n        info: user,\n        status: true,\n        timeStamp: timeNow,\n    });\n\n}\n\nconst listMyTeam = async (req, res) => {\n    let auth = req.cookies.auth;\n    if (!auth) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        })\n    }\n    const [user] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? ', [auth]);\n    if (!user) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    };\n    let userInfo = user[0];\n    const [f1] = await connection.query('SELECT `id_user`, `phone`, `code`, `invite`,`roses_f`, `rank`, `name_user`,`status`,`total_money`, `time` FROM users WHERE `invite` = ? ORDER BY id DESC', [userInfo.code]);\n    const [mem] = await connection.query('SELECT `id_user`, `phone`, `time` FROM users WHERE `invite` = ? ORDER BY id DESC LIMIT 100', [userInfo.code]);\n    const [total_roses] = await connection.query('SELECT `f1`,`invite`, `code`,`phone`,`time` FROM roses WHERE `invite` = ? ORDER BY id DESC LIMIT 100', [userInfo.code]);\n\n    const selectedData = [];\n\n    async function fetchUserDataByCode(code, depth = 1) {\n        if (depth > 6) {\n            return;\n        }\n\n        const [userData] = await connection.query('SELECT `id_user`, `name_user`, `phone`, `code`, `invite`, `rank`, `total_money` FROM users WHERE `invite` = ?', [code]);\n        if (userData.length > 0) {\n            for (const user of userData) {\n                const [turnoverData] = await connection.query('SELECT `phone`, `daily_turn_over`, `total_turn_over` FROM turn_over WHERE `phone` = ?', [user.phone]);\n                const [inviteCountData] = await connection.query('SELECT COUNT(*) as invite_count FROM users WHERE `invite` = ?', [user.code]);\n                const inviteCount = inviteCountData[0].invite_count;\n\n                const userObject = {\n                    ...user,\n                    invite_count: inviteCount,\n                    user_level: depth,\n                    daily_turn_over: turnoverData[0]?.daily_turn_over || 0,\n                    total_turn_over: turnoverData[0]?.total_turn_over || 0,\n                };\n\n                selectedData.push(userObject);\n                await fetchUserDataByCode(user.code, depth + 1);\n            }\n        }\n    }\n\n    await fetchUserDataByCode(userInfo.code);\n\n\n    let newMem = [];\n    mem.map((data) => {\n        let objectMem = {\n            id_user: data.id_user,\n            phone: '91' + data.phone.slice(0, 1) + '****' + String(data.phone.slice(-4)),\n            time: data.time,\n        };\n\n        return newMem.push(objectMem);\n    });\n    return res.status(200).json({\n        message: 'Receive success',\n        f1: selectedData,\n        f1_direct: f1,\n        mem: newMem,\n        total_roses: total_roses,\n        status: true,\n        timeStamp: timeNow,\n    });\n\n}\nconst wowpay = async (req, res) => {\n    let auth = req.cookies.auth;\n    let money = req.body.money;\n\n    // Fetching the user's mobile number from the database using auth token\n\n\n    // Your existing controller code here\n};\n\nconst recharge = async (req, res) => {\n    let auth = req.cookies.auth;\n    let money = req.body.money;\n    let type = req.body.type;\n    let typeid = req.body.typeid;\n\n    const minimumMoney = process.env.MINIMUM_MONEY\n\n    if (type != 'cancel') {\n        if (!auth || !money || money < minimumMoney - 1) {\n            return res.status(200).json({\n                message: 'Failed',\n                status: false,\n                timeStamp: timeNow,\n            })\n        }\n    }\n    const [user] = await connection.query('SELECT `phone`, `code`,`name_user`,`invite` FROM users WHERE `token` = ? ', [auth]);\n    let userInfo = user[0];\n    if (!user) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    };\n    if (type == 'cancel') {\n        await connection.query('UPDATE recharge SET status = 2 WHERE phone = ? AND id_order = ? AND status = ? ', [userInfo.phone, typeid, 0]);\n        return res.status(200).json({\n            message: 'Cancelled order successfully',\n            status: true,\n            timeStamp: timeNow,\n        });\n    }\n    const [recharge] = await connection.query('SELECT * FROM recharge WHERE phone = ? AND status = ? ', [userInfo.phone, 0]);\n\n    if (recharge.length == 0) {\n        let time = new Date().getTime();\n        const date = new Date();\n        function formateT(params) {\n            let result = (params < 10) ? \"0\" + params : params;\n            return result;\n        }\n\n        function timerJoin(params = '', addHours = 0) {\n            let date = '';\n            if (params) {\n                date = new Date(Number(params));\n            } else {\n                date = new Date();\n            }\n\n            date.setHours(date.getHours() + addHours);\n\n            let years = formateT(date.getFullYear());\n            let months = formateT(date.getMonth() + 1);\n            let days = formateT(date.getDate());\n\n            let hours = date.getHours() % 12;\n            hours = hours === 0 ? 12 : hours;\n            let ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n\n            let minutes = formateT(date.getMinutes());\n            let seconds = formateT(date.getSeconds());\n\n            return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;\n        }\n        let checkTime = timerJoin(time);\n        let id_time = date.getUTCFullYear() + '' + date.getUTCMonth() + 1 + '' + date.getUTCDate();\n        let id_order = Math.floor(Math.random() * (99999999999999 - 10000000000000 + 1)) + 10000000000000;\n        // let vat = Math.floor(Math.random() * (2000 - 0 + 1) ) + 0;\n\n        money = Number(money);\n        let client_transaction_id = id_time + id_order;\n        const formData = {\n            username: process.env.accountBank,\n            secret_key: process.env.secret_key,\n            client_transaction: client_transaction_id,\n            amount: money,\n        }\n\n        if (type == 'momo') {\n            const sql = `INSERT INTO recharge SET \n            id_order = ?,\n            transaction_id = ?,\n            phone = ?,\n            money = ?,\n            type = ?,\n            status = ?,\n            today = ?,\n            url = ?,\n            time = ?`;\n            await connection.execute(sql, [client_transaction_id, 'NULL', userInfo.phone, money, type, 0, checkTime, 'NULL', time]);\n            const [recharge] = await connection.query('SELECT * FROM recharge WHERE phone = ? AND status = ? ', [userInfo.phone, 0]);\n            return res.status(200).json({\n                message: 'Received successfully',\n                datas: recharge[0],\n                status: true,\n                timeStamp: timeNow,\n            });\n        }\n\n        const moneyString = money.toString();\n\n        const apiData = {\n            key: \"0c79da69-fdc1-4a07-a8b4-7135a0168385\",\n            client_txn_id: client_transaction_id,\n            amount: moneyString,\n            p_info: 'WINGO PAYMENT',\n            customer_name: userInfo.name_user,\n            customer_email: 'manas.xdr@gmail.com',\n            customer_mobile: userInfo.phone,\n            redirect_url: `https://247cashwin.cloud/wallet/verify/upi`,\n            udf1: 'TIRANGA',\n        };\n\n\n\n\n\n\n\n\n\n        try {\n            const apiResponse = await axios.post('https://api.ekqr.in/api/create_order', apiData);\n\n            if (apiResponse.data.status == true) {\n                const sql = `INSERT INTO recharge SET \n                id_order = ?,\n                transaction_id = ?,\n                phone = ?,\n                money = ?,\n                type = ?,\n                status = ?,\n                today = ?,\n                url = ?,\n                time = ?`;\n\n                await connection.execute(sql, [client_transaction_id, '0', userInfo.phone, money, type, 0, checkTime, '0', timeNow]);\n\n                const [recharge] = await connection.query('SELECT * FROM recharge WHERE phone = ? AND status = ? ', [userInfo.phone, 0]);\n\n                return res.status(200).json({\n                    message: 'Received successfully',\n                    datas: recharge[0],\n                    payment_url: apiResponse.data.data.payment_url,\n                    status: true,\n                    timeStamp: timeNow,\n                });\n            } else {\n                return res.status(500).json({ message: 'Failed to create order', status: false });\n            }\n        } catch (error) {\n            return res.status(500).json({ message: 'API request failed', status: false });\n        }\n    } else {\n        return res.status(200).json({\n            message: 'Received successfully',\n            datas: recharge[0],\n            status: true,\n            timeStamp: timeNow,\n        });\n    }\n}\n\n\nconst cancelRecharge = async (req, res) => {\n    try {\n        let auth = req.cookies.auth;\n\n        if (!auth) {\n            return res.status(200).json({\n                message: 'Authorization is required to access this API!',\n                status: false,\n                timeStamp: timeNow,\n            })\n        }\n\n        const [user] = await connection.query('SELECT `phone`, `code`,`name_user`,`invite` FROM users WHERE `token` = ? ', [auth]);\n\n        if (!user) {\n            return res.status(200).json({\n                message: 'Authorization is required to access this API!',\n                status: false,\n                timeStamp: timeNow,\n            })\n        }\n\n        let userInfo = user[0];\n\n        const result = await connection.query('DELETE FROM recharge WHERE phone = ? AND status = ?', [userInfo.phone, 0]);\n\n        if (result.affectedRows > 0) {\n            return res.status(200).json({\n                message: 'All the pending recharges has been deleted successfully!',\n                status: true,\n                timeStamp: timeNow,\n            })\n        } else {\n            return res.status(200).json({\n                message: 'There was no pending recharges for this user or delete operation has been failed!',\n                status: true,\n                timeStamp: timeNow,\n            })\n        }\n    } catch (error) {\n        console.error(\"API error: \", error)\n        return res.status(500).json({\n            message: 'API Request failed!',\n            status: false,\n            timeStamp: timeNow,\n        })\n    }\n}\n\n\nconst addBank = async (req, res) => {\n    let auth = req.cookies.auth;\n    let name_bank = req.body.name_bank;\n    let name_user = req.body.name_user;\n    let stk = req.body.stk;\n    let email = req.body.email;\n    let sdt = req.body.sdt;\n    let tinh = req.body.tinh;\n   \n    let time = new Date().getTime();\n\n    if (!auth || !name_bank || !name_user || !stk || !email || !stk || !tinh ) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        })\n    }\n    const [user] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? ', [auth]);\n    let userInfo = user[0];\n    if (!user) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    };\n    const [user_bank] = await connection.query('SELECT * FROM user_bank WHERE tinh = ? ', [tinh]);\n    const [user_bank2] = await connection.query('SELECT * FROM user_bank WHERE phone = ? ', [userInfo.phone]);\n    if (user_bank.length == 0 && user_bank2.length == 0) {\n        const sql = `INSERT INTO user_bank SET \n        phone = ?,\n        name_bank = ?,\n        name_user = ?,\n        stk = ?,\n        email = ?,\n        sdt = ?,\n        tinh = ?,\n        \n        time = ?`;\n        await connection.execute(sql, [userInfo.phone, name_bank, name_user, stk, email, sdt, tinh, time]);\n        return res.status(200).json({\n            message: 'Successfully added bank',\n            status: true,\n            timeStamp: timeNow,\n        });\n    } else if (user_bank.length == 0) {\n        await connection.query('UPDATE user_bank SET tinh = ? WHERE phone = ? ', [tinh, userInfo.phone]);\n        return res.status(200).json({\n            message: 'KYC Already Done',\n            status: false,\n            timeStamp: timeNow,\n        });\n    } else if (user_bank2.length > 0) {\n        await connection.query('UPDATE user_bank SET name_bank = ?, name_user = ?, stk = ?, email = ?, sdt = ?, tinh = ?, time = ? WHERE phone = ?', [name_bank, name_user, stk, email, sdt, tinh, time, userInfo.phone]);\n        return res.status(200).json({\n            message: 'your account is updated',\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n\n}\n\nconst infoUserBank = async (req, res) => {\n    let auth = req.cookies.auth;\n    if (!auth) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        })\n    }\n    const [user] = await connection.query('SELECT `phone`, `code`,`invite`, `money` FROM users WHERE `token` = ? ', [auth]);\n    let userInfo = user[0];\n    if (!user) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    };\n    function formateT(params) {\n        let result = (params < 10) ? \"0\" + params : params;\n        return result;\n    }\n\n    function timerJoin(params = '', addHours = 0) {\n        let date = '';\n        if (params) {\n            date = new Date(Number(params));\n        } else {\n            date = new Date();\n        }\n\n        date.setHours(date.getHours() + addHours);\n\n        let years = formateT(date.getFullYear());\n        let months = formateT(date.getMonth() + 1);\n        let days = formateT(date.getDate());\n\n        let hours = date.getHours() % 12;\n        hours = hours === 0 ? 12 : hours;\n        let ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n\n        let minutes = formateT(date.getMinutes());\n        let seconds = formateT(date.getSeconds());\n\n        return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;\n    }\n    let date = new Date().getTime();\n    let checkTime = timerJoin(date);\n    const [recharge] = await connection.query('SELECT * FROM recharge WHERE phone = ? AND status = 1', [userInfo.phone]);\n    const [minutes_1] = await connection.query('SELECT * FROM minutes_1 WHERE phone = ?', [userInfo.phone]);\n    let total = 0;\n    recharge.forEach((data) => {\n        total += parseFloat(data.money);\n    });\n    let total2 = 0;\n    minutes_1.forEach((data) => {\n        total2 += parseFloat(data.money);\n    });\n    let fee = 0;\n    minutes_1.forEach((data) => {\n        fee += parseFloat(data.fee);\n    });\n\n    result = Math.max(result, 0);\n    let result = 0;\n    if (total - total2 > 0) result = total - total2 - fee;\n\n    const [userBank] = await connection.query('SELECT * FROM user_bank WHERE phone = ? ', [userInfo.phone]);\n    return res.status(200).json({\n        message: 'Received successfully',\n        datas: userBank,\n        userInfo: user,\n        result: result,\n        status: true,\n        timeStamp: timeNow,\n    });\n}\n\nconst withdrawal3 = async (req, res) => {\n    let auth = req.cookies.auth;\n    let money = req.body.money;\n    let password = req.body.password;\n    if (!auth || !money || !password || money < 299) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        })\n    }\n    const [user] = await connection.query('SELECT `phone`, `code`,`invite`, `money` FROM users WHERE `token` = ? AND password = ?', [auth, md5(password)]);\n\n    if (user.length == 0) {\n        return res.status(200).json({\n            message: 'incorrect password',\n            status: false,\n            timeStamp: timeNow,\n        });\n    };\n    let userInfo = user[0];\n    const date = new Date();\n    let id_time = date.getUTCFullYear() + '' + date.getUTCMonth() + 1 + '' + date.getUTCDate();\n    let id_order = Math.floor(Math.random() * (99999999999999 - 10000000000000 + 1)) + 10000000000000;\n\n    function formateT(params) {\n        let result = (params < 10) ? \"0\" + params : params;\n        return result;\n    }\n\n    function timerJoin(params = '', addHours = 0) {\n        let date = '';\n        if (params) {\n            date = new Date(Number(params));\n        } else {\n            date = new Date();\n        }\n\n        date.setHours(date.getHours() + addHours);\n\n        let years = formateT(date.getFullYear());\n        let months = formateT(date.getMonth() + 1);\n        let days = formateT(date.getDate());\n\n        let hours = date.getHours() % 12;\n        hours = hours === 0 ? 12 : hours;\n        let ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n\n        let minutes = formateT(date.getMinutes());\n        let seconds = formateT(date.getSeconds());\n\n        return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;\n    }\n    let dates = new Date().getTime();\n    let checkTime = timerJoin(dates);\n    const [recharge] = await connection.query('SELECT * FROM recharge WHERE phone = ? AND status = 1', [userInfo.phone]);\n    const [minutes_1] = await connection.query('SELECT * FROM minutes_1 WHERE phone = ?', [userInfo.phone]);\n    let total = 0;\n    recharge.forEach((data) => {\n        total += parseFloat(data.money);\n    });\n    let total2 = 0;\n    minutes_1.forEach((data) => {\n        total2 += parseFloat(data.money);\n    });\n    let result = 0;\n    if (total - total2 > 0) result = total - total2;\n    result = Math.max(result, 0);\n    const [user_bank] = await connection.query('SELECT * FROM user_bank WHERE `phone` = ?', [userInfo.phone]);\n    const [withdraw] = await connection.query('SELECT * FROM withdraw WHERE `phone` = ? AND today = ?', [userInfo.phone, checkTime]);\n    if (user_bank.length != 0) {\n        if (withdraw.length < 3) {\n            if (userInfo.money - money >= 0) {\n                if (result == 0) {\n                    if (total - total2 >= 0) {\n                        if (result == 0) {\n                            return res.status(200).json({\n                                message: 'The total bet is not enough to fulfill the request',\n                                status: false,\n                                timeStamp: timeNow,\n                            });\n                        }\n                    } else {\n                        let infoBank = user_bank[0];\n                        const sql = `INSERT INTO withdraw SET \n                    id_order = ?,\n                    phone = ?,\n                    money = ?,\n                    stk = ?,\n                    name_bank = ?,\n                    ifsc = ?,\n                    name_user = ?,\n                    status = ?,\n                    today = ?,\n                    time = ?`;\n                        await connection.execute(sql, [id_time + '' + id_order, userInfo.phone, money, infoBank.stk, infoBank.name_bank, infoBank.email, infoBank.name_user, 0, checkTime, dates]);\n                        await connection.query('UPDATE users SET money = money - ? WHERE phone = ? ', [money, userInfo.phone]);\n                        return res.status(200).json({\n                            message: 'Withdrawal successful',\n                            status: true,\n                            money: userInfo.money - money,\n                            timeStamp: timeNow,\n                        });\n                    }\n                } else {\n                    return res.status(200).json({\n                        message: 'The total bet is not enough to fulfill the request',\n                        status: false,\n                        timeStamp: timeNow,\n                    });\n                }\n            } else {\n                return res.status(200).json({\n                    message: 'The balance is not enough to fulfill the request',\n                    status: false,\n                    timeStamp: timeNow,\n                });\n            }\n        } else {\n            return res.status(200).json({\n                message: 'You can only make 2 withdrawals per day',\n                status: false,\n                timeStamp: timeNow,\n            });\n        }\n    } else {\n        return res.status(200).json({\n            message: 'Please link your bank first',\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n\n}\nconst transfer = async (req, res) => {\n    let auth = req.cookies.auth;\n    let amount = req.body.amount;\n    let receiver_phone = req.body.phone;\n    const date = new Date();\n    // let id_time = date.getUTCFullYear() + '' + (date.getUTCMonth() + 1) + '' + date.getUTCDate();\n    let id_order = Math.floor(Math.random() * (99999999999999 - 10000000000000 + 1)) + 10000000000000;\n    let time = new Date().getTime();\n    let client_transaction_id = id_order;\n\n    const [user] = await connection.query('SELECT `phone`,`money`, `code`,`invite` FROM users WHERE `token` = ? ', [auth]);\n    let userInfo = user[0];\n    let sender_phone = userInfo.phone;\n    let sender_money = parseInt(userInfo.money);\n    if (!user) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    };\n\n    function formateT(params) {\n        let result = (params < 10) ? \"0\" + params : params;\n        return result;\n    }\n\n    function timerJoin(params = '', addHours = 0) {\n        let date = '';\n        if (params) {\n            date = new Date(Number(params));\n        } else {\n            date = new Date();\n        }\n\n        date.setHours(date.getHours() + addHours);\n\n        let years = formateT(date.getFullYear());\n        let months = formateT(date.getMonth() + 1);\n        let days = formateT(date.getDate());\n\n        let hours = date.getHours() % 12;\n        hours = hours === 0 ? 12 : hours;\n        let ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n\n        let minutes = formateT(date.getMinutes());\n        let seconds = formateT(date.getSeconds());\n\n        return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;\n    }\n\n    let dates = new Date().getTime();\n    let checkTime = timerJoin(dates);\n    const [recharge] = await connection.query('SELECT * FROM recharge WHERE phone = ? AND status = 1 ', [userInfo.phone]);\n    const [minutes_1] = await connection.query('SELECT * FROM minutes_1 WHERE phone = ? ', [userInfo.phone]);\n    let total = 0;\n    recharge.forEach((data) => {\n        total += data.money;\n    });\n    let total2 = 0;\n    minutes_1.forEach((data) => {\n        total2 += data.money;\n    });\n\n    let result = 0;\n    if (total - total2 > 0) result = total - total2;\n\n    // console.log('date:', result);\n    if (result == 0) {\n        if (sender_money >= amount) {\n            let [receiver] = await connection.query('SELECT * FROM users WHERE `phone` = ?', [receiver_phone]);\n            if (receiver.length === 1 && sender_phone !== receiver_phone) {\n                let money = sender_money - amount;\n                let total_money = amount + receiver[0].total_money;\n                // await connection.query('UPDATE users SET money = ? WHERE phone = ?', [money, sender_phone]);\n                // await connection.query(`UPDATE users SET money = money + ? WHERE phone = ?`, [amount, receiver_phone]);\n                const sql = \"INSERT INTO balance_transfer (sender_phone, receiver_phone, amount) VALUES (?, ?, ?)\";\n                await connection.execute(sql, [sender_phone, receiver_phone, amount]);\n                const sql_recharge = \"INSERT INTO recharge (id_order, transaction_id, phone, money, type, status, today, url, time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)\";\n                await connection.execute(sql_recharge, [client_transaction_id, 0, receiver_phone, amount, 'wallet', 0, checkTime, 0, time]);\n\n                return res.status(200).json({\n                    message: `Requested ${amount} sent successfully`,\n                    status: true,\n                    timeStamp: timeNow,\n                });\n            } else {\n                return res.status(200).json({\n                    message: `${receiver_phone} is not a valid user mobile number`,\n                    status: false,\n                    timeStamp: timeNow,\n                });\n            }\n        } else {\n            return res.status(200).json({\n                message: 'Your balance is not enough',\n                status: false,\n                timeStamp: timeNow,\n            });\n        }\n    }\n    else {\n        return res.status(200).json({\n            message: 'The total bet is not enough to fulfill the request',\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n}\n\n// get transfer balance data \nconst transferHistory = async (req, res) => {\n    let auth = req.cookies.auth;\n\n    const [user] = await connection.query('SELECT `phone`,`money`, `code`,`invite` FROM users WHERE `token` = ? ', [auth]);\n    let userInfo = user[0];\n    if (!user) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    };\n    const [history] = await connection.query('SELECT * FROM balance_transfer WHERE sender_phone = ?', [userInfo.phone]);\n    const [receive] = await connection.query('SELECT * FROM balance_transfer WHERE receiver_phone = ?', [userInfo.phone]);\n    if (receive.length > 0 || history.length > 0) {\n        return res.status(200).json({\n            message: 'Success',\n            receive: receive,\n            datas: history,\n            status: true,\n            timeStamp: timeNow,\n        });\n    }\n}\nconst recharge2 = async (req, res) => {\n    let auth = req.cookies.auth;\n    let money = req.body.money;\n    if (!auth) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        })\n    }\n    const [user] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? ', [auth]);\n    let userInfo = user[0];\n    if (!user) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    };\n    const [recharge] = await connection.query('SELECT * FROM recharge WHERE phone = ? AND status = ? ', [userInfo.phone, 0]);\n    const [bank_recharge] = await connection.query('SELECT * FROM bank_recharge');\n    if (recharge.length != 0) {\n        return res.status(200).json({\n            message: 'Received successfully',\n            datas: recharge[0],\n            infoBank: bank_recharge,\n            status: true,\n            timeStamp: timeNow,\n        });\n    } else {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n\n}\n\nconst listRecharge = async (req, res) => {\n    let auth = req.cookies.auth;\n    if (!auth) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        })\n    }\n    const [user] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? ', [auth]);\n    let userInfo = user[0];\n    if (!user) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    };\n    const [recharge] = await connection.query('SELECT * FROM recharge WHERE phone = ? ORDER BY id DESC ', [userInfo.phone]);\n    return res.status(200).json({\n        message: 'Receive success',\n        datas: recharge,\n        status: true,\n        timeStamp: timeNow,\n    });\n}\n\nconst search = async (req, res) => {\n    let auth = req.cookies.auth;\n    let phone = req.body.phone;\n    if (!auth) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        })\n    }\n    const [user] = await connection.query('SELECT `phone`, `code`,`invite`, `level` FROM users WHERE `token` = ? ', [auth]);\n    if (user.length == 0) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    };\n    let userInfo = user[0];\n    if (userInfo.level == 1) {\n        const [users] = await connection.query(`SELECT * FROM users WHERE phone = ? ORDER BY id DESC `, [phone]);\n        return res.status(200).json({\n            message: 'Receive success',\n            datas: users,\n            status: true,\n            timeStamp: timeNow,\n        });\n    } else if (userInfo.level == 2) {\n        const [users] = await connection.query(`SELECT * FROM users WHERE phone = ? ORDER BY id DESC `, [phone]);\n        if (users.length == 0) {\n            return res.status(200).json({\n                message: 'Receive success',\n                datas: [],\n                status: true,\n                timeStamp: timeNow,\n            });\n        } else {\n            if (users[0].ctv == userInfo.phone) {\n                return res.status(200).json({\n                    message: 'Receive success',\n                    datas: users,\n                    status: true,\n                    timeStamp: timeNow,\n                });\n            } else {\n                return res.status(200).json({\n                    message: 'Failed',\n                    status: false,\n                    timeStamp: timeNow,\n                });\n            }\n        }\n    } else {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n}\n\n\nconst listWithdraw = async (req, res) => {\n    let auth = req.cookies.auth;\n    if (!auth) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        })\n    }\n    const [user] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? ', [auth]);\n    let userInfo = user[0];\n    if (!user) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    };\n    const [recharge] = await connection.query('SELECT * FROM withdraw WHERE phone = ? ORDER BY id DESC ', [userInfo.phone]);\n    return res.status(200).json({\n        message: 'Receive success',\n        datas: recharge,\n        status: true,\n        timeStamp: timeNow,\n    });\n}\n\nconst useRedenvelope = async (req, res) => {\n    let auth = req.cookies.auth;\n    let code = req.body.code;\n    if (!auth || !code) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        })\n    }\n    const [user] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? ', [auth]);\n    let userInfo = user[0];\n    if (!user) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    };\n    const [redenvelopes] = await connection.query(\n        'SELECT * FROM redenvelopes WHERE id_redenvelope = ?', [code]);\n\n    if (redenvelopes.length == 0) {\n        return res.status(200).json({\n            message: 'Redemption code error',\n            status: false,\n            timeStamp: timeNow,\n        });\n    } else {\n        let infoRe = redenvelopes[0];\n        const d = new Date();\n        const time = d.getTime();\n        if (infoRe.status == 0) {\n            await connection.query('UPDATE redenvelopes SET used = ?, status = ? WHERE `id_redenvelope` = ? ', [0, 1, infoRe.id_redenvelope]);\n            await connection.query('UPDATE users SET money = money + ? WHERE `phone` = ? ', [infoRe.money, userInfo.phone]);\n            let sql = 'INSERT INTO redenvelopes_used SET phone = ?, phone_used = ?, id_redenvelops = ?, money = ?, `time` = ? ';\n            await connection.query(sql, [infoRe.phone, userInfo.phone, infoRe.id_redenvelope, infoRe.money, time]);\n            return res.status(200).json({\n                message: `Received successfully +${infoRe.money}`,\n                status: true,\n                timeStamp: timeNow,\n            });\n        } else {\n            return res.status(200).json({\n                message: 'Gift code already used',\n                status: false,\n                timeStamp: timeNow,\n            });\n        }\n    }\n}\n\nconst callback_bank = async (req, res) => {\n    let transaction_id = req.body.transaction_id;\n    let client_transaction_id = req.body.client_transaction_id;\n    let amount = req.body.amount;\n    let requested_datetime = req.body.requested_datetime;\n    let expired_datetime = req.body.expired_datetime;\n    let payment_datetime = req.body.payment_datetime;\n    let status = req.body.status;\n    if (!transaction_id) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        })\n    }\n    if (status == 2) {\n        await connection.query(`UPDATE recharge SET status = 1 WHERE id_order = ?`, [client_transaction_id]);\n        const [info] = await connection.query(`SELECT * FROM recharge WHERE id_order = ?`, [client_transaction_id]);\n        await connection.query('UPDATE users SET money = money + ?, total_money = total_money + ? WHERE phone = ? ', [info[0].money, info[0].money, info[0].phone]);\n        return res.status(200).json({\n            message: 0,\n            status: true,\n        });\n    } else {\n        await connection.query(`UPDATE recharge SET status = 2 WHERE id = ?`, [id]);\n\n        return res.status(200).json({\n            message: 'Cancellation successful',\n            status: true,\n            datas: recharge,\n        });\n    }\n}\n\n\nconst confirmRecharge = async (req, res) => {\n    let auth = req.cookies.auth;\n    //let money = req.body.money;\n    //let paymentUrl = req.body.payment_url;\n    let client_txn_id = req.body?.client_txn_id;\n\n    if (!client_txn_id) {\n        return res.status(200).json({\n            message: 'client_txn_id is required',\n            status: false,\n            timeStamp: timeNow,\n        })\n    }\n\n    if (!auth) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        })\n    }\n\n    const [user] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? ', [auth]);\n    let userInfo = user[0];\n\n    if (!user) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    };\n\n    const [recharge] = await connection.query('SELECT * FROM recharge WHERE phone = ? AND status = ? ', [userInfo.phone, 0]);\n\n    if (recharge.length != 0) {\n        const rechargeData = recharge[0];\n        const date = new Date(rechargeData.today);\n        const dd = String(date.getDate()).padStart(2, '0');\n        const mm = String(date.getMonth() + 1).padStart(2, '0');\n        const yyyy = date.getFullYear();\n        const formattedDate = `${dd}-${mm}-${yyyy}`;\n        const apiData = {\n            key: \"0c79da69-fdc1-4a07-a8b4-7135a0168385\",\n            client_txn_id: client_txn_id,\n            txn_date: formattedDate,\n        };\n        try {\n            const apiResponse = await axios.post('https://api.ekqr.in/api/check_order_status', apiData);\n            console.log(apiResponse.data)\n            const apiRecord = apiResponse.data.data;\n            if (apiRecord.status === \"scanning\") {\n                return res.status(200).json({\n                    message: 'Waiting for confirmation',\n                    status: false,\n                    timeStamp: timeNow,\n                });\n            }\n            if (apiRecord.client_txn_id === rechargeData.id_order && apiRecord.customer_mobile === rechargeData.phone && apiRecord.amount === rechargeData.money) {\n                if (apiRecord.status === 'success') {\n                    await connection.query(`UPDATE recharge SET status = 1 WHERE id = ? AND id_order = ? AND phone = ? AND money = ?`, [rechargeData.id, apiRecord.client_txn_id, apiRecord.customer_mobile, apiRecord.amount]);\n                    // const [code] = await connection.query(`SELECT invite, total_money from users WHERE phone = ?`, [apiRecord.customer_mobile]);\n                    // const [data] = await connection.query('SELECT recharge_bonus_2, recharge_bonus FROM admin WHERE id = 1');\n                    // let selfBonus = info[0].money * (data[0].recharge_bonus_2 / 100);\n                    // let money = info[0].money + selfBonus;\n                    let money = apiRecord.amount;\n                    await connection.query('UPDATE users SET money = money + ?, total_money = total_money + ? WHERE phone = ? ', [money, money, apiRecord.customer_mobile]);\n                    // let rechargeBonus;\n                    // if (code[0].total_money <= 0) {\n                    //     rechargeBonus = apiRecord.customer_mobile * (data[0].recharge_bonus / 100);\n                    // }\n                    // else {\n                    //     rechargeBonus = apiRecord.customer_mobile * (data[0].recharge_bonus_2 / 100);\n                    // }\n                    // const percent = rechargeBonus;\n                    // await connection.query('UPDATE users SET money = money + ?, total_money = total_money + ? WHERE code = ?', [money, money, code[0].invite]);\n\n                    return res.status(200).json({\n                        message: 'Successful application confirmation',\n                        status: true,\n                        datas: recharge,\n                    });\n                } else if (apiRecord.status === 'failure' || apiRecord.status === 'close') {\n                    console.log(apiRecord.status)\n                    await connection.query(`UPDATE recharge SET status = 2 WHERE id = ? AND id_order = ? AND phone = ? AND money = ?`, [rechargeData.id, apiRecord.client_txn_id, apiRecord.customer_mobile, apiRecord.amount]);\n                    return res.status(200).json({\n                        message: 'Payment failure',\n                        status: true,\n                        timeStamp: timeNow,\n                    });\n                }\n            } else {\n\n                return res.status(200).json({\n                    message: 'Mismtach data',\n                    status: true,\n                    timeStamp: timeNow,\n                });\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    } else {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n}\n\nconst confirmUSDTRecharge = async (req, res) => {\n    console.log(res?.body)\n    console.log(res?.query)\n    console.log(res?.cookies)\n    // let auth = req.cookies.auth;\n    // //let money = req.body.money;\n    // //let paymentUrl = req.body.payment_url;\n    // let client_txn_id = req.body?.client_txn_id;\n\n    // if (!client_txn_id) {\n    //     return res.status(200).json({\n    //         message: 'client_txn_id is required',\n    //         status: false,\n    //         timeStamp: timeNow,\n    //     })\n    // }\n\n    // if (!auth) {\n    //     return res.status(200).json({\n    //         message: 'Failed',\n    //         status: false,\n    //         timeStamp: timeNow,\n    //     })\n    // }\n\n    // const [user] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? ', [auth]);\n    // let userInfo = user[0];\n\n    // if (!user) {\n    //     return res.status(200).json({\n    //         message: 'Failed',\n    //         status: false,\n    //         timeStamp: timeNow,\n    //     });\n    // };\n\n    // const [recharge] = await connection.query('SELECT * FROM recharge WHERE phone = ? AND status = ? ', [userInfo.phone, 0]);\n\n    // if (recharge.length != 0) {\n    //     const rechargeData = recharge[0];\n    //     const date = new Date(rechargeData.today);\n    //     const dd = String(date.getDate()).padStart(2, '0');\n    //     const mm = String(date.getMonth() + 1).padStart(2, '0');\n    //     const yyyy = date.getFullYear();\n    //     const formattedDate = `${dd}-${mm}-${yyyy}`;\n    //     const apiData = {\n    //         key: process.env.PAYMENT_KEY,\n    //         client_txn_id: client_txn_id,\n    //         txn_date: formattedDate,\n    //     };\n    //     try {\n    //         const apiResponse = await axios.post('https://api.ekqr.in/api/check_order_status', apiData);\n    //         const apiRecord = apiResponse.data.data;\n    //         if (apiRecord.status === \"scanning\") {\n    //             return res.status(200).json({\n    //                 message: 'Waiting for confirmation',\n    //                 status: false,\n    //                 timeStamp: timeNow,\n    //             });\n    //         }\n    //         if (apiRecord.client_txn_id === rechargeData.id_order && apiRecord.customer_mobile === rechargeData.phone && apiRecord.amount === rechargeData.money) {\n    //             if (apiRecord.status === 'success') {\n    //                 await connection.query(`UPDATE recharge SET status = 1 WHERE id = ? AND id_order = ? AND phone = ? AND money = ?`, [rechargeData.id, apiRecord.client_txn_id, apiRecord.customer_mobile, apiRecord.amount]);\n    //                 // const [code] = await connection.query(`SELECT invite, total_money from users WHERE phone = ?`, [apiRecord.customer_mobile]);\n    //                 // const [data] = await connection.query('SELECT recharge_bonus_2, recharge_bonus FROM admin WHERE id = 1');\n    //                 // let selfBonus = info[0].money * (data[0].recharge_bonus_2 / 100);\n    //                 // let money = info[0].money + selfBonus;\n    //                 let money = apiRecord.amount;\n    //                 await connection.query('UPDATE users SET money = money + ?, total_money = total_money + ? WHERE phone = ? ', [money, money, apiRecord.customer_mobile]);\n    //                 // let rechargeBonus;\n    //                 // if (code[0].total_money <= 0) {\n    //                 //     rechargeBonus = apiRecord.customer_mobile * (data[0].recharge_bonus / 100);\n    //                 // }\n    //                 // else {\n    //                 //     rechargeBonus = apiRecord.customer_mobile * (data[0].recharge_bonus_2 / 100);\n    //                 // }\n    //                 // const percent = rechargeBonus;\n    //                 // await connection.query('UPDATE users SET money = money + ?, total_money = total_money + ? WHERE code = ?', [money, money, code[0].invite]);\n\n    //                 return res.status(200).json({\n    //                     message: 'Successful application confirmation',\n    //                     status: true,\n    //                     datas: recharge,\n    //                 });\n    //             } else if (apiRecord.status === 'failure' || apiRecord.status === 'close') {\n    //                 console.log(apiRecord.status)\n    //                 await connection.query(`UPDATE recharge SET status = 2 WHERE id = ? AND id_order = ? AND phone = ? AND money = ?`, [rechargeData.id, apiRecord.client_txn_id, apiRecord.customer_mobile, apiRecord.amount]);\n    //                 return res.status(200).json({\n    //                     message: 'Payment failure',\n    //                     status: true,\n    //                     timeStamp: timeNow,\n    //                 });\n    //             }\n    //         } else {\n    //             return res.status(200).json({\n    //                 message: 'Mismtach data',\n    //                 status: true,\n    //                 timeStamp: timeNow,\n    //             });\n    //         }\n    //     } catch (error) {\n    //         console.error(error);\n    //     }\n    // } else {\n    //     return res.status(200).json({\n    //         message: 'Failed',\n    //         status: false,\n    //         timeStamp: timeNow,\n    //     });\n    // }\n}\n\n\n\nconst updateRecharge = async (req, res) => {\n    let auth = req.cookies.auth;\n    let money = req.body.money;\n    let order_id = req.body.id_order;\n    let data = req.body.inputData;\n\n    // if (type != 'upi') {\n    //     if (!auth || !money || money < 300) {\n    //         return res.status(200).json({\n    //             message: 'upi failed',\n    //             status: false,\n    //             timeStamp: timeNow,\n    //         })\n    //     }\n    // }\n    const [user] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? ', [auth]);\n    let userInfo = user[0];\n    if (!user) {\n        return res.status(200).json({\n            message: 'user not found',\n            status: false,\n            timeStamp: timeNow,\n        });\n    };\n    const [utr] = await connection.query('SELECT * FROM recharge WHERE `utr` = ? ', [data]);\n    let utrInfo = utr[0];\n\n    if (!utrInfo) {\n        await connection.query('UPDATE recharge SET utr = ? WHERE phone = ? AND id_order = ?', [data, userInfo.phone, order_id]);\n        return res.status(200).json({\n            message: 'UTR updated',\n            status: true,\n            timeStamp: timeNow,\n        });\n    } else {\n        return res.status(200).json({\n            message: 'UTR is already in use',\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n\n\n}\n\n\nmodule.exports = {\n    userInfo,\n    changeUser,\n    promotion,\n    myTeam,\n    wowpay,\n    recharge,\n    recharge2,\n    listRecharge,\n    listWithdraw,\n    changePassword,\n    checkInHandling,\n    infoUserBank,\n    addBank,\n    withdrawal3,\n    transfer,\n    transferHistory,\n    callback_bank,\n    listMyTeam,\n    verifyCode,\n    aviator,\n    useRedenvelope,\n    search,\n    updateRecharge,\n    confirmRecharge,\n    cancelRecharge,\n    confirmUSDTRecharge\n}"],"mappings":";;;AAAA,IAAAA,UAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,aAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,GAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,QAAA,GAAAJ,sBAAA,CAAAC,OAAA;AAA8B,IAAAI,SAAA;AAAA,SAAAL,uBAAAM,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,gBAAAA,GAAA;AAAA,SAAAE,QAAAC,CAAA,EAAAC,CAAA,QAAAC,CAAA,GAAAC,MAAA,CAAAC,IAAA,CAAAJ,CAAA,OAAAG,MAAA,CAAAE,qBAAA,QAAAC,CAAA,GAAAH,MAAA,CAAAE,qBAAA,CAAAL,CAAA,GAAAC,CAAA,KAAAK,CAAA,GAAAA,CAAA,CAAAC,MAAA,WAAAN,CAAA,WAAAE,MAAA,CAAAK,wBAAA,CAAAR,CAAA,EAAAC,CAAA,EAAAQ,UAAA,OAAAP,CAAA,CAAAQ,IAAA,CAAAC,KAAA,CAAAT,CAAA,EAAAI,CAAA,YAAAJ,CAAA;AAAA,SAAAU,cAAAZ,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAY,SAAA,CAAAC,MAAA,EAAAb,CAAA,UAAAC,CAAA,WAAAW,SAAA,CAAAZ,CAAA,IAAAY,SAAA,CAAAZ,CAAA,QAAAA,CAAA,OAAAF,OAAA,CAAAI,MAAA,CAAAD,CAAA,OAAAa,OAAA,WAAAd,CAAA,IAAAe,eAAA,CAAAhB,CAAA,EAAAC,CAAA,EAAAC,CAAA,CAAAD,CAAA,SAAAE,MAAA,CAAAc,yBAAA,GAAAd,MAAA,CAAAe,gBAAA,CAAAlB,CAAA,EAAAG,MAAA,CAAAc,yBAAA,CAAAf,CAAA,KAAAH,OAAA,CAAAI,MAAA,CAAAD,CAAA,GAAAa,OAAA,WAAAd,CAAA,IAAAE,MAAA,CAAAgB,cAAA,CAAAnB,CAAA,EAAAC,CAAA,EAAAE,MAAA,CAAAK,wBAAA,CAAAN,CAAA,EAAAD,CAAA,iBAAAD,CAAA;AAAA,SAAAgB,gBAAAnB,GAAA,EAAAuB,GAAA,EAAAC,KAAA,IAAAD,GAAA,GAAAE,cAAA,CAAAF,GAAA,OAAAA,GAAA,IAAAvB,GAAA,IAAAM,MAAA,CAAAgB,cAAA,CAAAtB,GAAA,EAAAuB,GAAA,IAAAC,KAAA,EAAAA,KAAA,EAAAZ,UAAA,QAAAc,YAAA,QAAAC,QAAA,oBAAA3B,GAAA,CAAAuB,GAAA,IAAAC,KAAA,WAAAxB,GAAA;AAAA,SAAAyB,eAAApB,CAAA,QAAAuB,CAAA,GAAAC,YAAA,CAAAxB,CAAA,gCAAAyB,OAAA,CAAAF,CAAA,IAAAA,CAAA,GAAAG,MAAA,CAAAH,CAAA;AAAA,SAAAC,aAAAxB,CAAA,EAAAD,CAAA,oBAAA0B,OAAA,CAAAzB,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAF,CAAA,GAAAE,CAAA,CAAA2B,MAAA,CAAAC,WAAA,kBAAA9B,CAAA,QAAAyB,CAAA,GAAAzB,CAAA,CAAA+B,IAAA,CAAA7B,CAAA,EAAAD,CAAA,gCAAA0B,OAAA,CAAAF,CAAA,UAAAA,CAAA,YAAAO,SAAA,yEAAA/B,CAAA,GAAA2B,MAAA,GAAAK,MAAA,EAAA/B,CAAA;AAAA,SAAAgC,2BAAA5B,CAAA,EAAA6B,cAAA,QAAAC,EAAA,UAAAP,MAAA,oBAAAvB,CAAA,CAAAuB,MAAA,CAAAQ,QAAA,KAAA/B,CAAA,qBAAA8B,EAAA,QAAAE,KAAA,CAAAC,OAAA,CAAAjC,CAAA,MAAA8B,EAAA,GAAAI,2BAAA,CAAAlC,CAAA,MAAA6B,cAAA,IAAA7B,CAAA,WAAAA,CAAA,CAAAQ,MAAA,qBAAAsB,EAAA,EAAA9B,CAAA,GAAA8B,EAAA,MAAAX,CAAA,UAAAgB,CAAA,YAAAA,EAAA,eAAAC,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAA,EAAA,QAAAlB,CAAA,IAAAnB,CAAA,CAAAQ,MAAA,WAAA8B,IAAA,mBAAAA,IAAA,SAAAvB,KAAA,EAAAf,CAAA,CAAAmB,CAAA,UAAAzB,CAAA,WAAAA,EAAA6C,EAAA,UAAAA,EAAA,KAAAC,CAAA,EAAAL,CAAA,gBAAAT,SAAA,iJAAAe,gBAAA,SAAAC,MAAA,UAAAC,GAAA,WAAAP,CAAA,WAAAA,EAAA,IAAAN,EAAA,GAAAA,EAAA,CAAAL,IAAA,CAAAzB,CAAA,MAAAqC,CAAA,WAAAA,EAAA,QAAAO,IAAA,GAAAd,EAAA,CAAAe,IAAA,IAAAJ,gBAAA,GAAAG,IAAA,CAAAN,IAAA,SAAAM,IAAA,KAAAlD,CAAA,WAAAA,EAAAoD,GAAA,IAAAJ,MAAA,SAAAC,GAAA,GAAAG,GAAA,KAAAN,CAAA,WAAAA,EAAA,eAAAC,gBAAA,IAAAX,EAAA,oBAAAA,EAAA,8BAAAY,MAAA,QAAAC,GAAA;AAAA,SAAAI,yBAAAC,MAAA,EAAAC,QAAA,QAAAD,MAAA,yBAAAE,MAAA,GAAAC,6BAAA,CAAAH,MAAA,EAAAC,QAAA,OAAAnC,GAAA,EAAAK,CAAA,MAAAtB,MAAA,CAAAE,qBAAA,QAAAqD,gBAAA,GAAAvD,MAAA,CAAAE,qBAAA,CAAAiD,MAAA,QAAA7B,CAAA,MAAAA,CAAA,GAAAiC,gBAAA,CAAA5C,MAAA,EAAAW,CAAA,MAAAL,GAAA,GAAAsC,gBAAA,CAAAjC,CAAA,OAAA8B,QAAA,CAAAI,OAAA,CAAAvC,GAAA,uBAAAjB,MAAA,CAAAyD,SAAA,CAAAC,oBAAA,CAAA9B,IAAA,CAAAuB,MAAA,EAAAlC,GAAA,aAAAoC,MAAA,CAAApC,GAAA,IAAAkC,MAAA,CAAAlC,GAAA,cAAAoC,MAAA;AAAA,SAAAC,8BAAAH,MAAA,EAAAC,QAAA,QAAAD,MAAA,yBAAAE,MAAA,WAAAM,UAAA,GAAA3D,MAAA,CAAAC,IAAA,CAAAkD,MAAA,OAAAlC,GAAA,EAAAK,CAAA,OAAAA,CAAA,MAAAA,CAAA,GAAAqC,UAAA,CAAAhD,MAAA,EAAAW,CAAA,MAAAL,GAAA,GAAA0C,UAAA,CAAArC,CAAA,OAAA8B,QAAA,CAAAI,OAAA,CAAAvC,GAAA,kBAAAoC,MAAA,CAAApC,GAAA,IAAAkC,MAAA,CAAAlC,GAAA,YAAAoC,MAAA;AAAA,SAAAO,eAAAC,GAAA,EAAAvC,CAAA,WAAAwC,eAAA,CAAAD,GAAA,KAAAE,qBAAA,CAAAF,GAAA,EAAAvC,CAAA,KAAAe,2BAAA,CAAAwB,GAAA,EAAAvC,CAAA,KAAA0C,gBAAA;AAAA,SAAAA,iBAAA,cAAAnC,SAAA;AAAA,SAAAQ,4BAAAlC,CAAA,EAAA8D,MAAA,SAAA9D,CAAA,qBAAAA,CAAA,sBAAA+D,iBAAA,CAAA/D,CAAA,EAAA8D,MAAA,OAAAzB,CAAA,GAAAxC,MAAA,CAAAyD,SAAA,CAAAU,QAAA,CAAAvC,IAAA,CAAAzB,CAAA,EAAAiE,KAAA,aAAA5B,CAAA,iBAAArC,CAAA,CAAAkE,WAAA,EAAA7B,CAAA,GAAArC,CAAA,CAAAkE,WAAA,CAAAC,IAAA,MAAA9B,CAAA,cAAAA,CAAA,mBAAAL,KAAA,CAAAoC,IAAA,CAAApE,CAAA,OAAAqC,CAAA,+DAAAgC,IAAA,CAAAhC,CAAA,UAAA0B,iBAAA,CAAA/D,CAAA,EAAA8D,MAAA;AAAA,SAAAC,kBAAAL,GAAA,EAAAY,GAAA,QAAAA,GAAA,YAAAA,GAAA,GAAAZ,GAAA,CAAAlD,MAAA,EAAA8D,GAAA,GAAAZ,GAAA,CAAAlD,MAAA,WAAAW,CAAA,MAAAoD,IAAA,OAAAvC,KAAA,CAAAsC,GAAA,GAAAnD,CAAA,GAAAmD,GAAA,EAAAnD,CAAA,IAAAoD,IAAA,CAAApD,CAAA,IAAAuC,GAAA,CAAAvC,CAAA,UAAAoD,IAAA;AAAA,SAAAX,sBAAAjE,CAAA,EAAA6E,CAAA,QAAA5E,CAAA,WAAAD,CAAA,gCAAA4B,MAAA,IAAA5B,CAAA,CAAA4B,MAAA,CAAAQ,QAAA,KAAApC,CAAA,4BAAAC,CAAA,QAAAF,CAAA,EAAA2C,CAAA,EAAAlB,CAAA,EAAAsD,CAAA,EAAAC,CAAA,OAAAlC,CAAA,OAAAxC,CAAA,iBAAAmB,CAAA,IAAAvB,CAAA,GAAAA,CAAA,CAAA6B,IAAA,CAAA9B,CAAA,GAAAkD,IAAA,QAAA2B,CAAA,QAAA3E,MAAA,CAAAD,CAAA,MAAAA,CAAA,UAAA4C,CAAA,uBAAAA,CAAA,IAAA9C,CAAA,GAAAyB,CAAA,CAAAM,IAAA,CAAA7B,CAAA,GAAA0C,IAAA,MAAAoC,CAAA,CAAAtE,IAAA,CAAAV,CAAA,CAAAqB,KAAA,GAAA2D,CAAA,CAAAlE,MAAA,KAAAgE,CAAA,GAAAhC,CAAA,iBAAA7C,CAAA,IAAAK,CAAA,OAAAqC,CAAA,GAAA1C,CAAA,yBAAA6C,CAAA,YAAA5C,CAAA,eAAA6E,CAAA,GAAA7E,CAAA,cAAAC,MAAA,CAAA4E,CAAA,MAAAA,CAAA,2BAAAzE,CAAA,QAAAqC,CAAA,aAAAqC,CAAA;AAAA,SAAAf,gBAAAD,GAAA,QAAA1B,KAAA,CAAAC,OAAA,CAAAyB,GAAA,UAAAA,GAAA;AAAA,SAAAiB,oBAAA,kBAF9B,qJAAAA,mBAAA,YAAAA,oBAAA,WAAAjF,CAAA,SAAAE,CAAA,EAAAF,CAAA,OAAAC,CAAA,GAAAE,MAAA,CAAAyD,SAAA,EAAAjB,CAAA,GAAA1C,CAAA,CAAAiF,cAAA,EAAA5E,CAAA,GAAAH,MAAA,CAAAgB,cAAA,cAAAjB,CAAA,EAAAF,CAAA,EAAAC,CAAA,IAAAC,CAAA,CAAAF,CAAA,IAAAC,CAAA,CAAAoB,KAAA,KAAAI,CAAA,wBAAAI,MAAA,GAAAA,MAAA,OAAAmD,CAAA,GAAAvD,CAAA,CAAAY,QAAA,kBAAA8C,CAAA,GAAA1D,CAAA,CAAA2D,aAAA,uBAAAL,CAAA,GAAAtD,CAAA,CAAA4D,WAAA,8BAAAC,OAAApF,CAAA,EAAAF,CAAA,EAAAC,CAAA,WAAAE,MAAA,CAAAgB,cAAA,CAAAjB,CAAA,EAAAF,CAAA,IAAAqB,KAAA,EAAApB,CAAA,EAAAQ,UAAA,MAAAc,YAAA,MAAAC,QAAA,SAAAtB,CAAA,CAAAF,CAAA,WAAAsF,MAAA,mBAAApF,CAAA,IAAAoF,MAAA,YAAAA,OAAApF,CAAA,EAAAF,CAAA,EAAAC,CAAA,WAAAC,CAAA,CAAAF,CAAA,IAAAC,CAAA,gBAAAsF,KAAArF,CAAA,EAAAF,CAAA,EAAAC,CAAA,EAAA0C,CAAA,QAAAlB,CAAA,GAAAzB,CAAA,IAAAA,CAAA,CAAA4D,SAAA,YAAA4B,SAAA,GAAAxF,CAAA,GAAAwF,SAAA,EAAAR,CAAA,GAAA7E,MAAA,CAAAsF,MAAA,CAAAhE,CAAA,CAAAmC,SAAA,GAAAuB,CAAA,OAAAO,OAAA,CAAA/C,CAAA,gBAAArC,CAAA,CAAA0E,CAAA,eAAA3D,KAAA,EAAAsE,gBAAA,CAAAzF,CAAA,EAAAD,CAAA,EAAAkF,CAAA,MAAAH,CAAA,aAAAY,SAAA1F,CAAA,EAAAF,CAAA,EAAAC,CAAA,mBAAA4F,IAAA,YAAAC,GAAA,EAAA5F,CAAA,CAAA6B,IAAA,CAAA/B,CAAA,EAAAC,CAAA,cAAAC,CAAA,aAAA2F,IAAA,WAAAC,GAAA,EAAA5F,CAAA,QAAAF,CAAA,CAAAuF,IAAA,GAAAA,IAAA,MAAAQ,CAAA,qBAAAjB,CAAA,qBAAAhC,CAAA,gBAAAJ,CAAA,gBAAAsD,CAAA,gBAAAR,UAAA,cAAAS,kBAAA,cAAAC,2BAAA,SAAAC,CAAA,OAAAb,MAAA,CAAAa,CAAA,EAAAnB,CAAA,qCAAAoB,CAAA,GAAAjG,MAAA,CAAAkG,cAAA,EAAAC,CAAA,GAAAF,CAAA,IAAAA,CAAA,CAAAA,CAAA,CAAAG,MAAA,QAAAD,CAAA,IAAAA,CAAA,KAAArG,CAAA,IAAA0C,CAAA,CAAAZ,IAAA,CAAAuE,CAAA,EAAAtB,CAAA,MAAAmB,CAAA,GAAAG,CAAA,OAAAE,CAAA,GAAAN,0BAAA,CAAAtC,SAAA,GAAA4B,SAAA,CAAA5B,SAAA,GAAAzD,MAAA,CAAAsF,MAAA,CAAAU,CAAA,YAAAM,sBAAAvG,CAAA,gCAAAa,OAAA,WAAAf,CAAA,IAAAsF,MAAA,CAAApF,CAAA,EAAAF,CAAA,YAAAE,CAAA,gBAAAwG,OAAA,CAAA1G,CAAA,EAAAE,CAAA,sBAAAyG,cAAAzG,CAAA,EAAAF,CAAA,aAAA4G,OAAA3G,CAAA,EAAAK,CAAA,EAAAmB,CAAA,EAAAuD,CAAA,QAAAG,CAAA,GAAAS,QAAA,CAAA1F,CAAA,CAAAD,CAAA,GAAAC,CAAA,EAAAI,CAAA,mBAAA6E,CAAA,CAAAU,IAAA,QAAAd,CAAA,GAAAI,CAAA,CAAAW,GAAA,EAAAC,CAAA,GAAAhB,CAAA,CAAA1D,KAAA,SAAA0E,CAAA,gBAAApE,OAAA,CAAAoE,CAAA,KAAApD,CAAA,CAAAZ,IAAA,CAAAgE,CAAA,eAAA/F,CAAA,CAAA6G,OAAA,CAAAd,CAAA,CAAAe,OAAA,EAAAC,IAAA,WAAA7G,CAAA,IAAA0G,MAAA,SAAA1G,CAAA,EAAAuB,CAAA,EAAAuD,CAAA,gBAAA9E,CAAA,IAAA0G,MAAA,UAAA1G,CAAA,EAAAuB,CAAA,EAAAuD,CAAA,QAAAhF,CAAA,CAAA6G,OAAA,CAAAd,CAAA,EAAAgB,IAAA,WAAA7G,CAAA,IAAA6E,CAAA,CAAA1D,KAAA,GAAAnB,CAAA,EAAAuB,CAAA,CAAAsD,CAAA,gBAAA7E,CAAA,WAAA0G,MAAA,UAAA1G,CAAA,EAAAuB,CAAA,EAAAuD,CAAA,SAAAA,CAAA,CAAAG,CAAA,CAAAW,GAAA,SAAA7F,CAAA,EAAAK,CAAA,oBAAAe,KAAA,WAAAA,MAAAnB,CAAA,EAAAyC,CAAA,aAAAqE,2BAAA,eAAAhH,CAAA,WAAAA,CAAA,EAAAC,CAAA,IAAA2G,MAAA,CAAA1G,CAAA,EAAAyC,CAAA,EAAA3C,CAAA,EAAAC,CAAA,gBAAAA,CAAA,GAAAA,CAAA,GAAAA,CAAA,CAAA8G,IAAA,CAAAC,0BAAA,EAAAA,0BAAA,IAAAA,0BAAA,qBAAArB,iBAAA3F,CAAA,EAAAC,CAAA,EAAA0C,CAAA,QAAArC,CAAA,GAAAyF,CAAA,mBAAAtE,CAAA,EAAAuD,CAAA,QAAA1E,CAAA,KAAAwC,CAAA,YAAAmE,KAAA,sCAAA3G,CAAA,KAAAoC,CAAA,oBAAAjB,CAAA,QAAAuD,CAAA,WAAA3D,KAAA,EAAAnB,CAAA,EAAA0C,IAAA,eAAAD,CAAA,CAAAuE,MAAA,GAAAzF,CAAA,EAAAkB,CAAA,CAAAmD,GAAA,GAAAd,CAAA,UAAAG,CAAA,GAAAxC,CAAA,CAAAwE,QAAA,MAAAhC,CAAA,QAAAJ,CAAA,GAAAqC,mBAAA,CAAAjC,CAAA,EAAAxC,CAAA,OAAAoC,CAAA,QAAAA,CAAA,KAAAiB,CAAA,mBAAAjB,CAAA,qBAAApC,CAAA,CAAAuE,MAAA,EAAAvE,CAAA,CAAA0E,IAAA,GAAA1E,CAAA,CAAA2E,KAAA,GAAA3E,CAAA,CAAAmD,GAAA,sBAAAnD,CAAA,CAAAuE,MAAA,QAAA5G,CAAA,KAAAyF,CAAA,QAAAzF,CAAA,GAAAoC,CAAA,EAAAC,CAAA,CAAAmD,GAAA,EAAAnD,CAAA,CAAA4E,iBAAA,CAAA5E,CAAA,CAAAmD,GAAA,uBAAAnD,CAAA,CAAAuE,MAAA,IAAAvE,CAAA,CAAA6E,MAAA,WAAA7E,CAAA,CAAAmD,GAAA,GAAAxF,CAAA,GAAAwC,CAAA,MAAAqD,CAAA,GAAAP,QAAA,CAAA5F,CAAA,EAAAC,CAAA,EAAA0C,CAAA,oBAAAwD,CAAA,CAAAN,IAAA,QAAAvF,CAAA,GAAAqC,CAAA,CAAAC,IAAA,GAAAF,CAAA,GAAAoC,CAAA,EAAAqB,CAAA,CAAAL,GAAA,KAAAE,CAAA,qBAAA3E,KAAA,EAAA8E,CAAA,CAAAL,GAAA,EAAAlD,IAAA,EAAAD,CAAA,CAAAC,IAAA,kBAAAuD,CAAA,CAAAN,IAAA,KAAAvF,CAAA,GAAAoC,CAAA,EAAAC,CAAA,CAAAuE,MAAA,YAAAvE,CAAA,CAAAmD,GAAA,GAAAK,CAAA,CAAAL,GAAA,mBAAAsB,oBAAApH,CAAA,EAAAC,CAAA,QAAA0C,CAAA,GAAA1C,CAAA,CAAAiH,MAAA,EAAA5G,CAAA,GAAAN,CAAA,CAAAqC,QAAA,CAAAM,CAAA,OAAArC,CAAA,KAAAJ,CAAA,SAAAD,CAAA,CAAAkH,QAAA,qBAAAxE,CAAA,IAAA3C,CAAA,CAAAqC,QAAA,eAAApC,CAAA,CAAAiH,MAAA,aAAAjH,CAAA,CAAA6F,GAAA,GAAA5F,CAAA,EAAAkH,mBAAA,CAAApH,CAAA,EAAAC,CAAA,eAAAA,CAAA,CAAAiH,MAAA,kBAAAvE,CAAA,KAAA1C,CAAA,CAAAiH,MAAA,YAAAjH,CAAA,CAAA6F,GAAA,OAAA9D,SAAA,uCAAAW,CAAA,iBAAAqD,CAAA,MAAAvE,CAAA,GAAAmE,QAAA,CAAAtF,CAAA,EAAAN,CAAA,CAAAqC,QAAA,EAAApC,CAAA,CAAA6F,GAAA,mBAAArE,CAAA,CAAAoE,IAAA,SAAA5F,CAAA,CAAAiH,MAAA,YAAAjH,CAAA,CAAA6F,GAAA,GAAArE,CAAA,CAAAqE,GAAA,EAAA7F,CAAA,CAAAkH,QAAA,SAAAnB,CAAA,MAAAhB,CAAA,GAAAvD,CAAA,CAAAqE,GAAA,SAAAd,CAAA,GAAAA,CAAA,CAAApC,IAAA,IAAA3C,CAAA,CAAAD,CAAA,CAAAyH,UAAA,IAAAzC,CAAA,CAAA3D,KAAA,EAAApB,CAAA,CAAAkD,IAAA,GAAAnD,CAAA,CAAA0H,OAAA,eAAAzH,CAAA,CAAAiH,MAAA,KAAAjH,CAAA,CAAAiH,MAAA,WAAAjH,CAAA,CAAA6F,GAAA,GAAA5F,CAAA,GAAAD,CAAA,CAAAkH,QAAA,SAAAnB,CAAA,IAAAhB,CAAA,IAAA/E,CAAA,CAAAiH,MAAA,YAAAjH,CAAA,CAAA6F,GAAA,OAAA9D,SAAA,sCAAA/B,CAAA,CAAAkH,QAAA,SAAAnB,CAAA,cAAA2B,aAAAzH,CAAA,QAAAF,CAAA,KAAA4H,MAAA,EAAA1H,CAAA,YAAAA,CAAA,KAAAF,CAAA,CAAA6H,QAAA,GAAA3H,CAAA,WAAAA,CAAA,KAAAF,CAAA,CAAA8H,UAAA,GAAA5H,CAAA,KAAAF,CAAA,CAAA+H,QAAA,GAAA7H,CAAA,WAAA8H,UAAA,CAAAtH,IAAA,CAAAV,CAAA,cAAAiI,cAAA/H,CAAA,QAAAF,CAAA,GAAAE,CAAA,CAAAgI,UAAA,QAAAlI,CAAA,CAAA6F,IAAA,oBAAA7F,CAAA,CAAA8F,GAAA,EAAA5F,CAAA,CAAAgI,UAAA,GAAAlI,CAAA,aAAA0F,QAAAxF,CAAA,SAAA8H,UAAA,MAAAJ,MAAA,aAAA1H,CAAA,CAAAa,OAAA,CAAA4G,YAAA,cAAAQ,KAAA,iBAAA5B,OAAAvG,CAAA,QAAAA,CAAA,WAAAA,CAAA,QAAAC,CAAA,GAAAD,CAAA,CAAAgF,CAAA,OAAA/E,CAAA,SAAAA,CAAA,CAAA8B,IAAA,CAAA/B,CAAA,4BAAAA,CAAA,CAAAmD,IAAA,SAAAnD,CAAA,OAAAoI,KAAA,CAAApI,CAAA,CAAAc,MAAA,SAAAR,CAAA,OAAAmB,CAAA,YAAA0B,KAAA,aAAA7C,CAAA,GAAAN,CAAA,CAAAc,MAAA,OAAA6B,CAAA,CAAAZ,IAAA,CAAA/B,CAAA,EAAAM,CAAA,UAAA6C,IAAA,CAAA9B,KAAA,GAAArB,CAAA,CAAAM,CAAA,GAAA6C,IAAA,CAAAP,IAAA,OAAAO,IAAA,SAAAA,IAAA,CAAA9B,KAAA,GAAAnB,CAAA,EAAAiD,IAAA,CAAAP,IAAA,OAAAO,IAAA,YAAA1B,CAAA,CAAA0B,IAAA,GAAA1B,CAAA,gBAAAO,SAAA,CAAAL,OAAA,CAAA3B,CAAA,kCAAAiG,iBAAA,CAAArC,SAAA,GAAAsC,0BAAA,EAAA5F,CAAA,CAAAkG,CAAA,mBAAAnF,KAAA,EAAA6E,0BAAA,EAAA3E,YAAA,SAAAjB,CAAA,CAAA4F,0BAAA,mBAAA7E,KAAA,EAAA4E,iBAAA,EAAA1E,YAAA,SAAA0E,iBAAA,CAAAoC,WAAA,GAAA/C,MAAA,CAAAY,0BAAA,EAAAnB,CAAA,wBAAA/E,CAAA,CAAAsI,mBAAA,aAAApI,CAAA,QAAAF,CAAA,wBAAAE,CAAA,IAAAA,CAAA,CAAAsE,WAAA,WAAAxE,CAAA,KAAAA,CAAA,KAAAiG,iBAAA,6BAAAjG,CAAA,CAAAqI,WAAA,IAAArI,CAAA,CAAAyE,IAAA,OAAAzE,CAAA,CAAAuI,IAAA,aAAArI,CAAA,WAAAC,MAAA,CAAAqI,cAAA,GAAArI,MAAA,CAAAqI,cAAA,CAAAtI,CAAA,EAAAgG,0BAAA,KAAAhG,CAAA,CAAAuI,SAAA,GAAAvC,0BAAA,EAAAZ,MAAA,CAAApF,CAAA,EAAA6E,CAAA,yBAAA7E,CAAA,CAAA0D,SAAA,GAAAzD,MAAA,CAAAsF,MAAA,CAAAe,CAAA,GAAAtG,CAAA,KAAAF,CAAA,CAAA0I,KAAA,aAAAxI,CAAA,aAAA4G,OAAA,EAAA5G,CAAA,OAAAuG,qBAAA,CAAAE,aAAA,CAAA/C,SAAA,GAAA0B,MAAA,CAAAqB,aAAA,CAAA/C,SAAA,EAAAuB,CAAA,iCAAAnF,CAAA,CAAA2G,aAAA,GAAAA,aAAA,EAAA3G,CAAA,CAAA2I,KAAA,aAAAzI,CAAA,EAAAD,CAAA,EAAA0C,CAAA,EAAArC,CAAA,EAAAmB,CAAA,eAAAA,CAAA,KAAAA,CAAA,GAAAmH,OAAA,OAAA5D,CAAA,OAAA2B,aAAA,CAAApB,IAAA,CAAArF,CAAA,EAAAD,CAAA,EAAA0C,CAAA,EAAArC,CAAA,GAAAmB,CAAA,UAAAzB,CAAA,CAAAsI,mBAAA,CAAArI,CAAA,IAAA+E,CAAA,GAAAA,CAAA,CAAA7B,IAAA,GAAA4D,IAAA,WAAA7G,CAAA,WAAAA,CAAA,CAAA0C,IAAA,GAAA1C,CAAA,CAAAmB,KAAA,GAAA2D,CAAA,CAAA7B,IAAA,WAAAsD,qBAAA,CAAAD,CAAA,GAAAlB,MAAA,CAAAkB,CAAA,EAAAzB,CAAA,gBAAAO,MAAA,CAAAkB,CAAA,EAAAxB,CAAA,iCAAAM,MAAA,CAAAkB,CAAA,6DAAAxG,CAAA,CAAAI,IAAA,aAAAF,CAAA,QAAAF,CAAA,GAAAG,MAAA,CAAAD,CAAA,GAAAD,CAAA,gBAAA0C,CAAA,IAAA3C,CAAA,EAAAC,CAAA,CAAAS,IAAA,CAAAiC,CAAA,UAAA1C,CAAA,CAAA4I,OAAA,aAAA1F,KAAA,WAAAlD,CAAA,CAAAa,MAAA,SAAAZ,CAAA,GAAAD,CAAA,CAAA6I,GAAA,QAAA5I,CAAA,IAAAF,CAAA,SAAAmD,IAAA,CAAA9B,KAAA,GAAAnB,CAAA,EAAAiD,IAAA,CAAAP,IAAA,OAAAO,IAAA,WAAAA,IAAA,CAAAP,IAAA,OAAAO,IAAA,QAAAnD,CAAA,CAAAuG,MAAA,GAAAA,MAAA,EAAAb,OAAA,CAAA9B,SAAA,KAAAY,WAAA,EAAAkB,OAAA,EAAAyC,KAAA,WAAAA,MAAAnI,CAAA,aAAA+I,IAAA,WAAA5F,IAAA,WAAAkE,IAAA,QAAAC,KAAA,GAAApH,CAAA,OAAA0C,IAAA,YAAAuE,QAAA,cAAAD,MAAA,gBAAApB,GAAA,GAAA5F,CAAA,OAAA8H,UAAA,CAAAjH,OAAA,CAAAkH,aAAA,IAAAjI,CAAA,WAAAC,CAAA,kBAAAA,CAAA,CAAA+I,MAAA,OAAArG,CAAA,CAAAZ,IAAA,OAAA9B,CAAA,MAAAmI,KAAA,EAAAnI,CAAA,CAAAsE,KAAA,cAAAtE,CAAA,IAAAC,CAAA,MAAA+I,IAAA,WAAAA,KAAA,SAAArG,IAAA,WAAA1C,CAAA,QAAA8H,UAAA,IAAAE,UAAA,kBAAAhI,CAAA,CAAA2F,IAAA,QAAA3F,CAAA,CAAA4F,GAAA,cAAAoD,IAAA,KAAA3B,iBAAA,WAAAA,kBAAAvH,CAAA,aAAA4C,IAAA,QAAA5C,CAAA,MAAAC,CAAA,kBAAAkJ,OAAAxG,CAAA,EAAArC,CAAA,WAAA0E,CAAA,CAAAa,IAAA,YAAAb,CAAA,CAAAc,GAAA,GAAA9F,CAAA,EAAAC,CAAA,CAAAkD,IAAA,GAAAR,CAAA,EAAArC,CAAA,KAAAL,CAAA,CAAAiH,MAAA,WAAAjH,CAAA,CAAA6F,GAAA,GAAA5F,CAAA,KAAAI,CAAA,aAAAA,CAAA,QAAA0H,UAAA,CAAAlH,MAAA,MAAAR,CAAA,SAAAA,CAAA,QAAAmB,CAAA,QAAAuG,UAAA,CAAA1H,CAAA,GAAA0E,CAAA,GAAAvD,CAAA,CAAAyG,UAAA,iBAAAzG,CAAA,CAAAmG,MAAA,SAAAuB,MAAA,aAAA1H,CAAA,CAAAmG,MAAA,SAAAmB,IAAA,QAAA5D,CAAA,GAAAxC,CAAA,CAAAZ,IAAA,CAAAN,CAAA,eAAAsD,CAAA,GAAApC,CAAA,CAAAZ,IAAA,CAAAN,CAAA,qBAAA0D,CAAA,IAAAJ,CAAA,aAAAgE,IAAA,GAAAtH,CAAA,CAAAoG,QAAA,SAAAsB,MAAA,CAAA1H,CAAA,CAAAoG,QAAA,gBAAAkB,IAAA,GAAAtH,CAAA,CAAAqG,UAAA,SAAAqB,MAAA,CAAA1H,CAAA,CAAAqG,UAAA,cAAA3C,CAAA,aAAA4D,IAAA,GAAAtH,CAAA,CAAAoG,QAAA,SAAAsB,MAAA,CAAA1H,CAAA,CAAAoG,QAAA,qBAAA9C,CAAA,YAAAkC,KAAA,qDAAA8B,IAAA,GAAAtH,CAAA,CAAAqG,UAAA,SAAAqB,MAAA,CAAA1H,CAAA,CAAAqG,UAAA,YAAAN,MAAA,WAAAA,OAAAtH,CAAA,EAAAF,CAAA,aAAAC,CAAA,QAAA+H,UAAA,CAAAlH,MAAA,MAAAb,CAAA,SAAAA,CAAA,QAAAK,CAAA,QAAA0H,UAAA,CAAA/H,CAAA,OAAAK,CAAA,CAAAsH,MAAA,SAAAmB,IAAA,IAAApG,CAAA,CAAAZ,IAAA,CAAAzB,CAAA,wBAAAyI,IAAA,GAAAzI,CAAA,CAAAwH,UAAA,QAAArG,CAAA,GAAAnB,CAAA,aAAAmB,CAAA,iBAAAvB,CAAA,mBAAAA,CAAA,KAAAuB,CAAA,CAAAmG,MAAA,IAAA5H,CAAA,IAAAA,CAAA,IAAAyB,CAAA,CAAAqG,UAAA,KAAArG,CAAA,cAAAuD,CAAA,GAAAvD,CAAA,GAAAA,CAAA,CAAAyG,UAAA,cAAAlD,CAAA,CAAAa,IAAA,GAAA3F,CAAA,EAAA8E,CAAA,CAAAc,GAAA,GAAA9F,CAAA,EAAAyB,CAAA,SAAAyF,MAAA,gBAAA/D,IAAA,GAAA1B,CAAA,CAAAqG,UAAA,EAAA9B,CAAA,SAAAoD,QAAA,CAAApE,CAAA,MAAAoE,QAAA,WAAAA,SAAAlJ,CAAA,EAAAF,CAAA,oBAAAE,CAAA,CAAA2F,IAAA,QAAA3F,CAAA,CAAA4F,GAAA,qBAAA5F,CAAA,CAAA2F,IAAA,mBAAA3F,CAAA,CAAA2F,IAAA,QAAA1C,IAAA,GAAAjD,CAAA,CAAA4F,GAAA,gBAAA5F,CAAA,CAAA2F,IAAA,SAAAqD,IAAA,QAAApD,GAAA,GAAA5F,CAAA,CAAA4F,GAAA,OAAAoB,MAAA,kBAAA/D,IAAA,yBAAAjD,CAAA,CAAA2F,IAAA,IAAA7F,CAAA,UAAAmD,IAAA,GAAAnD,CAAA,GAAAgG,CAAA,KAAAqD,MAAA,WAAAA,OAAAnJ,CAAA,aAAAF,CAAA,QAAAgI,UAAA,CAAAlH,MAAA,MAAAd,CAAA,SAAAA,CAAA,QAAAC,CAAA,QAAA+H,UAAA,CAAAhI,CAAA,OAAAC,CAAA,CAAA6H,UAAA,KAAA5H,CAAA,cAAAkJ,QAAA,CAAAnJ,CAAA,CAAAiI,UAAA,EAAAjI,CAAA,CAAA8H,QAAA,GAAAE,aAAA,CAAAhI,CAAA,GAAA+F,CAAA,yBAAAsD,OAAApJ,CAAA,aAAAF,CAAA,QAAAgI,UAAA,CAAAlH,MAAA,MAAAd,CAAA,SAAAA,CAAA,QAAAC,CAAA,QAAA+H,UAAA,CAAAhI,CAAA,OAAAC,CAAA,CAAA2H,MAAA,KAAA1H,CAAA,QAAAyC,CAAA,GAAA1C,CAAA,CAAAiI,UAAA,kBAAAvF,CAAA,CAAAkD,IAAA,QAAAvF,CAAA,GAAAqC,CAAA,CAAAmD,GAAA,EAAAmC,aAAA,CAAAhI,CAAA,YAAAK,CAAA,gBAAA2G,KAAA,8BAAAsC,aAAA,WAAAA,cAAAvJ,CAAA,EAAAC,CAAA,EAAA0C,CAAA,gBAAAwE,QAAA,KAAA9E,QAAA,EAAAkE,MAAA,CAAAvG,CAAA,GAAAyH,UAAA,EAAAxH,CAAA,EAAAyH,OAAA,EAAA/E,CAAA,oBAAAuE,MAAA,UAAApB,GAAA,GAAA5F,CAAA,GAAA8F,CAAA,OAAAhG,CAAA;AAAA,SAAAwJ,mBAAAC,GAAA,EAAA5C,OAAA,EAAA6C,MAAA,EAAAC,KAAA,EAAAC,MAAA,EAAAxI,GAAA,EAAA0E,GAAA,cAAA+D,IAAA,GAAAJ,GAAA,CAAArI,GAAA,EAAA0E,GAAA,OAAAzE,KAAA,GAAAwI,IAAA,CAAAxI,KAAA,WAAAyI,KAAA,IAAAJ,MAAA,CAAAI,KAAA,iBAAAD,IAAA,CAAAjH,IAAA,IAAAiE,OAAA,CAAAxF,KAAA,YAAAuH,OAAA,CAAA/B,OAAA,CAAAxF,KAAA,EAAA0F,IAAA,CAAA4C,KAAA,EAAAC,MAAA;AAAA,SAAAG,kBAAAC,EAAA,6BAAAC,IAAA,SAAAC,IAAA,GAAArJ,SAAA,aAAA+H,OAAA,WAAA/B,OAAA,EAAA6C,MAAA,QAAAD,GAAA,GAAAO,EAAA,CAAArJ,KAAA,CAAAsJ,IAAA,EAAAC,IAAA,YAAAP,MAAAtI,KAAA,IAAAmI,kBAAA,CAAAC,GAAA,EAAA5C,OAAA,EAAA6C,MAAA,EAAAC,KAAA,EAAAC,MAAA,UAAAvI,KAAA,cAAAuI,OAAA3G,GAAA,IAAAuG,kBAAA,CAAAC,GAAA,EAAA5C,OAAA,EAAA6C,MAAA,EAAAC,KAAA,EAAAC,MAAA,WAAA3G,GAAA,KAAA0G,KAAA,CAAAQ,SAAA;AAIA,IAAMC,KAAK,GAAG5K,OAAO,CAAC,OAAO,CAAC;AAC9B,IAAI6K,OAAO,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;AAExB,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAIC,GAAG,EAAEC,GAAG,EAAK;EAC/B,OAAO9I,MAAM,CAAC+I,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIH,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC;AACpE,CAAC;AAED,IAAMK,UAAU;EAAA,IAAAC,IAAA,GAAAhB,iBAAA,eAAA9E,mBAAA,GAAAsD,IAAA,CAAG,SAAAyC,SAAOC,GAAG,EAAEC,GAAG;IAAA,IAAAC,IAAA,EAAAZ,GAAA,EAAAa,OAAA,EAAAC,GAAA,EAAAC,IAAA;IAAA,OAAArG,mBAAA,GAAAM,IAAA,UAAAgG,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAzC,IAAA,GAAAyC,SAAA,CAAArI,IAAA;QAAA;UAC1BgI,IAAI,GAAGF,GAAG,CAACQ,OAAO,CAACN,IAAI;UACvBZ,GAAG,GAAG,IAAID,IAAI,CAAC,CAAC,CAACoB,OAAO,CAAC,CAAC;UAC1BN,OAAO,GAAI,CAAC,IAAId,IAAI,CAAD,CAAC,GAAI,IAAI,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG;UACjDe,GAAG,GAAGb,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC;UAAAgB,SAAA,CAAArI,IAAA;UAAA,OAEhBwI,qBAAU,CAACC,KAAK,CAAC,wCAAwC,EAAE,CAACT,IAAI,CAAC,CAAC;QAAA;UAAxFU,OAAO,CAACC,IAAI,CAAC,GAAAN,SAAA,CAAAnE,IAAA;UAAA,IACRyE,IAAI;YAAAN,SAAA,CAAArI,IAAA;YAAA;UAAA;UAAA,OAAAqI,SAAA,CAAAhE,MAAA,WACE0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,wBAAwB;YACjCF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAEFiB,IAAI,GAAGQ,IAAI,CAAC,CAAC,CAAC;UAAA,MACdR,IAAI,CAACa,QAAQ,GAAG5B,GAAG,IAAI,CAAC;YAAAiB,SAAA,CAAArI,IAAA;YAAA;UAAA;UACxB,IAAAiJ,mBAAO,mFAAAC,MAAA,CAAkFf,IAAI,CAACgB,KAAK,qCAAAD,MAAA,CAAkChB,GAAG,cAAAgB,MAAA,CAAW9B,GAAG;YAAA,IAAAgC,KAAA,GAAAxC,iBAAA,eAAA9E,mBAAA,GAAAsD,IAAA,CAAI,SAAAiE,QAAO1C,KAAK,EAAE2C,QAAQ,EAAEC,IAAI;cAAA,IAAAC,IAAA;cAAA,OAAA1H,mBAAA,GAAAM,IAAA,UAAAqH,SAAAC,QAAA;gBAAA,kBAAAA,QAAA,CAAA9D,IAAA,GAAA8D,QAAA,CAAA1J,IAAA;kBAAA;oBAC9KwJ,IAAI,GAAGG,IAAI,CAACC,KAAK,CAACL,IAAI,CAAC;oBAAA,MACvBC,IAAI,CAACK,IAAI,IAAI,OAAO;sBAAAH,QAAA,CAAA1J,IAAA;sBAAA;oBAAA;oBAAA0J,QAAA,CAAA1J,IAAA;oBAAA,OACdwI,qBAAU,CAACsB,OAAO,CAAC,yDAAyD,EAAE,CAAC5B,GAAG,EAAED,OAAO,EAAEE,IAAI,CAACgB,KAAK,CAAC,CAAC;kBAAA;oBAAA,OAAAO,QAAA,CAAArF,MAAA,WACxG0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;sBACxBC,OAAO,EAAE,wBAAwB;sBACjCF,MAAM,EAAE,IAAI;sBACZG,SAAS,EAAE7B,OAAO;sBAClBe,OAAO,EAAEA;oBACb,CAAC,CAAC;kBAAA;kBAAA;oBAAA,OAAAyB,QAAA,CAAA5D,IAAA;gBAAA;cAAA,GAAAuD,OAAA;YAAA,CAET;YAAA,iBAAAU,GAAA,EAAAC,GAAA,EAAAC,GAAA;cAAA,OAAAb,KAAA,CAAA5L,KAAA,OAAAE,SAAA;YAAA;UAAA,IAAC;UAAC2K,SAAA,CAAArI,IAAA;UAAA;QAAA;UAAA,OAAAqI,SAAA,CAAAhE,MAAA,WAEI0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,qBAAqB;YAC9BF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAmB,SAAA,CAAAvC,IAAA;MAAA;IAAA,GAAA+B,QAAA;EAAA,CAET;EAAA,gBAnCKF,UAAUA,CAAAuC,EAAA,EAAAC,GAAA;IAAA,OAAAvC,IAAA,CAAApK,KAAA,OAAAE,SAAA;EAAA;AAAA,GAmCf;AAED,IAAM0M,OAAO;EAAA,IAAAC,KAAA,GAAAzD,iBAAA,eAAA9E,mBAAA,GAAAsD,IAAA,CAAG,SAAAkF,SAAOxC,GAAG,EAAEC,GAAG;IAAA,IAAAC,IAAA;IAAA,OAAAlG,mBAAA,GAAAM,IAAA,UAAAmI,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAA5E,IAAA,GAAA4E,SAAA,CAAAxK,IAAA;QAAA;UACvBgI,IAAI,GAAGF,GAAG,CAACQ,OAAO,CAACN,IAAI;UAC3BD,GAAG,CAAC0C,QAAQ,gGAAAvB,MAAA,CAAgGlB,IAAI,CAAE,CAAC;UACnH;QAAA;QAAA;UAAA,OAAAwC,SAAA,CAAA1E,IAAA;MAAA;IAAA,GAAAwE,QAAA;EAAA,CACH;EAAA,gBAJKF,OAAOA,CAAAM,GAAA,EAAAC,GAAA;IAAA,OAAAN,KAAA,CAAA7M,KAAA,OAAAE,SAAA;EAAA;AAAA,GAIZ;AAGD,IAAMkN,QAAQ;EAAA,IAAAC,KAAA,GAAAjE,iBAAA,eAAA9E,mBAAA,GAAAsD,IAAA,CAAG,SAAA0F,SAAOhD,GAAG,EAAEC,GAAG;IAAA,IAAAC,IAAA,EAAA+C,qBAAA,EAAAC,sBAAA,EAAArC,IAAA,EAAAsC,sBAAA,EAAAC,sBAAA,EAAAC,QAAA,EAAAC,aAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,QAAA,EAAAC,aAAA,EAAAC,MAAA,EAAAC,EAAA,EAAAC,QAAA,EAAAC,EAAA,EAAAC,IAAA,EAAAC,UAAA,EAAAlD,MAAA,EAAAmD,IAAA,EAAAC,KAAA,EAAAC,MAAA;IAAA,OAAAnK,mBAAA,GAAAM,IAAA,UAAA8J,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAvG,IAAA,GAAAuG,SAAA,CAAAnM,IAAA;QAAA;UACxBgI,IAAI,GAAGF,GAAG,CAACQ,OAAO,CAACN,IAAI;UAAA,IAEtBA,IAAI;YAAAmE,SAAA,CAAAnM,IAAA;YAAA;UAAA;UAAA,OAAAmM,SAAA,CAAA9H,MAAA,WACE0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAAiF,SAAA,CAAAnM,IAAA;UAAA,OAEewI,qBAAU,CAACC,KAAK,CAAC,wCAAwC,EAAE,CAACT,IAAI,CAAC,CAAC;QAAA;UAAA+C,qBAAA,GAAAoB,SAAA,CAAAjI,IAAA;UAAA8G,sBAAA,GAAApK,cAAA,CAAAmK,qBAAA;UAAhFpC,IAAI,GAAAqC,sBAAA;UAAA,IAENrC,IAAI;YAAAwD,SAAA,CAAAnM,IAAA;YAAA;UAAA;UAAA,OAAAmM,SAAA,CAAA9H,MAAA,WACE0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAAiF,SAAA,CAAAnM,IAAA;UAAA,OAEmBwI,qBAAU,CAACC,KAAK,CAAC,yDAAyD,EAAE,CAACE,IAAI,CAAC,CAAC,CAAC,CAACQ,KAAK,CAAC,CAAC;QAAA;UAAA8B,sBAAA,GAAAkB,SAAA,CAAAjI,IAAA;UAAAgH,sBAAA,GAAAtK,cAAA,CAAAqK,sBAAA;UAA9GE,QAAQ,GAAAD,sBAAA;UACXE,aAAa,GAAG,CAAC;UACrBD,QAAQ,CAACvN,OAAO,CAAC,UAAC4L,IAAI,EAAK;YACvB4B,aAAa,IAAI5B,IAAI,CAAC4C,KAAK;UAC/B,CAAC,CAAC;UAACD,SAAA,CAAAnM,IAAA;UAAA,OACsBwI,qBAAU,CAACC,KAAK,CAAC,yDAAyD,EAAE,CAACE,IAAI,CAAC,CAAC,CAAC,CAACQ,KAAK,CAAC,CAAC;QAAA;UAAAkC,sBAAA,GAAAc,SAAA,CAAAjI,IAAA;UAAAoH,sBAAA,GAAA1K,cAAA,CAAAyK,sBAAA;UAA9GE,QAAQ,GAAAD,sBAAA;UACXE,aAAa,GAAG,CAAC;UACrBD,QAAQ,CAAC3N,OAAO,CAAC,UAAC4L,IAAI,EAAK;YACvBgC,aAAa,IAAIhC,IAAI,CAAC4C,KAAK;UAC/B,CAAC,CAAC;UAACX,MAAA,GAE4E9C,IAAI,CAAC,CAAC,CAAC,EAA9E+C,EAAE,GAAAD,MAAA,CAAFC,EAAE,EAAEC,QAAQ,GAAAF,MAAA,CAARE,QAAQ,EAAEC,EAAE,GAAAH,MAAA,CAAFG,EAAE,EAAEC,IAAI,GAAAJ,MAAA,CAAJI,IAAI,EAAEC,UAAU,GAAAL,MAAA,CAAVK,UAAU,EAAElD,MAAM,GAAA6C,MAAA,CAAN7C,MAAM,EAAEmD,IAAI,GAAAN,MAAA,CAAJM,IAAI,EAAEC,KAAK,GAAAP,MAAA,CAALO,KAAK,EAAKC,MAAM,GAAA/L,wBAAA,CAAAuL,MAAA,EAAAhP,SAAA;UAAA,OAAA0P,SAAA,CAAA9H,MAAA,WACnE0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,SAAS;YAClBF,MAAM,EAAE,IAAI;YACZY,IAAI,EAAE;cACFK,IAAI,EAAEoC,MAAM,CAACpC,IAAI;cACjBwC,OAAO,EAAEJ,MAAM,CAACI,OAAO;cACvBC,SAAS,EAAEL,MAAM,CAACK,SAAS;cAC3BC,UAAU,EAAEN,MAAM,CAAC9C,KAAK;cACxBqD,UAAU,EAAEP,MAAM,CAACG;YACvB,CAAC;YACDhB,aAAa,EAAEA,aAAa;YAC5BI,aAAa,EAAEA,aAAa;YAC5BzC,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAiF,SAAA,CAAArG,IAAA;MAAA;IAAA,GAAAgF,QAAA;EAAA,CAEL;EAAA,gBA9CKF,QAAQA,CAAA6B,GAAA,EAAAC,GAAA;IAAA,OAAA7B,KAAA,CAAArN,KAAA,OAAAE,SAAA;EAAA;AAAA,GA8Cb;AAED,IAAMiP,UAAU;EAAA,IAAAC,KAAA,GAAAhG,iBAAA,eAAA9E,mBAAA,GAAAsD,IAAA,CAAG,SAAAyH,SAAO/E,GAAG,EAAEC,GAAG;IAAA,IAAAC,IAAA,EAAA1G,IAAA,EAAAoB,IAAA,EAAAoK,sBAAA,EAAAC,sBAAA,EAAApE,IAAA;IAAA,OAAA7G,mBAAA,GAAAM,IAAA,UAAA4K,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAArH,IAAA,GAAAqH,SAAA,CAAAjN,IAAA;QAAA;UAC1BgI,IAAI,GAAGF,GAAG,CAACQ,OAAO,CAACN,IAAI;UACvB1G,IAAI,GAAGwG,GAAG,CAACyB,IAAI,CAACjI,IAAI;UACpBoB,IAAI,GAAGoF,GAAG,CAACyB,IAAI,CAAC7G,IAAI;UAAAuK,SAAA,CAAAjN,IAAA;UAAA,OAEHwI,qBAAU,CAACC,KAAK,CAAC,wCAAwC,EAAE,CAACT,IAAI,CAAC,CAAC;QAAA;UAAA8E,sBAAA,GAAAG,SAAA,CAAA/I,IAAA;UAAA6I,sBAAA,GAAAnM,cAAA,CAAAkM,sBAAA;UAAhFnE,IAAI,GAAAoE,sBAAA;UAAA,MACP,CAACpE,IAAI,IAAI,CAACjG,IAAI,IAAI,CAACpB,IAAI;YAAA2L,SAAA,CAAAjN,IAAA;YAAA;UAAA;UAAA,OAAAiN,SAAA,CAAA5I,MAAA,WAAS0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACrDC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAC;UAAC+F,SAAA,CAAAC,EAAA,GACIxK,IAAI;UAAAuK,SAAA,CAAAjN,IAAA,GAAAiN,SAAA,CAAAC,EAAA,KACH,UAAU;UAAA;QAAA;UAAAD,SAAA,CAAAjN,IAAA;UAAA,OACLwI,qBAAU,CAACC,KAAK,CAAC,mDAAmD,EAAE,CAACnH,IAAI,EAAE0G,IAAI,CAAC,CAAC;QAAA;UAAA,OAAAiF,SAAA,CAAA5I,MAAA,WAClF0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,kCAAkC;YAC3CF,MAAM,EAAE,IAAI;YACZG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA,OAAA+F,SAAA,CAAA5I,MAAA,WAIK0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;QAAA;UAAA,OAAA+F,SAAA,CAAAnH,IAAA;MAAA;IAAA,GAAA+G,QAAA;EAAA,CAIb;EAAA,gBA9BKF,UAAUA,CAAAQ,IAAA,EAAAC,IAAA;IAAA,OAAAR,KAAA,CAAApP,KAAA,OAAAE,SAAA;EAAA;AAAA,GA8Bf;AAED,IAAM2P,cAAc;EAAA,IAAAC,KAAA,GAAA1G,iBAAA,eAAA9E,mBAAA,GAAAsD,IAAA,CAAG,SAAAmI,SAAOzF,GAAG,EAAEC,GAAG;IAAA,IAAAC,IAAA,EAAA2D,QAAA,EAAA6B,WAAA,EAAAC,sBAAA,EAAAC,uBAAA,EAAA/E,IAAA;IAAA,OAAA7G,mBAAA,GAAAM,IAAA,UAAAuL,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAhI,IAAA,GAAAgI,SAAA,CAAA5N,IAAA;QAAA;UAC9BgI,IAAI,GAAGF,GAAG,CAACQ,OAAO,CAACN,IAAI;UACvB2D,QAAQ,GAAG7D,GAAG,CAACyB,IAAI,CAACoC,QAAQ;UAC5B6B,WAAW,GAAG1F,GAAG,CAACyB,IAAI,CAACiE,WAAW,EACtC;UAAA,MAEI,CAAC7B,QAAQ,IAAI,CAAC6B,WAAW;YAAAI,SAAA,CAAA5N,IAAA;YAAA;UAAA;UAAA,OAAA4N,SAAA,CAAAvJ,MAAA,WAAS0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACvDC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAC;UAAC0G,SAAA,CAAA5N,IAAA;UAAA,OACiBwI,qBAAU,CAACC,KAAK,CAAC,2DAA2D,EAAE,CAACT,IAAI,EAAE,IAAA6F,cAAG,EAAClC,QAAQ,CAAC,CAAC,CAAC;QAAA;UAAA8B,sBAAA,GAAAG,SAAA,CAAA1J,IAAA;UAAAwJ,uBAAA,GAAA9M,cAAA,CAAA6M,sBAAA;UAAlH9E,IAAI,GAAA+E,uBAAA;UAAA,MACP/E,IAAI,CAAChL,MAAM,IAAI,CAAC;YAAAiQ,SAAA,CAAA5N,IAAA;YAAA;UAAA;UAAA,OAAA4N,SAAA,CAAAvJ,MAAA,WAAS0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YAC9CC,OAAO,EAAE,oBAAoB;YAC7BF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAC;;UAEH;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UAAA0G,SAAA,CAAA5N,IAAA;UAAA,OAEMwI,qBAAU,CAACC,KAAK,CAAC,+EAA+E,EAAE,CAACpB,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE,IAAAwG,cAAG,EAACL,WAAW,CAAC,EAAEA,WAAW,EAAExF,IAAI,CAAC,CAAC;QAAA;UAAA,OAAA4F,SAAA,CAAAvJ,MAAA,WACrK0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,kCAAkC;YAC3CF,MAAM,EAAE,IAAI;YACZG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;QAAA;UAAA,OAAA0G,SAAA,CAAA9H,IAAA;MAAA;IAAA,GAAAyH,QAAA;EAAA,CAEL;EAAA,gBA5CKF,cAAcA,CAAAS,IAAA,EAAAC,IAAA;IAAA,OAAAT,KAAA,CAAA9P,KAAA,OAAAE,SAAA;EAAA;AAAA,GA4CnB;AAED,IAAMsQ,eAAe;EAAA,IAAAC,KAAA,GAAArH,iBAAA,eAAA9E,mBAAA,GAAAsD,IAAA,CAAG,SAAA8I,SAAOpG,GAAG,EAAEC,GAAG;IAAA,IAAAC,IAAA,EAAAwB,IAAA,EAAA2E,uBAAA,EAAAC,uBAAA,EAAAzF,IAAA,EAAA0F,uBAAA,EAAAC,uBAAA,EAAAC,UAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,WAAA,EAAAC,KAAA,EAAAC,WAAA,EAAAC,GAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,YAAA,EAAAC,MAAA,EAAAC,YAAA,EAAAC,IAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,aAAA,EAAAC,OAAA,EAAAC,YAAA,EAAAC,KAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,aAAA,EAAAC,OAAA,EAAAC,YAAA,EAAAC,KAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,aAAA,EAAAC,OAAA,EAAAC,YAAA,EAAAC,KAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,aAAA,EAAAC,OAAA,EAAAC,YAAA,EAAAC,KAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,aAAA,EAAAC,OAAA,EAAAC,YAAA,EAAAC,KAAA;IAAA,OAAAnP,mBAAA,GAAAM,IAAA,UAAA8O,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAvL,IAAA,GAAAuL,SAAA,CAAAnR,IAAA;QAAA;UAC/BgI,IAAI,GAAGF,GAAG,CAACQ,OAAO,CAACN,IAAI;UACvBwB,IAAI,GAAG1B,GAAG,CAACyB,IAAI,CAACC,IAAI;UAAA,IAEnBxB,IAAI;YAAAmJ,SAAA,CAAAnR,IAAA;YAAA;UAAA;UAAA,OAAAmR,SAAA,CAAA9M,MAAA,WAAS0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACnCC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAC;UAACiK,SAAA,CAAAnR,IAAA;UAAA,OACiBwI,qBAAU,CAACC,KAAK,CAAC,wCAAwC,EAAE,CAACT,IAAI,CAAC,CAAC;QAAA;UAAAmG,uBAAA,GAAAgD,SAAA,CAAAjN,IAAA;UAAAkK,uBAAA,GAAAxN,cAAA,CAAAuN,uBAAA;UAAhFxF,IAAI,GAAAyF,uBAAA;UAAA,IACNzF,IAAI;YAAAwI,SAAA,CAAAnR,IAAA;YAAA;UAAA;UAAA,OAAAmR,SAAA,CAAA9M,MAAA,WAAS0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACnCC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAC;UAAC,IACCsC,IAAI;YAAA2H,SAAA,CAAAnR,IAAA;YAAA;UAAA;UAAAmR,SAAA,CAAAnR,IAAA;UAAA,OACsBwI,qBAAU,CAACC,KAAK,CAAC,6CAA6C,EAAE,CAACE,IAAI,CAAC,CAAC,CAAC,CAACQ,KAAK,CAAC,CAAC;QAAA;UAAAkF,uBAAA,GAAA8C,SAAA,CAAAjN,IAAA;UAAAoK,uBAAA,GAAA1N,cAAA,CAAAyN,uBAAA;UAApGE,UAAU,GAAAD,uBAAA;UAAA,OAAA6C,SAAA,CAAA9M,MAAA,WACV0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,cAAc;YACvBsI,KAAK,EAAE7C,UAAU;YACjB3F,MAAM,EAAE,IAAI;YACZG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA,KAEFsC,IAAI;YAAA2H,SAAA,CAAAnR,IAAA;YAAA;UAAA;UAAA,MACAwJ,IAAI,IAAI,CAAC;YAAA2H,SAAA,CAAAnR,IAAA;YAAA;UAAA;UAAAmR,SAAA,CAAAnR,IAAA;UAAA,OACmBwI,qBAAU,CAACC,KAAK,CAAC,6CAA6C,EAAE,CAACE,IAAI,CAAC,CAAC,CAAC,CAACQ,KAAK,CAAC,CAAC;QAAA;UAAAqF,uBAAA,GAAA2C,SAAA,CAAAjN,IAAA;UAAAuK,uBAAA,GAAA7N,cAAA,CAAA4N,uBAAA;UAArGE,WAAW,GAAAD,uBAAA;UACdE,KAAK,GAAGhG,IAAI,CAAC,CAAC,CAAC,CAACyD,KAAK;UACrBmC,WAAU,GAAGG,WAAW,CAAC,CAAC,CAAC;UAC3BG,GAAG,GAAG,GAAG;UAAA,MACTF,KAAK,IAAInF,IAAI,IAAI+E,WAAU,CAAC8C,MAAM,IAAI,CAAC;YAAAF,SAAA,CAAAnR,IAAA;YAAA;UAAA;UAAAmR,SAAA,CAAAnR,IAAA;UAAA,OACjCwI,qBAAU,CAACC,KAAK,CAAC,qDAAqD,EAAE,CAAC8F,WAAU,CAAC8C,MAAM,EAAE1I,IAAI,CAAC,CAAC,CAAC,CAACQ,KAAK,CAAC,CAAC;QAAA;UAAAgI,SAAA,CAAAnR,IAAA;UAAA,OAC3GwI,qBAAU,CAACC,KAAK,CAAC,mDAAmD,EAAE,CAAC,CAAC,EAAEE,IAAI,CAAC,CAAC,CAAC,CAACQ,KAAK,CAAC,CAAC;QAAA;UAAA,OAAAgI,SAAA,CAAA9M,MAAA,WACxF0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,8BAAAI,MAAA,CAAyBqF,WAAU,CAAC8C,MAAM,QAAK;YACtDzI,MAAM,EAAE,IAAI;YACZG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA,MACKyH,KAAK,GAAGE,GAAG,IAAIN,WAAU,CAAC8C,MAAM,IAAI,CAAC;YAAAF,SAAA,CAAAnR,IAAA;YAAA;UAAA;UAAA,OAAAmR,SAAA,CAAA9M,MAAA,WACrC0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,sCAAsC;YAC/CF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA,MACKqH,WAAU,CAAC8C,MAAM,IAAI,CAAC;YAAAF,SAAA,CAAAnR,IAAA;YAAA;UAAA;UAAA,OAAAmR,SAAA,CAAA9M,MAAA,WACtB0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,qCAAqC;YAC9CF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAET;UAAC,MACEsC,IAAI,IAAI,CAAC;YAAA2H,SAAA,CAAAnR,IAAA;YAAA;UAAA;UAAAmR,SAAA,CAAAnR,IAAA;UAAA,OACmBwI,qBAAU,CAACC,KAAK,CAAC,6CAA6C,EAAE,CAACE,IAAI,CAAC,CAAC,CAAC,CAACQ,KAAK,CAAC,CAAC;QAAA;UAAA2F,uBAAA,GAAAqC,SAAA,CAAAjN,IAAA;UAAA6K,uBAAA,GAAAnO,cAAA,CAAAkO,uBAAA;UAArGJ,YAAW,GAAAK,uBAAA;UACdJ,MAAK,GAAGhG,IAAI,CAAC,CAAC,CAAC,CAACyD,KAAK;UACrBmC,YAAU,GAAGG,YAAW,CAAC,CAAC,CAAC;UAC3BG,IAAG,GAAG,IAAI;UAAA,MACVF,MAAK,IAAIE,IAAG,IAAIN,YAAU,CAAC+C,MAAM,IAAI,CAAC;YAAAH,SAAA,CAAAnR,IAAA;YAAA;UAAA;UAAAmR,SAAA,CAAAnR,IAAA;UAAA,OAChCwI,qBAAU,CAACC,KAAK,CAAC,qDAAqD,EAAE,CAAC8F,YAAU,CAAC+C,MAAM,EAAE3I,IAAI,CAAC,CAAC,CAAC,CAACQ,KAAK,CAAC,CAAC;QAAA;UAAAgI,SAAA,CAAAnR,IAAA;UAAA,OAC3GwI,qBAAU,CAACC,KAAK,CAAC,mDAAmD,EAAE,CAAC,CAAC,EAAEE,IAAI,CAAC,CAAC,CAAC,CAACQ,KAAK,CAAC,CAAC;QAAA;UAAA,OAAAgI,SAAA,CAAA9M,MAAA,WACxF0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,8BAAAI,MAAA,CAAyBqF,YAAU,CAAC+C,MAAM,QAAK;YACtD1I,MAAM,EAAE,IAAI;YACZG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA,MACKyH,MAAK,GAAGE,IAAG,IAAIN,YAAU,CAAC+C,MAAM,IAAI,CAAC;YAAAH,SAAA,CAAAnR,IAAA;YAAA;UAAA;UAAA,OAAAmR,SAAA,CAAA9M,MAAA,WACrC0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,uCAAuC;YAChDF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA,MACKqH,YAAU,CAAC+C,MAAM,IAAI,CAAC;YAAAH,SAAA,CAAAnR,IAAA;YAAA;UAAA;UAAA,OAAAmR,SAAA,CAAA9M,MAAA,WACtB0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,qCAAqC;YAC9CF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAET;UAAC,MACEsC,IAAI,IAAI,CAAC;YAAA2H,SAAA,CAAAnR,IAAA;YAAA;UAAA;UAAAmR,SAAA,CAAAnR,IAAA;UAAA,OACmBwI,qBAAU,CAACC,KAAK,CAAC,6CAA6C,EAAE,CAACE,IAAI,CAAC,CAAC,CAAC,CAACQ,KAAK,CAAC,CAAC;QAAA;UAAAiG,uBAAA,GAAA+B,SAAA,CAAAjN,IAAA;UAAAmL,uBAAA,GAAAzO,cAAA,CAAAwO,uBAAA;UAArGV,aAAW,GAAAW,uBAAA;UACdV,OAAK,GAAGhG,IAAI,CAAC,CAAC,CAAC,CAACyD,KAAK;UACrBmC,YAAU,GAAGG,aAAW,CAAC,CAAC,CAAC;UAC3BG,KAAG,GAAG,IAAI;UAAA,MACVF,OAAK,IAAIE,KAAG,IAAIN,YAAU,CAACgD,MAAM,IAAI,CAAC;YAAAJ,SAAA,CAAAnR,IAAA;YAAA;UAAA;UAAAmR,SAAA,CAAAnR,IAAA;UAAA,OAChCwI,qBAAU,CAACC,KAAK,CAAC,qDAAqD,EAAE,CAAC8F,YAAU,CAACgD,MAAM,EAAE5I,IAAI,CAAC,CAAC,CAAC,CAACQ,KAAK,CAAC,CAAC;QAAA;UAAAgI,SAAA,CAAAnR,IAAA;UAAA,OAC3GwI,qBAAU,CAACC,KAAK,CAAC,mDAAmD,EAAE,CAAC,CAAC,EAAEE,IAAI,CAAC,CAAC,CAAC,CAACQ,KAAK,CAAC,CAAC;QAAA;UAAA,OAAAgI,SAAA,CAAA9M,MAAA,WACxF0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,8BAAAI,MAAA,CAAyBqF,YAAU,CAACgD,MAAM,QAAK;YACtD3I,MAAM,EAAE,IAAI;YACZG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA,MACKyH,OAAK,GAAGE,KAAG,IAAIN,YAAU,CAACgD,MAAM,IAAI,CAAC;YAAAJ,SAAA,CAAAnR,IAAA;YAAA;UAAA;UAAA,OAAAmR,SAAA,CAAA9M,MAAA,WACrC0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,uCAAuC;YAChDF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA,MACKqH,YAAU,CAACgD,MAAM,IAAI,CAAC;YAAAJ,SAAA,CAAAnR,IAAA;YAAA;UAAA;UAAA,OAAAmR,SAAA,CAAA9M,MAAA,WACtB0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,qCAAqC;YAC9CF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAET;UAAC,MACEsC,IAAI,IAAI,CAAC;YAAA2H,SAAA,CAAAnR,IAAA;YAAA;UAAA;UAAAmR,SAAA,CAAAnR,IAAA;UAAA,OACmBwI,qBAAU,CAACC,KAAK,CAAC,6CAA6C,EAAE,CAACE,IAAI,CAAC,CAAC,CAAC,CAACQ,KAAK,CAAC,CAAC;QAAA;UAAAuG,uBAAA,GAAAyB,SAAA,CAAAjN,IAAA;UAAAyL,uBAAA,GAAA/O,cAAA,CAAA8O,uBAAA;UAArGhB,aAAW,GAAAiB,uBAAA;UACdhB,OAAK,GAAGhG,IAAI,CAAC,CAAC,CAAC,CAACyD,KAAK;UACrBmC,YAAU,GAAGG,aAAW,CAAC,CAAC,CAAC;UAC3BG,KAAG,GAAG,KAAK;UAAA,MACXF,OAAK,IAAIE,KAAG,IAAIN,YAAU,CAACiD,MAAM,IAAI,CAAC;YAAAL,SAAA,CAAAnR,IAAA;YAAA;UAAA;UAAAmR,SAAA,CAAAnR,IAAA;UAAA,OAChCwI,qBAAU,CAACC,KAAK,CAAC,qDAAqD,EAAE,CAAC8F,YAAU,CAACiD,MAAM,EAAE7I,IAAI,CAAC,CAAC,CAAC,CAACQ,KAAK,CAAC,CAAC;QAAA;UAAAgI,SAAA,CAAAnR,IAAA;UAAA,OAC3GwI,qBAAU,CAACC,KAAK,CAAC,mDAAmD,EAAE,CAAC,CAAC,EAAEE,IAAI,CAAC,CAAC,CAAC,CAACQ,KAAK,CAAC,CAAC;QAAA;UAAA,OAAAgI,SAAA,CAAA9M,MAAA,WACxF0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,8BAAAI,MAAA,CAAyBqF,YAAU,CAACiD,MAAM,QAAK;YACtD5I,MAAM,EAAE,IAAI;YACZG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA,MACKyH,OAAK,GAAGE,KAAG,IAAIN,YAAU,CAACiD,MAAM,IAAI,CAAC;YAAAL,SAAA,CAAAnR,IAAA;YAAA;UAAA;UAAA,OAAAmR,SAAA,CAAA9M,MAAA,WACrC0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,wCAAwC;YACjDF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA,MACKqH,YAAU,CAACiD,MAAM,IAAI,CAAC;YAAAL,SAAA,CAAAnR,IAAA;YAAA;UAAA;UAAA,OAAAmR,SAAA,CAAA9M,MAAA,WACtB0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,qCAAqC;YAC9CF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAET;UAAC,MACEsC,IAAI,IAAI,CAAC;YAAA2H,SAAA,CAAAnR,IAAA;YAAA;UAAA;UAAAmR,SAAA,CAAAnR,IAAA;UAAA,OACmBwI,qBAAU,CAACC,KAAK,CAAC,6CAA6C,EAAE,CAACE,IAAI,CAAC,CAAC,CAAC,CAACQ,KAAK,CAAC,CAAC;QAAA;UAAA6G,uBAAA,GAAAmB,SAAA,CAAAjN,IAAA;UAAA+L,uBAAA,GAAArP,cAAA,CAAAoP,uBAAA;UAArGtB,aAAW,GAAAuB,uBAAA;UACdtB,OAAK,GAAGhG,IAAI,CAAC,CAAC,CAAC,CAACyD,KAAK;UACrBmC,YAAU,GAAGG,aAAW,CAAC,CAAC,CAAC;UAC3BG,KAAG,GAAG,KAAK;UAAA,MACXF,OAAK,IAAIE,KAAG,IAAIN,YAAU,CAACkD,MAAM,IAAI,CAAC;YAAAN,SAAA,CAAAnR,IAAA;YAAA;UAAA;UAAAmR,SAAA,CAAAnR,IAAA;UAAA,OAChCwI,qBAAU,CAACC,KAAK,CAAC,qDAAqD,EAAE,CAAC8F,YAAU,CAACkD,MAAM,EAAE9I,IAAI,CAAC,CAAC,CAAC,CAACQ,KAAK,CAAC,CAAC;QAAA;UAAAgI,SAAA,CAAAnR,IAAA;UAAA,OAC3GwI,qBAAU,CAACC,KAAK,CAAC,mDAAmD,EAAE,CAAC,CAAC,EAAEE,IAAI,CAAC,CAAC,CAAC,CAACQ,KAAK,CAAC,CAAC;QAAA;UAAA,OAAAgI,SAAA,CAAA9M,MAAA,WACxF0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,8BAAAI,MAAA,CAAyBqF,YAAU,CAACkD,MAAM,QAAK;YACtD7I,MAAM,EAAE,IAAI;YACZG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA,MACKyH,OAAK,GAAGE,KAAG,IAAIN,YAAU,CAACkD,MAAM,IAAI,CAAC;YAAAN,SAAA,CAAAnR,IAAA;YAAA;UAAA;UAAA,OAAAmR,SAAA,CAAA9M,MAAA,WACrC0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,wCAAwC;YACjDF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA,MACKqH,YAAU,CAACkD,MAAM,IAAI,CAAC;YAAAN,SAAA,CAAAnR,IAAA;YAAA;UAAA;UAAA,OAAAmR,SAAA,CAAA9M,MAAA,WACtB0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,qCAAqC;YAC9CF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAET;UAAC,MACEsC,IAAI,IAAI,CAAC;YAAA2H,SAAA,CAAAnR,IAAA;YAAA;UAAA;UAAAmR,SAAA,CAAAnR,IAAA;UAAA,OACmBwI,qBAAU,CAACC,KAAK,CAAC,6CAA6C,EAAE,CAACE,IAAI,CAAC,CAAC,CAAC,CAACQ,KAAK,CAAC,CAAC;QAAA;UAAAmH,uBAAA,GAAAa,SAAA,CAAAjN,IAAA;UAAAqM,uBAAA,GAAA3P,cAAA,CAAA0P,uBAAA;UAArG5B,aAAW,GAAA6B,uBAAA;UACd5B,OAAK,GAAGhG,IAAI,CAAC,CAAC,CAAC,CAACyD,KAAK;UACrBmC,YAAU,GAAGG,aAAW,CAAC,CAAC,CAAC;UAC3BG,KAAG,GAAG,MAAM;UAAA,MACZF,OAAK,IAAIE,KAAG,IAAIN,YAAU,CAACmD,MAAM,IAAI,CAAC;YAAAP,SAAA,CAAAnR,IAAA;YAAA;UAAA;UAAAmR,SAAA,CAAAnR,IAAA;UAAA,OAChCwI,qBAAU,CAACC,KAAK,CAAC,qDAAqD,EAAE,CAAC8F,YAAU,CAACmD,MAAM,EAAE/I,IAAI,CAAC,CAAC,CAAC,CAACQ,KAAK,CAAC,CAAC;QAAA;UAAAgI,SAAA,CAAAnR,IAAA;UAAA,OAC3GwI,qBAAU,CAACC,KAAK,CAAC,mDAAmD,EAAE,CAAC,CAAC,EAAEE,IAAI,CAAC,CAAC,CAAC,CAACQ,KAAK,CAAC,CAAC;QAAA;UAAA,OAAAgI,SAAA,CAAA9M,MAAA,WACxF0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,8BAAAI,MAAA,CAAyBqF,YAAU,CAACmD,MAAM,QAAK;YACtD9I,MAAM,EAAE,IAAI;YACZG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA,MACKyH,OAAK,GAAGE,KAAG,IAAIN,YAAU,CAACmD,MAAM,IAAI,CAAC;YAAAP,SAAA,CAAAnR,IAAA;YAAA;UAAA;UAAA,OAAAmR,SAAA,CAAA9M,MAAA,WACrC0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,yCAAyC;YAClDF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA,MACKqH,YAAU,CAACmD,MAAM,IAAI,CAAC;YAAAP,SAAA,CAAAnR,IAAA;YAAA;UAAA;UAAA,OAAAmR,SAAA,CAAA9M,MAAA,WACtB0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,qCAAqC;YAC9CF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAET;UAAC,MACEsC,IAAI,IAAI,CAAC;YAAA2H,SAAA,CAAAnR,IAAA;YAAA;UAAA;UAAAmR,SAAA,CAAAnR,IAAA;UAAA,OACmBwI,qBAAU,CAACC,KAAK,CAAC,6CAA6C,EAAE,CAACE,IAAI,CAAC,CAAC,CAAC,CAACQ,KAAK,CAAC,CAAC;QAAA;UAAAyH,uBAAA,GAAAO,SAAA,CAAAjN,IAAA;UAAA2M,uBAAA,GAAAjQ,cAAA,CAAAgQ,uBAAA;UAArGlC,aAAW,GAAAmC,uBAAA;UACdlC,OAAK,GAAGhG,IAAI,CAAC,CAAC,CAAC,CAACyD,KAAK;UACrBmC,YAAU,GAAGG,aAAW,CAAC,CAAC,CAAC;UAC3BG,KAAG,GAAG,MAAM;UAAA,MACZF,OAAK,IAAIE,KAAG,IAAIN,YAAU,CAACoD,MAAM,IAAI,CAAC;YAAAR,SAAA,CAAAnR,IAAA;YAAA;UAAA;UAAAmR,SAAA,CAAAnR,IAAA;UAAA,OAChCwI,qBAAU,CAACC,KAAK,CAAC,qDAAqD,EAAE,CAAC8F,YAAU,CAACoD,MAAM,EAAEhJ,IAAI,CAAC,CAAC,CAAC,CAACQ,KAAK,CAAC,CAAC;QAAA;UAAAgI,SAAA,CAAAnR,IAAA;UAAA,OAC3GwI,qBAAU,CAACC,KAAK,CAAC,mDAAmD,EAAE,CAAC,CAAC,EAAEE,IAAI,CAAC,CAAC,CAAC,CAACQ,KAAK,CAAC,CAAC;QAAA;UAAA,OAAAgI,SAAA,CAAA9M,MAAA,WACxF0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,8BAAAI,MAAA,CAAyBqF,YAAU,CAACoD,MAAM,QAAK;YACtD/I,MAAM,EAAE,IAAI;YACZG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA,MAEKyH,OAAK,GAAGE,KAAG,IAAIN,YAAU,CAACoD,MAAM,IAAI,CAAC;YAAAR,SAAA,CAAAnR,IAAA;YAAA;UAAA;UAAA,OAAAmR,SAAA,CAAA9M,MAAA,WACrC0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,wCAAwC;YACjDF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA,MACKqH,YAAU,CAACoD,MAAM,IAAI,CAAC;YAAAR,SAAA,CAAAnR,IAAA;YAAA;UAAA;UAAA,OAAAmR,SAAA,CAAA9M,MAAA,WACtB0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,qCAAqC;YAC9CF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAET;QAAC;QAAA;UAAA,OAAAiK,SAAA,CAAArL,IAAA;MAAA;IAAA,GAAAoI,QAAA;EAAA,CAGT;EAAA,gBAzNKF,eAAeA,CAAA4D,IAAA,EAAAC,IAAA;IAAA,OAAA5D,KAAA,CAAAzQ,KAAA,OAAAE,SAAA;EAAA;AAAA,GAyNpB;AAED,SAASoU,QAAQA,CAACC,MAAM,EAAE;EACtB,IAAIC,MAAM,GAAID,MAAM,GAAG,EAAE,GAAI,GAAG,GAAGA,MAAM,GAAGA,MAAM;EAClD,OAAOC,MAAM;AACjB;AAEA,SAASC,SAASA,CAAA,EAA4B;EAAA,IAA3BF,MAAM,GAAArU,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAsJ,SAAA,GAAAtJ,SAAA,MAAG,EAAE;EAAA,IAAEwU,QAAQ,GAAAxU,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAsJ,SAAA,GAAAtJ,SAAA,MAAG,CAAC;EACxC,IAAIyU,IAAI,GAAG,EAAE;EACb,IAAIJ,MAAM,EAAE;IACRI,IAAI,GAAG,IAAIhL,IAAI,CAACrI,MAAM,CAACiT,MAAM,CAAC,CAAC;EACnC,CAAC,MAAM;IACHI,IAAI,GAAG,IAAIhL,IAAI,CAAC,CAAC;EACrB;EAEAgL,IAAI,CAACC,QAAQ,CAACD,IAAI,CAACE,QAAQ,CAAC,CAAC,GAAGH,QAAQ,CAAC;EAEzC,IAAII,KAAK,GAAGR,QAAQ,CAACK,IAAI,CAACI,WAAW,CAAC,CAAC,CAAC;EACxC,IAAIC,MAAM,GAAGV,QAAQ,CAACK,IAAI,CAACM,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1C,IAAIC,IAAI,GAAGZ,QAAQ,CAACK,IAAI,CAACQ,OAAO,CAAC,CAAC,CAAC;EAEnC,IAAIC,KAAK,GAAGT,IAAI,CAACE,QAAQ,CAAC,CAAC,GAAG,EAAE;EAChCO,KAAK,GAAGA,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,KAAK;EAChC,IAAIC,IAAI,GAAGV,IAAI,CAACE,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI;EAE7C,IAAIS,OAAO,GAAGhB,QAAQ,CAACK,IAAI,CAACY,UAAU,CAAC,CAAC,CAAC;EACzC,IAAIC,OAAO,GAAGlB,QAAQ,CAACK,IAAI,CAACc,UAAU,CAAC,CAAC,CAAC;EAEzC,OAAOX,KAAK,GAAG,GAAG,GAAGE,MAAM,GAAG,GAAG,GAAGE,IAAI,GAAG,GAAG,GAAGE,KAAK,GAAG,GAAG,GAAGE,OAAO,GAAG,GAAG,GAAGE,OAAO,GAAG,GAAG,GAAGH,IAAI;AACvG;AAEA,IAAMK,SAAS;EAAA,IAAAC,KAAA,GAAAvM,iBAAA,eAAA9E,mBAAA,GAAAsD,IAAA,CAAG,SAAAgO,SAAOtL,GAAG,EAAEC,GAAG;IAAA,IAAAC,IAAA,EAAAqL,uBAAA,EAAAC,uBAAA,EAAAnL,IAAA,EAAAoL,uBAAA,EAAAC,uBAAA,EAAAC,KAAA,EAAA7I,QAAA,EAAA8I,uBAAA,EAAAC,uBAAA,EAAAC,GAAA,EAAAC,QAAA,EAAAvV,CAAA,EAAAwV,OAAA,EAAAnF,KAAA,EAAAoF,WAAA,EAAAC,EAAA,EAAAC,OAAA,EAAAC,QAAA,EAAAC,QAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAA,EAAAC,OAAA,EAAAC,QAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAA,EAAAC,OAAA,EAAAC,QAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAA,EAAAC,OAAA,EAAAC,QAAA,EAAAC,EAAA,EAAAC,GAAA,EAAAC,QAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,IAAA,EAAAC,EAAA,EAAAC,GAAA,EAAAC,SAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,KAAA,EAAAC,GAAA,EAAAC,QAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,IAAA,EAAAC,EAAA,EAAAC,GAAA,EAAAC,SAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,KAAA,EAAAC,GAAA,EAAAC,SAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,KAAA,EAAAC,IAAA,EAAAC,QAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,IAAA,EAAAC,YAAA,EA8GdC,kBAAkB,EAAAC,mBAAA,EAAAC,SAAA,EAAAC,KAAA,EAAAC,aAAA,EAAAC,OAAA,EAAAC,QAAA,EAAAC,QAAA;IAAA,OAAApW,mBAAA,GAAAM,IAAA,UAAA+V,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAxS,IAAA,GAAAwS,SAAA,CAAApY,IAAA;QAAA;UAAA4X,mBAAA,YAAAS,qBAAA;YAAAT,mBAAA,GAAAhR,iBAAA,eAAA9E,mBAAA,GAAAsD,IAAA,CAAjC,SAAAkT,SAAkCzO,IAAI;cAAA,IAAA0O,KAAA;gBAAAC,uBAAA;gBAAAC,uBAAA;gBAAAC,UAAA;gBAAAC,UAAA;gBAAAC,MAAA;gBAAAC,MAAA;gBAAAC,MAAA,GAAApb,SAAA;cAAA,OAAAoE,mBAAA,GAAAM,IAAA,UAAA2W,UAAAC,SAAA;gBAAA,kBAAAA,SAAA,CAAApT,IAAA,GAAAoT,SAAA,CAAAhZ,IAAA;kBAAA;oBAAEuY,KAAK,GAAAO,MAAA,CAAAnb,MAAA,QAAAmb,MAAA,QAAA9R,SAAA,GAAA8R,MAAA,MAAG,CAAC;oBAAA,MACzCP,KAAK,GAAG,CAAC;sBAAAS,SAAA,CAAAhZ,IAAA;sBAAA;oBAAA;oBAAA,OAAAgZ,SAAA,CAAA3U,MAAA;kBAAA;oBAAA2U,SAAA,CAAAhZ,IAAA;oBAAA,OAIcwI,qBAAU,CAACC,KAAK,CAAC,2HAA2H,EAAE,CAACoB,IAAI,CAAC,CAAC;kBAAA;oBAAA2O,uBAAA,GAAAQ,SAAA,CAAA9U,IAAA;oBAAAuU,uBAAA,GAAA7X,cAAA,CAAA4X,uBAAA;oBAAzKE,UAAU,GAAAD,uBAAA;oBAAA,MAEbC,UAAU,CAAC/a,MAAM,GAAG,CAAC;sBAAAqb,SAAA,CAAAhZ,IAAA;sBAAA;oBAAA;oBAAA2Y,UAAA,GAAA5Z,0BAAA,CACA2Z,UAAU;oBAAAM,SAAA,CAAApT,IAAA;oBAAA+S,UAAA,CAAApZ,CAAA;kBAAA;oBAAA,KAAAqZ,MAAA,GAAAD,UAAA,CAAAnZ,CAAA,IAAAC,IAAA;sBAAAuZ,SAAA,CAAAhZ,IAAA;sBAAA;oBAAA;oBAApB6Y,MAAM,GAAAD,MAAA,CAAA1a,KAAA;oBACbwZ,YAAY,CAACna,IAAI,CAACsb,MAAM,CAAC;oBAACG,SAAA,CAAAhZ,IAAA;oBAAA,OACpB2X,kBAAkB,CAACkB,MAAM,CAAChP,IAAI,EAAE0O,KAAK,GAAG,CAAC,CAAC;kBAAA;oBAAAS,SAAA,CAAAhZ,IAAA;oBAAA;kBAAA;oBAAAgZ,SAAA,CAAAhZ,IAAA;oBAAA;kBAAA;oBAAAgZ,SAAA,CAAApT,IAAA;oBAAAoT,SAAA,CAAA9L,EAAA,GAAA8L,SAAA;oBAAAL,UAAA,CAAA9b,CAAA,CAAAmc,SAAA,CAAA9L,EAAA;kBAAA;oBAAA8L,SAAA,CAAApT,IAAA;oBAAA+S,UAAA,CAAAhZ,CAAA;oBAAA,OAAAqZ,SAAA,CAAA9S,MAAA;kBAAA;kBAAA;oBAAA,OAAA8S,SAAA,CAAAlT,IAAA;gBAAA;cAAA,GAAAwS,QAAA;YAAA,CAG3D;YAAA,OAAAV,mBAAA,CAAApa,KAAA,OAAAE,SAAA;UAAA;UAbcia,kBAAkB,YAAAsB,qBAAAC,IAAA;YAAA,OAAAtB,mBAAA,CAAApa,KAAA,OAAAE,SAAA;UAAA;UA7G7BsK,IAAI,GAAGF,GAAG,CAACQ,OAAO,CAACN,IAAI;UAAA,IACtBA,IAAI;YAAAoQ,SAAA,CAAApY,IAAA;YAAA;UAAA;UAAA,OAAAoY,SAAA,CAAA/T,MAAA,WACE0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAAkR,SAAA,CAAApY,IAAA;UAAA,OAGewI,qBAAU,CAACC,KAAK,CAAC,qGAAqG,EAAE,CAACT,IAAI,CAAC,CAAC;QAAA;UAAAqL,uBAAA,GAAA+E,SAAA,CAAAlU,IAAA;UAAAoP,uBAAA,GAAA1S,cAAA,CAAAyS,uBAAA;UAA7IlL,IAAI,GAAAmL,uBAAA;UAAA8E,SAAA,CAAApY,IAAA;UAAA,OACWwI,qBAAU,CAACC,KAAK,CAAC,qBAAqB,CAAC;QAAA;UAAA8K,uBAAA,GAAA6E,SAAA,CAAAlU,IAAA;UAAAsP,uBAAA,GAAA5S,cAAA,CAAA2S,uBAAA;UAAtDE,KAAK,GAAAD,uBAAA;UAAA,IAEPrL,IAAI;YAAAiQ,SAAA,CAAApY,IAAA;YAAA;UAAA;UAAA,OAAAoY,SAAA,CAAA/T,MAAA,WACE0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAGF0D,QAAQ,GAAGzC,IAAI,CAAC,CAAC,CAAC,EAEtB;UAAAiQ,SAAA,CAAApY,IAAA;UAAA,OACoBwI,qBAAU,CAACC,KAAK,CAAC,wEAAwE,EAAE,CAACmC,QAAQ,CAACf,IAAI,CAAC,CAAC;QAAA;UAAA6J,uBAAA,GAAA0E,SAAA,CAAAlU,IAAA;UAAAyP,uBAAA,GAAA/S,cAAA,CAAA8S,uBAAA;UAAxHE,GAAG,GAAAD,uBAAA;UAEV;UACIE,QAAQ,GAAG,CAAC;UAChB,KAASvV,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsV,GAAG,CAACjW,MAAM,EAAEW,CAAC,EAAE,EAAE;YAC3BwV,OAAO,GAAGF,GAAG,CAACtV,CAAC,CAAC,CAACyN,IAAI;YACvB4C,KAAK,GAAIsD,SAAS,CAAC6B,OAAO,CAAC,IAAI7B,SAAS,CAAC,CAAC,GAAI,IAAI,GAAG,KAAK;YAC9D,IAAItD,KAAK,EAAE;cACPkF,QAAQ,IAAI,CAAC;YACjB;UACJ;;UAEA;UACIE,WAAW,GAAG,CAAC;UACVzV,EAAC,GAAG,CAAC;QAAA;UAAA,MAAEA,EAAC,GAAGsV,GAAG,CAACjW,MAAM;YAAAya,SAAA,CAAApY,IAAA;YAAA;UAAA;UACpBiU,OAAO,GAAGL,GAAG,CAACtV,EAAC,CAAC,CAACuL,IAAI;UACrBiK,QAAO,GAAGF,GAAG,CAACtV,EAAC,CAAC,CAACyN,IAAI;UACvBoI,QAAQ,GAAIlC,SAAS,CAAC6B,QAAO,CAAC,IAAI7B,SAAS,CAAC,CAAC,GAAI,IAAI,GAAG,KAAK;UACjE,IAAIkC,QAAQ,EAAEJ,WAAW,IAAI,CAAC;;UAE9B;UAAAqE,SAAA,CAAApY,IAAA;UAAA,OACoBwI,qBAAU,CAACC,KAAK,CAAC,wEAAwE,EAAE,CAACwL,OAAO,CAAC,CAAC;QAAA;UAAAG,uBAAA,GAAAgE,SAAA,CAAAlU,IAAA;UAAAmQ,uBAAA,GAAAzT,cAAA,CAAAwT,uBAAA;UAAlHE,GAAG,GAAAD,uBAAA;UACD/V,GAAC,GAAG,CAAC;QAAA;UAAA,MAAEA,GAAC,GAAGgW,GAAG,CAAC3W,MAAM;YAAAya,SAAA,CAAApY,IAAA;YAAA;UAAA;UACpBwU,OAAO,GAAGF,GAAG,CAAChW,GAAC,CAAC,CAACuL,IAAI;UACrB4K,OAAO,GAAGH,GAAG,CAAChW,GAAC,CAAC,CAACyN,IAAI;UACvB2I,QAAQ,GAAIzC,SAAS,CAACwC,OAAO,CAAC,IAAIxC,SAAS,CAAC,CAAC,GAAI,IAAI,GAAG,KAAK;UACjE,IAAIyC,QAAQ,EAAEX,WAAW,IAAI,CAAC;;UAE9B;UAAAqE,SAAA,CAAApY,IAAA;UAAA,OACoBwI,qBAAU,CAACC,KAAK,CAAC,wEAAwE,EAAE,CAAC+L,OAAO,CAAC,CAAC;QAAA;UAAAG,uBAAA,GAAAyD,SAAA,CAAAlU,IAAA;UAAA0Q,uBAAA,GAAAhU,cAAA,CAAA+T,uBAAA;UAAlHE,GAAG,GAAAD,uBAAA;UACDtW,GAAC,GAAG,CAAC;QAAA;UAAA,MAAEA,GAAC,GAAGuW,GAAG,CAAClX,MAAM;YAAAya,SAAA,CAAApY,IAAA;YAAA;UAAA;UACpB+U,OAAO,GAAGF,GAAG,CAACvW,GAAC,CAAC,CAACuL,IAAI;UACrBmL,OAAO,GAAGH,GAAG,CAACvW,GAAC,CAAC,CAACyN,IAAI;UACvBkJ,QAAQ,GAAIhD,SAAS,CAAC+C,OAAO,CAAC,IAAI/C,SAAS,CAAC,CAAC,GAAI,IAAI,GAAG,KAAK;UACjE,IAAIgD,QAAQ,EAAElB,WAAW,IAAI,CAAC;;UAE9B;UAAAqE,SAAA,CAAApY,IAAA;UAAA,OACoBwI,qBAAU,CAACC,KAAK,CAAC,wEAAwE,EAAE,CAACsM,OAAO,CAAC,CAAC;QAAA;UAAAG,uBAAA,GAAAkD,SAAA,CAAAlU,IAAA;UAAAiR,uBAAA,GAAAvU,cAAA,CAAAsU,uBAAA;UAAlHE,GAAG,GAAAD,uBAAA;UACV,KAAS7W,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG8W,GAAG,CAACzX,MAAM,EAAEW,GAAC,EAAE,EAAE;YAC3BgX,OAAO,GAAGF,GAAG,CAAC9W,GAAC,CAAC,CAACuL,IAAI;YACrB0L,OAAO,GAAGH,GAAG,CAAC9W,GAAC,CAAC,CAACyN,IAAI;YACvByJ,QAAQ,GAAIvD,SAAS,CAACsD,OAAO,CAAC,IAAItD,SAAS,CAAC,CAAC,GAAI,IAAI,GAAG,KAAK;YACjE,IAAIuD,QAAQ,EAAEzB,WAAW,IAAI,CAAC;UAClC;QAAC;UAb2BzV,GAAC,EAAE;UAAA8Z,SAAA,CAAApY,IAAA;UAAA;QAAA;UARP1B,GAAC,EAAE;UAAA8Z,SAAA,CAAApY,IAAA;UAAA;QAAA;UARP1B,EAAC,EAAE;UAAA8Z,SAAA,CAAApY,IAAA;UAAA;QAAA;UAkCnC;UACIyV,EAAE,GAAG,CAAC;UACDnX,GAAC,GAAG,CAAC;QAAA;UAAA,MAAEA,GAAC,GAAGsV,GAAG,CAACjW,MAAM;YAAAya,SAAA,CAAApY,IAAA;YAAA;UAAA;UACpBiU,QAAO,GAAGL,GAAG,CAACtV,GAAC,CAAC,CAACuL,IAAI;UAAAuO,SAAA,CAAApY,IAAA;UAAA,OACPwI,qBAAU,CAACC,KAAK,CAAC,gEAAgE,EAAE,CAACwL,QAAO,CAAC,CAAC;QAAA;UAAA2B,uBAAA,GAAAwC,SAAA,CAAAlU,IAAA;UAAA2R,uBAAA,GAAAjV,cAAA,CAAAgV,uBAAA;UAA1GtB,IAAG,GAAAuB,uBAAA;UACVJ,EAAE,IAAInB,IAAG,CAAC3W,MAAM;QAAC;UAHWW,GAAC,EAAE;UAAA8Z,SAAA,CAAApY,IAAA;UAAA;QAAA;UAMnC;UACI+V,EAAE,GAAG,CAAC;UACDzX,GAAC,GAAG,CAAC;QAAA;UAAA,MAAEA,GAAC,GAAGsV,GAAG,CAACjW,MAAM;YAAAya,SAAA,CAAApY,IAAA;YAAA;UAAA;UACpBiU,SAAO,GAAGL,GAAG,CAACtV,GAAC,CAAC,CAACuL,IAAI;UAAAuO,SAAA,CAAApY,IAAA;UAAA,OACPwI,qBAAU,CAACC,KAAK,CAAC,gEAAgE,EAAE,CAACwL,SAAO,CAAC,CAAC;QAAA;UAAAiC,uBAAA,GAAAkC,SAAA,CAAAlU,IAAA;UAAAiS,uBAAA,GAAAvV,cAAA,CAAAsV,uBAAA;UAA1G5B,KAAG,GAAA6B,uBAAA;UACD7X,GAAC,GAAG,CAAC;QAAA;UAAA,MAAEA,GAAC,GAAGgW,KAAG,CAAC3W,MAAM;YAAAya,SAAA,CAAApY,IAAA;YAAA;UAAA;UACpBwU,QAAO,GAAGF,KAAG,CAAChW,GAAC,CAAC,CAACuL,IAAI;UAAAuO,SAAA,CAAApY,IAAA;UAAA,OACPwI,qBAAU,CAACC,KAAK,CAAC,gEAAgE,EAAE,CAAC+L,QAAO,CAAC,CAAC;QAAA;UAAA+B,uBAAA,GAAA6B,SAAA,CAAAlU,IAAA;UAAAsS,uBAAA,GAAA5V,cAAA,CAAA2V,uBAAA;UAA1G1B,IAAG,GAAA2B,uBAAA;UACV,IAAI3B,IAAG,CAAClX,MAAM,GAAG,CAAC,EAAEoY,EAAE,IAAIlB,IAAG,CAAClX,MAAM;QAAC;UAHTW,GAAC,EAAE;UAAA8Z,SAAA,CAAApY,IAAA;UAAA;QAAA;UAHP1B,GAAC,EAAE;UAAA8Z,SAAA,CAAApY,IAAA;UAAA;QAAA;UAUnC;UACI0W,EAAE,GAAG,CAAC;UACDpY,GAAC,GAAG,CAAC;QAAA;UAAA,MAAEA,GAAC,GAAGsV,GAAG,CAACjW,MAAM;YAAAya,SAAA,CAAApY,IAAA;YAAA;UAAA;UACpBiU,SAAO,GAAGL,GAAG,CAACtV,GAAC,CAAC,CAACuL,IAAI;UAAAuO,SAAA,CAAApY,IAAA;UAAA,OACPwI,qBAAU,CAACC,KAAK,CAAC,gEAAgE,EAAE,CAACwL,SAAO,CAAC,CAAC;QAAA;UAAA4C,uBAAA,GAAAuB,SAAA,CAAAlU,IAAA;UAAA4S,uBAAA,GAAAlW,cAAA,CAAAiW,uBAAA;UAA1GvC,KAAG,GAAAwC,uBAAA;UACDxY,GAAC,GAAG,CAAC;QAAA;UAAA,MAAEA,GAAC,GAAGgW,KAAG,CAAC3W,MAAM;YAAAya,SAAA,CAAApY,IAAA;YAAA;UAAA;UACpBwU,SAAO,GAAGF,KAAG,CAAChW,GAAC,CAAC,CAACuL,IAAI;UAAAuO,SAAA,CAAApY,IAAA;UAAA,OACPwI,qBAAU,CAACC,KAAK,CAAC,gEAAgE,EAAE,CAAC+L,SAAO,CAAC,CAAC;QAAA;UAAA0C,uBAAA,GAAAkB,SAAA,CAAAlU,IAAA;UAAAiT,uBAAA,GAAAvW,cAAA,CAAAsW,uBAAA;UAA1GrC,KAAG,GAAAsC,uBAAA;UACD7Y,IAAC,GAAG,CAAC;QAAA;UAAA,MAAEA,IAAC,GAAGuW,KAAG,CAAClX,MAAM;YAAAya,SAAA,CAAApY,IAAA;YAAA;UAAA;UACpB+U,QAAO,GAAGF,KAAG,CAACvW,IAAC,CAAC,CAACuL,IAAI;UAAAuO,SAAA,CAAApY,IAAA;UAAA,OACPwI,qBAAU,CAACC,KAAK,CAAC,gEAAgE,EAAE,CAACsM,QAAO,CAAC,CAAC;QAAA;UAAAwC,uBAAA,GAAAa,SAAA,CAAAlU,IAAA;UAAAsT,uBAAA,GAAA5W,cAAA,CAAA2W,uBAAA;UAA1GnC,IAAG,GAAAoC,uBAAA;UACV,IAAIpC,IAAG,CAACzX,MAAM,GAAG,CAAC,EAAE+Y,EAAE,IAAItB,IAAG,CAACzX,MAAM;QAAC;UAHTW,IAAC,EAAE;UAAA8Z,SAAA,CAAApY,IAAA;UAAA;QAAA;UAHP1B,GAAC,EAAE;UAAA8Z,SAAA,CAAApY,IAAA;UAAA;QAAA;UAHP1B,GAAC,EAAE;UAAA8Z,SAAA,CAAApY,IAAA;UAAA;QAAA;UAc/B0X,YAAY,GAAG,EAAE;UAAA,MAiBjB9D,GAAG,CAACjW,MAAM,GAAG,CAAC;YAAAya,SAAA,CAAApY,IAAA;YAAA;UAAA;UAAA6X,SAAA,GAAA9Y,0BAAA,CACc6U,GAAG;UAAAwE,SAAA,CAAAxS,IAAA;UAAAiS,SAAA,CAAAtY,CAAA;QAAA;UAAA,KAAAuY,KAAA,GAAAD,SAAA,CAAArY,CAAA,IAAAC,IAAA;YAAA2Y,SAAA,CAAApY,IAAA;YAAA;UAAA;UAApB+X,aAAa,GAAAD,KAAA,CAAA5Z,KAAA;UACpBwZ,YAAY,CAACna,IAAI,CAACwa,aAAa,CAAC;UAACK,SAAA,CAAApY,IAAA;UAAA,OAC3B2X,kBAAkB,CAACI,aAAa,CAAClO,IAAI,CAAC;QAAA;UAAAuO,SAAA,CAAApY,IAAA;UAAA;QAAA;UAAAoY,SAAA,CAAApY,IAAA;UAAA;QAAA;UAAAoY,SAAA,CAAAxS,IAAA;UAAAwS,SAAA,CAAAlL,EAAA,GAAAkL,SAAA;UAAAP,SAAA,CAAAhb,CAAA,CAAAub,SAAA,CAAAlL,EAAA;QAAA;UAAAkL,SAAA,CAAAxS,IAAA;UAAAiS,SAAA,CAAAlY,CAAA;UAAA,OAAAyY,SAAA,CAAAlS,MAAA;QAAA;UAI9C8R,OAAO,GAAGmB,UAAU,CAACvO,QAAQ,CAACwO,OAAO,CAAC;UACtCnB,QAAQ,GAAGkB,UAAU,CAACvO,QAAQ,CAACyO,QAAQ,CAAC;UAC1CnB,QAAQ,GAAGF,OAAO,GAAGC,QAAQ;UAAA,OAAAG,SAAA,CAAA/T,MAAA,WAE1B0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,iBAAiB;YAC1B2K,KAAK,EAAEA,KAAK;YACZ/M,IAAI,EAAEyB,IAAI;YACVS,MAAM,EAAE,IAAI;YACZiQ,MAAM,EAAE;cACJS,EAAE,EAAE1F,GAAG,CAACjW,MAAM;cACd4b,OAAO,EAAE7B,YAAY,CAAC/Z,MAAM;cAC5BkW,QAAQ,EAAEA,QAAQ;cAClBE,WAAW,EAAEA,WAAW;cACxBsF,QAAQ,EAAEzO,QAAQ,CAACyO,QAAQ;cAC3BD,OAAO,EAAExO,QAAQ,CAACwO,OAAO;cACzBI,SAAS,EAAEtB,QAAQ;cACnBuB,WAAW,EAAE7O,QAAQ,CAAC6O;YAC1B,CAAC;YACD1Q,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAkR,SAAA,CAAAtS,IAAA;MAAA;IAAA,GAAAsN,QAAA;EAAA,CAEL;EAAA,gBA1JKF,SAASA,CAAAwG,IAAA,EAAAC,IAAA;IAAA,OAAAxG,KAAA,CAAA3V,KAAA,OAAAE,SAAA;EAAA;AAAA,GA0Jd;AAED,IAAMkc,MAAM;EAAA,IAAAC,KAAA,GAAAjT,iBAAA,eAAA9E,mBAAA,GAAAsD,IAAA,CAAG,SAAA0U,UAAOhS,GAAG,EAAEC,GAAG;IAAA,IAAAC,IAAA,EAAA+R,uBAAA,EAAAC,uBAAA,EAAA7R,IAAA,EAAA8R,uBAAA,EAAAC,uBAAA,EAAAzG,KAAA;IAAA,OAAA3R,mBAAA,GAAAM,IAAA,UAAA+X,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAAxU,IAAA,GAAAwU,UAAA,CAAApa,IAAA;QAAA;UACtBgI,IAAI,GAAGF,GAAG,CAACQ,OAAO,CAACN,IAAI;UAAA,IACtBA,IAAI;YAAAoS,UAAA,CAAApa,IAAA;YAAA;UAAA;UAAA,OAAAoa,UAAA,CAAA/V,MAAA,WACE0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAAkT,UAAA,CAAApa,IAAA;UAAA,OAEewI,qBAAU,CAACC,KAAK,CAAC,+DAA+D,EAAE,CAACT,IAAI,CAAC,CAAC;QAAA;UAAA+R,uBAAA,GAAAK,UAAA,CAAAlW,IAAA;UAAA8V,uBAAA,GAAApZ,cAAA,CAAAmZ,uBAAA;UAAvG5R,IAAI,GAAA6R,uBAAA;UAAAI,UAAA,CAAApa,IAAA;UAAA,OACWwI,qBAAU,CAACC,KAAK,CAAC,qBAAqB,CAAC;QAAA;UAAAwR,uBAAA,GAAAG,UAAA,CAAAlW,IAAA;UAAAgW,uBAAA,GAAAtZ,cAAA,CAAAqZ,uBAAA;UAAtDxG,KAAK,GAAAyG,uBAAA;UAAA,IACP/R,IAAI;YAAAiS,UAAA,CAAApa,IAAA;YAAA;UAAA;UAAA,OAAAoa,UAAA,CAAA/V,MAAA,WACE0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UACL;UAAC,OAAAkT,UAAA,CAAA/V,MAAA,WACK0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,iBAAiB;YAC1B2K,KAAK,EAAEA,KAAK;YACZ/M,IAAI,EAAEyB,IAAI;YACVS,MAAM,EAAE,IAAI;YACZG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAkT,UAAA,CAAAtU,IAAA;MAAA;IAAA,GAAAgU,SAAA;EAAA,CAEL;EAAA,gBA1BKF,MAAMA,CAAAS,IAAA,EAAAC,IAAA;IAAA,OAAAT,KAAA,CAAArc,KAAA,OAAAE,SAAA;EAAA;AAAA,GA0BX;AAED,IAAM6c,UAAU;EAAA,IAAAC,MAAA,GAAA5T,iBAAA,eAAA9E,mBAAA,GAAAsD,IAAA,CAAG,SAAAqV,UAAO3S,GAAG,EAAEC,GAAG;IAAA,IAAAC,IAAA,EAAA0S,uBAAA,EAAAC,uBAAA,EAAAxS,IAAA,EAAAyC,QAAA,EAAAgQ,uBAAA,EAAAC,uBAAA,EAAAvB,EAAA,EAAAwB,uBAAA,EAAAC,uBAAA,EAAAC,GAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,WAAA,EAAAzD,YAAA,EAwBf0D,mBAAmB,EAAAC,oBAAA,EAAAC,MAAA;IAAA,OAAAxZ,mBAAA,GAAAM,IAAA,UAAAmZ,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAA5V,IAAA,GAAA4V,UAAA,CAAAxb,IAAA;QAAA;UAAAqb,oBAAA,YAAAI,sBAAA;YAAAJ,oBAAA,GAAAzU,iBAAA,eAAA9E,mBAAA,GAAAsD,IAAA,CAAlC,SAAAsW,UAAmC7R,IAAI;cAAA,IAAA0O,KAAA;gBAAAoD,uBAAA;gBAAAC,uBAAA;gBAAAC,QAAA;gBAAAC,UAAA;gBAAAC,MAAA;gBAAAC,cAAA;gBAAAC,eAAA;gBAAAC,KAAA;gBAAAC,uBAAA;gBAAAC,uBAAA;gBAAAC,YAAA;gBAAAC,uBAAA;gBAAAC,uBAAA;gBAAAC,eAAA;gBAAAC,WAAA;gBAAAC,UAAA;gBAAAC,OAAA,GAAAjf,SAAA;cAAA,OAAAoE,mBAAA,GAAAM,IAAA,UAAAwa,WAAAC,UAAA;gBAAA,kBAAAA,UAAA,CAAAjX,IAAA,GAAAiX,UAAA,CAAA7c,IAAA;kBAAA;oBAAEuY,KAAK,GAAAoE,OAAA,CAAAhf,MAAA,QAAAgf,OAAA,QAAA3V,SAAA,GAAA2V,OAAA,MAAG,CAAC;oBAAA,MAC1CpE,KAAK,GAAG,CAAC;sBAAAsE,UAAA,CAAA7c,IAAA;sBAAA;oBAAA;oBAAA,OAAA6c,UAAA,CAAAxY,MAAA;kBAAA;oBAAAwY,UAAA,CAAA7c,IAAA;oBAAA,OAIYwI,qBAAU,CAACC,KAAK,CAAC,+GAA+G,EAAE,CAACoB,IAAI,CAAC,CAAC;kBAAA;oBAAA8R,uBAAA,GAAAkB,UAAA,CAAA3Y,IAAA;oBAAA0X,uBAAA,GAAAhb,cAAA,CAAA+a,uBAAA;oBAA3JE,QAAQ,GAAAD,uBAAA;oBAAA,MACXC,QAAQ,CAACle,MAAM,GAAG,CAAC;sBAAAkf,UAAA,CAAA7c,IAAA;sBAAA;oBAAA;oBAAA8b,UAAA,GAAA/c,0BAAA,CACA8c,QAAQ;oBAAAgB,UAAA,CAAAjX,IAAA;oBAAAkW,UAAA,CAAAvc,CAAA;kBAAA;oBAAA,KAAAwc,MAAA,GAAAD,UAAA,CAAAtc,CAAA,IAAAC,IAAA;sBAAAod,UAAA,CAAA7c,IAAA;sBAAA;oBAAA;oBAAhBmI,KAAI,GAAA4T,MAAA,CAAA7d,KAAA;oBAAA2e,UAAA,CAAA7c,IAAA;oBAAA,OACkBwI,qBAAU,CAACC,KAAK,CAAC,uFAAuF,EAAE,CAACN,KAAI,CAACgB,KAAK,CAAC,CAAC;kBAAA;oBAAAgT,uBAAA,GAAAU,UAAA,CAAA3Y,IAAA;oBAAAkY,uBAAA,GAAAxb,cAAA,CAAAub,uBAAA;oBAA7IE,YAAY,GAAAD,uBAAA;oBAAAS,UAAA,CAAA7c,IAAA;oBAAA,OACawI,qBAAU,CAACC,KAAK,CAAC,+DAA+D,EAAE,CAACN,KAAI,CAAC0B,IAAI,CAAC,CAAC;kBAAA;oBAAAyS,uBAAA,GAAAO,UAAA,CAAA3Y,IAAA;oBAAAqY,uBAAA,GAAA3b,cAAA,CAAA0b,uBAAA;oBAAvHE,eAAe,GAAAD,uBAAA;oBAChBE,WAAW,GAAGD,eAAe,CAAC,CAAC,CAAC,CAACM,YAAY;oBAE7CJ,UAAU,GAAAjf,aAAA,CAAAA,aAAA,KACT0K,KAAI;sBACP2U,YAAY,EAAEL,WAAW;sBACzBM,UAAU,EAAExE,KAAK;sBACjByE,eAAe,EAAE,EAAAhB,cAAA,GAAAK,YAAY,CAAC,CAAC,CAAC,cAAAL,cAAA,uBAAfA,cAAA,CAAiBgB,eAAe,KAAI,CAAC;sBACtDC,eAAe,EAAE,EAAAhB,eAAA,GAAAI,YAAY,CAAC,CAAC,CAAC,cAAAJ,eAAA,uBAAfA,eAAA,CAAiBgB,eAAe,KAAI;oBAAC;oBAG1DvF,YAAY,CAACna,IAAI,CAACmf,UAAU,CAAC;oBAACG,UAAA,CAAA7c,IAAA;oBAAA,OACxBob,mBAAmB,CAACjT,KAAI,CAAC0B,IAAI,EAAE0O,KAAK,GAAG,CAAC,CAAC;kBAAA;oBAAAsE,UAAA,CAAA7c,IAAA;oBAAA;kBAAA;oBAAA6c,UAAA,CAAA7c,IAAA;oBAAA;kBAAA;oBAAA6c,UAAA,CAAAjX,IAAA;oBAAAiX,UAAA,CAAA3P,EAAA,GAAA2P,UAAA;oBAAAf,UAAA,CAAAjf,CAAA,CAAAggB,UAAA,CAAA3P,EAAA;kBAAA;oBAAA2P,UAAA,CAAAjX,IAAA;oBAAAkW,UAAA,CAAAnc,CAAA;oBAAA,OAAAkd,UAAA,CAAA3W,MAAA;kBAAA;kBAAA;oBAAA,OAAA2W,UAAA,CAAA/W,IAAA;gBAAA;cAAA,GAAA4V,SAAA;YAAA,CAG1D;YAAA,OAAAL,oBAAA,CAAA7d,KAAA,OAAAE,SAAA;UAAA;UAxBc0d,mBAAmB,YAAA8B,sBAAAC,IAAA;YAAA,OAAA9B,oBAAA,CAAA7d,KAAA,OAAAE,SAAA;UAAA;UAvB9BsK,IAAI,GAAGF,GAAG,CAACQ,OAAO,CAACN,IAAI;UAAA,IACtBA,IAAI;YAAAwT,UAAA,CAAAxb,IAAA;YAAA;UAAA;UAAA,OAAAwb,UAAA,CAAAnX,MAAA,WACE0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAAsU,UAAA,CAAAxb,IAAA;UAAA,OAEewI,qBAAU,CAACC,KAAK,CAAC,+DAA+D,EAAE,CAACT,IAAI,CAAC,CAAC;QAAA;UAAA0S,uBAAA,GAAAc,UAAA,CAAAtX,IAAA;UAAAyW,uBAAA,GAAA/Z,cAAA,CAAA8Z,uBAAA;UAAvGvS,IAAI,GAAAwS,uBAAA;UAAA,IACNxS,IAAI;YAAAqT,UAAA,CAAAxb,IAAA;YAAA;UAAA;UAAA,OAAAwb,UAAA,CAAAnX,MAAA,WACE0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UACL;UACG0D,QAAQ,GAAGzC,IAAI,CAAC,CAAC,CAAC;UAAAqT,UAAA,CAAAxb,IAAA;UAAA,OACHwI,qBAAU,CAACC,KAAK,CAAC,0JAA0J,EAAE,CAACmC,QAAQ,CAACf,IAAI,CAAC,CAAC;QAAA;UAAA+Q,uBAAA,GAAAY,UAAA,CAAAtX,IAAA;UAAA2W,uBAAA,GAAAja,cAAA,CAAAga,uBAAA;UAAzMtB,EAAE,GAAAuB,uBAAA;UAAAW,UAAA,CAAAxb,IAAA;UAAA,OACWwI,qBAAU,CAACC,KAAK,CAAC,4FAA4F,EAAE,CAACmC,QAAQ,CAACf,IAAI,CAAC,CAAC;QAAA;UAAAiR,uBAAA,GAAAU,UAAA,CAAAtX,IAAA;UAAA6W,uBAAA,GAAAna,cAAA,CAAAka,uBAAA;UAA5IE,GAAG,GAAAD,uBAAA;UAAAS,UAAA,CAAAxb,IAAA;UAAA,OACkBwI,qBAAU,CAACC,KAAK,CAAC,sGAAsG,EAAE,CAACmC,QAAQ,CAACf,IAAI,CAAC,CAAC;QAAA;UAAAoR,uBAAA,GAAAO,UAAA,CAAAtX,IAAA;UAAAgX,uBAAA,GAAAta,cAAA,CAAAqa,uBAAA;UAA9JE,WAAW,GAAAD,uBAAA;UAEZxD,YAAY,GAAG,EAAE;UAAA8D,UAAA,CAAAxb,IAAA;UAAA,OA4BjBob,mBAAmB,CAACxQ,QAAQ,CAACf,IAAI,CAAC;QAAA;UAGpCyR,MAAM,GAAG,EAAE;UACfN,GAAG,CAACoC,GAAG,CAAC,UAAC5T,IAAI,EAAK;YACd,IAAI6T,SAAS,GAAG;cACZhR,OAAO,EAAE7C,IAAI,CAAC6C,OAAO;cACrBlD,KAAK,EAAE,IAAI,GAAGK,IAAI,CAACL,KAAK,CAAC/H,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,GAAG3C,MAAM,CAAC+K,IAAI,CAACL,KAAK,CAAC/H,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;cAC5E2K,IAAI,EAAEvC,IAAI,CAACuC;YACf,CAAC;YAED,OAAOuP,MAAM,CAAC/d,IAAI,CAAC8f,SAAS,CAAC;UACjC,CAAC,CAAC;UAAC,OAAA7B,UAAA,CAAAnX,MAAA,WACI0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,iBAAiB;YAC1BwQ,EAAE,EAAE5B,YAAY;YAChB4F,SAAS,EAAEhE,EAAE;YACb0B,GAAG,EAAEM,MAAM;YACXH,WAAW,EAAEA,WAAW;YACxBvS,MAAM,EAAE,IAAI;YACZG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAsU,UAAA,CAAA1V,IAAA;MAAA;IAAA,GAAA2U,SAAA;EAAA,CAEL;EAAA,gBAzEKF,UAAUA,CAAAgD,IAAA,EAAAC,IAAA;IAAA,OAAAhD,MAAA,CAAAhd,KAAA,OAAAE,SAAA;EAAA;AAAA,GAyEf;AACD,IAAM+f,MAAM;EAAA,IAAAC,MAAA,GAAA9W,iBAAA,eAAA9E,mBAAA,GAAAsD,IAAA,CAAG,SAAAuY,UAAO7V,GAAG,EAAEC,GAAG;IAAA,IAAAC,IAAA,EAAAoE,KAAA;IAAA,OAAAtK,mBAAA,GAAAM,IAAA,UAAAwb,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAAjY,IAAA,GAAAiY,UAAA,CAAA7d,IAAA;QAAA;UACtBgI,IAAI,GAAGF,GAAG,CAACQ,OAAO,CAACN,IAAI;UACvBoE,KAAK,GAAGtE,GAAG,CAACyB,IAAI,CAAC6C,KAAK,EAE1B;UAGA;QAAA;QAAA;UAAA,OAAAyR,UAAA,CAAA/X,IAAA;MAAA;IAAA,GAAA6X,SAAA;EAAA,CACH;EAAA,gBARKF,MAAMA,CAAAK,IAAA,EAAAC,IAAA;IAAA,OAAAL,MAAA,CAAAlgB,KAAA,OAAAE,SAAA;EAAA;AAAA,GAQX;AAED,IAAMyN,QAAQ;EAAA,IAAA6S,MAAA,GAAApX,iBAAA,eAAA9E,mBAAA,GAAAsD,IAAA,CAAG,SAAA6Y,UAAOnW,GAAG,EAAEC,GAAG;IAAA,IAAAC,IAAA,EAAAoE,KAAA,EAAA1J,IAAA,EAAAwb,MAAA,EAAAC,YAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAlW,IAAA,EAAAyC,QAAA,EAAA0T,uBAAA,EAAAC,uBAAA,EAAApT,QAAA,EAAAqT,SAAA,EAAAC,UAAA,EAAA1S,IAAA,EAAAoG,IAAA,EAAAuM,SAAA,EAAAC,OAAA,EAAAC,QAAA,EAAAC,qBAAA,EAAAC,QAAA,EAAAC,GAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,SAAA,EAAAC,WAAA,EAAAC,OAAA,EAAAC,WAAA,EAAAC,IAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,UAAA;IAAA,OAAA3d,mBAAA,GAAAM,IAAA,UAAAsd,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAA/Z,IAAA,GAAA+Z,UAAA,CAAA3f,IAAA;QAAA;UACxBgI,IAAI,GAAGF,GAAG,CAACQ,OAAO,CAACN,IAAI;UACvBoE,KAAK,GAAGtE,GAAG,CAACyB,IAAI,CAAC6C,KAAK;UACtB1J,IAAI,GAAGoF,GAAG,CAACyB,IAAI,CAAC7G,IAAI;UACpBwb,MAAM,GAAGpW,GAAG,CAACyB,IAAI,CAAC2U,MAAM;UAEtBC,YAAY,GAAGyB,OAAO,CAACC,GAAG,CAACC,aAAa;UAAA,MAE1Cpd,IAAI,IAAI,QAAQ;YAAAid,UAAA,CAAA3f,IAAA;YAAA;UAAA;UAAA,MACZ,CAACgI,IAAI,IAAI,CAACoE,KAAK,IAAIA,KAAK,GAAG+R,YAAY,GAAG,CAAC;YAAAwB,UAAA,CAAA3f,IAAA;YAAA;UAAA;UAAA,OAAA2f,UAAA,CAAAtb,MAAA,WACpC0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAAyY,UAAA,CAAA3f,IAAA;UAAA,OAGWwI,qBAAU,CAACC,KAAK,CAAC,2EAA2E,EAAE,CAACT,IAAI,CAAC,CAAC;QAAA;UAAAoW,uBAAA,GAAAuB,UAAA,CAAAzb,IAAA;UAAAma,uBAAA,GAAAzd,cAAA,CAAAwd,uBAAA;UAAnHjW,IAAI,GAAAkW,uBAAA;UACPzT,QAAQ,GAAGzC,IAAI,CAAC,CAAC,CAAC;UAAA,IACjBA,IAAI;YAAAwX,UAAA,CAAA3f,IAAA;YAAA;UAAA;UAAA,OAAA2f,UAAA,CAAAtb,MAAA,WACE0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UACL;UAAC,MACExE,IAAI,IAAI,QAAQ;YAAAid,UAAA,CAAA3f,IAAA;YAAA;UAAA;UAAA2f,UAAA,CAAA3f,IAAA;UAAA,OACVwI,qBAAU,CAACC,KAAK,CAAC,iFAAiF,EAAE,CAACmC,QAAQ,CAACzB,KAAK,EAAE+U,MAAM,EAAE,CAAC,CAAC,CAAC;QAAA;UAAA,OAAAyB,UAAA,CAAAtb,MAAA,WAC/H0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,8BAA8B;YACvCF,MAAM,EAAE,IAAI;YACZG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAAyY,UAAA,CAAA3f,IAAA;UAAA,OAEmBwI,qBAAU,CAACC,KAAK,CAAC,wDAAwD,EAAE,CAACmC,QAAQ,CAACzB,KAAK,EAAE,CAAC,CAAC,CAAC;QAAA;UAAAmV,uBAAA,GAAAqB,UAAA,CAAAzb,IAAA;UAAAqa,uBAAA,GAAA3d,cAAA,CAAA0d,uBAAA;UAAjHnT,QAAQ,GAAAoT,uBAAA;UAAA,MAEXpT,QAAQ,CAACxN,MAAM,IAAI,CAAC;YAAAgiB,UAAA,CAAA3f,IAAA;YAAA;UAAA;UAGX8R,SAAQ,GAAjB,SAASA,SAAQA,CAACC,MAAM,EAAE;YACtB,IAAIC,MAAM,GAAID,MAAM,GAAG,EAAE,GAAI,GAAG,GAAGA,MAAM,GAAGA,MAAM;YAClD,OAAOC,MAAM;UACjB,CAAC;UAEQC,UAAS,GAAlB,SAASA,UAASA,CAAA,EAA4B;YAAA,IAA3BF,MAAM,GAAArU,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAsJ,SAAA,GAAAtJ,SAAA,MAAG,EAAE;YAAA,IAAEwU,QAAQ,GAAAxU,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAsJ,SAAA,GAAAtJ,SAAA,MAAG,CAAC;YACxC,IAAIyU,IAAI,GAAG,EAAE;YACb,IAAIJ,MAAM,EAAE;cACRI,IAAI,GAAG,IAAIhL,IAAI,CAACrI,MAAM,CAACiT,MAAM,CAAC,CAAC;YACnC,CAAC,MAAM;cACHI,IAAI,GAAG,IAAIhL,IAAI,CAAC,CAAC;YACrB;YAEAgL,IAAI,CAACC,QAAQ,CAACD,IAAI,CAACE,QAAQ,CAAC,CAAC,GAAGH,QAAQ,CAAC;YAEzC,IAAII,KAAK,GAAGR,SAAQ,CAACK,IAAI,CAACI,WAAW,CAAC,CAAC,CAAC;YACxC,IAAIC,MAAM,GAAGV,SAAQ,CAACK,IAAI,CAACM,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;YAC1C,IAAIC,IAAI,GAAGZ,SAAQ,CAACK,IAAI,CAACQ,OAAO,CAAC,CAAC,CAAC;YAEnC,IAAIC,KAAK,GAAGT,IAAI,CAACE,QAAQ,CAAC,CAAC,GAAG,EAAE;YAChCO,KAAK,GAAGA,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,KAAK;YAChC,IAAIC,IAAI,GAAGV,IAAI,CAACE,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI;YAE7C,IAAIS,OAAO,GAAGhB,SAAQ,CAACK,IAAI,CAACY,UAAU,CAAC,CAAC,CAAC;YACzC,IAAIC,OAAO,GAAGlB,SAAQ,CAACK,IAAI,CAACc,UAAU,CAAC,CAAC,CAAC;YAEzC,OAAOX,KAAK,GAAG,GAAG,GAAGE,MAAM,GAAG,GAAG,GAAGE,IAAI,GAAG,GAAG,GAAGE,KAAK,GAAG,GAAG,GAAGE,OAAO,GAAG,GAAG,GAAGE,OAAO,GAAG,GAAG,GAAGH,IAAI;UACvG,CAAC;UA7BG9G,IAAI,GAAG,IAAI5E,IAAI,CAAC,CAAC,CAACoB,OAAO,CAAC,CAAC;UACzB4J,IAAI,GAAG,IAAIhL,IAAI,CAAC,CAAC;UA6BnBuX,SAAS,GAAGzM,UAAS,CAAClG,IAAI,CAAC;UAC3B4S,OAAO,GAAGxM,IAAI,CAAC4N,cAAc,CAAC,CAAC,GAAG,EAAE,GAAG5N,IAAI,CAAC6N,WAAW,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG7N,IAAI,CAAC8N,UAAU,CAAC,CAAC;UACtFrB,QAAQ,GAAGpX,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAI,cAAc,GAAG,cAAc,GAAG,CAAC,CAAC,CAAC,GAAG,cAAc,EACjG;UAEA0E,KAAK,GAAGtN,MAAM,CAACsN,KAAK,CAAC;UACjByS,qBAAqB,GAAGF,OAAO,GAAGC,QAAQ;UACxCE,QAAQ,GAAG;YACboB,QAAQ,EAAEN,OAAO,CAACC,GAAG,CAACM,WAAW;YACjCC,UAAU,EAAER,OAAO,CAACC,GAAG,CAACO,UAAU;YAClCC,kBAAkB,EAAExB,qBAAqB;YACzCyB,MAAM,EAAElU;UACZ,CAAC;UAAA,MAEG1J,IAAI,IAAI,MAAM;YAAAid,UAAA,CAAA3f,IAAA;YAAA;UAAA;UACR+e,GAAG;UAAAY,UAAA,CAAA3f,IAAA;UAAA,OAUHwI,qBAAU,CAACsB,OAAO,CAACiV,GAAG,EAAE,CAACF,qBAAqB,EAAE,MAAM,EAAEjU,QAAQ,CAACzB,KAAK,EAAEiD,KAAK,EAAE1J,IAAI,EAAE,CAAC,EAAEgc,SAAS,EAAE,MAAM,EAAE3S,IAAI,CAAC,CAAC;QAAA;UAAA4T,UAAA,CAAA3f,IAAA;UAAA,OAC9FwI,qBAAU,CAACC,KAAK,CAAC,wDAAwD,EAAE,CAACmC,QAAQ,CAACzB,KAAK,EAAE,CAAC,CAAC,CAAC;QAAA;UAAA6V,uBAAA,GAAAW,UAAA,CAAAzb,IAAA;UAAA+a,uBAAA,GAAAre,cAAA,CAAAoe,uBAAA;UAAjH7T,SAAQ,GAAA8T,uBAAA;UAAA,OAAAU,UAAA,CAAAtb,MAAA,WACR0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,uBAAuB;YAChCsI,KAAK,EAAEjG,SAAQ,CAAC,CAAC,CAAC;YAClBvC,MAAM,EAAE,IAAI;YACZG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAGAiY,WAAW,GAAG/S,KAAK,CAACjL,QAAQ,CAAC,CAAC;UAE9Bie,OAAO,GAAG;YACZnhB,GAAG,EAAE,sCAAsC;YAC3CsiB,aAAa,EAAE1B,qBAAqB;YACpCyB,MAAM,EAAEnB,WAAW;YACnBqB,MAAM,EAAE,eAAe;YACvBC,aAAa,EAAE7V,QAAQ,CAAC0B,SAAS;YACjCoU,cAAc,EAAE,qBAAqB;YACrCC,eAAe,EAAE/V,QAAQ,CAACzB,KAAK;YAC/ByX,YAAY,8CAA8C;YAC1DC,IAAI,EAAE;UACV,CAAC;UAAAlB,UAAA,CAAA/Z,IAAA;UAAA+Z,UAAA,CAAA3f,IAAA;UAAA,OAW6BiH,KAAK,CAAC6Z,IAAI,CAAC,sCAAsC,EAAE1B,OAAO,CAAC;QAAA;UAA/EC,WAAW,GAAAM,UAAA,CAAAzb,IAAA;UAAA,MAEbmb,WAAW,CAAC7V,IAAI,CAACZ,MAAM,IAAI,IAAI;YAAA+W,UAAA,CAAA3f,IAAA;YAAA;UAAA;UACzB+e,IAAG;UAAAY,UAAA,CAAA3f,IAAA;UAAA,OAWHwI,qBAAU,CAACsB,OAAO,CAACiV,IAAG,EAAE,CAACF,qBAAqB,EAAE,GAAG,EAAEjU,QAAQ,CAACzB,KAAK,EAAEiD,KAAK,EAAE1J,IAAI,EAAE,CAAC,EAAEgc,SAAS,EAAE,GAAG,EAAExX,OAAO,CAAC,CAAC;QAAA;UAAAyY,UAAA,CAAA3f,IAAA;UAAA,OAE3FwI,qBAAU,CAACC,KAAK,CAAC,wDAAwD,EAAE,CAACmC,QAAQ,CAACzB,KAAK,EAAE,CAAC,CAAC,CAAC;QAAA;UAAAoW,uBAAA,GAAAI,UAAA,CAAAzb,IAAA;UAAAsb,uBAAA,GAAA5e,cAAA,CAAA2e,uBAAA;UAAjHpU,UAAQ,GAAAqU,uBAAA;UAAA,OAAAG,UAAA,CAAAtb,MAAA,WAER0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,uBAAuB;YAChCsI,KAAK,EAAEjG,UAAQ,CAAC,CAAC,CAAC;YAClB4V,WAAW,EAAE1B,WAAW,CAAC7V,IAAI,CAACA,IAAI,CAACuX,WAAW;YAC9CnY,MAAM,EAAE,IAAI;YACZG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA,OAAAyY,UAAA,CAAAtb,MAAA,WAEK0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YAAEC,OAAO,EAAE,wBAAwB;YAAEF,MAAM,EAAE;UAAM,CAAC,CAAC;QAAA;UAAA+W,UAAA,CAAA3f,IAAA;UAAA;QAAA;UAAA2f,UAAA,CAAA/Z,IAAA;UAAA+Z,UAAA,CAAAzS,EAAA,GAAAyS,UAAA;UAAA,OAAAA,UAAA,CAAAtb,MAAA,WAG9E0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YAAEC,OAAO,EAAE,oBAAoB;YAAEF,MAAM,EAAE;UAAM,CAAC,CAAC;QAAA;UAAA+W,UAAA,CAAA3f,IAAA;UAAA;QAAA;UAAA,OAAA2f,UAAA,CAAAtb,MAAA,WAG1E0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,uBAAuB;YAChCsI,KAAK,EAAEjG,QAAQ,CAAC,CAAC,CAAC;YAClBvC,MAAM,EAAE,IAAI;YACZG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAyY,UAAA,CAAA7Z,IAAA;MAAA;IAAA,GAAAmY,SAAA;EAAA,CAET;EAAA,gBAAA9S,SAAA6V,IAAA,EAAAC,IAAA;IAAA,OAAAjD,MAAA,CAAAxgB,KAAA,OAAAE,SAAA;EAAA;AAAA;AAGD,IAAMwjB,cAAc;EAAA,IAAAC,MAAA,GAAAva,iBAAA,eAAA9E,mBAAA,GAAAsD,IAAA,CAAG,SAAAgc,UAAOtZ,GAAG,EAAEC,GAAG;IAAA,IAAAC,IAAA,EAAAqZ,uBAAA,EAAAC,uBAAA,EAAAnZ,IAAA,EAAAoZ,SAAA,EAAAvP,MAAA;IAAA,OAAAlQ,mBAAA,GAAAM,IAAA,UAAAof,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAA7b,IAAA,GAAA6b,UAAA,CAAAzhB,IAAA;QAAA;UAAAyhB,UAAA,CAAA7b,IAAA;UAE1BoC,IAAI,GAAGF,GAAG,CAACQ,OAAO,CAACN,IAAI;UAAA,IAEtBA,IAAI;YAAAyZ,UAAA,CAAAzhB,IAAA;YAAA;UAAA;UAAA,OAAAyhB,UAAA,CAAApd,MAAA,WACE0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,+CAA+C;YACxDF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAAua,UAAA,CAAAzhB,IAAA;UAAA,OAGewI,qBAAU,CAACC,KAAK,CAAC,2EAA2E,EAAE,CAACT,IAAI,CAAC,CAAC;QAAA;UAAAqZ,uBAAA,GAAAI,UAAA,CAAAvd,IAAA;UAAAod,uBAAA,GAAA1gB,cAAA,CAAAygB,uBAAA;UAAnHlZ,IAAI,GAAAmZ,uBAAA;UAAA,IAENnZ,IAAI;YAAAsZ,UAAA,CAAAzhB,IAAA;YAAA;UAAA;UAAA,OAAAyhB,UAAA,CAAApd,MAAA,WACE0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,+CAA+C;YACxDF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAGF0D,SAAQ,GAAGzC,IAAI,CAAC,CAAC,CAAC;UAAAsZ,UAAA,CAAAzhB,IAAA;UAAA,OAEDwI,qBAAU,CAACC,KAAK,CAAC,qDAAqD,EAAE,CAACmC,SAAQ,CAACzB,KAAK,EAAE,CAAC,CAAC,CAAC;QAAA;UAA3G6I,MAAM,GAAAyP,UAAA,CAAAvd,IAAA;UAAA,MAER8N,MAAM,CAAC0P,YAAY,GAAG,CAAC;YAAAD,UAAA,CAAAzhB,IAAA;YAAA;UAAA;UAAA,OAAAyhB,UAAA,CAAApd,MAAA,WAChB0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,0DAA0D;YACnEF,MAAM,EAAE,IAAI;YACZG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA,OAAAua,UAAA,CAAApd,MAAA,WAEK0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,mFAAmF;YAC5FF,MAAM,EAAE,IAAI;YACZG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAAua,UAAA,CAAAzhB,IAAA;UAAA;QAAA;UAAAyhB,UAAA,CAAA7b,IAAA;UAAA6b,UAAA,CAAAvU,EAAA,GAAAuU,UAAA;UAGNE,OAAO,CAAChb,KAAK,CAAC,aAAa,EAAA8a,UAAA,CAAAvU,EAAO,CAAC;UAAA,OAAAuU,UAAA,CAAApd,MAAA,WAC5B0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,qBAAqB;YAC9BF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAua,UAAA,CAAA3b,IAAA;MAAA;IAAA,GAAAsb,SAAA;EAAA,CAET;EAAA,gBA/CKF,cAAcA,CAAAU,IAAA,EAAAC,IAAA;IAAA,OAAAV,MAAA,CAAA3jB,KAAA,OAAAE,SAAA;EAAA;AAAA,GA+CnB;AAGD,IAAMokB,OAAO;EAAA,IAAAC,MAAA,GAAAnb,iBAAA,eAAA9E,mBAAA,GAAAsD,IAAA,CAAG,SAAA4c,UAAOla,GAAG,EAAEC,GAAG;IAAA,IAAAC,IAAA,EAAAia,SAAA,EAAA3V,SAAA,EAAA4V,GAAA,EAAAC,KAAA,EAAAC,GAAA,EAAAC,IAAA,EAAAtW,IAAA,EAAAuW,uBAAA,EAAAC,uBAAA,EAAApa,IAAA,EAAAyC,QAAA,EAAA4X,uBAAA,EAAAC,uBAAA,EAAAC,SAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,UAAA,EAAA9D,GAAA;IAAA,OAAAjd,mBAAA,GAAAM,IAAA,UAAA0gB,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAAnd,IAAA,GAAAmd,UAAA,CAAA/iB,IAAA;QAAA;UACvBgI,IAAI,GAAGF,GAAG,CAACQ,OAAO,CAACN,IAAI;UACvBia,SAAS,GAAGna,GAAG,CAACyB,IAAI,CAAC0Y,SAAS;UAC9B3V,SAAS,GAAGxE,GAAG,CAACyB,IAAI,CAAC+C,SAAS;UAC9B4V,GAAG,GAAGpa,GAAG,CAACyB,IAAI,CAAC2Y,GAAG;UAClBC,KAAK,GAAGra,GAAG,CAACyB,IAAI,CAAC4Y,KAAK;UACtBC,GAAG,GAAGta,GAAG,CAACyB,IAAI,CAAC6Y,GAAG;UAClBC,IAAI,GAAGva,GAAG,CAACyB,IAAI,CAAC8Y,IAAI;UAEpBtW,IAAI,GAAG,IAAI5E,IAAI,CAAC,CAAC,CAACoB,OAAO,CAAC,CAAC;UAAA,MAE3B,CAACP,IAAI,IAAI,CAACia,SAAS,IAAI,CAAC3V,SAAS,IAAI,CAAC4V,GAAG,IAAI,CAACC,KAAK,IAAI,CAACD,GAAG,IAAI,CAACG,IAAI;YAAAU,UAAA,CAAA/iB,IAAA;YAAA;UAAA;UAAA,OAAA+iB,UAAA,CAAA1e,MAAA,WAC7D0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA6b,UAAA,CAAA/iB,IAAA;UAAA,OAEewI,qBAAU,CAACC,KAAK,CAAC,+DAA+D,EAAE,CAACT,IAAI,CAAC,CAAC;QAAA;UAAAsa,uBAAA,GAAAS,UAAA,CAAA7e,IAAA;UAAAqe,uBAAA,GAAA3hB,cAAA,CAAA0hB,uBAAA;UAAvGna,IAAI,GAAAoa,uBAAA;UACP3X,QAAQ,GAAGzC,IAAI,CAAC,CAAC,CAAC;UAAA,IACjBA,IAAI;YAAA4a,UAAA,CAAA/iB,IAAA;YAAA;UAAA;UAAA,OAAA+iB,UAAA,CAAA1e,MAAA,WACE0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UACL;UAAC6b,UAAA,CAAA/iB,IAAA;UAAA,OACwBwI,qBAAU,CAACC,KAAK,CAAC,yCAAyC,EAAE,CAAC4Z,IAAI,CAAC,CAAC;QAAA;UAAAG,uBAAA,GAAAO,UAAA,CAAA7e,IAAA;UAAAue,uBAAA,GAAA7hB,cAAA,CAAA4hB,uBAAA;UAAtFE,SAAS,GAAAD,uBAAA;UAAAM,UAAA,CAAA/iB,IAAA;UAAA,OACWwI,qBAAU,CAACC,KAAK,CAAC,0CAA0C,EAAE,CAACmC,QAAQ,CAACzB,KAAK,CAAC,CAAC;QAAA;UAAAwZ,uBAAA,GAAAI,UAAA,CAAA7e,IAAA;UAAA0e,uBAAA,GAAAhiB,cAAA,CAAA+hB,uBAAA;UAAlGE,UAAU,GAAAD,uBAAA;UAAA,MACbF,SAAS,CAAC/kB,MAAM,IAAI,CAAC,IAAIklB,UAAU,CAACllB,MAAM,IAAI,CAAC;YAAAolB,UAAA,CAAA/iB,IAAA;YAAA;UAAA;UACzC+e,GAAG;UAAAgE,UAAA,CAAA/iB,IAAA;UAAA,OAUHwI,qBAAU,CAACsB,OAAO,CAACiV,GAAG,EAAE,CAACnU,QAAQ,CAACzB,KAAK,EAAE8Y,SAAS,EAAE3V,SAAS,EAAE4V,GAAG,EAAEC,KAAK,EAAEC,GAAG,EAAEC,IAAI,EAAEtW,IAAI,CAAC,CAAC;QAAA;UAAA,OAAAgX,UAAA,CAAA1e,MAAA,WAC3F0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,yBAAyB;YAClCF,MAAM,EAAE,IAAI;YACZG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA,MACKwb,SAAS,CAAC/kB,MAAM,IAAI,CAAC;YAAAolB,UAAA,CAAA/iB,IAAA;YAAA;UAAA;UAAA+iB,UAAA,CAAA/iB,IAAA;UAAA,OACtBwI,qBAAU,CAACC,KAAK,CAAC,gDAAgD,EAAE,CAAC4Z,IAAI,EAAEzX,QAAQ,CAACzB,KAAK,CAAC,CAAC;QAAA;UAAA,OAAA4Z,UAAA,CAAA1e,MAAA,WACzF0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,kBAAkB;YAC3BF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA,MACK2b,UAAU,CAACllB,MAAM,GAAG,CAAC;YAAAolB,UAAA,CAAA/iB,IAAA;YAAA;UAAA;UAAA+iB,UAAA,CAAA/iB,IAAA;UAAA,OACtBwI,qBAAU,CAACC,KAAK,CAAC,oHAAoH,EAAE,CAACwZ,SAAS,EAAE3V,SAAS,EAAE4V,GAAG,EAAEC,KAAK,EAAEC,GAAG,EAAEC,IAAI,EAAEtW,IAAI,EAAEnB,QAAQ,CAACzB,KAAK,CAAC,CAAC;QAAA;UAAA,OAAA4Z,UAAA,CAAA1e,MAAA,WAC1M0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,yBAAyB;YAClCF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;QAAA;UAAA,OAAA6b,UAAA,CAAAjd,IAAA;MAAA;IAAA,GAAAkc,SAAA;EAAA,CAGT;EAAA,gBA9DKF,OAAOA,CAAAkB,IAAA,EAAAC,IAAA;IAAA,OAAAlB,MAAA,CAAAvkB,KAAA,OAAAE,SAAA;EAAA;AAAA,GA8DZ;AAED,IAAMwlB,YAAY;EAAA,IAAAC,MAAA,GAAAvc,iBAAA,eAAA9E,mBAAA,GAAAsD,IAAA,CAAG,SAAAge,UAAOtb,GAAG,EAAEC,GAAG;IAAA,IAAAC,IAAA,EAAAqb,uBAAA,EAAAC,uBAAA,EAAAnb,IAAA,EAAAyC,QAAA,EAkBvBkH,QAAQ,EAKRG,SAAS,EAAAE,IAAA,EAAAuM,SAAA,EAAA6E,uBAAA,EAAAC,uBAAA,EAAArY,QAAA,EAAAsY,uBAAA,EAAAC,uBAAA,EAAAC,SAAA,EAAAC,KAAA,EAAAtS,MAAA,EAAAuS,GAAA,EAAA7R,MAAA,EAAA8R,uBAAA,EAAAC,uBAAA,EAAAC,QAAA;IAAA,OAAAliB,mBAAA,GAAAM,IAAA,UAAA6hB,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAAte,IAAA,GAAAse,UAAA,CAAAlkB,IAAA;QAAA;UAATiS,SAAS,YAAAkS,YAAA,EAA4B;YAAA,IAA3BpS,MAAM,GAAArU,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAsJ,SAAA,GAAAtJ,SAAA,MAAG,EAAE;YAAA,IAAEwU,QAAQ,GAAAxU,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAsJ,SAAA,GAAAtJ,SAAA,MAAG,CAAC;YACxC,IAAIyU,IAAI,GAAG,EAAE;YACb,IAAIJ,MAAM,EAAE;cACRI,IAAI,GAAG,IAAIhL,IAAI,CAACrI,MAAM,CAACiT,MAAM,CAAC,CAAC;YACnC,CAAC,MAAM;cACHI,IAAI,GAAG,IAAIhL,IAAI,CAAC,CAAC;YACrB;YAEAgL,IAAI,CAACC,QAAQ,CAACD,IAAI,CAACE,QAAQ,CAAC,CAAC,GAAGH,QAAQ,CAAC;YAEzC,IAAII,KAAK,GAAGR,QAAQ,CAACK,IAAI,CAACI,WAAW,CAAC,CAAC,CAAC;YACxC,IAAIC,MAAM,GAAGV,QAAQ,CAACK,IAAI,CAACM,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;YAC1C,IAAIC,IAAI,GAAGZ,QAAQ,CAACK,IAAI,CAACQ,OAAO,CAAC,CAAC,CAAC;YAEnC,IAAIC,KAAK,GAAGT,IAAI,CAACE,QAAQ,CAAC,CAAC,GAAG,EAAE;YAChCO,KAAK,GAAGA,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,KAAK;YAChC,IAAIC,IAAI,GAAGV,IAAI,CAACE,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI;YAE7C,IAAIS,OAAO,GAAGhB,QAAQ,CAACK,IAAI,CAACY,UAAU,CAAC,CAAC,CAAC;YACzC,IAAIC,OAAO,GAAGlB,QAAQ,CAACK,IAAI,CAACc,UAAU,CAAC,CAAC,CAAC;YAEzC,OAAOX,KAAK,GAAG,GAAG,GAAGE,MAAM,GAAG,GAAG,GAAGE,IAAI,GAAG,GAAG,GAAGE,KAAK,GAAG,GAAG,GAAGE,OAAO,GAAG,GAAG,GAAGE,OAAO,GAAG,GAAG,GAAGH,IAAI;UACvG,CAAC;UA3BQf,QAAQ,YAAAsS,WAACrS,MAAM,EAAE;YACtB,IAAIC,MAAM,GAAID,MAAM,GAAG,EAAE,GAAI,GAAG,GAAGA,MAAM,GAAGA,MAAM;YAClD,OAAOC,MAAM;UACjB,CAAC;UApBGhK,IAAI,GAAGF,GAAG,CAACQ,OAAO,CAACN,IAAI;UAAA,IACtBA,IAAI;YAAAkc,UAAA,CAAAlkB,IAAA;YAAA;UAAA;UAAA,OAAAkkB,UAAA,CAAA7f,MAAA,WACE0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAAgd,UAAA,CAAAlkB,IAAA;UAAA,OAEewI,qBAAU,CAACC,KAAK,CAAC,wEAAwE,EAAE,CAACT,IAAI,CAAC,CAAC;QAAA;UAAAqb,uBAAA,GAAAa,UAAA,CAAAhgB,IAAA;UAAAof,uBAAA,GAAA1iB,cAAA,CAAAyiB,uBAAA;UAAhHlb,IAAI,GAAAmb,uBAAA;UACP1Y,QAAQ,GAAGzC,IAAI,CAAC,CAAC,CAAC;UAAA,IACjBA,IAAI;YAAA+b,UAAA,CAAAlkB,IAAA;YAAA;UAAA;UAAA,OAAAkkB,UAAA,CAAA7f,MAAA,WACE0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UACL;UA6BGiL,IAAI,GAAG,IAAIhL,IAAI,CAAC,CAAC,CAACoB,OAAO,CAAC,CAAC;UAC3BmW,SAAS,GAAGzM,SAAS,CAACE,IAAI,CAAC;UAAA+R,UAAA,CAAAlkB,IAAA;UAAA,OACNwI,qBAAU,CAACC,KAAK,CAAC,uDAAuD,EAAE,CAACmC,QAAQ,CAACzB,KAAK,CAAC,CAAC;QAAA;UAAAoa,uBAAA,GAAAW,UAAA,CAAAhgB,IAAA;UAAAsf,uBAAA,GAAA5iB,cAAA,CAAA2iB,uBAAA;UAA7GpY,QAAQ,GAAAqY,uBAAA;UAAAU,UAAA,CAAAlkB,IAAA;UAAA,OACWwI,qBAAU,CAACC,KAAK,CAAC,yCAAyC,EAAE,CAACmC,QAAQ,CAACzB,KAAK,CAAC,CAAC;QAAA;UAAAsa,uBAAA,GAAAS,UAAA,CAAAhgB,IAAA;UAAAwf,uBAAA,GAAA9iB,cAAA,CAAA6iB,uBAAA;UAAhGE,SAAS,GAAAD,uBAAA;UACZE,KAAK,GAAG,CAAC;UACbzY,QAAQ,CAACvN,OAAO,CAAC,UAAC4L,IAAI,EAAK;YACvBoa,KAAK,IAAIzK,UAAU,CAAC3P,IAAI,CAAC4C,KAAK,CAAC;UACnC,CAAC,CAAC;UACEkF,MAAM,GAAG,CAAC;UACdqS,SAAS,CAAC/lB,OAAO,CAAC,UAAC4L,IAAI,EAAK;YACxB8H,MAAM,IAAI6H,UAAU,CAAC3P,IAAI,CAAC4C,KAAK,CAAC;UACpC,CAAC,CAAC;UACEyX,GAAG,GAAG,CAAC;UACXF,SAAS,CAAC/lB,OAAO,CAAC,UAAC4L,IAAI,EAAK;YACxBqa,GAAG,IAAI1K,UAAU,CAAC3P,IAAI,CAACqa,GAAG,CAAC;UAC/B,CAAC,CAAC;UAEF7R,MAAM,GAAGxK,IAAI,CAACD,GAAG,CAACyK,MAAM,EAAE,CAAC,CAAC;UACxBA,MAAM,GAAG,CAAC;UACd,IAAI4R,KAAK,GAAGtS,MAAM,GAAG,CAAC,EAAEU,MAAM,GAAG4R,KAAK,GAAGtS,MAAM,GAAGuS,GAAG;UAACK,UAAA,CAAAlkB,IAAA;UAAA,OAE7BwI,qBAAU,CAACC,KAAK,CAAC,0CAA0C,EAAE,CAACmC,QAAQ,CAACzB,KAAK,CAAC,CAAC;QAAA;UAAA2a,uBAAA,GAAAI,UAAA,CAAAhgB,IAAA;UAAA6f,uBAAA,GAAAnjB,cAAA,CAAAkjB,uBAAA;UAAhGE,QAAQ,GAAAD,uBAAA;UAAA,OAAAG,UAAA,CAAA7f,MAAA,WACR0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,uBAAuB;YAChCsI,KAAK,EAAE4S,QAAQ;YACfpZ,QAAQ,EAAEzC,IAAI;YACd6J,MAAM,EAAEA,MAAM;YACdpJ,MAAM,EAAE,IAAI;YACZG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAgd,UAAA,CAAApe,IAAA;MAAA;IAAA,GAAAsd,SAAA;EAAA,CACL;EAAA,gBA5EKF,YAAYA,CAAAmB,IAAA,EAAAC,IAAA;IAAA,OAAAnB,MAAA,CAAA3lB,KAAA,OAAAE,SAAA;EAAA;AAAA,GA4EjB;AAED,IAAM6mB,WAAW;EAAA,IAAAC,MAAA,GAAA5d,iBAAA,eAAA9E,mBAAA,GAAAsD,IAAA,CAAG,SAAAqf,UAAO3c,GAAG,EAAEC,GAAG;IAAA,IAAAC,IAAA,EAAAoE,KAAA,EAAAT,QAAA,EAAA+Y,uBAAA,EAAAC,uBAAA,EAAAxc,IAAA,EAAAyC,QAAA,EAAAuH,IAAA,EAAAwM,OAAA,EAAAC,QAAA,EAyBtB9M,QAAQ,EAKRG,SAAS,EAAA2S,KAAA,EAAAlG,SAAA,EAAAmG,uBAAA,EAAAC,wBAAA,EAAA3Z,QAAA,EAAA4Z,wBAAA,EAAAC,wBAAA,EAAArB,SAAA,EAAAC,KAAA,EAAAtS,MAAA,EAAAU,MAAA,EAAAiT,wBAAA,EAAAC,wBAAA,EAAAxC,SAAA,EAAAyC,wBAAA,EAAAC,wBAAA,EAAA7Z,QAAA,EAAA8Z,QAAA,EAAAtG,GAAA;IAAA,OAAAjd,mBAAA,GAAAM,IAAA,UAAAkjB,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAA3f,IAAA,GAAA2f,UAAA,CAAAvlB,IAAA;QAAA;UAATiS,SAAS,YAAAuT,YAAA,EAA4B;YAAA,IAA3BzT,MAAM,GAAArU,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAsJ,SAAA,GAAAtJ,SAAA,MAAG,EAAE;YAAA,IAAEwU,QAAQ,GAAAxU,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAsJ,SAAA,GAAAtJ,SAAA,MAAG,CAAC;YACxC,IAAIyU,IAAI,GAAG,EAAE;YACb,IAAIJ,MAAM,EAAE;cACRI,IAAI,GAAG,IAAIhL,IAAI,CAACrI,MAAM,CAACiT,MAAM,CAAC,CAAC;YACnC,CAAC,MAAM;cACHI,IAAI,GAAG,IAAIhL,IAAI,CAAC,CAAC;YACrB;YAEAgL,IAAI,CAACC,QAAQ,CAACD,IAAI,CAACE,QAAQ,CAAC,CAAC,GAAGH,QAAQ,CAAC;YAEzC,IAAII,KAAK,GAAGR,QAAQ,CAACK,IAAI,CAACI,WAAW,CAAC,CAAC,CAAC;YACxC,IAAIC,MAAM,GAAGV,QAAQ,CAACK,IAAI,CAACM,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;YAC1C,IAAIC,IAAI,GAAGZ,QAAQ,CAACK,IAAI,CAACQ,OAAO,CAAC,CAAC,CAAC;YAEnC,IAAIC,KAAK,GAAGT,IAAI,CAACE,QAAQ,CAAC,CAAC,GAAG,EAAE;YAChCO,KAAK,GAAGA,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,KAAK;YAChC,IAAIC,IAAI,GAAGV,IAAI,CAACE,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI;YAE7C,IAAIS,OAAO,GAAGhB,QAAQ,CAACK,IAAI,CAACY,UAAU,CAAC,CAAC,CAAC;YACzC,IAAIC,OAAO,GAAGlB,QAAQ,CAACK,IAAI,CAACc,UAAU,CAAC,CAAC,CAAC;YAEzC,OAAOX,KAAK,GAAG,GAAG,GAAGE,MAAM,GAAG,GAAG,GAAGE,IAAI,GAAG,GAAG,GAAGE,KAAK,GAAG,GAAG,GAAGE,OAAO,GAAG,GAAG,GAAGE,OAAO,GAAG,GAAG,GAAGH,IAAI;UACvG,CAAC;UA3BQf,QAAQ,YAAA2T,WAAC1T,MAAM,EAAE;YACtB,IAAIC,MAAM,GAAID,MAAM,GAAG,EAAE,GAAI,GAAG,GAAGA,MAAM,GAAGA,MAAM;YAClD,OAAOC,MAAM;UACjB,CAAC;UA3BGhK,IAAI,GAAGF,GAAG,CAACQ,OAAO,CAACN,IAAI;UACvBoE,KAAK,GAAGtE,GAAG,CAACyB,IAAI,CAAC6C,KAAK;UACtBT,QAAQ,GAAG7D,GAAG,CAACyB,IAAI,CAACoC,QAAQ;UAAA,MAC5B,CAAC3D,IAAI,IAAI,CAACoE,KAAK,IAAI,CAACT,QAAQ,IAAIS,KAAK,GAAG,GAAG;YAAAmZ,UAAA,CAAAvlB,IAAA;YAAA;UAAA;UAAA,OAAAulB,UAAA,CAAAlhB,MAAA,WACpC0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAAqe,UAAA,CAAAvlB,IAAA;UAAA,OAEewI,qBAAU,CAACC,KAAK,CAAC,wFAAwF,EAAE,CAACT,IAAI,EAAE,IAAA6F,cAAG,EAAClC,QAAQ,CAAC,CAAC,CAAC;QAAA;UAAA+Y,uBAAA,GAAAa,UAAA,CAAArhB,IAAA;UAAAygB,uBAAA,GAAA/jB,cAAA,CAAA8jB,uBAAA;UAA/Ivc,IAAI,GAAAwc,uBAAA;UAAA,MAEPxc,IAAI,CAACxK,MAAM,IAAI,CAAC;YAAA4nB,UAAA,CAAAvlB,IAAA;YAAA;UAAA;UAAA,OAAAulB,UAAA,CAAAlhB,MAAA,WACT0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,oBAAoB;YAC7BF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UACL;UACG0D,QAAQ,GAAGzC,IAAI,CAAC,CAAC,CAAC;UAChBgK,IAAI,GAAG,IAAIhL,IAAI,CAAC,CAAC;UACnBwX,OAAO,GAAGxM,IAAI,CAAC4N,cAAc,CAAC,CAAC,GAAG,EAAE,GAAG5N,IAAI,CAAC6N,WAAW,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG7N,IAAI,CAAC8N,UAAU,CAAC,CAAC;UACtFrB,QAAQ,GAAGpX,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAI,cAAc,GAAG,cAAc,GAAG,CAAC,CAAC,CAAC,GAAG,cAAc;UA8B7Fkd,KAAK,GAAG,IAAIzd,IAAI,CAAC,CAAC,CAACoB,OAAO,CAAC,CAAC;UAC5BmW,SAAS,GAAGzM,SAAS,CAAC2S,KAAK,CAAC;UAAAW,UAAA,CAAAvlB,IAAA;UAAA,OACPwI,qBAAU,CAACC,KAAK,CAAC,uDAAuD,EAAE,CAACmC,QAAQ,CAACzB,KAAK,CAAC,CAAC;QAAA;UAAA0b,uBAAA,GAAAU,UAAA,CAAArhB,IAAA;UAAA4gB,wBAAA,GAAAlkB,cAAA,CAAAikB,uBAAA;UAA7G1Z,QAAQ,GAAA2Z,wBAAA;UAAAS,UAAA,CAAAvlB,IAAA;UAAA,OACWwI,qBAAU,CAACC,KAAK,CAAC,yCAAyC,EAAE,CAACmC,QAAQ,CAACzB,KAAK,CAAC,CAAC;QAAA;UAAA4b,wBAAA,GAAAQ,UAAA,CAAArhB,IAAA;UAAA8gB,wBAAA,GAAApkB,cAAA,CAAAmkB,wBAAA;UAAhGpB,SAAS,GAAAqB,wBAAA;UACZpB,KAAK,GAAG,CAAC;UACbzY,QAAQ,CAACvN,OAAO,CAAC,UAAC4L,IAAI,EAAK;YACvBoa,KAAK,IAAIzK,UAAU,CAAC3P,IAAI,CAAC4C,KAAK,CAAC;UACnC,CAAC,CAAC;UACEkF,MAAM,GAAG,CAAC;UACdqS,SAAS,CAAC/lB,OAAO,CAAC,UAAC4L,IAAI,EAAK;YACxB8H,MAAM,IAAI6H,UAAU,CAAC3P,IAAI,CAAC4C,KAAK,CAAC;UACpC,CAAC,CAAC;UACE4F,MAAM,GAAG,CAAC;UACd,IAAI4R,KAAK,GAAGtS,MAAM,GAAG,CAAC,EAAEU,MAAM,GAAG4R,KAAK,GAAGtS,MAAM;UAC/CU,MAAM,GAAGxK,IAAI,CAACD,GAAG,CAACyK,MAAM,EAAE,CAAC,CAAC;UAACuT,UAAA,CAAAvlB,IAAA;UAAA,OACHwI,qBAAU,CAACC,KAAK,CAAC,2CAA2C,EAAE,CAACmC,QAAQ,CAACzB,KAAK,CAAC,CAAC;QAAA;UAAA8b,wBAAA,GAAAM,UAAA,CAAArhB,IAAA;UAAAghB,wBAAA,GAAAtkB,cAAA,CAAAqkB,wBAAA;UAAlGvC,SAAS,GAAAwC,wBAAA;UAAAK,UAAA,CAAAvlB,IAAA;UAAA,OACSwI,qBAAU,CAACC,KAAK,CAAC,wDAAwD,EAAE,CAACmC,QAAQ,CAACzB,KAAK,EAAEuV,SAAS,CAAC,CAAC;QAAA;UAAAyG,wBAAA,GAAAI,UAAA,CAAArhB,IAAA;UAAAkhB,wBAAA,GAAAxkB,cAAA,CAAAukB,wBAAA;UAAzH5Z,QAAQ,GAAA6Z,wBAAA;UAAA,MACX1C,SAAS,CAAC/kB,MAAM,IAAI,CAAC;YAAA4nB,UAAA,CAAAvlB,IAAA;YAAA;UAAA;UAAA,MACjBuL,QAAQ,CAAC5N,MAAM,GAAG,CAAC;YAAA4nB,UAAA,CAAAvlB,IAAA;YAAA;UAAA;UAAA,MACf4K,QAAQ,CAACwB,KAAK,GAAGA,KAAK,IAAI,CAAC;YAAAmZ,UAAA,CAAAvlB,IAAA;YAAA;UAAA;UAAA,MACvBgS,MAAM,IAAI,CAAC;YAAAuT,UAAA,CAAAvlB,IAAA;YAAA;UAAA;UAAA,MACP4jB,KAAK,GAAGtS,MAAM,IAAI,CAAC;YAAAiU,UAAA,CAAAvlB,IAAA;YAAA;UAAA;UAAA,MACfgS,MAAM,IAAI,CAAC;YAAAuT,UAAA,CAAAvlB,IAAA;YAAA;UAAA;UAAA,OAAAulB,UAAA,CAAAlhB,MAAA,WACJ0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,oDAAoD;YAC7DF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAAqe,UAAA,CAAAvlB,IAAA;UAAA;QAAA;UAGFqlB,QAAQ,GAAG3C,SAAS,CAAC,CAAC,CAAC;UACrB3D,GAAG;UAAAwG,UAAA,CAAAvlB,IAAA;UAAA,OAWHwI,qBAAU,CAACsB,OAAO,CAACiV,GAAG,EAAE,CAACJ,OAAO,GAAG,EAAE,GAAGC,QAAQ,EAAEhU,QAAQ,CAACzB,KAAK,EAAEiD,KAAK,EAAEiZ,QAAQ,CAACnD,GAAG,EAAEmD,QAAQ,CAACpD,SAAS,EAAEoD,QAAQ,CAAClD,KAAK,EAAEkD,QAAQ,CAAC/Y,SAAS,EAAE,CAAC,EAAEoS,SAAS,EAAEkG,KAAK,CAAC,CAAC;QAAA;UAAAW,UAAA,CAAAvlB,IAAA;UAAA,OACpKwI,qBAAU,CAACC,KAAK,CAAC,qDAAqD,EAAE,CAAC2D,KAAK,EAAExB,QAAQ,CAACzB,KAAK,CAAC,CAAC;QAAA;UAAA,OAAAoc,UAAA,CAAAlhB,MAAA,WAC/F0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,uBAAuB;YAChCF,MAAM,EAAE,IAAI;YACZwD,KAAK,EAAExB,QAAQ,CAACwB,KAAK,GAAGA,KAAK;YAC7BrD,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAAqe,UAAA,CAAAvlB,IAAA;UAAA;QAAA;UAAA,OAAAulB,UAAA,CAAAlhB,MAAA,WAGC0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,oDAAoD;YAC7DF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAAqe,UAAA,CAAAvlB,IAAA;UAAA;QAAA;UAAA,OAAAulB,UAAA,CAAAlhB,MAAA,WAGC0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,kDAAkD;YAC3DF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAAqe,UAAA,CAAAvlB,IAAA;UAAA;QAAA;UAAA,OAAAulB,UAAA,CAAAlhB,MAAA,WAGC0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,yCAAyC;YAClDF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAAqe,UAAA,CAAAvlB,IAAA;UAAA;QAAA;UAAA,OAAAulB,UAAA,CAAAlhB,MAAA,WAGC0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,6BAA6B;YACtCF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAqe,UAAA,CAAAzf,IAAA;MAAA;IAAA,GAAA2e,SAAA;EAAA,CAGT;EAAA,gBArIKF,WAAWA,CAAAmB,IAAA,EAAAC,IAAA;IAAA,OAAAnB,MAAA,CAAAhnB,KAAA,OAAAE,SAAA;EAAA;AAAA,GAqIhB;AACD,IAAMkoB,QAAQ;EAAA,IAAAC,MAAA,GAAAjf,iBAAA,eAAA9E,mBAAA,GAAAsD,IAAA,CAAG,SAAA0gB,UAAOhe,GAAG,EAAEC,GAAG;IAAA,IAAAC,IAAA,EAAAsY,MAAA,EAAAyF,cAAA,EAAA5T,IAAA,EAAAyM,QAAA,EAAA7S,IAAA,EAAA8S,qBAAA,EAAAmH,wBAAA,EAAAC,wBAAA,EAAA9d,IAAA,EAAAyC,QAAA,EAAAsb,YAAA,EAAAC,YAAA,EAsBnBrU,QAAQ,EAKRG,SAAS,EAAA2S,KAAA,EAAAlG,SAAA,EAAA0H,wBAAA,EAAAC,wBAAA,EAAAlb,QAAA,EAAAmb,wBAAA,EAAAC,wBAAA,EAAA5C,SAAA,EAAAC,KAAA,EAAAtS,MAAA,EAAAU,MAAA,EAAAwU,wBAAA,EAAAC,wBAAA,EAAAC,QAAA,EAAAta,KAAA,EAAAua,WAAA,EAAA5H,GAAA,EAAA6H,YAAA;IAAA,OAAA9kB,mBAAA,GAAAM,IAAA,UAAAykB,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAAlhB,IAAA,GAAAkhB,UAAA,CAAA9mB,IAAA;QAAA;UAATiS,SAAS,YAAA8U,YAAA,EAA4B;YAAA,IAA3BhV,MAAM,GAAArU,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAsJ,SAAA,GAAAtJ,SAAA,MAAG,EAAE;YAAA,IAAEwU,QAAQ,GAAAxU,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAsJ,SAAA,GAAAtJ,SAAA,MAAG,CAAC;YACxC,IAAIyU,IAAI,GAAG,EAAE;YACb,IAAIJ,MAAM,EAAE;cACRI,IAAI,GAAG,IAAIhL,IAAI,CAACrI,MAAM,CAACiT,MAAM,CAAC,CAAC;YACnC,CAAC,MAAM;cACHI,IAAI,GAAG,IAAIhL,IAAI,CAAC,CAAC;YACrB;YAEAgL,IAAI,CAACC,QAAQ,CAACD,IAAI,CAACE,QAAQ,CAAC,CAAC,GAAGH,QAAQ,CAAC;YAEzC,IAAII,KAAK,GAAGR,QAAQ,CAACK,IAAI,CAACI,WAAW,CAAC,CAAC,CAAC;YACxC,IAAIC,MAAM,GAAGV,QAAQ,CAACK,IAAI,CAACM,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;YAC1C,IAAIC,IAAI,GAAGZ,QAAQ,CAACK,IAAI,CAACQ,OAAO,CAAC,CAAC,CAAC;YAEnC,IAAIC,KAAK,GAAGT,IAAI,CAACE,QAAQ,CAAC,CAAC,GAAG,EAAE;YAChCO,KAAK,GAAGA,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,KAAK;YAChC,IAAIC,IAAI,GAAGV,IAAI,CAACE,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI;YAE7C,IAAIS,OAAO,GAAGhB,QAAQ,CAACK,IAAI,CAACY,UAAU,CAAC,CAAC,CAAC;YACzC,IAAIC,OAAO,GAAGlB,QAAQ,CAACK,IAAI,CAACc,UAAU,CAAC,CAAC,CAAC;YAEzC,OAAOX,KAAK,GAAG,GAAG,GAAGE,MAAM,GAAG,GAAG,GAAGE,IAAI,GAAG,GAAG,GAAGE,KAAK,GAAG,GAAG,GAAGE,OAAO,GAAG,GAAG,GAAGE,OAAO,GAAG,GAAG,GAAGH,IAAI;UACvG,CAAC;UA3BQf,QAAQ,YAAAkV,WAACjV,MAAM,EAAE;YACtB,IAAIC,MAAM,GAAID,MAAM,GAAG,EAAE,GAAI,GAAG,GAAGA,MAAM,GAAGA,MAAM;YAClD,OAAOC,MAAM;UACjB,CAAC;UAxBGhK,IAAI,GAAGF,GAAG,CAACQ,OAAO,CAACN,IAAI;UACvBsY,MAAM,GAAGxY,GAAG,CAACyB,IAAI,CAAC+W,MAAM;UACxByF,cAAc,GAAGje,GAAG,CAACyB,IAAI,CAACJ,KAAK;UAC7BgJ,IAAI,GAAG,IAAIhL,IAAI,CAAC,CAAC,EACvB;UACIyX,QAAQ,GAAGpX,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAI,cAAc,GAAG,cAAc,GAAG,CAAC,CAAC,CAAC,GAAG,cAAc;UAC7FqE,IAAI,GAAG,IAAI5E,IAAI,CAAC,CAAC,CAACoB,OAAO,CAAC,CAAC;UAC3BsW,qBAAqB,GAAGD,QAAQ;UAAAkI,UAAA,CAAA9mB,IAAA;UAAA,OAEfwI,qBAAU,CAACC,KAAK,CAAC,uEAAuE,EAAE,CAACT,IAAI,CAAC,CAAC;QAAA;UAAAge,wBAAA,GAAAc,UAAA,CAAA5iB,IAAA;UAAA+hB,wBAAA,GAAArlB,cAAA,CAAAolB,wBAAA;UAA/G7d,IAAI,GAAA8d,wBAAA;UACPrb,QAAQ,GAAGzC,IAAI,CAAC,CAAC,CAAC;UAClB+d,YAAY,GAAGtb,QAAQ,CAACzB,KAAK;UAC7Bgd,YAAY,GAAGc,QAAQ,CAACrc,QAAQ,CAACwB,KAAK,CAAC;UAAA,IACtCjE,IAAI;YAAA2e,UAAA,CAAA9mB,IAAA;YAAA;UAAA;UAAA,OAAA8mB,UAAA,CAAAziB,MAAA,WACE0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UACL;UA+BG0d,KAAK,GAAG,IAAIzd,IAAI,CAAC,CAAC,CAACoB,OAAO,CAAC,CAAC;UAC5BmW,SAAS,GAAGzM,SAAS,CAAC2S,KAAK,CAAC;UAAAkC,UAAA,CAAA9mB,IAAA;UAAA,OACPwI,qBAAU,CAACC,KAAK,CAAC,wDAAwD,EAAE,CAACmC,QAAQ,CAACzB,KAAK,CAAC,CAAC;QAAA;UAAAid,wBAAA,GAAAU,UAAA,CAAA5iB,IAAA;UAAAmiB,wBAAA,GAAAzlB,cAAA,CAAAwlB,wBAAA;UAA9Gjb,QAAQ,GAAAkb,wBAAA;UAAAS,UAAA,CAAA9mB,IAAA;UAAA,OACWwI,qBAAU,CAACC,KAAK,CAAC,0CAA0C,EAAE,CAACmC,QAAQ,CAACzB,KAAK,CAAC,CAAC;QAAA;UAAAmd,wBAAA,GAAAQ,UAAA,CAAA5iB,IAAA;UAAAqiB,wBAAA,GAAA3lB,cAAA,CAAA0lB,wBAAA;UAAjG3C,SAAS,GAAA4C,wBAAA;UACZ3C,KAAK,GAAG,CAAC;UACbzY,QAAQ,CAACvN,OAAO,CAAC,UAAC4L,IAAI,EAAK;YACvBoa,KAAK,IAAIpa,IAAI,CAAC4C,KAAK;UACvB,CAAC,CAAC;UACEkF,MAAM,GAAG,CAAC;UACdqS,SAAS,CAAC/lB,OAAO,CAAC,UAAC4L,IAAI,EAAK;YACxB8H,MAAM,IAAI9H,IAAI,CAAC4C,KAAK;UACxB,CAAC,CAAC;UAEE4F,MAAM,GAAG,CAAC;UACd,IAAI4R,KAAK,GAAGtS,MAAM,GAAG,CAAC,EAAEU,MAAM,GAAG4R,KAAK,GAAGtS,MAAM;;UAE/C;UAAA,MACIU,MAAM,IAAI,CAAC;YAAA8U,UAAA,CAAA9mB,IAAA;YAAA;UAAA;UAAA,MACPmmB,YAAY,IAAI7F,MAAM;YAAAwG,UAAA,CAAA9mB,IAAA;YAAA;UAAA;UAAA8mB,UAAA,CAAA9mB,IAAA;UAAA,OACCwI,qBAAU,CAACC,KAAK,CAAC,uCAAuC,EAAE,CAACsd,cAAc,CAAC,CAAC;QAAA;UAAAS,wBAAA,GAAAM,UAAA,CAAA5iB,IAAA;UAAAuiB,wBAAA,GAAA7lB,cAAA,CAAA4lB,wBAAA;UAA7FE,QAAQ,GAAAD,wBAAA;UAAA,MACTC,QAAQ,CAAC/oB,MAAM,KAAK,CAAC,IAAIuoB,YAAY,KAAKH,cAAc;YAAAe,UAAA,CAAA9mB,IAAA;YAAA;UAAA;UACpDoM,KAAK,GAAG+Z,YAAY,GAAG7F,MAAM;UAC7BqG,WAAW,GAAGrG,MAAM,GAAGoG,QAAQ,CAAC,CAAC,CAAC,CAACC,WAAW,EAClD;UACA;UACM5H,GAAG,GAAG,sFAAsF;UAAA+H,UAAA,CAAA9mB,IAAA;UAAA,OAC5FwI,qBAAU,CAACsB,OAAO,CAACiV,GAAG,EAAE,CAACmH,YAAY,EAAEH,cAAc,EAAEzF,MAAM,CAAC,CAAC;QAAA;UAC/DsG,YAAY,GAAG,kIAAkI;UAAAE,UAAA,CAAA9mB,IAAA;UAAA,OACjJwI,qBAAU,CAACsB,OAAO,CAAC8c,YAAY,EAAE,CAAC/H,qBAAqB,EAAE,CAAC,EAAEkH,cAAc,EAAEzF,MAAM,EAAE,QAAQ,EAAE,CAAC,EAAE5B,SAAS,EAAE,CAAC,EAAE3S,IAAI,CAAC,CAAC;QAAA;UAAA,OAAA+a,UAAA,CAAAziB,MAAA,WAEpH0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,eAAAI,MAAA,CAAeoX,MAAM,uBAAoB;YAChD1X,MAAM,EAAE,IAAI;YACZG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA,OAAA4f,UAAA,CAAAziB,MAAA,WAEK0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,KAAAI,MAAA,CAAK6c,cAAc,uCAAoC;YAC9Dnd,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA4f,UAAA,CAAA9mB,IAAA;UAAA;QAAA;UAAA,OAAA8mB,UAAA,CAAAziB,MAAA,WAGC0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,4BAA4B;YACrCF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA4f,UAAA,CAAA9mB,IAAA;UAAA;QAAA;UAAA,OAAA8mB,UAAA,CAAAziB,MAAA,WAIC0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,oDAAoD;YAC7DF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;QAAA;UAAA,OAAA4f,UAAA,CAAAhhB,IAAA;MAAA;IAAA,GAAAggB,SAAA;EAAA,CAET;EAAA,gBA5GKF,QAAQA,CAAAsB,IAAA,EAAAC,IAAA;IAAA,OAAAtB,MAAA,CAAAroB,KAAA,OAAAE,SAAA;EAAA;AAAA,GA4Gb;;AAED;AACA,IAAM0pB,eAAe;EAAA,IAAAC,MAAA,GAAAzgB,iBAAA,eAAA9E,mBAAA,GAAAsD,IAAA,CAAG,SAAAkiB,UAAOxf,GAAG,EAAEC,GAAG;IAAA,IAAAC,IAAA,EAAAuf,wBAAA,EAAAC,wBAAA,EAAArf,IAAA,EAAAyC,QAAA,EAAA6c,wBAAA,EAAAC,wBAAA,EAAAC,OAAA,EAAAC,wBAAA,EAAAC,wBAAA,EAAAC,OAAA;IAAA,OAAAhmB,mBAAA,GAAAM,IAAA,UAAA2lB,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAApiB,IAAA,GAAAoiB,UAAA,CAAAhoB,IAAA;QAAA;UAC/BgI,IAAI,GAAGF,GAAG,CAACQ,OAAO,CAACN,IAAI;UAAAggB,UAAA,CAAAhoB,IAAA;UAAA,OAENwI,qBAAU,CAACC,KAAK,CAAC,uEAAuE,EAAE,CAACT,IAAI,CAAC,CAAC;QAAA;UAAAuf,wBAAA,GAAAS,UAAA,CAAA9jB,IAAA;UAAAsjB,wBAAA,GAAA5mB,cAAA,CAAA2mB,wBAAA;UAA/Gpf,IAAI,GAAAqf,wBAAA;UACP5c,QAAQ,GAAGzC,IAAI,CAAC,CAAC,CAAC;UAAA,IACjBA,IAAI;YAAA6f,UAAA,CAAAhoB,IAAA;YAAA;UAAA;UAAA,OAAAgoB,UAAA,CAAA3jB,MAAA,WACE0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UACL;UAAC8gB,UAAA,CAAAhoB,IAAA;UAAA,OACsBwI,qBAAU,CAACC,KAAK,CAAC,uDAAuD,EAAE,CAACmC,QAAQ,CAACzB,KAAK,CAAC,CAAC;QAAA;UAAAse,wBAAA,GAAAO,UAAA,CAAA9jB,IAAA;UAAAwjB,wBAAA,GAAA9mB,cAAA,CAAA6mB,wBAAA;UAA5GE,OAAO,GAAAD,wBAAA;UAAAM,UAAA,CAAAhoB,IAAA;UAAA,OACUwI,qBAAU,CAACC,KAAK,CAAC,yDAAyD,EAAE,CAACmC,QAAQ,CAACzB,KAAK,CAAC,CAAC;QAAA;UAAAye,wBAAA,GAAAI,UAAA,CAAA9jB,IAAA;UAAA2jB,wBAAA,GAAAjnB,cAAA,CAAAgnB,wBAAA;UAA9GE,OAAO,GAAAD,wBAAA;UAAA,MACVC,OAAO,CAACnqB,MAAM,GAAG,CAAC,IAAIgqB,OAAO,CAAChqB,MAAM,GAAG,CAAC;YAAAqqB,UAAA,CAAAhoB,IAAA;YAAA;UAAA;UAAA,OAAAgoB,UAAA,CAAA3jB,MAAA,WACjC0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,SAAS;YAClBgf,OAAO,EAAEA,OAAO;YAChB1W,KAAK,EAAEuW,OAAO;YACd/e,MAAM,EAAE,IAAI;YACZG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;QAAA;UAAA,OAAA8gB,UAAA,CAAAliB,IAAA;MAAA;IAAA,GAAAwhB,SAAA;EAAA,CAET;EAAA,gBAvBKF,eAAeA,CAAAa,IAAA,EAAAC,IAAA;IAAA,OAAAb,MAAA,CAAA7pB,KAAA,OAAAE,SAAA;EAAA;AAAA,GAuBpB;AACD,IAAMyqB,SAAS;EAAA,IAAAC,MAAA,GAAAxhB,iBAAA,eAAA9E,mBAAA,GAAAsD,IAAA,CAAG,SAAAijB,UAAOvgB,GAAG,EAAEC,GAAG;IAAA,IAAAC,IAAA,EAAAoE,KAAA,EAAAkc,wBAAA,EAAAC,wBAAA,EAAApgB,IAAA,EAAAyC,QAAA,EAAA4d,wBAAA,EAAAC,wBAAA,EAAAtd,QAAA,EAAAud,wBAAA,EAAAC,wBAAA,EAAAC,aAAA;IAAA,OAAA9mB,mBAAA,GAAAM,IAAA,UAAAymB,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAAljB,IAAA,GAAAkjB,UAAA,CAAA9oB,IAAA;QAAA;UACzBgI,IAAI,GAAGF,GAAG,CAACQ,OAAO,CAACN,IAAI;UACvBoE,KAAK,GAAGtE,GAAG,CAACyB,IAAI,CAAC6C,KAAK;UAAA,IACrBpE,IAAI;YAAA8gB,UAAA,CAAA9oB,IAAA;YAAA;UAAA;UAAA,OAAA8oB,UAAA,CAAAzkB,MAAA,WACE0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA4hB,UAAA,CAAA9oB,IAAA;UAAA,OAEewI,qBAAU,CAACC,KAAK,CAAC,+DAA+D,EAAE,CAACT,IAAI,CAAC,CAAC;QAAA;UAAAsgB,wBAAA,GAAAQ,UAAA,CAAA5kB,IAAA;UAAAqkB,wBAAA,GAAA3nB,cAAA,CAAA0nB,wBAAA;UAAvGngB,IAAI,GAAAogB,wBAAA;UACP3d,QAAQ,GAAGzC,IAAI,CAAC,CAAC,CAAC;UAAA,IACjBA,IAAI;YAAA2gB,UAAA,CAAA9oB,IAAA;YAAA;UAAA;UAAA,OAAA8oB,UAAA,CAAAzkB,MAAA,WACE0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UACL;UAAC4hB,UAAA,CAAA9oB,IAAA;UAAA,OACuBwI,qBAAU,CAACC,KAAK,CAAC,wDAAwD,EAAE,CAACmC,QAAQ,CAACzB,KAAK,EAAE,CAAC,CAAC,CAAC;QAAA;UAAAqf,wBAAA,GAAAM,UAAA,CAAA5kB,IAAA;UAAAukB,wBAAA,GAAA7nB,cAAA,CAAA4nB,wBAAA;UAAjHrd,QAAQ,GAAAsd,wBAAA;UAAAK,UAAA,CAAA9oB,IAAA;UAAA,OACewI,qBAAU,CAACC,KAAK,CAAC,6BAA6B,CAAC;QAAA;UAAAigB,wBAAA,GAAAI,UAAA,CAAA5kB,IAAA;UAAAykB,wBAAA,GAAA/nB,cAAA,CAAA8nB,wBAAA;UAAtEE,aAAa,GAAAD,wBAAA;UAAA,MAChBxd,QAAQ,CAACxN,MAAM,IAAI,CAAC;YAAAmrB,UAAA,CAAA9oB,IAAA;YAAA;UAAA;UAAA,OAAA8oB,UAAA,CAAAzkB,MAAA,WACb0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,uBAAuB;YAChCsI,KAAK,EAAEjG,QAAQ,CAAC,CAAC,CAAC;YAClBka,QAAQ,EAAEuD,aAAa;YACvBhgB,MAAM,EAAE,IAAI;YACZG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA,OAAA4hB,UAAA,CAAAzkB,MAAA,WAEK0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;QAAA;UAAA,OAAA4hB,UAAA,CAAAhjB,IAAA;MAAA;IAAA,GAAAuiB,SAAA;EAAA,CAGT;EAAA,gBArCKF,SAASA,CAAAY,IAAA,EAAAC,IAAA;IAAA,OAAAZ,MAAA,CAAA5qB,KAAA,OAAAE,SAAA;EAAA;AAAA,GAqCd;AAED,IAAMurB,YAAY;EAAA,IAAAC,MAAA,GAAAtiB,iBAAA,eAAA9E,mBAAA,GAAAsD,IAAA,CAAG,SAAA+jB,UAAOrhB,GAAG,EAAEC,GAAG;IAAA,IAAAC,IAAA,EAAAohB,wBAAA,EAAAC,wBAAA,EAAAlhB,IAAA,EAAAyC,QAAA,EAAA0e,wBAAA,EAAAC,wBAAA,EAAApe,QAAA;IAAA,OAAArJ,mBAAA,GAAAM,IAAA,UAAAonB,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAA7jB,IAAA,GAAA6jB,UAAA,CAAAzpB,IAAA;QAAA;UAC5BgI,IAAI,GAAGF,GAAG,CAACQ,OAAO,CAACN,IAAI;UAAA,IACtBA,IAAI;YAAAyhB,UAAA,CAAAzpB,IAAA;YAAA;UAAA;UAAA,OAAAypB,UAAA,CAAAplB,MAAA,WACE0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAAuiB,UAAA,CAAAzpB,IAAA;UAAA,OAEewI,qBAAU,CAACC,KAAK,CAAC,+DAA+D,EAAE,CAACT,IAAI,CAAC,CAAC;QAAA;UAAAohB,wBAAA,GAAAK,UAAA,CAAAvlB,IAAA;UAAAmlB,wBAAA,GAAAzoB,cAAA,CAAAwoB,wBAAA;UAAvGjhB,IAAI,GAAAkhB,wBAAA;UACPze,QAAQ,GAAGzC,IAAI,CAAC,CAAC,CAAC;UAAA,IACjBA,IAAI;YAAAshB,UAAA,CAAAzpB,IAAA;YAAA;UAAA;UAAA,OAAAypB,UAAA,CAAAplB,MAAA,WACE0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UACL;UAACuiB,UAAA,CAAAzpB,IAAA;UAAA,OACuBwI,qBAAU,CAACC,KAAK,CAAC,0DAA0D,EAAE,CAACmC,QAAQ,CAACzB,KAAK,CAAC,CAAC;QAAA;UAAAmgB,wBAAA,GAAAG,UAAA,CAAAvlB,IAAA;UAAAqlB,wBAAA,GAAA3oB,cAAA,CAAA0oB,wBAAA;UAAhHne,QAAQ,GAAAoe,wBAAA;UAAA,OAAAE,UAAA,CAAAplB,MAAA,WACR0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,iBAAiB;YAC1BsI,KAAK,EAAEjG,QAAQ;YACfvC,MAAM,EAAE,IAAI;YACZG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAuiB,UAAA,CAAA3jB,IAAA;MAAA;IAAA,GAAAqjB,SAAA;EAAA,CACL;EAAA,gBAzBKF,YAAYA,CAAAS,IAAA,EAAAC,IAAA;IAAA,OAAAT,MAAA,CAAA1rB,KAAA,OAAAE,SAAA;EAAA;AAAA,GAyBjB;AAED,IAAMksB,MAAM;EAAA,IAAAC,MAAA,GAAAjjB,iBAAA,eAAA9E,mBAAA,GAAAsD,IAAA,CAAG,SAAA0kB,UAAOhiB,GAAG,EAAEC,GAAG;IAAA,IAAAC,IAAA,EAAAmB,KAAA,EAAA4gB,wBAAA,EAAAC,wBAAA,EAAA7hB,IAAA,EAAAyC,QAAA,EAAAqf,wBAAA,EAAAC,wBAAA,EAAAC,KAAA,EAAAC,wBAAA,EAAAC,wBAAA,EAAAC,MAAA;IAAA,OAAAxoB,mBAAA,GAAAM,IAAA,UAAAmoB,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAA5kB,IAAA,GAAA4kB,UAAA,CAAAxqB,IAAA;QAAA;UACtBgI,IAAI,GAAGF,GAAG,CAACQ,OAAO,CAACN,IAAI;UACvBmB,KAAK,GAAGrB,GAAG,CAACyB,IAAI,CAACJ,KAAK;UAAA,IACrBnB,IAAI;YAAAwiB,UAAA,CAAAxqB,IAAA;YAAA;UAAA;UAAA,OAAAwqB,UAAA,CAAAnmB,MAAA,WACE0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAAsjB,UAAA,CAAAxqB,IAAA;UAAA,OAEewI,qBAAU,CAACC,KAAK,CAAC,wEAAwE,EAAE,CAACT,IAAI,CAAC,CAAC;QAAA;UAAA+hB,wBAAA,GAAAS,UAAA,CAAAtmB,IAAA;UAAA8lB,wBAAA,GAAAppB,cAAA,CAAAmpB,wBAAA;UAAhH5hB,IAAI,GAAA6hB,wBAAA;UAAA,MACP7hB,IAAI,CAACxK,MAAM,IAAI,CAAC;YAAA6sB,UAAA,CAAAxqB,IAAA;YAAA;UAAA;UAAA,OAAAwqB,UAAA,CAAAnmB,MAAA,WACT0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UACL;UACG0D,QAAQ,GAAGzC,IAAI,CAAC,CAAC,CAAC;UAAA,MAClByC,QAAQ,CAAC6I,KAAK,IAAI,CAAC;YAAA+W,UAAA,CAAAxqB,IAAA;YAAA;UAAA;UAAAwqB,UAAA,CAAAxqB,IAAA;UAAA,OACGwI,qBAAU,CAACC,KAAK,0DAA0D,CAACU,KAAK,CAAC,CAAC;QAAA;UAAA8gB,wBAAA,GAAAO,UAAA,CAAAtmB,IAAA;UAAAgmB,wBAAA,GAAAtpB,cAAA,CAAAqpB,wBAAA;UAAjGE,KAAK,GAAAD,wBAAA;UAAA,OAAAM,UAAA,CAAAnmB,MAAA,WACL0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,iBAAiB;YAC1BsI,KAAK,EAAE+Y,KAAK;YACZvhB,MAAM,EAAE,IAAI;YACZG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA,MACK0D,QAAQ,CAAC6I,KAAK,IAAI,CAAC;YAAA+W,UAAA,CAAAxqB,IAAA;YAAA;UAAA;UAAAwqB,UAAA,CAAAxqB,IAAA;UAAA,OACJwI,qBAAU,CAACC,KAAK,0DAA0D,CAACU,KAAK,CAAC,CAAC;QAAA;UAAAihB,wBAAA,GAAAI,UAAA,CAAAtmB,IAAA;UAAAmmB,wBAAA,GAAAzpB,cAAA,CAAAwpB,wBAAA;UAAjGD,MAAK,GAAAE,wBAAA;UAAA,MACRF,MAAK,CAACxsB,MAAM,IAAI,CAAC;YAAA6sB,UAAA,CAAAxqB,IAAA;YAAA;UAAA;UAAA,OAAAwqB,UAAA,CAAAnmB,MAAA,WACV0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,iBAAiB;YAC1BsI,KAAK,EAAE,EAAE;YACTxI,MAAM,EAAE,IAAI;YACZG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA,MAEEijB,MAAK,CAAC,CAAC,CAAC,CAACM,GAAG,IAAI7f,QAAQ,CAACzB,KAAK;YAAAqhB,UAAA,CAAAxqB,IAAA;YAAA;UAAA;UAAA,OAAAwqB,UAAA,CAAAnmB,MAAA,WACvB0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,iBAAiB;YAC1BsI,KAAK,EAAE+Y,MAAK;YACZvhB,MAAM,EAAE,IAAI;YACZG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA,OAAAsjB,UAAA,CAAAnmB,MAAA,WAEK0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAAsjB,UAAA,CAAAxqB,IAAA;UAAA;QAAA;UAAA,OAAAwqB,UAAA,CAAAnmB,MAAA,WAIH0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAsjB,UAAA,CAAA1kB,IAAA;MAAA;IAAA,GAAAgkB,SAAA;EAAA,CAET;EAAA,gBA3DKF,MAAMA,CAAAc,IAAA,EAAAC,IAAA;IAAA,OAAAd,MAAA,CAAArsB,KAAA,OAAAE,SAAA;EAAA;AAAA,GA2DX;AAGD,IAAMktB,YAAY;EAAA,IAAAC,MAAA,GAAAjkB,iBAAA,eAAA9E,mBAAA,GAAAsD,IAAA,CAAG,SAAA0lB,UAAOhjB,GAAG,EAAEC,GAAG;IAAA,IAAAC,IAAA,EAAA+iB,wBAAA,EAAAC,wBAAA,EAAA7iB,IAAA,EAAAyC,QAAA,EAAAqgB,wBAAA,EAAAC,wBAAA,EAAA/f,QAAA;IAAA,OAAArJ,mBAAA,GAAAM,IAAA,UAAA+oB,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAAxlB,IAAA,GAAAwlB,UAAA,CAAAprB,IAAA;QAAA;UAC5BgI,IAAI,GAAGF,GAAG,CAACQ,OAAO,CAACN,IAAI;UAAA,IACtBA,IAAI;YAAAojB,UAAA,CAAAprB,IAAA;YAAA;UAAA;UAAA,OAAAorB,UAAA,CAAA/mB,MAAA,WACE0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAAkkB,UAAA,CAAAprB,IAAA;UAAA,OAEewI,qBAAU,CAACC,KAAK,CAAC,+DAA+D,EAAE,CAACT,IAAI,CAAC,CAAC;QAAA;UAAA+iB,wBAAA,GAAAK,UAAA,CAAAlnB,IAAA;UAAA8mB,wBAAA,GAAApqB,cAAA,CAAAmqB,wBAAA;UAAvG5iB,IAAI,GAAA6iB,wBAAA;UACPpgB,QAAQ,GAAGzC,IAAI,CAAC,CAAC,CAAC;UAAA,IACjBA,IAAI;YAAAijB,UAAA,CAAAprB,IAAA;YAAA;UAAA;UAAA,OAAAorB,UAAA,CAAA/mB,MAAA,WACE0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UACL;UAACkkB,UAAA,CAAAprB,IAAA;UAAA,OACuBwI,qBAAU,CAACC,KAAK,CAAC,0DAA0D,EAAE,CAACmC,QAAQ,CAACzB,KAAK,CAAC,CAAC;QAAA;UAAA8hB,wBAAA,GAAAG,UAAA,CAAAlnB,IAAA;UAAAgnB,wBAAA,GAAAtqB,cAAA,CAAAqqB,wBAAA;UAAhH9f,QAAQ,GAAA+f,wBAAA;UAAA,OAAAE,UAAA,CAAA/mB,MAAA,WACR0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,iBAAiB;YAC1BsI,KAAK,EAAEjG,QAAQ;YACfvC,MAAM,EAAE,IAAI;YACZG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAkkB,UAAA,CAAAtlB,IAAA;MAAA;IAAA,GAAAglB,SAAA;EAAA,CACL;EAAA,gBAzBKF,YAAYA,CAAAS,IAAA,EAAAC,IAAA;IAAA,OAAAT,MAAA,CAAArtB,KAAA,OAAAE,SAAA;EAAA;AAAA,GAyBjB;AAED,IAAM6tB,cAAc;EAAA,IAAAC,MAAA,GAAA5kB,iBAAA,eAAA9E,mBAAA,GAAAsD,IAAA,CAAG,SAAAqmB,UAAO3jB,GAAG,EAAEC,GAAG;IAAA,IAAAC,IAAA,EAAA6B,IAAA,EAAA6hB,wBAAA,EAAAC,wBAAA,EAAAxjB,IAAA,EAAAyC,QAAA,EAAAghB,wBAAA,EAAAC,wBAAA,EAAAC,YAAA,EAAAC,MAAA,EAAA9oB,CAAA,EAAA8I,IAAA,EAAAgT,GAAA;IAAA,OAAAjd,mBAAA,GAAAM,IAAA,UAAA4pB,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAArmB,IAAA,GAAAqmB,UAAA,CAAAjsB,IAAA;QAAA;UAC9BgI,IAAI,GAAGF,GAAG,CAACQ,OAAO,CAACN,IAAI;UACvB6B,IAAI,GAAG/B,GAAG,CAACyB,IAAI,CAACM,IAAI;UAAA,MACpB,CAAC7B,IAAI,IAAI,CAAC6B,IAAI;YAAAoiB,UAAA,CAAAjsB,IAAA;YAAA;UAAA;UAAA,OAAAisB,UAAA,CAAA5nB,MAAA,WACP0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA+kB,UAAA,CAAAjsB,IAAA;UAAA,OAEewI,qBAAU,CAACC,KAAK,CAAC,+DAA+D,EAAE,CAACT,IAAI,CAAC,CAAC;QAAA;UAAA0jB,wBAAA,GAAAO,UAAA,CAAA/nB,IAAA;UAAAynB,wBAAA,GAAA/qB,cAAA,CAAA8qB,wBAAA;UAAvGvjB,IAAI,GAAAwjB,wBAAA;UACP/gB,QAAQ,GAAGzC,IAAI,CAAC,CAAC,CAAC;UAAA,IACjBA,IAAI;YAAA8jB,UAAA,CAAAjsB,IAAA;YAAA;UAAA;UAAA,OAAAisB,UAAA,CAAA5nB,MAAA,WACE0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UACL;UAAC+kB,UAAA,CAAAjsB,IAAA;UAAA,OAC2BwI,qBAAU,CAACC,KAAK,CACzC,qDAAqD,EAAE,CAACoB,IAAI,CAAC,CAAC;QAAA;UAAA+hB,wBAAA,GAAAK,UAAA,CAAA/nB,IAAA;UAAA2nB,wBAAA,GAAAjrB,cAAA,CAAAgrB,wBAAA;UAD3DE,YAAY,GAAAD,wBAAA;UAAA,MAGfC,YAAY,CAACnuB,MAAM,IAAI,CAAC;YAAAsuB,UAAA,CAAAjsB,IAAA;YAAA;UAAA;UAAA,OAAAisB,UAAA,CAAA5nB,MAAA,WACjB0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,uBAAuB;YAChCF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAEE6kB,MAAM,GAAGD,YAAY,CAAC,CAAC,CAAC;UACtB7oB,CAAC,GAAG,IAAIkE,IAAI,CAAC,CAAC;UACd4E,IAAI,GAAG9I,CAAC,CAACsF,OAAO,CAAC,CAAC;UAAA,MACpBwjB,MAAM,CAACnjB,MAAM,IAAI,CAAC;YAAAqjB,UAAA,CAAAjsB,IAAA;YAAA;UAAA;UAAAisB,UAAA,CAAAjsB,IAAA;UAAA,OACZwI,qBAAU,CAACC,KAAK,CAAC,0EAA0E,EAAE,CAAC,CAAC,EAAE,CAAC,EAAEsjB,MAAM,CAACG,cAAc,CAAC,CAAC;QAAA;UAAAD,UAAA,CAAAjsB,IAAA;UAAA,OAC3HwI,qBAAU,CAACC,KAAK,CAAC,uDAAuD,EAAE,CAACsjB,MAAM,CAAC3f,KAAK,EAAExB,QAAQ,CAACzB,KAAK,CAAC,CAAC;QAAA;UAC3G4V,GAAG,GAAG,yGAAyG;UAAAkN,UAAA,CAAAjsB,IAAA;UAAA,OAC7GwI,qBAAU,CAACC,KAAK,CAACsW,GAAG,EAAE,CAACgN,MAAM,CAAC5iB,KAAK,EAAEyB,QAAQ,CAACzB,KAAK,EAAE4iB,MAAM,CAACG,cAAc,EAAEH,MAAM,CAAC3f,KAAK,EAAEL,IAAI,CAAC,CAAC;QAAA;UAAA,OAAAkgB,UAAA,CAAA5nB,MAAA,WAC/F0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,4BAAAI,MAAA,CAA4B6iB,MAAM,CAAC3f,KAAK,CAAE;YACjDxD,MAAM,EAAE,IAAI;YACZG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA,OAAA+kB,UAAA,CAAA5nB,MAAA,WAEK0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,wBAAwB;YACjCF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;QAAA;UAAA,OAAA+kB,UAAA,CAAAnmB,IAAA;MAAA;IAAA,GAAA2lB,SAAA;EAAA,CAGb;EAAA,gBAlDKF,cAAcA,CAAAY,IAAA,EAAAC,IAAA;IAAA,OAAAZ,MAAA,CAAAhuB,KAAA,OAAAE,SAAA;EAAA;AAAA,GAkDnB;AAED,IAAM2uB,aAAa;EAAA,IAAAC,MAAA,GAAA1lB,iBAAA,eAAA9E,mBAAA,GAAAsD,IAAA,CAAG,SAAAmnB,UAAOzkB,GAAG,EAAEC,GAAG;IAAA,IAAAykB,cAAA,EAAA3N,qBAAA,EAAAyB,MAAA,EAAAmM,kBAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAA/jB,MAAA,EAAAgkB,wBAAA,EAAAC,wBAAA,EAAAnmB,IAAA;IAAA,OAAA5E,mBAAA,GAAAM,IAAA,UAAA0qB,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAAnnB,IAAA,GAAAmnB,UAAA,CAAA/sB,IAAA;QAAA;UAC7BwsB,cAAc,GAAG1kB,GAAG,CAACyB,IAAI,CAACijB,cAAc;UACxC3N,qBAAqB,GAAG/W,GAAG,CAACyB,IAAI,CAACsV,qBAAqB;UACtDyB,MAAM,GAAGxY,GAAG,CAACyB,IAAI,CAAC+W,MAAM;UACxBmM,kBAAkB,GAAG3kB,GAAG,CAACyB,IAAI,CAACkjB,kBAAkB;UAChDC,gBAAgB,GAAG5kB,GAAG,CAACyB,IAAI,CAACmjB,gBAAgB;UAC5CC,gBAAgB,GAAG7kB,GAAG,CAACyB,IAAI,CAACojB,gBAAgB;UAC5C/jB,MAAM,GAAGd,GAAG,CAACyB,IAAI,CAACX,MAAM;UAAA,IACvB4jB,cAAc;YAAAO,UAAA,CAAA/sB,IAAA;YAAA;UAAA;UAAA,OAAA+sB,UAAA,CAAA1oB,MAAA,WACR0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA,MAEF0B,MAAM,IAAI,CAAC;YAAAmkB,UAAA,CAAA/sB,IAAA;YAAA;UAAA;UAAA+sB,UAAA,CAAA/sB,IAAA;UAAA,OACLwI,qBAAU,CAACC,KAAK,sDAAsD,CAACoW,qBAAqB,CAAC,CAAC;QAAA;UAAAkO,UAAA,CAAA/sB,IAAA;UAAA,OAC/EwI,qBAAU,CAACC,KAAK,8CAA8C,CAACoW,qBAAqB,CAAC,CAAC;QAAA;UAAA+N,wBAAA,GAAAG,UAAA,CAAA7oB,IAAA;UAAA2oB,wBAAA,GAAAjsB,cAAA,CAAAgsB,wBAAA;UAApGlmB,IAAI,GAAAmmB,wBAAA;UAAAE,UAAA,CAAA/sB,IAAA;UAAA,OACLwI,qBAAU,CAACC,KAAK,CAAC,oFAAoF,EAAE,CAAC/B,IAAI,CAAC,CAAC,CAAC,CAAC0F,KAAK,EAAE1F,IAAI,CAAC,CAAC,CAAC,CAAC0F,KAAK,EAAE1F,IAAI,CAAC,CAAC,CAAC,CAACyC,KAAK,CAAC,CAAC;QAAA;UAAA,OAAA4jB,UAAA,CAAA1oB,MAAA,WACpJ0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,CAAC;YACVF,MAAM,EAAE;UACZ,CAAC,CAAC;QAAA;UAAAmkB,UAAA,CAAA/sB,IAAA;UAAA,OAEIwI,qBAAU,CAACC,KAAK,gDAAgD,CAACiD,EAAE,CAAC,CAAC;QAAA;UAAA,OAAAqhB,UAAA,CAAA1oB,MAAA,WAEpE0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,yBAAyB;YAClCF,MAAM,EAAE,IAAI;YACZwI,KAAK,EAAEjG;UACX,CAAC,CAAC;QAAA;QAAA;UAAA,OAAA4hB,UAAA,CAAAjnB,IAAA;MAAA;IAAA,GAAAymB,SAAA;EAAA,CAET;EAAA,gBAhCKF,aAAaA,CAAAW,IAAA,EAAAC,IAAA;IAAA,OAAAX,MAAA,CAAA9uB,KAAA,OAAAE,SAAA;EAAA;AAAA,GAgClB;AAGD,IAAMwvB,eAAe;EAAA,IAAAC,MAAA,GAAAvmB,iBAAA,eAAA9E,mBAAA,GAAAsD,IAAA,CAAG,SAAAgoB,UAAOtlB,GAAG,EAAEC,GAAG;IAAA,IAAAslB,SAAA;IAAA,IAAArlB,IAAA,EAAAuY,aAAA,EAAA+M,wBAAA,EAAAC,wBAAA,EAAAplB,IAAA,EAAAyC,QAAA,EAAA4iB,wBAAA,EAAAC,wBAAA,EAAAtiB,QAAA,EAAAuiB,YAAA,EAAAvb,IAAA,EAAAwb,EAAA,EAAAC,EAAA,EAAAC,IAAA,EAAAC,aAAA,EAAA1O,OAAA,EAAAC,WAAA,EAAA0O,SAAA,EAAA3hB,KAAA;IAAA,OAAAtK,mBAAA,GAAAM,IAAA,UAAA4rB,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAAroB,IAAA,GAAAqoB,UAAA,CAAAjuB,IAAA;QAAA;UAC/BgI,IAAI,GAAGF,GAAG,CAACQ,OAAO,CAACN,IAAI,EAC3B;UACA;UACIuY,aAAa,IAAA8M,SAAA,GAAGvlB,GAAG,CAACyB,IAAI,cAAA8jB,SAAA,uBAARA,SAAA,CAAU9M,aAAa;UAAA,IAEtCA,aAAa;YAAA0N,UAAA,CAAAjuB,IAAA;YAAA;UAAA;UAAA,OAAAiuB,UAAA,CAAA5pB,MAAA,WACP0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,2BAA2B;YACpCF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA,IAGDc,IAAI;YAAAimB,UAAA,CAAAjuB,IAAA;YAAA;UAAA;UAAA,OAAAiuB,UAAA,CAAA5pB,MAAA,WACE0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA+mB,UAAA,CAAAjuB,IAAA;UAAA,OAGewI,qBAAU,CAACC,KAAK,CAAC,+DAA+D,EAAE,CAACT,IAAI,CAAC,CAAC;QAAA;UAAAslB,wBAAA,GAAAW,UAAA,CAAA/pB,IAAA;UAAAqpB,wBAAA,GAAA3sB,cAAA,CAAA0sB,wBAAA;UAAvGnlB,IAAI,GAAAolB,wBAAA;UACP3iB,QAAQ,GAAGzC,IAAI,CAAC,CAAC,CAAC;UAAA,IAEjBA,IAAI;YAAA8lB,UAAA,CAAAjuB,IAAA;YAAA;UAAA;UAAA,OAAAiuB,UAAA,CAAA5pB,MAAA,WACE0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UACL;UAAC+mB,UAAA,CAAAjuB,IAAA;UAAA,OAEuBwI,qBAAU,CAACC,KAAK,CAAC,wDAAwD,EAAE,CAACmC,QAAQ,CAACzB,KAAK,EAAE,CAAC,CAAC,CAAC;QAAA;UAAAqkB,wBAAA,GAAAS,UAAA,CAAA/pB,IAAA;UAAAupB,wBAAA,GAAA7sB,cAAA,CAAA4sB,wBAAA;UAAjHriB,QAAQ,GAAAsiB,wBAAA;UAAA,MAEXtiB,QAAQ,CAACxN,MAAM,IAAI,CAAC;YAAAswB,UAAA,CAAAjuB,IAAA;YAAA;UAAA;UACd0tB,YAAY,GAAGviB,QAAQ,CAAC,CAAC,CAAC;UAC1BgH,IAAI,GAAG,IAAIhL,IAAI,CAACumB,YAAY,CAACQ,KAAK,CAAC;UACnCP,EAAE,GAAGlvB,MAAM,CAAC0T,IAAI,CAACQ,OAAO,CAAC,CAAC,CAAC,CAACwb,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;UAC5CP,EAAE,GAAGnvB,MAAM,CAAC0T,IAAI,CAACM,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC0b,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;UACjDN,IAAI,GAAG1b,IAAI,CAACI,WAAW,CAAC,CAAC;UACzBub,aAAa,MAAA5kB,MAAA,CAAMykB,EAAE,OAAAzkB,MAAA,CAAI0kB,EAAE,OAAA1kB,MAAA,CAAI2kB,IAAI;UACnCzO,OAAO,GAAG;YACZnhB,GAAG,EAAE,sCAAsC;YAC3CsiB,aAAa,EAAEA,aAAa;YAC5B6N,QAAQ,EAAEN;UACd,CAAC;UAAAG,UAAA,CAAAroB,IAAA;UAAAqoB,UAAA,CAAAjuB,IAAA;UAAA,OAE6BiH,KAAK,CAAC6Z,IAAI,CAAC,4CAA4C,EAAE1B,OAAO,CAAC;QAAA;UAArFC,WAAW,GAAA4O,UAAA,CAAA/pB,IAAA;UACjByd,OAAO,CAAC0M,GAAG,CAAChP,WAAW,CAAC7V,IAAI,CAAC;UACvBukB,SAAS,GAAG1O,WAAW,CAAC7V,IAAI,CAACA,IAAI;UAAA,MACnCukB,SAAS,CAACnlB,MAAM,KAAK,UAAU;YAAAqlB,UAAA,CAAAjuB,IAAA;YAAA;UAAA;UAAA,OAAAiuB,UAAA,CAAA5pB,MAAA,WACxB0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,0BAA0B;YACnCF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA,MAEF6mB,SAAS,CAACxN,aAAa,KAAKmN,YAAY,CAAC9O,QAAQ,IAAImP,SAAS,CAACpN,eAAe,KAAK+M,YAAY,CAACvkB,KAAK,IAAI4kB,SAAS,CAACzN,MAAM,KAAKoN,YAAY,CAACthB,KAAK;YAAA6hB,UAAA,CAAAjuB,IAAA;YAAA;UAAA;UAAA,MAC5I+tB,SAAS,CAACnlB,MAAM,KAAK,SAAS;YAAAqlB,UAAA,CAAAjuB,IAAA;YAAA;UAAA;UAAAiuB,UAAA,CAAAjuB,IAAA;UAAA,OACxBwI,qBAAU,CAACC,KAAK,6FAA6F,CAACilB,YAAY,CAAChiB,EAAE,EAAEqiB,SAAS,CAACxN,aAAa,EAAEwN,SAAS,CAACpN,eAAe,EAAEoN,SAAS,CAACzN,MAAM,CAAC,CAAC;QAAA;UAC3M;UACA;UACA;UACA;UACIlU,KAAK,GAAG2hB,SAAS,CAACzN,MAAM;UAAA2N,UAAA,CAAAjuB,IAAA;UAAA,OACtBwI,qBAAU,CAACC,KAAK,CAAC,oFAAoF,EAAE,CAAC2D,KAAK,EAAEA,KAAK,EAAE2hB,SAAS,CAACpN,eAAe,CAAC,CAAC;QAAA;UAAA,OAAAsN,UAAA,CAAA5pB,MAAA,WAWhJ0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,qCAAqC;YAC9CF,MAAM,EAAE,IAAI;YACZwI,KAAK,EAAEjG;UACX,CAAC,CAAC;QAAA;UAAA,MACK4iB,SAAS,CAACnlB,MAAM,KAAK,SAAS,IAAImlB,SAAS,CAACnlB,MAAM,KAAK,OAAO;YAAAqlB,UAAA,CAAAjuB,IAAA;YAAA;UAAA;UACrE2hB,OAAO,CAAC0M,GAAG,CAACN,SAAS,CAACnlB,MAAM,CAAC;UAAAqlB,UAAA,CAAAjuB,IAAA;UAAA,OACvBwI,qBAAU,CAACC,KAAK,6FAA6F,CAACilB,YAAY,CAAChiB,EAAE,EAAEqiB,SAAS,CAACxN,aAAa,EAAEwN,SAAS,CAACpN,eAAe,EAAEoN,SAAS,CAACzN,MAAM,CAAC,CAAC;QAAA;UAAA,OAAA2N,UAAA,CAAA5pB,MAAA,WACpM0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,iBAAiB;YAC1BF,MAAM,EAAE,IAAI;YACZG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA+mB,UAAA,CAAAjuB,IAAA;UAAA;QAAA;UAAA,OAAAiuB,UAAA,CAAA5pB,MAAA,WAIC0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,eAAe;YACxBF,MAAM,EAAE,IAAI;YACZG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA+mB,UAAA,CAAAjuB,IAAA;UAAA;QAAA;UAAAiuB,UAAA,CAAAroB,IAAA;UAAAqoB,UAAA,CAAA/gB,EAAA,GAAA+gB,UAAA;UAGNtM,OAAO,CAAChb,KAAK,CAAAsnB,UAAA,CAAA/gB,EAAM,CAAC;QAAC;UAAA+gB,UAAA,CAAAjuB,IAAA;UAAA;QAAA;UAAA,OAAAiuB,UAAA,CAAA5pB,MAAA,WAGlB0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;QAAA;UAAA,OAAA+mB,UAAA,CAAAnoB,IAAA;MAAA;IAAA,GAAAsnB,SAAA;EAAA,CAET;EAAA,gBA7GKF,eAAeA,CAAAoB,IAAA,EAAAC,IAAA;IAAA,OAAApB,MAAA,CAAA3vB,KAAA,OAAAE,SAAA;EAAA;AAAA,GA6GpB;AAED,IAAM8wB,mBAAmB;EAAA,IAAAC,MAAA,GAAA7nB,iBAAA,eAAA9E,mBAAA,GAAAsD,IAAA,CAAG,SAAAspB,UAAO5mB,GAAG,EAAEC,GAAG;IAAA,OAAAjG,mBAAA,GAAAM,IAAA,UAAAusB,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAAhpB,IAAA,GAAAgpB,UAAA,CAAA5uB,IAAA;QAAA;UACvC2hB,OAAO,CAAC0M,GAAG,CAACtmB,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEwB,IAAI,CAAC;UACtBoY,OAAO,CAAC0M,GAAG,CAACtmB,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEU,KAAK,CAAC;UACvBkZ,OAAO,CAAC0M,GAAG,CAACtmB,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEO,OAAO,CAAC;UACzsmB,UAAA,CAAA9oB,IAAA;MAAA;IAAA,GAAA4oB,SAAA;EAAA,CACH;EAAA,gBA9GKF,mBAAmBA,CAAAK,IAAA,EAAAC,IAAA;IAAA,OAAAL,MAAA,CAAAjxB,KAAA,OAAAE,SAAA;EAAA;AAAA,GA8GxB;AAID,IAAMqxB,cAAc;EAAA,IAAAC,MAAA,GAAApoB,iBAAA,eAAA9E,mBAAA,GAAAsD,IAAA,CAAG,SAAA6pB,UAAOnnB,GAAG,EAAEC,GAAG;IAAA,IAAAC,IAAA,EAAAoE,KAAA,EAAA8iB,QAAA,EAAA1lB,IAAA,EAAA2lB,wBAAA,EAAAC,wBAAA,EAAAjnB,IAAA,EAAAyC,QAAA,EAAAykB,wBAAA,EAAAC,wBAAA,EAAAC,GAAA,EAAAC,OAAA;IAAA,OAAA1tB,mBAAA,GAAAM,IAAA,UAAAqtB,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAA9pB,IAAA,GAAA8pB,UAAA,CAAA1vB,IAAA;QAAA;UAC9BgI,IAAI,GAAGF,GAAG,CAACQ,OAAO,CAACN,IAAI;UACvBoE,KAAK,GAAGtE,GAAG,CAACyB,IAAI,CAAC6C,KAAK;UACtB8iB,QAAQ,GAAGpnB,GAAG,CAACyB,IAAI,CAACqV,QAAQ;UAC5BpV,IAAI,GAAG1B,GAAG,CAACyB,IAAI,CAAComB,SAAS,EAE7B;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UAAAD,UAAA,CAAA1vB,IAAA;UAAA,OACqBwI,qBAAU,CAACC,KAAK,CAAC,+DAA+D,EAAE,CAACT,IAAI,CAAC,CAAC;QAAA;UAAAmnB,wBAAA,GAAAO,UAAA,CAAAxrB,IAAA;UAAAkrB,wBAAA,GAAAxuB,cAAA,CAAAuuB,wBAAA;UAAvGhnB,IAAI,GAAAinB,wBAAA;UACPxkB,QAAQ,GAAGzC,IAAI,CAAC,CAAC,CAAC;UAAA,IACjBA,IAAI;YAAAunB,UAAA,CAAA1vB,IAAA;YAAA;UAAA;UAAA,OAAA0vB,UAAA,CAAArrB,MAAA,WACE0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,gBAAgB;YACzBF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UACL;UAACwoB,UAAA,CAAA1vB,IAAA;UAAA,OACkBwI,qBAAU,CAACC,KAAK,CAAC,yCAAyC,EAAE,CAACe,IAAI,CAAC,CAAC;QAAA;UAAA6lB,wBAAA,GAAAK,UAAA,CAAAxrB,IAAA;UAAAorB,wBAAA,GAAA1uB,cAAA,CAAAyuB,wBAAA;UAAhFE,GAAG,GAAAD,wBAAA;UACNE,OAAO,GAAGD,GAAG,CAAC,CAAC,CAAC;UAAA,IAEfC,OAAO;YAAAE,UAAA,CAAA1vB,IAAA;YAAA;UAAA;UAAA0vB,UAAA,CAAA1vB,IAAA;UAAA,OACFwI,qBAAU,CAACC,KAAK,CAAC,8DAA8D,EAAE,CAACe,IAAI,EAAEoB,QAAQ,CAACzB,KAAK,EAAE+lB,QAAQ,CAAC,CAAC;QAAA;UAAA,OAAAQ,UAAA,CAAArrB,MAAA,WACjH0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,aAAa;YACtBF,MAAM,EAAE,IAAI;YACZG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;UAAA,OAAAwoB,UAAA,CAAArrB,MAAA,WAEK0D,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,uBAAuB;YAChCF,MAAM,EAAE,KAAK;YACbG,SAAS,EAAE7B;UACf,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAwoB,UAAA,CAAA5pB,IAAA;MAAA;IAAA,GAAAmpB,SAAA;EAAA,CAIT;EAAA,gBA3CKF,cAAcA,CAAAa,IAAA,EAAAC,IAAA;IAAA,OAAAb,MAAA,CAAAxxB,KAAA,OAAAE,SAAA;EAAA;AAAA,GA2CnB;AAGDoyB,MAAM,CAACC,OAAO,GAAG;EACbnlB,QAAQ,EAARA,QAAQ;EACR+B,UAAU,EAAVA,UAAU;EACVuG,SAAS,EAATA,SAAS;EACT0G,MAAM,EAANA,MAAM;EACN6D,MAAM,EAANA,MAAM;EACNtS,QAAQ,EAARA,QAAQ;EACRgd,SAAS,EAATA,SAAS;EACTc,YAAY,EAAZA,YAAY;EACZ2B,YAAY,EAAZA,YAAY;EACZvd,cAAc,EAAdA,cAAc;EACdW,eAAe,EAAfA,eAAe;EACfkV,YAAY,EAAZA,YAAY;EACZpB,OAAO,EAAPA,OAAO;EACPyC,WAAW,EAAXA,WAAW;EACXqB,QAAQ,EAARA,QAAQ;EACRwB,eAAe,EAAfA,eAAe;EACfiF,aAAa,EAAbA,aAAa;EACb9R,UAAU,EAAVA,UAAU;EACV5S,UAAU,EAAVA,UAAU;EACVyC,OAAO,EAAPA,OAAO;EACPmhB,cAAc,EAAdA,cAAc;EACd3B,MAAM,EAANA,MAAM;EACNmF,cAAc,EAAdA,cAAc;EACd7B,eAAe,EAAfA,eAAe;EACfhM,cAAc,EAAdA,cAAc;EACdsN,mBAAmB,EAAnBA;AACJ,CAAC","ignoreList":[]}},"mtime":1723213094000},"{\"assumptions\":{},\"sourceRoot\":\"/www/wwwroot/21india/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/www/wwwroot/21india\",\"filename\":\"/www/wwwroot/21india/src/controllers/middlewareController.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/www/wwwroot/21india\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.5:development":{"value":{"code":"\"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _connectDB = _interopRequireDefault(require(\"../config/connectDB\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nvar middlewareController = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(req, res, next) {\n    var auth, _yield$connection$exe, _yield$connection$exe2, rows;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          // xác nhận token\n          auth = req.cookies.auth;\n          if (auth) {\n            _context.next = 3;\n            break;\n          }\n          return _context.abrupt(\"return\", res.redirect(\"/login\"));\n        case 3:\n          _context.prev = 3;\n          _context.next = 6;\n          return _connectDB[\"default\"].execute('SELECT `token`, `status` FROM `users` WHERE `token` = ? AND `veri` = 1', [auth]);\n        case 6:\n          _yield$connection$exe = _context.sent;\n          _yield$connection$exe2 = _slicedToArray(_yield$connection$exe, 1);\n          rows = _yield$connection$exe2[0];\n          if (rows) {\n            _context.next = 12;\n            break;\n          }\n          res.clearCookie(\"auth\");\n          return _context.abrupt(\"return\", res.end());\n        case 12:\n          ;\n          if (!(auth == rows[0].token && rows[0].status == '1')) {\n            _context.next = 17;\n            break;\n          }\n          next();\n          _context.next = 18;\n          break;\n        case 17:\n          return _context.abrupt(\"return\", res.redirect(\"/login\"));\n        case 18:\n          _context.next = 23;\n          break;\n        case 20:\n          _context.prev = 20;\n          _context.t0 = _context[\"catch\"](3);\n          return _context.abrupt(\"return\", res.redirect(\"/login\"));\n        case 23:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[3, 20]]);\n  }));\n  return function middlewareController(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar _default = exports[\"default\"] = middlewareController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_connectDB","_interopRequireDefault","require","obj","__esModule","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","minLen","_arrayLikeToArray","toString","Array","from","test","len","arr2","isArray","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","middlewareController","_ref","_callee","req","res","auth","_yield$connection$exe","_yield$connection$exe2","rows","_callee$","_context","cookies","redirect","connection","execute","clearCookie","end","token","status","t0","_x","_x2","_x3","_default","exports"],"sourceRoot":"/www/wwwroot/21india/src/controllers/","sources":["middlewareController.js"],"sourcesContent":["import connection from '../config/connectDB';\r\n\r\nconst middlewareController = async(req, res, next) => {\r\n    // xác nhận token\r\n    const auth = req.cookies.auth;\r\n    if (!auth) return res.redirect(\"/login\");\r\n    try {\r\n        const [rows] = await connection.execute('SELECT `token`, `status` FROM `users` WHERE `token` = ? AND `veri` = 1', [auth]);\r\n        if(!rows) {\r\n            res.clearCookie(\"auth\");\r\n            return res.end();\r\n        };\r\n        if (auth == rows[0].token && rows[0].status == '1') {\r\n            next();\r\n        } else {\r\n            return res.redirect(\"/login\");\r\n        }\r\n    } catch (error) {\r\n        return res.redirect(\"/login\");\r\n    }\r\n}\r\n\r\nexport default middlewareController;"],"mappings":";;;;;;;AAAA,IAAAA,UAAA,GAAAC,sBAAA,CAAAC,OAAA;AAA6C,SAAAD,uBAAAE,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,gBAAAA,GAAA;AAAA,SAAAE,oBAAA,kBAC7C,qJAAAA,mBAAA,YAAAA,oBAAA,WAAAC,CAAA,SAAAC,CAAA,EAAAD,CAAA,OAAAE,CAAA,GAAAC,MAAA,CAAAC,SAAA,EAAAC,CAAA,GAAAH,CAAA,CAAAI,cAAA,EAAAC,CAAA,GAAAJ,MAAA,CAAAK,cAAA,cAAAP,CAAA,EAAAD,CAAA,EAAAE,CAAA,IAAAD,CAAA,CAAAD,CAAA,IAAAE,CAAA,CAAAO,KAAA,KAAAC,CAAA,wBAAAC,MAAA,GAAAA,MAAA,OAAAC,CAAA,GAAAF,CAAA,CAAAG,QAAA,kBAAAC,CAAA,GAAAJ,CAAA,CAAAK,aAAA,uBAAAC,CAAA,GAAAN,CAAA,CAAAO,WAAA,8BAAAC,OAAAjB,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAC,MAAA,CAAAK,cAAA,CAAAP,CAAA,EAAAD,CAAA,IAAAS,KAAA,EAAAP,CAAA,EAAAiB,UAAA,MAAAC,YAAA,MAAAC,QAAA,SAAApB,CAAA,CAAAD,CAAA,WAAAkB,MAAA,mBAAAjB,CAAA,IAAAiB,MAAA,YAAAA,OAAAjB,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAD,CAAA,CAAAD,CAAA,IAAAE,CAAA,gBAAAoB,KAAArB,CAAA,EAAAD,CAAA,EAAAE,CAAA,EAAAG,CAAA,QAAAK,CAAA,GAAAV,CAAA,IAAAA,CAAA,CAAAI,SAAA,YAAAmB,SAAA,GAAAvB,CAAA,GAAAuB,SAAA,EAAAX,CAAA,GAAAT,MAAA,CAAAqB,MAAA,CAAAd,CAAA,CAAAN,SAAA,GAAAU,CAAA,OAAAW,OAAA,CAAApB,CAAA,gBAAAE,CAAA,CAAAK,CAAA,eAAAH,KAAA,EAAAiB,gBAAA,CAAAzB,CAAA,EAAAC,CAAA,EAAAY,CAAA,MAAAF,CAAA,aAAAe,SAAA1B,CAAA,EAAAD,CAAA,EAAAE,CAAA,mBAAA0B,IAAA,YAAAC,GAAA,EAAA5B,CAAA,CAAA6B,IAAA,CAAA9B,CAAA,EAAAE,CAAA,cAAAD,CAAA,aAAA2B,IAAA,WAAAC,GAAA,EAAA5B,CAAA,QAAAD,CAAA,CAAAsB,IAAA,GAAAA,IAAA,MAAAS,CAAA,qBAAAC,CAAA,qBAAAC,CAAA,gBAAAC,CAAA,gBAAAC,CAAA,gBAAAZ,UAAA,cAAAa,kBAAA,cAAAC,2BAAA,SAAAC,CAAA,OAAApB,MAAA,CAAAoB,CAAA,EAAA1B,CAAA,qCAAA2B,CAAA,GAAApC,MAAA,CAAAqC,cAAA,EAAAC,CAAA,GAAAF,CAAA,IAAAA,CAAA,CAAAA,CAAA,CAAAG,MAAA,QAAAD,CAAA,IAAAA,CAAA,KAAAvC,CAAA,IAAAG,CAAA,CAAAyB,IAAA,CAAAW,CAAA,EAAA7B,CAAA,MAAA0B,CAAA,GAAAG,CAAA,OAAAE,CAAA,GAAAN,0BAAA,CAAAjC,SAAA,GAAAmB,SAAA,CAAAnB,SAAA,GAAAD,MAAA,CAAAqB,MAAA,CAAAc,CAAA,YAAAM,sBAAA3C,CAAA,gCAAA4C,OAAA,WAAA7C,CAAA,IAAAkB,MAAA,CAAAjB,CAAA,EAAAD,CAAA,YAAAC,CAAA,gBAAA6C,OAAA,CAAA9C,CAAA,EAAAC,CAAA,sBAAA8C,cAAA9C,CAAA,EAAAD,CAAA,aAAAgD,OAAA9C,CAAA,EAAAK,CAAA,EAAAG,CAAA,EAAAE,CAAA,QAAAE,CAAA,GAAAa,QAAA,CAAA1B,CAAA,CAAAC,CAAA,GAAAD,CAAA,EAAAM,CAAA,mBAAAO,CAAA,CAAAc,IAAA,QAAAZ,CAAA,GAAAF,CAAA,CAAAe,GAAA,EAAAE,CAAA,GAAAf,CAAA,CAAAP,KAAA,SAAAsB,CAAA,gBAAAkB,OAAA,CAAAlB,CAAA,KAAA1B,CAAA,CAAAyB,IAAA,CAAAC,CAAA,eAAA/B,CAAA,CAAAkD,OAAA,CAAAnB,CAAA,CAAAoB,OAAA,EAAAC,IAAA,WAAAnD,CAAA,IAAA+C,MAAA,SAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,gBAAAX,CAAA,IAAA+C,MAAA,UAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,QAAAZ,CAAA,CAAAkD,OAAA,CAAAnB,CAAA,EAAAqB,IAAA,WAAAnD,CAAA,IAAAe,CAAA,CAAAP,KAAA,GAAAR,CAAA,EAAAS,CAAA,CAAAM,CAAA,gBAAAf,CAAA,WAAA+C,MAAA,UAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,SAAAA,CAAA,CAAAE,CAAA,CAAAe,GAAA,SAAA3B,CAAA,EAAAK,CAAA,oBAAAE,KAAA,WAAAA,MAAAR,CAAA,EAAAI,CAAA,aAAAgD,2BAAA,eAAArD,CAAA,WAAAA,CAAA,EAAAE,CAAA,IAAA8C,MAAA,CAAA/C,CAAA,EAAAI,CAAA,EAAAL,CAAA,EAAAE,CAAA,gBAAAA,CAAA,GAAAA,CAAA,GAAAA,CAAA,CAAAkD,IAAA,CAAAC,0BAAA,EAAAA,0BAAA,IAAAA,0BAAA,qBAAA3B,iBAAA1B,CAAA,EAAAE,CAAA,EAAAG,CAAA,QAAAE,CAAA,GAAAwB,CAAA,mBAAArB,CAAA,EAAAE,CAAA,QAAAL,CAAA,KAAA0B,CAAA,YAAAqB,KAAA,sCAAA/C,CAAA,KAAA2B,CAAA,oBAAAxB,CAAA,QAAAE,CAAA,WAAAH,KAAA,EAAAR,CAAA,EAAAsD,IAAA,eAAAlD,CAAA,CAAAmD,MAAA,GAAA9C,CAAA,EAAAL,CAAA,CAAAwB,GAAA,GAAAjB,CAAA,UAAAE,CAAA,GAAAT,CAAA,CAAAoD,QAAA,MAAA3C,CAAA,QAAAE,CAAA,GAAA0C,mBAAA,CAAA5C,CAAA,EAAAT,CAAA,OAAAW,CAAA,QAAAA,CAAA,KAAAmB,CAAA,mBAAAnB,CAAA,qBAAAX,CAAA,CAAAmD,MAAA,EAAAnD,CAAA,CAAAsD,IAAA,GAAAtD,CAAA,CAAAuD,KAAA,GAAAvD,CAAA,CAAAwB,GAAA,sBAAAxB,CAAA,CAAAmD,MAAA,QAAAjD,CAAA,KAAAwB,CAAA,QAAAxB,CAAA,GAAA2B,CAAA,EAAA7B,CAAA,CAAAwB,GAAA,EAAAxB,CAAA,CAAAwD,iBAAA,CAAAxD,CAAA,CAAAwB,GAAA,uBAAAxB,CAAA,CAAAmD,MAAA,IAAAnD,CAAA,CAAAyD,MAAA,WAAAzD,CAAA,CAAAwB,GAAA,GAAAtB,CAAA,GAAA0B,CAAA,MAAAK,CAAA,GAAAX,QAAA,CAAA3B,CAAA,EAAAE,CAAA,EAAAG,CAAA,oBAAAiC,CAAA,CAAAV,IAAA,QAAArB,CAAA,GAAAF,CAAA,CAAAkD,IAAA,GAAArB,CAAA,GAAAF,CAAA,EAAAM,CAAA,CAAAT,GAAA,KAAAM,CAAA,qBAAA1B,KAAA,EAAA6B,CAAA,CAAAT,GAAA,EAAA0B,IAAA,EAAAlD,CAAA,CAAAkD,IAAA,kBAAAjB,CAAA,CAAAV,IAAA,KAAArB,CAAA,GAAA2B,CAAA,EAAA7B,CAAA,CAAAmD,MAAA,YAAAnD,CAAA,CAAAwB,GAAA,GAAAS,CAAA,CAAAT,GAAA,mBAAA6B,oBAAA1D,CAAA,EAAAE,CAAA,QAAAG,CAAA,GAAAH,CAAA,CAAAsD,MAAA,EAAAjD,CAAA,GAAAP,CAAA,CAAAa,QAAA,CAAAR,CAAA,OAAAE,CAAA,KAAAN,CAAA,SAAAC,CAAA,CAAAuD,QAAA,qBAAApD,CAAA,IAAAL,CAAA,CAAAa,QAAA,eAAAX,CAAA,CAAAsD,MAAA,aAAAtD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,EAAAyD,mBAAA,CAAA1D,CAAA,EAAAE,CAAA,eAAAA,CAAA,CAAAsD,MAAA,kBAAAnD,CAAA,KAAAH,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA2B,GAAA,OAAAkC,SAAA,uCAAA1D,CAAA,iBAAA8B,CAAA,MAAAzB,CAAA,GAAAiB,QAAA,CAAApB,CAAA,EAAAP,CAAA,CAAAa,QAAA,EAAAX,CAAA,CAAA2B,GAAA,mBAAAnB,CAAA,CAAAkB,IAAA,SAAA1B,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA2B,GAAA,GAAAnB,CAAA,CAAAmB,GAAA,EAAA3B,CAAA,CAAAuD,QAAA,SAAAtB,CAAA,MAAAvB,CAAA,GAAAF,CAAA,CAAAmB,GAAA,SAAAjB,CAAA,GAAAA,CAAA,CAAA2C,IAAA,IAAArD,CAAA,CAAAF,CAAA,CAAAgE,UAAA,IAAApD,CAAA,CAAAH,KAAA,EAAAP,CAAA,CAAA+D,IAAA,GAAAjE,CAAA,CAAAkE,OAAA,eAAAhE,CAAA,CAAAsD,MAAA,KAAAtD,CAAA,CAAAsD,MAAA,WAAAtD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,GAAAC,CAAA,CAAAuD,QAAA,SAAAtB,CAAA,IAAAvB,CAAA,IAAAV,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA2B,GAAA,OAAAkC,SAAA,sCAAA7D,CAAA,CAAAuD,QAAA,SAAAtB,CAAA,cAAAgC,aAAAlE,CAAA,QAAAD,CAAA,KAAAoE,MAAA,EAAAnE,CAAA,YAAAA,CAAA,KAAAD,CAAA,CAAAqE,QAAA,GAAApE,CAAA,WAAAA,CAAA,KAAAD,CAAA,CAAAsE,UAAA,GAAArE,CAAA,KAAAD,CAAA,CAAAuE,QAAA,GAAAtE,CAAA,WAAAuE,UAAA,CAAAC,IAAA,CAAAzE,CAAA,cAAA0E,cAAAzE,CAAA,QAAAD,CAAA,GAAAC,CAAA,CAAA0E,UAAA,QAAA3E,CAAA,CAAA4B,IAAA,oBAAA5B,CAAA,CAAA6B,GAAA,EAAA5B,CAAA,CAAA0E,UAAA,GAAA3E,CAAA,aAAAyB,QAAAxB,CAAA,SAAAuE,UAAA,MAAAJ,MAAA,aAAAnE,CAAA,CAAA4C,OAAA,CAAAsB,YAAA,cAAAS,KAAA,iBAAAlC,OAAA1C,CAAA,QAAAA,CAAA,WAAAA,CAAA,QAAAE,CAAA,GAAAF,CAAA,CAAAY,CAAA,OAAAV,CAAA,SAAAA,CAAA,CAAA4B,IAAA,CAAA9B,CAAA,4BAAAA,CAAA,CAAAiE,IAAA,SAAAjE,CAAA,OAAA6E,KAAA,CAAA7E,CAAA,CAAA8E,MAAA,SAAAvE,CAAA,OAAAG,CAAA,YAAAuD,KAAA,aAAA1D,CAAA,GAAAP,CAAA,CAAA8E,MAAA,OAAAzE,CAAA,CAAAyB,IAAA,CAAA9B,CAAA,EAAAO,CAAA,UAAA0D,IAAA,CAAAxD,KAAA,GAAAT,CAAA,CAAAO,CAAA,GAAA0D,IAAA,CAAAV,IAAA,OAAAU,IAAA,SAAAA,IAAA,CAAAxD,KAAA,GAAAR,CAAA,EAAAgE,IAAA,CAAAV,IAAA,OAAAU,IAAA,YAAAvD,CAAA,CAAAuD,IAAA,GAAAvD,CAAA,gBAAAqD,SAAA,CAAAd,OAAA,CAAAjD,CAAA,kCAAAoC,iBAAA,CAAAhC,SAAA,GAAAiC,0BAAA,EAAA9B,CAAA,CAAAoC,CAAA,mBAAAlC,KAAA,EAAA4B,0BAAA,EAAAjB,YAAA,SAAAb,CAAA,CAAA8B,0BAAA,mBAAA5B,KAAA,EAAA2B,iBAAA,EAAAhB,YAAA,SAAAgB,iBAAA,CAAA2C,WAAA,GAAA7D,MAAA,CAAAmB,0BAAA,EAAArB,CAAA,wBAAAhB,CAAA,CAAAgF,mBAAA,aAAA/E,CAAA,QAAAD,CAAA,wBAAAC,CAAA,IAAAA,CAAA,CAAAgF,WAAA,WAAAjF,CAAA,KAAAA,CAAA,KAAAoC,iBAAA,6BAAApC,CAAA,CAAA+E,WAAA,IAAA/E,CAAA,CAAAkF,IAAA,OAAAlF,CAAA,CAAAmF,IAAA,aAAAlF,CAAA,WAAAE,MAAA,CAAAiF,cAAA,GAAAjF,MAAA,CAAAiF,cAAA,CAAAnF,CAAA,EAAAoC,0BAAA,KAAApC,CAAA,CAAAoF,SAAA,GAAAhD,0BAAA,EAAAnB,MAAA,CAAAjB,CAAA,EAAAe,CAAA,yBAAAf,CAAA,CAAAG,SAAA,GAAAD,MAAA,CAAAqB,MAAA,CAAAmB,CAAA,GAAA1C,CAAA,KAAAD,CAAA,CAAAsF,KAAA,aAAArF,CAAA,aAAAkD,OAAA,EAAAlD,CAAA,OAAA2C,qBAAA,CAAAG,aAAA,CAAA3C,SAAA,GAAAc,MAAA,CAAA6B,aAAA,CAAA3C,SAAA,EAAAU,CAAA,iCAAAd,CAAA,CAAA+C,aAAA,GAAAA,aAAA,EAAA/C,CAAA,CAAAuF,KAAA,aAAAtF,CAAA,EAAAC,CAAA,EAAAG,CAAA,EAAAE,CAAA,EAAAG,CAAA,eAAAA,CAAA,KAAAA,CAAA,GAAA8E,OAAA,OAAA5E,CAAA,OAAAmC,aAAA,CAAAzB,IAAA,CAAArB,CAAA,EAAAC,CAAA,EAAAG,CAAA,EAAAE,CAAA,GAAAG,CAAA,UAAAV,CAAA,CAAAgF,mBAAA,CAAA9E,CAAA,IAAAU,CAAA,GAAAA,CAAA,CAAAqD,IAAA,GAAAb,IAAA,WAAAnD,CAAA,WAAAA,CAAA,CAAAsD,IAAA,GAAAtD,CAAA,CAAAQ,KAAA,GAAAG,CAAA,CAAAqD,IAAA,WAAArB,qBAAA,CAAAD,CAAA,GAAAzB,MAAA,CAAAyB,CAAA,EAAA3B,CAAA,gBAAAE,MAAA,CAAAyB,CAAA,EAAA/B,CAAA,iCAAAM,MAAA,CAAAyB,CAAA,6DAAA3C,CAAA,CAAAyF,IAAA,aAAAxF,CAAA,QAAAD,CAAA,GAAAG,MAAA,CAAAF,CAAA,GAAAC,CAAA,gBAAAG,CAAA,IAAAL,CAAA,EAAAE,CAAA,CAAAuE,IAAA,CAAApE,CAAA,UAAAH,CAAA,CAAAwF,OAAA,aAAAzB,KAAA,WAAA/D,CAAA,CAAA4E,MAAA,SAAA7E,CAAA,GAAAC,CAAA,CAAAyF,GAAA,QAAA1F,CAAA,IAAAD,CAAA,SAAAiE,IAAA,CAAAxD,KAAA,GAAAR,CAAA,EAAAgE,IAAA,CAAAV,IAAA,OAAAU,IAAA,WAAAA,IAAA,CAAAV,IAAA,OAAAU,IAAA,QAAAjE,CAAA,CAAA0C,MAAA,GAAAA,MAAA,EAAAjB,OAAA,CAAArB,SAAA,KAAA6E,WAAA,EAAAxD,OAAA,EAAAmD,KAAA,WAAAA,MAAA5E,CAAA,aAAA4F,IAAA,WAAA3B,IAAA,WAAAN,IAAA,QAAAC,KAAA,GAAA3D,CAAA,OAAAsD,IAAA,YAAAE,QAAA,cAAAD,MAAA,gBAAA3B,GAAA,GAAA5B,CAAA,OAAAuE,UAAA,CAAA3B,OAAA,CAAA6B,aAAA,IAAA1E,CAAA,WAAAE,CAAA,kBAAAA,CAAA,CAAA2F,MAAA,OAAAxF,CAAA,CAAAyB,IAAA,OAAA5B,CAAA,MAAA2E,KAAA,EAAA3E,CAAA,CAAA4F,KAAA,cAAA5F,CAAA,IAAAD,CAAA,MAAA8F,IAAA,WAAAA,KAAA,SAAAxC,IAAA,WAAAtD,CAAA,QAAAuE,UAAA,IAAAG,UAAA,kBAAA1E,CAAA,CAAA2B,IAAA,QAAA3B,CAAA,CAAA4B,GAAA,cAAAmE,IAAA,KAAAnC,iBAAA,WAAAA,kBAAA7D,CAAA,aAAAuD,IAAA,QAAAvD,CAAA,MAAAE,CAAA,kBAAA+F,OAAA5F,CAAA,EAAAE,CAAA,WAAAK,CAAA,CAAAgB,IAAA,YAAAhB,CAAA,CAAAiB,GAAA,GAAA7B,CAAA,EAAAE,CAAA,CAAA+D,IAAA,GAAA5D,CAAA,EAAAE,CAAA,KAAAL,CAAA,CAAAsD,MAAA,WAAAtD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,KAAAM,CAAA,aAAAA,CAAA,QAAAiE,UAAA,CAAAM,MAAA,MAAAvE,CAAA,SAAAA,CAAA,QAAAG,CAAA,QAAA8D,UAAA,CAAAjE,CAAA,GAAAK,CAAA,GAAAF,CAAA,CAAAiE,UAAA,iBAAAjE,CAAA,CAAA0D,MAAA,SAAA6B,MAAA,aAAAvF,CAAA,CAAA0D,MAAA,SAAAwB,IAAA,QAAA9E,CAAA,GAAAT,CAAA,CAAAyB,IAAA,CAAApB,CAAA,eAAAM,CAAA,GAAAX,CAAA,CAAAyB,IAAA,CAAApB,CAAA,qBAAAI,CAAA,IAAAE,CAAA,aAAA4E,IAAA,GAAAlF,CAAA,CAAA2D,QAAA,SAAA4B,MAAA,CAAAvF,CAAA,CAAA2D,QAAA,gBAAAuB,IAAA,GAAAlF,CAAA,CAAA4D,UAAA,SAAA2B,MAAA,CAAAvF,CAAA,CAAA4D,UAAA,cAAAxD,CAAA,aAAA8E,IAAA,GAAAlF,CAAA,CAAA2D,QAAA,SAAA4B,MAAA,CAAAvF,CAAA,CAAA2D,QAAA,qBAAArD,CAAA,YAAAsC,KAAA,qDAAAsC,IAAA,GAAAlF,CAAA,CAAA4D,UAAA,SAAA2B,MAAA,CAAAvF,CAAA,CAAA4D,UAAA,YAAAR,MAAA,WAAAA,OAAA7D,CAAA,EAAAD,CAAA,aAAAE,CAAA,QAAAsE,UAAA,CAAAM,MAAA,MAAA5E,CAAA,SAAAA,CAAA,QAAAK,CAAA,QAAAiE,UAAA,CAAAtE,CAAA,OAAAK,CAAA,CAAA6D,MAAA,SAAAwB,IAAA,IAAAvF,CAAA,CAAAyB,IAAA,CAAAvB,CAAA,wBAAAqF,IAAA,GAAArF,CAAA,CAAA+D,UAAA,QAAA5D,CAAA,GAAAH,CAAA,aAAAG,CAAA,iBAAAT,CAAA,mBAAAA,CAAA,KAAAS,CAAA,CAAA0D,MAAA,IAAApE,CAAA,IAAAA,CAAA,IAAAU,CAAA,CAAA4D,UAAA,KAAA5D,CAAA,cAAAE,CAAA,GAAAF,CAAA,GAAAA,CAAA,CAAAiE,UAAA,cAAA/D,CAAA,CAAAgB,IAAA,GAAA3B,CAAA,EAAAW,CAAA,CAAAiB,GAAA,GAAA7B,CAAA,EAAAU,CAAA,SAAA8C,MAAA,gBAAAS,IAAA,GAAAvD,CAAA,CAAA4D,UAAA,EAAAnC,CAAA,SAAA+D,QAAA,CAAAtF,CAAA,MAAAsF,QAAA,WAAAA,SAAAjG,CAAA,EAAAD,CAAA,oBAAAC,CAAA,CAAA2B,IAAA,QAAA3B,CAAA,CAAA4B,GAAA,qBAAA5B,CAAA,CAAA2B,IAAA,mBAAA3B,CAAA,CAAA2B,IAAA,QAAAqC,IAAA,GAAAhE,CAAA,CAAA4B,GAAA,gBAAA5B,CAAA,CAAA2B,IAAA,SAAAoE,IAAA,QAAAnE,GAAA,GAAA5B,CAAA,CAAA4B,GAAA,OAAA2B,MAAA,kBAAAS,IAAA,yBAAAhE,CAAA,CAAA2B,IAAA,IAAA5B,CAAA,UAAAiE,IAAA,GAAAjE,CAAA,GAAAmC,CAAA,KAAAgE,MAAA,WAAAA,OAAAlG,CAAA,aAAAD,CAAA,QAAAwE,UAAA,CAAAM,MAAA,MAAA9E,CAAA,SAAAA,CAAA,QAAAE,CAAA,QAAAsE,UAAA,CAAAxE,CAAA,OAAAE,CAAA,CAAAoE,UAAA,KAAArE,CAAA,cAAAiG,QAAA,CAAAhG,CAAA,CAAAyE,UAAA,EAAAzE,CAAA,CAAAqE,QAAA,GAAAG,aAAA,CAAAxE,CAAA,GAAAiC,CAAA,yBAAAiE,OAAAnG,CAAA,aAAAD,CAAA,QAAAwE,UAAA,CAAAM,MAAA,MAAA9E,CAAA,SAAAA,CAAA,QAAAE,CAAA,QAAAsE,UAAA,CAAAxE,CAAA,OAAAE,CAAA,CAAAkE,MAAA,KAAAnE,CAAA,QAAAI,CAAA,GAAAH,CAAA,CAAAyE,UAAA,kBAAAtE,CAAA,CAAAuB,IAAA,QAAArB,CAAA,GAAAF,CAAA,CAAAwB,GAAA,EAAA6C,aAAA,CAAAxE,CAAA,YAAAK,CAAA,gBAAA+C,KAAA,8BAAA+C,aAAA,WAAAA,cAAArG,CAAA,EAAAE,CAAA,EAAAG,CAAA,gBAAAoD,QAAA,KAAA5C,QAAA,EAAA6B,MAAA,CAAA1C,CAAA,GAAAgE,UAAA,EAAA9D,CAAA,EAAAgE,OAAA,EAAA7D,CAAA,oBAAAmD,MAAA,UAAA3B,GAAA,GAAA5B,CAAA,GAAAkC,CAAA,OAAAnC,CAAA;AAAA,SAAAsG,eAAAC,GAAA,EAAA7F,CAAA,WAAA8F,eAAA,CAAAD,GAAA,KAAAE,qBAAA,CAAAF,GAAA,EAAA7F,CAAA,KAAAgG,2BAAA,CAAAH,GAAA,EAAA7F,CAAA,KAAAiG,gBAAA;AAAA,SAAAA,iBAAA,cAAA5C,SAAA;AAAA,SAAA2C,4BAAAnG,CAAA,EAAAqG,MAAA,SAAArG,CAAA,qBAAAA,CAAA,sBAAAsG,iBAAA,CAAAtG,CAAA,EAAAqG,MAAA,OAAAvG,CAAA,GAAAF,MAAA,CAAAC,SAAA,CAAA0G,QAAA,CAAAhF,IAAA,CAAAvB,CAAA,EAAAuF,KAAA,aAAAzF,CAAA,iBAAAE,CAAA,CAAA0E,WAAA,EAAA5E,CAAA,GAAAE,CAAA,CAAA0E,WAAA,CAAAC,IAAA,MAAA7E,CAAA,cAAAA,CAAA,mBAAA0G,KAAA,CAAAC,IAAA,CAAAzG,CAAA,OAAAF,CAAA,+DAAA4G,IAAA,CAAA5G,CAAA,UAAAwG,iBAAA,CAAAtG,CAAA,EAAAqG,MAAA;AAAA,SAAAC,kBAAAN,GAAA,EAAAW,GAAA,QAAAA,GAAA,YAAAA,GAAA,GAAAX,GAAA,CAAAzB,MAAA,EAAAoC,GAAA,GAAAX,GAAA,CAAAzB,MAAA,WAAApE,CAAA,MAAAyG,IAAA,OAAAJ,KAAA,CAAAG,GAAA,GAAAxG,CAAA,GAAAwG,GAAA,EAAAxG,CAAA,IAAAyG,IAAA,CAAAzG,CAAA,IAAA6F,GAAA,CAAA7F,CAAA,UAAAyG,IAAA;AAAA,SAAAV,sBAAAvG,CAAA,EAAA8B,CAAA,QAAA/B,CAAA,WAAAC,CAAA,gCAAAS,MAAA,IAAAT,CAAA,CAAAS,MAAA,CAAAE,QAAA,KAAAX,CAAA,4BAAAD,CAAA,QAAAD,CAAA,EAAAK,CAAA,EAAAK,CAAA,EAAAM,CAAA,EAAAJ,CAAA,OAAAqB,CAAA,OAAA1B,CAAA,iBAAAG,CAAA,IAAAT,CAAA,GAAAA,CAAA,CAAA6B,IAAA,CAAA5B,CAAA,GAAA+D,IAAA,QAAAjC,CAAA,QAAA7B,MAAA,CAAAF,CAAA,MAAAA,CAAA,UAAAgC,CAAA,uBAAAA,CAAA,IAAAjC,CAAA,GAAAU,CAAA,CAAAoB,IAAA,CAAA7B,CAAA,GAAAsD,IAAA,MAAA3C,CAAA,CAAA6D,IAAA,CAAAzE,CAAA,CAAAS,KAAA,GAAAG,CAAA,CAAAkE,MAAA,KAAA9C,CAAA,GAAAC,CAAA,iBAAA/B,CAAA,IAAAK,CAAA,OAAAF,CAAA,GAAAH,CAAA,yBAAA+B,CAAA,YAAAhC,CAAA,eAAAe,CAAA,GAAAf,CAAA,cAAAE,MAAA,CAAAa,CAAA,MAAAA,CAAA,2BAAAT,CAAA,QAAAF,CAAA,aAAAO,CAAA;AAAA,SAAA4F,gBAAAD,GAAA,QAAAQ,KAAA,CAAAK,OAAA,CAAAb,GAAA,UAAAA,GAAA;AAAA,SAAAc,mBAAAC,GAAA,EAAApE,OAAA,EAAAqE,MAAA,EAAAC,KAAA,EAAAC,MAAA,EAAAC,GAAA,EAAA7F,GAAA,cAAA8F,IAAA,GAAAL,GAAA,CAAAI,GAAA,EAAA7F,GAAA,OAAApB,KAAA,GAAAkH,IAAA,CAAAlH,KAAA,WAAAmH,KAAA,IAAAL,MAAA,CAAAK,KAAA,iBAAAD,IAAA,CAAApE,IAAA,IAAAL,OAAA,CAAAzC,KAAA,YAAA+E,OAAA,CAAAtC,OAAA,CAAAzC,KAAA,EAAA2C,IAAA,CAAAoE,KAAA,EAAAC,MAAA;AAAA,SAAAI,kBAAAC,EAAA,6BAAAC,IAAA,SAAAC,IAAA,GAAAC,SAAA,aAAAzC,OAAA,WAAAtC,OAAA,EAAAqE,MAAA,QAAAD,GAAA,GAAAQ,EAAA,CAAAI,KAAA,CAAAH,IAAA,EAAAC,IAAA,YAAAR,MAAA/G,KAAA,IAAA4G,kBAAA,CAAAC,GAAA,EAAApE,OAAA,EAAAqE,MAAA,EAAAC,KAAA,EAAAC,MAAA,UAAAhH,KAAA,cAAAgH,OAAAU,GAAA,IAAAd,kBAAA,CAAAC,GAAA,EAAApE,OAAA,EAAAqE,MAAA,EAAAC,KAAA,EAAAC,MAAA,WAAAU,GAAA,KAAAX,KAAA,CAAAY,SAAA;AACA,IAAMC,oBAAoB;EAAA,IAAAC,IAAA,GAAAT,iBAAA,eAAA9H,mBAAA,GAAAoF,IAAA,CAAG,SAAAoD,QAAMC,GAAG,EAAEC,GAAG,EAAExE,IAAI;IAAA,IAAAyE,IAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,IAAA;IAAA,OAAA9I,mBAAA,GAAAuB,IAAA,UAAAwH,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAnD,IAAA,GAAAmD,QAAA,CAAA9E,IAAA;QAAA;UAC7C;UACMyE,IAAI,GAAGF,GAAG,CAACQ,OAAO,CAACN,IAAI;UAAA,IACxBA,IAAI;YAAAK,QAAA,CAAA9E,IAAA;YAAA;UAAA;UAAA,OAAA8E,QAAA,CAAAjF,MAAA,WAAS2E,GAAG,CAACQ,QAAQ,CAAC,QAAQ,CAAC;QAAA;UAAAF,QAAA,CAAAnD,IAAA;UAAAmD,QAAA,CAAA9E,IAAA;UAAA,OAEfiF,qBAAU,CAACC,OAAO,CAAC,wEAAwE,EAAE,CAACT,IAAI,CAAC,CAAC;QAAA;UAAAC,qBAAA,GAAAI,QAAA,CAAApF,IAAA;UAAAiF,sBAAA,GAAAtC,cAAA,CAAAqC,qBAAA;UAAlHE,IAAI,GAAAD,sBAAA;UAAA,IACPC,IAAI;YAAAE,QAAA,CAAA9E,IAAA;YAAA;UAAA;UACJwE,GAAG,CAACW,WAAW,CAAC,MAAM,CAAC;UAAC,OAAAL,QAAA,CAAAjF,MAAA,WACjB2E,GAAG,CAACY,GAAG,CAAC,CAAC;QAAA;UACnB;UAAC,MACEX,IAAI,IAAIG,IAAI,CAAC,CAAC,CAAC,CAACS,KAAK,IAAIT,IAAI,CAAC,CAAC,CAAC,CAACU,MAAM,IAAI,GAAG;YAAAR,QAAA,CAAA9E,IAAA;YAAA;UAAA;UAC9CA,IAAI,CAAC,CAAC;UAAC8E,QAAA,CAAA9E,IAAA;UAAA;QAAA;UAAA,OAAA8E,QAAA,CAAAjF,MAAA,WAEA2E,GAAG,CAACQ,QAAQ,CAAC,QAAQ,CAAC;QAAA;UAAAF,QAAA,CAAA9E,IAAA;UAAA;QAAA;UAAA8E,QAAA,CAAAnD,IAAA;UAAAmD,QAAA,CAAAS,EAAA,GAAAT,QAAA;UAAA,OAAAA,QAAA,CAAAjF,MAAA,WAG1B2E,GAAG,CAACQ,QAAQ,CAAC,QAAQ,CAAC;QAAA;QAAA;UAAA,OAAAF,QAAA,CAAAhD,IAAA;MAAA;IAAA,GAAAwC,OAAA;EAAA,CAEpC;EAAA,gBAlBKF,oBAAoBA,CAAAoB,EAAA,EAAAC,GAAA,EAAAC,GAAA;IAAA,OAAArB,IAAA,CAAAJ,KAAA,OAAAD,SAAA;EAAA;AAAA,GAkBzB;AAAA,IAAA2B,QAAA,GAAAC,OAAA,cAEcxB,oBAAoB","ignoreList":[]}},"mtime":1722459116000},"{\"assumptions\":{},\"sourceRoot\":\"/www/wwwroot/21india/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/www/wwwroot/21india\",\"filename\":\"/www/wwwroot/21india/src/controllers/adminController.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/www/wwwroot/21india\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.5:development":{"value":{"code":"\"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _connectDB = _interopRequireDefault(require(\"../config/connectDB\"));\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\nvar _md = _interopRequireDefault(require(\"md5\"));\nvar _excluded = [\"token\", \"password\", \"otp\", \"level\"],\n  _excluded2 = [\"token\", \"password\", \"otp\", \"level\"],\n  _excluded3 = [\"token\", \"password\", \"otp\", \"level\"],\n  _excluded4 = [\"token\", \"password\", \"otp\", \"level\"];\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nrequire('dotenv').config();\nvar timeNow = Date.now();\nvar adminPage = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(req, res) {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", res.render(\"manage/index.ejs\"));\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function adminPage(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar adminPage3 = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(req, res) {\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          return _context2.abrupt(\"return\", res.render(\"manage/a-index-bet/index3.ejs\"));\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function adminPage3(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar adminPage5 = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(req, res) {\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.abrupt(\"return\", res.render(\"manage/a-index-bet/index5.ejs\"));\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return function adminPage5(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nvar adminPage10 = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(req, res) {\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          return _context4.abrupt(\"return\", res.render(\"manage/a-index-bet/index10.ejs\"));\n        case 1:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n  return function adminPage10(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nvar adminPage5d = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(req, res) {\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          return _context5.abrupt(\"return\", res.render(\"manage/5d.ejs\"));\n        case 1:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5);\n  }));\n  return function adminPage5d(_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nvar adminPageK3 = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(req, res) {\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          return _context6.abrupt(\"return\", res.render(\"manage/k3.ejs\"));\n        case 1:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6);\n  }));\n  return function adminPageK3(_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nvar ctvProfilePage = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(req, res) {\n    var phone;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          phone = req.params.phone;\n          return _context7.abrupt(\"return\", res.render(\"manage/profileCTV.ejs\", {\n            phone: phone\n          }));\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7);\n  }));\n  return function ctvProfilePage(_x13, _x14) {\n    return _ref7.apply(this, arguments);\n  };\n}();\nvar giftPage = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(req, res) {\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          return _context8.abrupt(\"return\", res.render(\"manage/giftPage.ejs\"));\n        case 1:\n        case \"end\":\n          return _context8.stop();\n      }\n    }, _callee8);\n  }));\n  return function giftPage(_x15, _x16) {\n    return _ref8.apply(this, arguments);\n  };\n}();\nvar membersPage = /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(req, res) {\n    return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n      while (1) switch (_context9.prev = _context9.next) {\n        case 0:\n          return _context9.abrupt(\"return\", res.render(\"manage/members.ejs\"));\n        case 1:\n        case \"end\":\n          return _context9.stop();\n      }\n    }, _callee9);\n  }));\n  return function membersPage(_x17, _x18) {\n    return _ref9.apply(this, arguments);\n  };\n}();\nvar ctvPage = /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(req, res) {\n    return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n      while (1) switch (_context10.prev = _context10.next) {\n        case 0:\n          return _context10.abrupt(\"return\", res.render(\"manage/ctv.ejs\"));\n        case 1:\n        case \"end\":\n          return _context10.stop();\n      }\n    }, _callee10);\n  }));\n  return function ctvPage(_x19, _x20) {\n    return _ref10.apply(this, arguments);\n  };\n}();\nvar infoMember = /*#__PURE__*/function () {\n  var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(req, res) {\n    var phone;\n    return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n      while (1) switch (_context11.prev = _context11.next) {\n        case 0:\n          phone = req.params.id;\n          return _context11.abrupt(\"return\", res.render(\"manage/profileMember.ejs\", {\n            phone: phone\n          }));\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }, _callee11);\n  }));\n  return function infoMember(_x21, _x22) {\n    return _ref11.apply(this, arguments);\n  };\n}();\nvar statistical = /*#__PURE__*/function () {\n  var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(req, res) {\n    return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n      while (1) switch (_context12.prev = _context12.next) {\n        case 0:\n          return _context12.abrupt(\"return\", res.render(\"manage/statistical.ejs\"));\n        case 1:\n        case \"end\":\n          return _context12.stop();\n      }\n    }, _callee12);\n  }));\n  return function statistical(_x23, _x24) {\n    return _ref12.apply(this, arguments);\n  };\n}();\nvar rechargePage = /*#__PURE__*/function () {\n  var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(req, res) {\n    return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n      while (1) switch (_context13.prev = _context13.next) {\n        case 0:\n          return _context13.abrupt(\"return\", res.render(\"manage/recharge.ejs\"));\n        case 1:\n        case \"end\":\n          return _context13.stop();\n      }\n    }, _callee13);\n  }));\n  return function rechargePage(_x25, _x26) {\n    return _ref13.apply(this, arguments);\n  };\n}();\nvar rechargeRecord = /*#__PURE__*/function () {\n  var _ref14 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(req, res) {\n    return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n      while (1) switch (_context14.prev = _context14.next) {\n        case 0:\n          return _context14.abrupt(\"return\", res.render(\"manage/rechargeRecord.ejs\"));\n        case 1:\n        case \"end\":\n          return _context14.stop();\n      }\n    }, _callee14);\n  }));\n  return function rechargeRecord(_x27, _x28) {\n    return _ref14.apply(this, arguments);\n  };\n}();\nvar withdraw = /*#__PURE__*/function () {\n  var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(req, res) {\n    return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n      while (1) switch (_context15.prev = _context15.next) {\n        case 0:\n          return _context15.abrupt(\"return\", res.render(\"manage/withdraw.ejs\"));\n        case 1:\n        case \"end\":\n          return _context15.stop();\n      }\n    }, _callee15);\n  }));\n  return function withdraw(_x29, _x30) {\n    return _ref15.apply(this, arguments);\n  };\n}();\nvar levelSetting = /*#__PURE__*/function () {\n  var _ref16 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(req, res) {\n    return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n      while (1) switch (_context16.prev = _context16.next) {\n        case 0:\n          return _context16.abrupt(\"return\", res.render(\"manage/levelSetting.ejs\"));\n        case 1:\n        case \"end\":\n          return _context16.stop();\n      }\n    }, _callee16);\n  }));\n  return function levelSetting(_x31, _x32) {\n    return _ref16.apply(this, arguments);\n  };\n}();\nvar CreatedSalaryRecord = /*#__PURE__*/function () {\n  var _ref17 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17(req, res) {\n    return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n      while (1) switch (_context17.prev = _context17.next) {\n        case 0:\n          return _context17.abrupt(\"return\", res.render(\"manage/CreatedSalaryRecord.ejs\"));\n        case 1:\n        case \"end\":\n          return _context17.stop();\n      }\n    }, _callee17);\n  }));\n  return function CreatedSalaryRecord(_x33, _x34) {\n    return _ref17.apply(this, arguments);\n  };\n}();\nvar withdrawRecord = /*#__PURE__*/function () {\n  var _ref18 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(req, res) {\n    return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n      while (1) switch (_context18.prev = _context18.next) {\n        case 0:\n          return _context18.abrupt(\"return\", res.render(\"manage/withdrawRecord.ejs\"));\n        case 1:\n        case \"end\":\n          return _context18.stop();\n      }\n    }, _callee18);\n  }));\n  return function withdrawRecord(_x35, _x36) {\n    return _ref18.apply(this, arguments);\n  };\n}();\nvar settings = /*#__PURE__*/function () {\n  var _ref19 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19(req, res) {\n    return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n      while (1) switch (_context19.prev = _context19.next) {\n        case 0:\n          return _context19.abrupt(\"return\", res.render(\"manage/settings.ejs\"));\n        case 1:\n        case \"end\":\n          return _context19.stop();\n      }\n    }, _callee19);\n  }));\n  return function settings(_x37, _x38) {\n    return _ref19.apply(this, arguments);\n  };\n}();\n\n// xác nhận admin\nvar middlewareAdminController = /*#__PURE__*/function () {\n  var _ref20 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee20(req, res, next) {\n    var auth, _yield$connection$exe, _yield$connection$exe2, rows;\n    return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n      while (1) switch (_context20.prev = _context20.next) {\n        case 0:\n          // xác nhận token\n          auth = req.cookies.auth;\n          if (auth) {\n            _context20.next = 3;\n            break;\n          }\n          return _context20.abrupt(\"return\", res.redirect(\"/login\"));\n        case 3:\n          _context20.next = 5;\n          return _connectDB[\"default\"].execute('SELECT `token`,`level`, `status` FROM `users` WHERE `token` = ? AND veri = 1', [auth]);\n        case 5:\n          _yield$connection$exe = _context20.sent;\n          _yield$connection$exe2 = _slicedToArray(_yield$connection$exe, 1);\n          rows = _yield$connection$exe2[0];\n          if (rows) {\n            _context20.next = 10;\n            break;\n          }\n          return _context20.abrupt(\"return\", res.redirect(\"/login\"));\n        case 10:\n          _context20.prev = 10;\n          if (!(auth == rows[0].token && rows[0].status == 1)) {\n            _context20.next = 19;\n            break;\n          }\n          if (!(rows[0].level == 1)) {\n            _context20.next = 16;\n            break;\n          }\n          next();\n          _context20.next = 17;\n          break;\n        case 16:\n          return _context20.abrupt(\"return\", res.redirect(\"/home\"));\n        case 17:\n          _context20.next = 20;\n          break;\n        case 19:\n          return _context20.abrupt(\"return\", res.redirect(\"/login\"));\n        case 20:\n          _context20.next = 25;\n          break;\n        case 22:\n          _context20.prev = 22;\n          _context20.t0 = _context20[\"catch\"](10);\n          return _context20.abrupt(\"return\", res.redirect(\"/login\"));\n        case 25:\n        case \"end\":\n          return _context20.stop();\n      }\n    }, _callee20, null, [[10, 22]]);\n  }));\n  return function middlewareAdminController(_x39, _x40, _x41) {\n    return _ref20.apply(this, arguments);\n  };\n}();\nvar totalJoin = /*#__PURE__*/function () {\n  var _ref21 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee21(req, res) {\n    var auth, typeid, game, _yield$connection$que, _yield$connection$que2, rows, _yield$connection$que3, _yield$connection$que4, wingoall, _yield$connection$exe3, _yield$connection$exe4, winGo1, _yield$connection$exe5, _yield$connection$exe6, winGo10, _yield$connection$exe7, _yield$connection$exe8, setting;\n    return _regeneratorRuntime().wrap(function _callee21$(_context21) {\n      while (1) switch (_context21.prev = _context21.next) {\n        case 0:\n          auth = req.cookies.auth;\n          typeid = req.body.typeid;\n          if (typeid) {\n            _context21.next = 4;\n            break;\n          }\n          return _context21.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 4:\n          game = '';\n          if (typeid == '1') game = 'wingo';\n          if (typeid == '2') game = 'wingo3';\n          if (typeid == '3') game = 'wingo5';\n          if (typeid == '4') game = 'wingo10';\n          _context21.next = 11;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE `token` = ? ', [auth]);\n        case 11:\n          _yield$connection$que = _context21.sent;\n          _yield$connection$que2 = _slicedToArray(_yield$connection$que, 1);\n          rows = _yield$connection$que2[0];\n          if (!(rows.length > 0)) {\n            _context21.next = 38;\n            break;\n          }\n          _context21.next = 17;\n          return _connectDB[\"default\"].query(\"SELECT * FROM minutes_1 WHERE game = \\\"\".concat(game, \"\\\" AND status = 0 AND level = 0 ORDER BY id ASC \"), [auth]);\n        case 17:\n          _yield$connection$que3 = _context21.sent;\n          _yield$connection$que4 = _slicedToArray(_yield$connection$que3, 1);\n          wingoall = _yield$connection$que4[0];\n          _context21.next = 22;\n          return _connectDB[\"default\"].execute(\"SELECT * FROM wingo WHERE status = 0 AND game = '\".concat(game, \"' ORDER BY id DESC LIMIT 1 \"), []);\n        case 22:\n          _yield$connection$exe3 = _context21.sent;\n          _yield$connection$exe4 = _slicedToArray(_yield$connection$exe3, 1);\n          winGo1 = _yield$connection$exe4[0];\n          _context21.next = 27;\n          return _connectDB[\"default\"].execute(\"SELECT * FROM wingo WHERE status != 0 AND game = '\".concat(game, \"' ORDER BY id DESC LIMIT 10 \"), []);\n        case 27:\n          _yield$connection$exe5 = _context21.sent;\n          _yield$connection$exe6 = _slicedToArray(_yield$connection$exe5, 1);\n          winGo10 = _yield$connection$exe6[0];\n          _context21.next = 32;\n          return _connectDB[\"default\"].execute(\"SELECT * FROM admin \", []);\n        case 32:\n          _yield$connection$exe7 = _context21.sent;\n          _yield$connection$exe8 = _slicedToArray(_yield$connection$exe7, 1);\n          setting = _yield$connection$exe8[0];\n          return _context21.abrupt(\"return\", res.status(200).json({\n            message: 'Success',\n            status: true,\n            datas: wingoall,\n            lotterys: winGo1,\n            list_orders: winGo10,\n            setting: setting,\n            timeStamp: timeNow\n          }));\n        case 38:\n          return _context21.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 39:\n        case \"end\":\n          return _context21.stop();\n      }\n    }, _callee21);\n  }));\n  return function totalJoin(_x42, _x43) {\n    return _ref21.apply(this, arguments);\n  };\n}();\nvar listMember = /*#__PURE__*/function () {\n  var _ref22 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee22(req, res) {\n    var _req$body, pageno, limit, _yield$connection$que5, _yield$connection$que6, users, _yield$connection$que7, _yield$connection$que8, total_users;\n    return _regeneratorRuntime().wrap(function _callee22$(_context22) {\n      while (1) switch (_context22.prev = _context22.next) {\n        case 0:\n          _req$body = req.body, pageno = _req$body.pageno, limit = _req$body.limit;\n          if (!(!pageno || !limit)) {\n            _context22.next = 3;\n            break;\n          }\n          return _context22.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            status: false\n          }));\n        case 3:\n          if (!(pageno < 0 || limit < 0)) {\n            _context22.next = 5;\n            break;\n          }\n          return _context22.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            status: false\n          }));\n        case 5:\n          _context22.next = 7;\n          return _connectDB[\"default\"].query(\"SELECT * FROM users WHERE veri = 1 AND level != 2 ORDER BY id DESC LIMIT \".concat(pageno, \", \").concat(limit, \" \"));\n        case 7:\n          _yield$connection$que5 = _context22.sent;\n          _yield$connection$que6 = _slicedToArray(_yield$connection$que5, 1);\n          users = _yield$connection$que6[0];\n          _context22.next = 12;\n          return _connectDB[\"default\"].query(\"SELECT * FROM users WHERE veri = 1 AND level != 2\");\n        case 12:\n          _yield$connection$que7 = _context22.sent;\n          _yield$connection$que8 = _slicedToArray(_yield$connection$que7, 1);\n          total_users = _yield$connection$que8[0];\n          return _context22.abrupt(\"return\", res.status(200).json({\n            message: 'Success',\n            status: true,\n            datas: users,\n            page_total: Math.ceil(total_users.length / limit)\n          }));\n        case 16:\n        case \"end\":\n          return _context22.stop();\n      }\n    }, _callee22);\n  }));\n  return function listMember(_x44, _x45) {\n    return _ref22.apply(this, arguments);\n  };\n}();\nvar listCTV = /*#__PURE__*/function () {\n  var _ref23 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee23(req, res) {\n    var _req$body2, pageno, pageto, _yield$connection$que9, _yield$connection$que10, wingo;\n    return _regeneratorRuntime().wrap(function _callee23$(_context23) {\n      while (1) switch (_context23.prev = _context23.next) {\n        case 0:\n          _req$body2 = req.body, pageno = _req$body2.pageno, pageto = _req$body2.pageto;\n          if (!(!pageno || !pageto)) {\n            _context23.next = 3;\n            break;\n          }\n          return _context23.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            status: false\n          }));\n        case 3:\n          if (!(pageno < 0 || pageto < 0)) {\n            _context23.next = 5;\n            break;\n          }\n          return _context23.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            status: false\n          }));\n        case 5:\n          _context23.next = 7;\n          return _connectDB[\"default\"].query(\"SELECT * FROM users WHERE veri = 1 AND level = 2 ORDER BY id DESC LIMIT \".concat(pageno, \", \").concat(pageto, \" \"));\n        case 7:\n          _yield$connection$que9 = _context23.sent;\n          _yield$connection$que10 = _slicedToArray(_yield$connection$que9, 1);\n          wingo = _yield$connection$que10[0];\n          return _context23.abrupt(\"return\", res.status(200).json({\n            message: 'Success',\n            status: true,\n            datas: wingo\n          }));\n        case 11:\n        case \"end\":\n          return _context23.stop();\n      }\n    }, _callee23);\n  }));\n  return function listCTV(_x46, _x47) {\n    return _ref23.apply(this, arguments);\n  };\n}();\nfunction formateT2(params) {\n  var result = params < 10 ? \"0\" + params : params;\n  return result;\n}\nfunction timerJoin2() {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var addHours = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var date = '';\n  if (params) {\n    date = new Date(Number(params));\n  } else {\n    date = new Date();\n  }\n  date.setHours(date.getHours() + addHours);\n  var years = formateT(date.getFullYear());\n  var months = formateT(date.getMonth() + 1);\n  var days = formateT(date.getDate());\n  var hours = date.getHours() % 12;\n  hours = hours === 0 ? 12 : hours;\n  var ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n  var minutes = formateT(date.getMinutes());\n  var seconds = formateT(date.getSeconds());\n  return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;\n}\nvar statistical2 = /*#__PURE__*/function () {\n  var _ref24 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee24(req, res) {\n    var _yield$connection$que11, _yield$connection$que12, wingo, _yield$connection$que13, _yield$connection$que14, wingo2, _yield$connection$que15, _yield$connection$que16, users, _yield$connection$que17, _yield$connection$que18, users2, _yield$connection$que19, _yield$connection$que20, recharge, _yield$connection$que21, _yield$connection$que22, withdraw, _yield$connection$que23, _yield$connection$que24, recharge_today, _yield$connection$que25, _yield$connection$que26, withdraw_today, win, loss, usersOnline, usersOffline, recharges, withdraws;\n    return _regeneratorRuntime().wrap(function _callee24$(_context24) {\n      while (1) switch (_context24.prev = _context24.next) {\n        case 0:\n          _context24.next = 2;\n          return _connectDB[\"default\"].query(\"SELECT SUM(money) as total FROM minutes_1 WHERE status = 1 \");\n        case 2:\n          _yield$connection$que11 = _context24.sent;\n          _yield$connection$que12 = _slicedToArray(_yield$connection$que11, 1);\n          wingo = _yield$connection$que12[0];\n          _context24.next = 7;\n          return _connectDB[\"default\"].query(\"SELECT SUM(money) as total FROM minutes_1 WHERE status = 2 \");\n        case 7:\n          _yield$connection$que13 = _context24.sent;\n          _yield$connection$que14 = _slicedToArray(_yield$connection$que13, 1);\n          wingo2 = _yield$connection$que14[0];\n          _context24.next = 12;\n          return _connectDB[\"default\"].query(\"SELECT COUNT(id) as total FROM users WHERE status = 1 \");\n        case 12:\n          _yield$connection$que15 = _context24.sent;\n          _yield$connection$que16 = _slicedToArray(_yield$connection$que15, 1);\n          users = _yield$connection$que16[0];\n          _context24.next = 17;\n          return _connectDB[\"default\"].query(\"SELECT COUNT(id) as total FROM users WHERE status = 0 \");\n        case 17:\n          _yield$connection$que17 = _context24.sent;\n          _yield$connection$que18 = _slicedToArray(_yield$connection$que17, 1);\n          users2 = _yield$connection$que18[0];\n          _context24.next = 22;\n          return _connectDB[\"default\"].query(\"SELECT SUM(money) as total FROM recharge WHERE status = 1 \");\n        case 22:\n          _yield$connection$que19 = _context24.sent;\n          _yield$connection$que20 = _slicedToArray(_yield$connection$que19, 1);\n          recharge = _yield$connection$que20[0];\n          _context24.next = 27;\n          return _connectDB[\"default\"].query(\"SELECT SUM(money) as total FROM withdraw WHERE status = 1 \");\n        case 27:\n          _yield$connection$que21 = _context24.sent;\n          _yield$connection$que22 = _slicedToArray(_yield$connection$que21, 1);\n          withdraw = _yield$connection$que22[0];\n          _context24.next = 32;\n          return _connectDB[\"default\"].query(\"SELECT SUM(money) as total FROM recharge WHERE status = 1 AND today = ?\", [timerJoin2()]);\n        case 32:\n          _yield$connection$que23 = _context24.sent;\n          _yield$connection$que24 = _slicedToArray(_yield$connection$que23, 1);\n          recharge_today = _yield$connection$que24[0];\n          _context24.next = 37;\n          return _connectDB[\"default\"].query(\"SELECT SUM(money) as total FROM withdraw WHERE status = 1 AND today = ?\", [timerJoin2()]);\n        case 37:\n          _yield$connection$que25 = _context24.sent;\n          _yield$connection$que26 = _slicedToArray(_yield$connection$que25, 1);\n          withdraw_today = _yield$connection$que26[0];\n          win = wingo[0].total;\n          loss = wingo2[0].total;\n          usersOnline = users[0].total;\n          usersOffline = users2[0].total;\n          recharges = recharge[0].total;\n          withdraws = withdraw[0].total;\n          return _context24.abrupt(\"return\", res.status(200).json({\n            message: 'Success',\n            status: true,\n            win: win,\n            loss: loss,\n            usersOnline: usersOnline,\n            usersOffline: usersOffline,\n            recharges: recharges,\n            withdraws: withdraws,\n            rechargeToday: recharge_today[0].total,\n            withdrawToday: withdraw_today[0].total\n          }));\n        case 47:\n        case \"end\":\n          return _context24.stop();\n      }\n    }, _callee24);\n  }));\n  return function statistical2(_x48, _x49) {\n    return _ref24.apply(this, arguments);\n  };\n}();\nvar changeAdmin = /*#__PURE__*/function () {\n  var _ref25 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee25(req, res) {\n    var auth, value, type, typeid, game, bs;\n    return _regeneratorRuntime().wrap(function _callee25$(_context25) {\n      while (1) switch (_context25.prev = _context25.next) {\n        case 0:\n          auth = req.cookies.auth;\n          value = req.body.value;\n          type = req.body.type;\n          typeid = req.body.typeid;\n          if (!(!value || !type || !typeid)) {\n            _context25.next = 6;\n            break;\n          }\n          return _context25.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 6:\n          ;\n          game = '';\n          bs = '';\n          if (typeid == '1') {\n            game = 'wingo1';\n            bs = 'bs1';\n          }\n          if (typeid == '2') {\n            game = 'wingo3';\n            bs = 'bs3';\n          }\n          if (typeid == '3') {\n            game = 'wingo5';\n            bs = 'bs5';\n          }\n          if (typeid == '4') {\n            game = 'wingo10';\n            bs = 'bs10';\n          }\n          _context25.t0 = type;\n          _context25.next = _context25.t0 === 'change-wingo1' ? 16 : _context25.t0 === 'change-win_rate' ? 20 : 24;\n          break;\n        case 16:\n          _context25.next = 18;\n          return _connectDB[\"default\"].query(\"UPDATE admin SET \".concat(game, \" = ? \"), [value]);\n        case 18:\n          return _context25.abrupt(\"return\", res.status(200).json({\n            message: 'Editing results successfully',\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 20:\n          _context25.next = 22;\n          return _connectDB[\"default\"].query(\"UPDATE admin SET \".concat(bs, \" = ? \"), [value]);\n        case 22:\n          return _context25.abrupt(\"return\", res.status(200).json({\n            message: 'Editing win rate successfully',\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 24:\n          return _context25.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 26:\n        case \"end\":\n          return _context25.stop();\n      }\n    }, _callee25);\n  }));\n  return function changeAdmin(_x50, _x51) {\n    return _ref25.apply(this, arguments);\n  };\n}();\nfunction formateT(params) {\n  var result = params < 10 ? \"0\" + params : params;\n  return result;\n}\nfunction timerJoin() {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var addHours = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var date = '';\n  if (params) {\n    date = new Date(Number(params));\n  } else {\n    date = new Date();\n  }\n  date.setHours(date.getHours() + addHours);\n  var years = formateT(date.getFullYear());\n  var months = formateT(date.getMonth() + 1);\n  var days = formateT(date.getDate());\n  var hours = date.getHours() % 12;\n  hours = hours === 0 ? 12 : hours;\n  var ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n  var minutes = formateT(date.getMinutes());\n  var seconds = formateT(date.getSeconds());\n  return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;\n}\nvar userInfo = /*#__PURE__*/function () {\n  var _ref26 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee26(req, res) {\n    var auth, phone, _yield$connection$que27, _yield$connection$que28, user, userInfo, _yield$connection$que29, _yield$connection$que30, f1s, f1_today, i, f1_time, check, f_all_today, _i, f1_code, _f1_time, check_f1, _yield$connection$que31, _yield$connection$que32, f2s, _i2, f2_code, f2_time, check_f2, _yield$connection$que33, _yield$connection$que34, f3s, _i3, f3_code, f3_time, check_f3, _yield$connection$que35, _yield$connection$que36, f4s, _i4, f4_code, f4_time, check_f4, f2, _i5, _f1_code, _yield$connection$que37, _yield$connection$que38, _f2s, f3, _i6, _f1_code2, _yield$connection$que39, _yield$connection$que40, _f2s2, _i7, _f2_code, _yield$connection$que41, _yield$connection$que42, _f3s, f4, _i8, _f1_code3, _yield$connection$que43, _yield$connection$que44, _f2s3, _i9, _f2_code2, _yield$connection$que45, _yield$connection$que46, _f3s2, _i10, _f3_code, _yield$connection$que47, _yield$connection$que48, _f4s, _yield$connection$que49, _yield$connection$que50, recharge, _yield$connection$que51, _yield$connection$que52, withdraw, _yield$connection$que53, _yield$connection$que54, bank_user, _yield$connection$que55, _yield$connection$que56, telegram_ctv, _yield$connection$que57, _yield$connection$que58, ng_moi;\n    return _regeneratorRuntime().wrap(function _callee26$(_context26) {\n      while (1) switch (_context26.prev = _context26.next) {\n        case 0:\n          auth = req.cookies.auth;\n          phone = req.body.phone;\n          if (phone) {\n            _context26.next = 4;\n            break;\n          }\n          return _context26.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 4:\n          _context26.next = 6;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE phone = ? ', [phone]);\n        case 6:\n          _yield$connection$que27 = _context26.sent;\n          _yield$connection$que28 = _slicedToArray(_yield$connection$que27, 1);\n          user = _yield$connection$que28[0];\n          if (!(user.length == 0)) {\n            _context26.next = 11;\n            break;\n          }\n          return _context26.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 11:\n          userInfo = user[0]; // direct subordinate all\n          _context26.next = 14;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [userInfo.code]);\n        case 14:\n          _yield$connection$que29 = _context26.sent;\n          _yield$connection$que30 = _slicedToArray(_yield$connection$que29, 1);\n          f1s = _yield$connection$que30[0];\n          // cấp dưới trực tiếp hôm nay \n          f1_today = 0;\n          for (i = 0; i < f1s.length; i++) {\n            f1_time = f1s[i].time; // Mã giới thiệu f1\n            check = timerJoin(f1_time) == timerJoin() ? true : false;\n            if (check) {\n              f1_today += 1;\n            }\n          }\n\n          // tất cả cấp dưới hôm nay \n          f_all_today = 0;\n          _i = 0;\n        case 21:\n          if (!(_i < f1s.length)) {\n            _context26.next = 63;\n            break;\n          }\n          f1_code = f1s[_i].code; // Mã giới thiệu f1\n          _f1_time = f1s[_i].time; // time f1\n          check_f1 = timerJoin(_f1_time) == timerJoin() ? true : false;\n          if (check_f1) f_all_today += 1;\n          // tổng f1 mời đc hôm nay\n          _context26.next = 28;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [f1_code]);\n        case 28:\n          _yield$connection$que31 = _context26.sent;\n          _yield$connection$que32 = _slicedToArray(_yield$connection$que31, 1);\n          f2s = _yield$connection$que32[0];\n          _i2 = 0;\n        case 32:\n          if (!(_i2 < f2s.length)) {\n            _context26.next = 60;\n            break;\n          }\n          f2_code = f2s[_i2].code; // Mã giới thiệu f2\n          f2_time = f2s[_i2].time; // time f2\n          check_f2 = timerJoin(f2_time) == timerJoin() ? true : false;\n          if (check_f2) f_all_today += 1;\n          // tổng f2 mời đc hôm nay\n          _context26.next = 39;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [f2_code]);\n        case 39:\n          _yield$connection$que33 = _context26.sent;\n          _yield$connection$que34 = _slicedToArray(_yield$connection$que33, 1);\n          f3s = _yield$connection$que34[0];\n          _i3 = 0;\n        case 43:\n          if (!(_i3 < f3s.length)) {\n            _context26.next = 57;\n            break;\n          }\n          f3_code = f3s[_i3].code; // Mã giới thiệu f3\n          f3_time = f3s[_i3].time; // time f3\n          check_f3 = timerJoin(f3_time) == timerJoin() ? true : false;\n          if (check_f3) f_all_today += 1;\n          _context26.next = 50;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [f3_code]);\n        case 50:\n          _yield$connection$que35 = _context26.sent;\n          _yield$connection$que36 = _slicedToArray(_yield$connection$que35, 1);\n          f4s = _yield$connection$que36[0];\n          // tổng f3 mời đc hôm nay\n          for (_i4 = 0; _i4 < f4s.length; _i4++) {\n            f4_code = f4s[_i4].code; // Mã giới thiệu f4\n            f4_time = f4s[_i4].time; // time f4\n            check_f4 = timerJoin(f4_time) == timerJoin() ? true : false;\n            if (check_f4) f_all_today += 1;\n            // tổng f3 mời đc hôm nay\n          }\n        case 54:\n          _i3++;\n          _context26.next = 43;\n          break;\n        case 57:\n          _i2++;\n          _context26.next = 32;\n          break;\n        case 60:\n          _i++;\n          _context26.next = 21;\n          break;\n        case 63:\n          // Tổng số f2\n          f2 = 0;\n          _i5 = 0;\n        case 65:\n          if (!(_i5 < f1s.length)) {\n            _context26.next = 76;\n            break;\n          }\n          _f1_code = f1s[_i5].code; // Mã giới thiệu f1\n          _context26.next = 69;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [_f1_code]);\n        case 69:\n          _yield$connection$que37 = _context26.sent;\n          _yield$connection$que38 = _slicedToArray(_yield$connection$que37, 1);\n          _f2s = _yield$connection$que38[0];\n          f2 += _f2s.length;\n        case 73:\n          _i5++;\n          _context26.next = 65;\n          break;\n        case 76:\n          // Tổng số f3\n          f3 = 0;\n          _i6 = 0;\n        case 78:\n          if (!(_i6 < f1s.length)) {\n            _context26.next = 100;\n            break;\n          }\n          _f1_code2 = f1s[_i6].code; // Mã giới thiệu f1\n          _context26.next = 82;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [_f1_code2]);\n        case 82:\n          _yield$connection$que39 = _context26.sent;\n          _yield$connection$que40 = _slicedToArray(_yield$connection$que39, 1);\n          _f2s2 = _yield$connection$que40[0];\n          _i7 = 0;\n        case 86:\n          if (!(_i7 < _f2s2.length)) {\n            _context26.next = 97;\n            break;\n          }\n          _f2_code = _f2s2[_i7].code;\n          _context26.next = 90;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [_f2_code]);\n        case 90:\n          _yield$connection$que41 = _context26.sent;\n          _yield$connection$que42 = _slicedToArray(_yield$connection$que41, 1);\n          _f3s = _yield$connection$que42[0];\n          if (_f3s.length > 0) f3 += _f3s.length;\n        case 94:\n          _i7++;\n          _context26.next = 86;\n          break;\n        case 97:\n          _i6++;\n          _context26.next = 78;\n          break;\n        case 100:\n          // Tổng số f4\n          f4 = 0;\n          _i8 = 0;\n        case 102:\n          if (!(_i8 < f1s.length)) {\n            _context26.next = 135;\n            break;\n          }\n          _f1_code3 = f1s[_i8].code; // Mã giới thiệu f1\n          _context26.next = 106;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [_f1_code3]);\n        case 106:\n          _yield$connection$que43 = _context26.sent;\n          _yield$connection$que44 = _slicedToArray(_yield$connection$que43, 1);\n          _f2s3 = _yield$connection$que44[0];\n          _i9 = 0;\n        case 110:\n          if (!(_i9 < _f2s3.length)) {\n            _context26.next = 132;\n            break;\n          }\n          _f2_code2 = _f2s3[_i9].code;\n          _context26.next = 114;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [_f2_code2]);\n        case 114:\n          _yield$connection$que45 = _context26.sent;\n          _yield$connection$que46 = _slicedToArray(_yield$connection$que45, 1);\n          _f3s2 = _yield$connection$que46[0];\n          _i10 = 0;\n        case 118:\n          if (!(_i10 < _f3s2.length)) {\n            _context26.next = 129;\n            break;\n          }\n          _f3_code = _f3s2[_i10].code;\n          _context26.next = 122;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [_f3_code]);\n        case 122:\n          _yield$connection$que47 = _context26.sent;\n          _yield$connection$que48 = _slicedToArray(_yield$connection$que47, 1);\n          _f4s = _yield$connection$que48[0];\n          if (_f4s.length > 0) f4 += _f4s.length;\n        case 126:\n          _i10++;\n          _context26.next = 118;\n          break;\n        case 129:\n          _i9++;\n          _context26.next = 110;\n          break;\n        case 132:\n          _i8++;\n          _context26.next = 102;\n          break;\n        case 135:\n          _context26.next = 137;\n          return _connectDB[\"default\"].query('SELECT SUM(`money`) as total FROM recharge WHERE phone = ? AND status = 1 ', [phone]);\n        case 137:\n          _yield$connection$que49 = _context26.sent;\n          _yield$connection$que50 = _slicedToArray(_yield$connection$que49, 1);\n          recharge = _yield$connection$que50[0];\n          _context26.next = 142;\n          return _connectDB[\"default\"].query('SELECT SUM(`money`) as total FROM withdraw WHERE phone = ? AND status = 1 ', [phone]);\n        case 142:\n          _yield$connection$que51 = _context26.sent;\n          _yield$connection$que52 = _slicedToArray(_yield$connection$que51, 1);\n          withdraw = _yield$connection$que52[0];\n          _context26.next = 147;\n          return _connectDB[\"default\"].query('SELECT * FROM user_bank WHERE phone = ? ', [phone]);\n        case 147:\n          _yield$connection$que53 = _context26.sent;\n          _yield$connection$que54 = _slicedToArray(_yield$connection$que53, 1);\n          bank_user = _yield$connection$que54[0];\n          _context26.next = 152;\n          return _connectDB[\"default\"].query('SELECT `telegram` FROM point_list WHERE phone = ? ', [userInfo.ctv]);\n        case 152:\n          _yield$connection$que55 = _context26.sent;\n          _yield$connection$que56 = _slicedToArray(_yield$connection$que55, 1);\n          telegram_ctv = _yield$connection$que56[0];\n          _context26.next = 157;\n          return _connectDB[\"default\"].query('SELECT `phone` FROM users WHERE code = ? ', [userInfo.invite]);\n        case 157:\n          _yield$connection$que57 = _context26.sent;\n          _yield$connection$que58 = _slicedToArray(_yield$connection$que57, 1);\n          ng_moi = _yield$connection$que58[0];\n          return _context26.abrupt(\"return\", res.status(200).json({\n            message: 'Success',\n            status: true,\n            datas: user,\n            total_r: recharge,\n            total_w: withdraw,\n            f1: f1s.length,\n            f2: f2,\n            f3: f3,\n            f4: f4,\n            bank_user: bank_user,\n            telegram: telegram_ctv[0],\n            ng_moi: ng_moi[0],\n            daily: userInfo.ctv\n          }));\n        case 161:\n        case \"end\":\n          return _context26.stop();\n      }\n    }, _callee26);\n  }));\n  return function userInfo(_x52, _x53) {\n    return _ref26.apply(this, arguments);\n  };\n}();\nvar recharge = /*#__PURE__*/function () {\n  var _ref27 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee27(req, res) {\n    var auth, _yield$connection$que59, _yield$connection$que60, recharge, _yield$connection$que61, _yield$connection$que62, recharge2, _yield$connection$que63, _yield$connection$que64, withdraw, _yield$connection$que65, _yield$connection$que66, withdraw2;\n    return _regeneratorRuntime().wrap(function _callee27$(_context27) {\n      while (1) switch (_context27.prev = _context27.next) {\n        case 0:\n          auth = req.cookies.auth;\n          if (auth) {\n            _context27.next = 3;\n            break;\n          }\n          return _context27.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 3:\n          _context27.next = 5;\n          return _connectDB[\"default\"].query('SELECT * FROM recharge WHERE status = 0 ');\n        case 5:\n          _yield$connection$que59 = _context27.sent;\n          _yield$connection$que60 = _slicedToArray(_yield$connection$que59, 1);\n          recharge = _yield$connection$que60[0];\n          _context27.next = 10;\n          return _connectDB[\"default\"].query('SELECT * FROM recharge WHERE status != 0 ');\n        case 10:\n          _yield$connection$que61 = _context27.sent;\n          _yield$connection$que62 = _slicedToArray(_yield$connection$que61, 1);\n          recharge2 = _yield$connection$que62[0];\n          _context27.next = 15;\n          return _connectDB[\"default\"].query('SELECT * FROM withdraw WHERE status = 0 ');\n        case 15:\n          _yield$connection$que63 = _context27.sent;\n          _yield$connection$que64 = _slicedToArray(_yield$connection$que63, 1);\n          withdraw = _yield$connection$que64[0];\n          _context27.next = 20;\n          return _connectDB[\"default\"].query('SELECT * FROM withdraw WHERE status != 0 ');\n        case 20:\n          _yield$connection$que65 = _context27.sent;\n          _yield$connection$que66 = _slicedToArray(_yield$connection$que65, 1);\n          withdraw2 = _yield$connection$que66[0];\n          return _context27.abrupt(\"return\", res.status(200).json({\n            message: 'Success',\n            status: true,\n            datas: recharge,\n            datas2: recharge2,\n            datas3: withdraw,\n            datas4: withdraw2\n          }));\n        case 24:\n        case \"end\":\n          return _context27.stop();\n      }\n    }, _callee27);\n  }));\n  return function recharge(_x54, _x55) {\n    return _ref27.apply(this, arguments);\n  };\n}();\nvar settingGet = /*#__PURE__*/function () {\n  var _ref28 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee28(req, res) {\n    var _bank_recharge_momo_d, _bank_recharge_momo_d2, _bank_recharge_momo_d3, _bank_recharge_momo_d4, auth, _yield$connection$que67, _yield$connection$que68, bank_recharge, _yield$connection$que69, _yield$connection$que70, bank_recharge_momo, _yield$connection$que71, _yield$connection$que72, _settings, bank_recharge_momo_data;\n    return _regeneratorRuntime().wrap(function _callee28$(_context28) {\n      while (1) switch (_context28.prev = _context28.next) {\n        case 0:\n          _context28.prev = 0;\n          auth = req.cookies.auth;\n          if (auth) {\n            _context28.next = 4;\n            break;\n          }\n          return _context28.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 4:\n          _context28.next = 6;\n          return _connectDB[\"default\"].query(\"SELECT * FROM bank_recharge\");\n        case 6:\n          _yield$connection$que67 = _context28.sent;\n          _yield$connection$que68 = _slicedToArray(_yield$connection$que67, 1);\n          bank_recharge = _yield$connection$que68[0];\n          _context28.next = 11;\n          return _connectDB[\"default\"].query(\"SELECT * FROM bank_recharge WHERE type = 'momo'\");\n        case 11:\n          _yield$connection$que69 = _context28.sent;\n          _yield$connection$que70 = _slicedToArray(_yield$connection$que69, 1);\n          bank_recharge_momo = _yield$connection$que70[0];\n          _context28.next = 16;\n          return _connectDB[\"default\"].query('SELECT * FROM admin ');\n        case 16:\n          _yield$connection$que71 = _context28.sent;\n          _yield$connection$que72 = _slicedToArray(_yield$connection$que71, 1);\n          _settings = _yield$connection$que72[0];\n          if (bank_recharge_momo.length) {\n            bank_recharge_momo_data = bank_recharge_momo[0];\n          }\n          return _context28.abrupt(\"return\", res.status(200).json({\n            message: 'Success',\n            status: true,\n            settings: _settings,\n            datas: bank_recharge,\n            momo: {\n              bank_name: ((_bank_recharge_momo_d = bank_recharge_momo_data) === null || _bank_recharge_momo_d === void 0 ? void 0 : _bank_recharge_momo_d.name_bank) || \"\",\n              username: ((_bank_recharge_momo_d2 = bank_recharge_momo_data) === null || _bank_recharge_momo_d2 === void 0 ? void 0 : _bank_recharge_momo_d2.name_user) || \"\",\n              upi_id: ((_bank_recharge_momo_d3 = bank_recharge_momo_data) === null || _bank_recharge_momo_d3 === void 0 ? void 0 : _bank_recharge_momo_d3.stk) || \"\",\n              usdt_wallet_address: ((_bank_recharge_momo_d4 = bank_recharge_momo_data) === null || _bank_recharge_momo_d4 === void 0 ? void 0 : _bank_recharge_momo_d4.qr_code_image) || \"\"\n            }\n          }));\n        case 23:\n          _context28.prev = 23;\n          _context28.t0 = _context28[\"catch\"](0);\n          console.log(_context28.t0);\n          return _context28.abrupt(\"return\", res.status(500).json({\n            message: 'Failed',\n            status: false\n          }));\n        case 27:\n        case \"end\":\n          return _context28.stop();\n      }\n    }, _callee28, null, [[0, 23]]);\n  }));\n  return function settingGet(_x56, _x57) {\n    return _ref28.apply(this, arguments);\n  };\n}();\nvar rechargeDuyet = /*#__PURE__*/function () {\n  var _ref29 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee29(req, res) {\n    var auth, id, type, _info$, _yield$connection$que73, _yield$connection$que74, info, user;\n    return _regeneratorRuntime().wrap(function _callee29$(_context29) {\n      while (1) switch (_context29.prev = _context29.next) {\n        case 0:\n          auth = req.cookies.auth;\n          id = req.body.id;\n          type = req.body.type;\n          if (!(!auth || !id || !type)) {\n            _context29.next = 5;\n            break;\n          }\n          return _context29.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 5:\n          if (!(type == 'confirm')) {\n            _context29.next = 18;\n            break;\n          }\n          _context29.next = 8;\n          return _connectDB[\"default\"].query(\"UPDATE recharge SET status = 1 WHERE id = ?\", [id]);\n        case 8:\n          _context29.next = 10;\n          return _connectDB[\"default\"].query(\"SELECT * FROM recharge WHERE id = ?\", [id]);\n        case 10:\n          _yield$connection$que73 = _context29.sent;\n          _yield$connection$que74 = _slicedToArray(_yield$connection$que73, 1);\n          info = _yield$connection$que74[0];\n          _context29.next = 15;\n          return getUserDataByPhone(info === null || info === void 0 ? void 0 : (_info$ = info[0]) === null || _info$ === void 0 ? void 0 : _info$.phone);\n        case 15:\n          user = _context29.sent;\n          addUserAccountBalance({\n            money: info[0].money,\n            phone: user.phone,\n            invite: user.invite\n          });\n          return _context29.abrupt(\"return\", res.status(200).json({\n            message: 'Successful application confirmation',\n            status: true,\n            datas: recharge\n          }));\n        case 18:\n          if (!(type == 'delete')) {\n            _context29.next = 22;\n            break;\n          }\n          _context29.next = 21;\n          return _connectDB[\"default\"].query(\"UPDATE recharge SET status = 2 WHERE id = ?\", [id]);\n        case 21:\n          return _context29.abrupt(\"return\", res.status(200).json({\n            message: 'Cancellation successful',\n            status: true,\n            datas: recharge\n          }));\n        case 22:\n        case \"end\":\n          return _context29.stop();\n      }\n    }, _callee29);\n  }));\n  return function rechargeDuyet(_x58, _x59) {\n    return _ref29.apply(this, arguments);\n  };\n}();\nvar getUserDataByPhone = /*#__PURE__*/function () {\n  var _ref30 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee30(phone) {\n    var _yield$connection$que75, _yield$connection$que76, users, user;\n    return _regeneratorRuntime().wrap(function _callee30$(_context30) {\n      while (1) switch (_context30.prev = _context30.next) {\n        case 0:\n          _context30.next = 2;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`name_user`,`invite` FROM users WHERE `phone` = ? ', [phone]);\n        case 2:\n          _yield$connection$que75 = _context30.sent;\n          _yield$connection$que76 = _slicedToArray(_yield$connection$que75, 1);\n          users = _yield$connection$que76[0];\n          user = users === null || users === void 0 ? void 0 : users[0];\n          if (!(user === undefined || user === null)) {\n            _context30.next = 8;\n            break;\n          }\n          throw Error(\"Unable to get user data!\");\n        case 8:\n          return _context30.abrupt(\"return\", {\n            phone: user.phone,\n            code: user.code,\n            username: user.name_user,\n            invite: user.invite\n          });\n        case 9:\n        case \"end\":\n          return _context30.stop();\n      }\n    }, _callee30);\n  }));\n  return function getUserDataByPhone(_x60) {\n    return _ref30.apply(this, arguments);\n  };\n}();\nvar addUserAccountBalance = /*#__PURE__*/function () {\n  var _ref32 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee31(_ref31) {\n    var money, phone, invite, user_money, inviter_money, _yield$connection$que77, _yield$connection$que78, inviter;\n    return _regeneratorRuntime().wrap(function _callee31$(_context31) {\n      while (1) switch (_context31.prev = _context31.next) {\n        case 0:\n          money = _ref31.money, phone = _ref31.phone, invite = _ref31.invite;\n          user_money = money + money / 100 * 5;\n          inviter_money = money / 100 * 5;\n          _context31.next = 5;\n          return _connectDB[\"default\"].query('UPDATE users SET money = money + ?, total_money = total_money + ? WHERE `phone` = ?', [user_money, user_money, phone]);\n        case 5:\n          _context31.next = 7;\n          return _connectDB[\"default\"].query('SELECT phone FROM users WHERE `code` = ?', [invite]);\n        case 7:\n          _yield$connection$que77 = _context31.sent;\n          _yield$connection$que78 = _slicedToArray(_yield$connection$que77, 1);\n          inviter = _yield$connection$que78[0];\n          if (!inviter.length) {\n            _context31.next = 16;\n            break;\n          }\n          console.log(inviter);\n          console.log(inviter_money, inviter_money, invite, inviter === null || inviter === void 0 ? void 0 : inviter[0].phone);\n          _context31.next = 15;\n          return _connectDB[\"default\"].query('UPDATE users SET money = money + ?, total_money = total_money + ? WHERE `code` = ? AND `phone` = ?', [inviter_money, inviter_money, invite, inviter === null || inviter === void 0 ? void 0 : inviter[0].phone]);\n        case 15:\n          console.log(\"SUCCESSFULLY ADD MONEY TO inviter\");\n        case 16:\n        case \"end\":\n          return _context31.stop();\n      }\n    }, _callee31);\n  }));\n  return function addUserAccountBalance(_x61) {\n    return _ref32.apply(this, arguments);\n  };\n}();\nvar updateLevel = /*#__PURE__*/function () {\n  var _ref33 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee32(req, res) {\n    var id, f1, f2, f3, f4;\n    return _regeneratorRuntime().wrap(function _callee32$(_context32) {\n      while (1) switch (_context32.prev = _context32.next) {\n        case 0:\n          _context32.prev = 0;\n          id = req.body.id;\n          f1 = req.body.f1;\n          f2 = req.body.f2;\n          f3 = req.body.f3;\n          f4 = req.body.f4;\n          console.log(\"level : \" + id, f1, f2, f3, f4);\n          _context32.next = 9;\n          return _connectDB[\"default\"].query('UPDATE `level` SET `f1`= ? ,`f2`= ? ,`f3`= ? ,`f4`= ?  WHERE `id` = ?', [f1, f2, f3, f4, id]);\n        case 9:\n          // Send a success response to the client\n          res.status(200).json({\n            message: 'Update successful',\n            status: true\n          });\n          _context32.next = 16;\n          break;\n        case 12:\n          _context32.prev = 12;\n          _context32.t0 = _context32[\"catch\"](0);\n          console.error('Error updating level:', _context32.t0);\n\n          // Send an error response to the client\n          res.status(500).json({\n            message: 'Update failed',\n            status: false,\n            error: _context32.t0.message\n          });\n        case 16:\n        case \"end\":\n          return _context32.stop();\n      }\n    }, _callee32, null, [[0, 12]]);\n  }));\n  return function updateLevel(_x62, _x63) {\n    return _ref33.apply(this, arguments);\n  };\n}();\nvar handlWithdraw = /*#__PURE__*/function () {\n  var _ref34 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee33(req, res) {\n    var auth, id, type, _yield$connection$que79, _yield$connection$que80, info, _yield$connection$que81, _yield$connection$que82, _info;\n    return _regeneratorRuntime().wrap(function _callee33$(_context33) {\n      while (1) switch (_context33.prev = _context33.next) {\n        case 0:\n          auth = req.cookies.auth;\n          id = req.body.id;\n          type = req.body.type;\n          if (!(!auth || !id || !type)) {\n            _context33.next = 5;\n            break;\n          }\n          return _context33.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 5:\n          if (!(type == 'confirm')) {\n            _context33.next = 14;\n            break;\n          }\n          _context33.next = 8;\n          return _connectDB[\"default\"].query(\"UPDATE withdraw SET status = 1 WHERE id = ?\", [id]);\n        case 8:\n          _context33.next = 10;\n          return _connectDB[\"default\"].query(\"SELECT * FROM withdraw WHERE id = ?\", [id]);\n        case 10:\n          _yield$connection$que79 = _context33.sent;\n          _yield$connection$que80 = _slicedToArray(_yield$connection$que79, 1);\n          info = _yield$connection$que80[0];\n          return _context33.abrupt(\"return\", res.status(200).json({\n            message: 'Successful application confirmation',\n            status: true,\n            datas: recharge\n          }));\n        case 14:\n          if (!(type == 'delete')) {\n            _context33.next = 25;\n            break;\n          }\n          _context33.next = 17;\n          return _connectDB[\"default\"].query(\"UPDATE withdraw SET status = 2 WHERE id = ?\", [id]);\n        case 17:\n          _context33.next = 19;\n          return _connectDB[\"default\"].query(\"SELECT * FROM withdraw WHERE id = ?\", [id]);\n        case 19:\n          _yield$connection$que81 = _context33.sent;\n          _yield$connection$que82 = _slicedToArray(_yield$connection$que81, 1);\n          _info = _yield$connection$que82[0];\n          _context33.next = 24;\n          return _connectDB[\"default\"].query('UPDATE users SET money = money + ? WHERE phone = ? ', [_info[0].money, _info[0].phone]);\n        case 24:\n          return _context33.abrupt(\"return\", res.status(200).json({\n            message: 'Cancel successfully',\n            status: true,\n            datas: recharge\n          }));\n        case 25:\n        case \"end\":\n          return _context33.stop();\n      }\n    }, _callee33);\n  }));\n  return function handlWithdraw(_x64, _x65) {\n    return _ref34.apply(this, arguments);\n  };\n}();\nvar settingBank = /*#__PURE__*/function () {\n  var _ref35 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee34(req, res) {\n    var auth, name_bank, name, info, qr, typer, _yield$connection$que83, _yield$connection$que84, bank_recharge, deleteRechargeQueries, bankName, username, upiId, usdtWalletAddress;\n    return _regeneratorRuntime().wrap(function _callee34$(_context34) {\n      while (1) switch (_context34.prev = _context34.next) {\n        case 0:\n          _context34.prev = 0;\n          auth = req.cookies.auth;\n          name_bank = req.body.name_bank;\n          name = req.body.name;\n          info = req.body.info;\n          qr = req.body.qr;\n          typer = req.body.typer;\n          if (!(!auth || !typer)) {\n            _context34.next = 9;\n            break;\n          }\n          return _context34.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 9:\n          if (!(typer == 'bank')) {\n            _context34.next = 13;\n            break;\n          }\n          _context34.next = 12;\n          return _connectDB[\"default\"].query(\"UPDATE bank_recharge SET name_bank = ?, name_user = ?, stk = ? WHERE type = 'bank'\", [name_bank, name, info]);\n        case 12:\n          return _context34.abrupt(\"return\", res.status(200).json({\n            message: 'Successful change',\n            status: true,\n            datas: recharge\n          }));\n        case 13:\n          if (!(typer == 'momo')) {\n            _context34.next = 29;\n            break;\n          }\n          _context34.next = 16;\n          return _connectDB[\"default\"].query(\"SELECT * FROM bank_recharge WHERE type = 'momo'\");\n        case 16:\n          _yield$connection$que83 = _context34.sent;\n          _yield$connection$que84 = _slicedToArray(_yield$connection$que83, 1);\n          bank_recharge = _yield$connection$que84[0];\n          deleteRechargeQueries = bank_recharge.map(function (recharge) {\n            return deleteBankRechargeById(recharge.id);\n          });\n          _context34.next = 22;\n          return Promise.all(deleteRechargeQueries);\n        case 22:\n          // await connection.query(`UPDATE bank_recharge SET name_bank = ?, name_user = ?, stk = ?, qr_code_image = ? WHERE type = 'upi'`, [name_bank, name, info, qr]);\n          bankName = req.body.bank_name;\n          username = req.body.username;\n          upiId = req.body.upi_id;\n          usdtWalletAddress = req.body.usdt_wallet_address;\n          _context34.next = 28;\n          return _connectDB[\"default\"].query(\"INSERT INTO bank_recharge SET name_bank = ?, name_user = ?, stk = ?, qr_code_image = ?, type = 'momo'\", [bankName, username, upiId, usdtWalletAddress]);\n        case 28:\n          return _context34.abrupt(\"return\", res.status(200).json({\n            message: 'Successfully changed',\n            status: true,\n            datas: recharge\n          }));\n        case 29:\n          _context34.next = 35;\n          break;\n        case 31:\n          _context34.prev = 31;\n          _context34.t0 = _context34[\"catch\"](0);\n          console.log(_context34.t0);\n          return _context34.abrupt(\"return\", res.status(500).json({\n            message: 'Something went wrong!',\n            status: false\n          }));\n        case 35:\n        case \"end\":\n          return _context34.stop();\n      }\n    }, _callee34, null, [[0, 31]]);\n  }));\n  return function settingBank(_x66, _x67) {\n    return _ref35.apply(this, arguments);\n  };\n}();\nvar deleteBankRechargeById = /*#__PURE__*/function () {\n  var _ref36 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee35(id) {\n    var _yield$connection$que85, _yield$connection$que86, recharge;\n    return _regeneratorRuntime().wrap(function _callee35$(_context35) {\n      while (1) switch (_context35.prev = _context35.next) {\n        case 0:\n          _context35.next = 2;\n          return _connectDB[\"default\"].query(\"DELETE FROM bank_recharge WHERE type = 'momo' AND id = ?\", [id]);\n        case 2:\n          _yield$connection$que85 = _context35.sent;\n          _yield$connection$que86 = _slicedToArray(_yield$connection$que85, 1);\n          recharge = _yield$connection$que86[0];\n          return _context35.abrupt(\"return\", recharge);\n        case 6:\n        case \"end\":\n          return _context35.stop();\n      }\n    }, _callee35);\n  }));\n  return function deleteBankRechargeById(_x68) {\n    return _ref36.apply(this, arguments);\n  };\n}();\nvar settingCskh = /*#__PURE__*/function () {\n  var _ref37 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee36(req, res) {\n    var auth, telegram, cskh, myapp_web;\n    return _regeneratorRuntime().wrap(function _callee36$(_context36) {\n      while (1) switch (_context36.prev = _context36.next) {\n        case 0:\n          auth = req.cookies.auth;\n          telegram = req.body.telegram;\n          cskh = req.body.cskh;\n          myapp_web = req.body.myapp_web;\n          if (!(!auth || !cskh || !telegram)) {\n            _context36.next = 6;\n            break;\n          }\n          return _context36.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 6:\n          _context36.next = 8;\n          return _connectDB[\"default\"].query(\"UPDATE admin SET telegram = ?, cskh = ?, app = ?\", [telegram, cskh, myapp_web]);\n        case 8:\n          return _context36.abrupt(\"return\", res.status(200).json({\n            message: 'Successful change',\n            status: true\n          }));\n        case 9:\n        case \"end\":\n          return _context36.stop();\n      }\n    }, _callee36);\n  }));\n  return function settingCskh(_x69, _x70) {\n    return _ref37.apply(this, arguments);\n  };\n}();\nvar banned = /*#__PURE__*/function () {\n  var _ref38 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee37(req, res) {\n    var auth, id, type;\n    return _regeneratorRuntime().wrap(function _callee37$(_context37) {\n      while (1) switch (_context37.prev = _context37.next) {\n        case 0:\n          auth = req.cookies.auth;\n          id = req.body.id;\n          type = req.body.type;\n          if (!(!auth || !id)) {\n            _context37.next = 5;\n            break;\n          }\n          return _context37.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 5:\n          if (!(type == 'open')) {\n            _context37.next = 8;\n            break;\n          }\n          _context37.next = 8;\n          return _connectDB[\"default\"].query(\"UPDATE users SET status = 1 WHERE id = ?\", [id]);\n        case 8:\n          if (!(type == 'close')) {\n            _context37.next = 11;\n            break;\n          }\n          _context37.next = 11;\n          return _connectDB[\"default\"].query(\"UPDATE users SET status = 2 WHERE id = ?\", [id]);\n        case 11:\n          return _context37.abrupt(\"return\", res.status(200).json({\n            message: 'Successful change',\n            status: true\n          }));\n        case 12:\n        case \"end\":\n          return _context37.stop();\n      }\n    }, _callee37);\n  }));\n  return function banned(_x71, _x72) {\n    return _ref38.apply(this, arguments);\n  };\n}();\nvar createBonus = /*#__PURE__*/function () {\n  var _ref39 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee38(req, res) {\n    var randomString, timerJoin, d, time, auth, money, type, _yield$connection$que87, _yield$connection$que88, user, userInfo, select, _select, _select2, phone, _yield$connection$que89, _yield$connection$que90, _user, _select3, _phone, _yield$connection$que91, _yield$connection$que92, _user2, id_redenvelops, sql;\n    return _regeneratorRuntime().wrap(function _callee38$(_context38) {\n      while (1) switch (_context38.prev = _context38.next) {\n        case 0:\n          timerJoin = function _timerJoin() {\n            var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n            var addHours = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var date = '';\n            if (params) {\n              date = new Date(Number(params));\n            } else {\n              date = new Date();\n            }\n            date.setHours(date.getHours() + addHours);\n            var years = formateT(date.getFullYear());\n            var months = formateT(date.getMonth() + 1);\n            var days = formateT(date.getDate());\n            var hours = date.getHours() % 12;\n            hours = hours === 0 ? 12 : hours;\n            var ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n            var minutes = formateT(date.getMinutes());\n            var seconds = formateT(date.getSeconds());\n            return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;\n          };\n          randomString = function randomString(length) {\n            var result = '';\n            var characters = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n            var charactersLength = characters.length;\n            for (var i = 0; i < length; i++) {\n              result += characters.charAt(Math.floor(Math.random() * charactersLength));\n            }\n            return result;\n          };\n          d = new Date();\n          time = d.getTime();\n          auth = req.cookies.auth;\n          money = req.body.money;\n          type = req.body.type;\n          if (!(!money || !auth)) {\n            _context38.next = 9;\n            break;\n          }\n          return _context38.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 9:\n          _context38.next = 11;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE token = ? ', [auth]);\n        case 11:\n          _yield$connection$que87 = _context38.sent;\n          _yield$connection$que88 = _slicedToArray(_yield$connection$que87, 1);\n          user = _yield$connection$que88[0];\n          if (!(user.length == 0)) {\n            _context38.next = 16;\n            break;\n          }\n          return _context38.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 16:\n          userInfo = user[0];\n          if (!(type == 'all')) {\n            _context38.next = 27;\n            break;\n          }\n          select = req.body.select;\n          if (!(select == '1')) {\n            _context38.next = 24;\n            break;\n          }\n          _context38.next = 22;\n          return _connectDB[\"default\"].query(\"UPDATE point_list SET money = money + ? WHERE level = 2\", [money]);\n        case 22:\n          _context38.next = 26;\n          break;\n        case 24:\n          _context38.next = 26;\n          return _connectDB[\"default\"].query(\"UPDATE point_list SET money = money - ? WHERE level = 2\", [money]);\n        case 26:\n          return _context38.abrupt(\"return\", res.status(200).json({\n            message: 'successful change',\n            status: true\n          }));\n        case 27:\n          if (!(type == 'two')) {\n            _context38.next = 37;\n            break;\n          }\n          _select = req.body.select;\n          if (!(_select == '1')) {\n            _context38.next = 34;\n            break;\n          }\n          _context38.next = 32;\n          return _connectDB[\"default\"].query(\"UPDATE point_list SET money_us = money_us + ? WHERE level = 2\", [money]);\n        case 32:\n          _context38.next = 36;\n          break;\n        case 34:\n          _context38.next = 36;\n          return _connectDB[\"default\"].query(\"UPDATE point_list SET money_us = money_us - ? WHERE level = 2\", [money]);\n        case 36:\n          return _context38.abrupt(\"return\", res.status(200).json({\n            message: 'successful change',\n            status: true\n          }));\n        case 37:\n          if (!(type == 'one')) {\n            _context38.next = 55;\n            break;\n          }\n          _select2 = req.body.select;\n          phone = req.body.phone;\n          _context38.next = 42;\n          return _connectDB[\"default\"].query('SELECT * FROM point_list WHERE phone = ? ', [phone]);\n        case 42:\n          _yield$connection$que89 = _context38.sent;\n          _yield$connection$que90 = _slicedToArray(_yield$connection$que89, 1);\n          _user = _yield$connection$que90[0];\n          if (!(_user.length == 0)) {\n            _context38.next = 47;\n            break;\n          }\n          return _context38.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 47:\n          if (!(_select2 == '1')) {\n            _context38.next = 52;\n            break;\n          }\n          _context38.next = 50;\n          return _connectDB[\"default\"].query(\"UPDATE point_list SET money = money + ? WHERE level = 2 and phone = ?\", [money, phone]);\n        case 50:\n          _context38.next = 54;\n          break;\n        case 52:\n          _context38.next = 54;\n          return _connectDB[\"default\"].query(\"UPDATE point_list SET money = money - ? WHERE level = 2 and phone = ?\", [money, phone]);\n        case 54:\n          return _context38.abrupt(\"return\", res.status(200).json({\n            message: 'successful change',\n            status: true\n          }));\n        case 55:\n          if (!(type == 'three')) {\n            _context38.next = 73;\n            break;\n          }\n          _select3 = req.body.select;\n          _phone = req.body.phone;\n          _context38.next = 60;\n          return _connectDB[\"default\"].query('SELECT * FROM point_list WHERE phone = ? ', [_phone]);\n        case 60:\n          _yield$connection$que91 = _context38.sent;\n          _yield$connection$que92 = _slicedToArray(_yield$connection$que91, 1);\n          _user2 = _yield$connection$que92[0];\n          if (!(_user2.length == 0)) {\n            _context38.next = 65;\n            break;\n          }\n          return _context38.abrupt(\"return\", res.status(200).json({\n            message: 'account does not exist',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 65:\n          if (!(_select3 == '1')) {\n            _context38.next = 70;\n            break;\n          }\n          _context38.next = 68;\n          return _connectDB[\"default\"].query(\"UPDATE point_list SET money_us = money_us + ? WHERE level = 2 and phone = ?\", [money, _phone]);\n        case 68:\n          _context38.next = 72;\n          break;\n        case 70:\n          _context38.next = 72;\n          return _connectDB[\"default\"].query(\"UPDATE point_list SET money_us = money_us - ? WHERE level = 2 and phone = ?\", [money, _phone]);\n        case 72:\n          return _context38.abrupt(\"return\", res.status(200).json({\n            message: 'successful change',\n            status: true\n          }));\n        case 73:\n          if (type) {\n            _context38.next = 79;\n            break;\n          }\n          id_redenvelops = randomString(16);\n          sql = \"INSERT INTO redenvelopes SET id_redenvelope = ?, phone = ?, money = ?, used = ?, amount = ?, status = ?, time = ?\";\n          _context38.next = 78;\n          return _connectDB[\"default\"].query(sql, [id_redenvelops, userInfo.phone, money, 1, 1, 0, time]);\n        case 78:\n          return _context38.abrupt(\"return\", res.status(200).json({\n            message: 'Successful change',\n            status: true,\n            id: id_redenvelops\n          }));\n        case 79:\n        case \"end\":\n          return _context38.stop();\n      }\n    }, _callee38);\n  }));\n  return function createBonus(_x73, _x74) {\n    return _ref39.apply(this, arguments);\n  };\n}();\nvar listRedenvelops = /*#__PURE__*/function () {\n  var _ref40 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee39(req, res) {\n    var auth, _yield$connection$que93, _yield$connection$que94, redenvelopes;\n    return _regeneratorRuntime().wrap(function _callee39$(_context39) {\n      while (1) switch (_context39.prev = _context39.next) {\n        case 0:\n          auth = req.cookies.auth;\n          _context39.next = 3;\n          return _connectDB[\"default\"].query('SELECT * FROM redenvelopes WHERE status = 0 ');\n        case 3:\n          _yield$connection$que93 = _context39.sent;\n          _yield$connection$que94 = _slicedToArray(_yield$connection$que93, 1);\n          redenvelopes = _yield$connection$que94[0];\n          return _context39.abrupt(\"return\", res.status(200).json({\n            message: 'Successful change',\n            status: true,\n            redenvelopes: redenvelopes\n          }));\n        case 7:\n        case \"end\":\n          return _context39.stop();\n      }\n    }, _callee39);\n  }));\n  return function listRedenvelops(_x75, _x76) {\n    return _ref40.apply(this, arguments);\n  };\n}();\nvar settingbuff = /*#__PURE__*/function () {\n  var _ref41 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee40(req, res) {\n    var auth, id_user, buff_acc, money_value, _yield$connection$que95, _yield$connection$que96, user_id;\n    return _regeneratorRuntime().wrap(function _callee40$(_context40) {\n      while (1) switch (_context40.prev = _context40.next) {\n        case 0:\n          auth = req.cookies.auth;\n          id_user = req.body.id_user;\n          buff_acc = req.body.buff_acc;\n          money_value = req.body.money_value;\n          if (!(!id_user || !buff_acc || !money_value)) {\n            _context40.next = 6;\n            break;\n          }\n          return _context40.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 6:\n          _context40.next = 8;\n          return _connectDB[\"default\"].query(\"SELECT * FROM users WHERE id_user = ?\", [id_user]);\n        case 8:\n          _yield$connection$que95 = _context40.sent;\n          _yield$connection$que96 = _slicedToArray(_yield$connection$que95, 1);\n          user_id = _yield$connection$que96[0];\n          if (!(user_id.length > 0)) {\n            _context40.next = 21;\n            break;\n          }\n          if (!(buff_acc == '1')) {\n            _context40.next = 15;\n            break;\n          }\n          _context40.next = 15;\n          return _connectDB[\"default\"].query(\"UPDATE users SET money = money + ? WHERE id_user = ?\", [money_value, id_user]);\n        case 15:\n          if (!(buff_acc == '2')) {\n            _context40.next = 18;\n            break;\n          }\n          _context40.next = 18;\n          return _connectDB[\"default\"].query(\"UPDATE users SET money = money - ? WHERE id_user = ?\", [money_value, id_user]);\n        case 18:\n          return _context40.abrupt(\"return\", res.status(200).json({\n            message: 'Successful change',\n            status: true\n          }));\n        case 21:\n          return _context40.abrupt(\"return\", res.status(200).json({\n            message: 'Successful change',\n            status: false\n          }));\n        case 22:\n        case \"end\":\n          return _context40.stop();\n      }\n    }, _callee40);\n  }));\n  return function settingbuff(_x77, _x78) {\n    return _ref41.apply(this, arguments);\n  };\n}();\nvar randomNumber = function randomNumber(min, max) {\n  return String(Math.floor(Math.random() * (max - min + 1)) + min);\n};\nvar randomString = function randomString(length) {\n  var result = '';\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\nvar ipAddress = function ipAddress(req) {\n  var ip = '';\n  if (req.headers['x-forwarded-for']) {\n    ip = req.headers['x-forwarded-for'].split(\",\")[0];\n  } else if (req.connection && req.connection.remoteAddress) {\n    ip = req.connection.remoteAddress;\n  } else {\n    ip = req.ip;\n  }\n  return ip;\n};\nvar timeCreate = function timeCreate() {\n  var d = new Date();\n  var time = d.getTime();\n  return time;\n};\nvar register = /*#__PURE__*/function () {\n  var _ref42 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee41(req, res) {\n    var _req$body3, username, password, invitecode, id_user, name_user, code, ip, time, _yield$connection$que97, _yield$connection$que98, check_u, sql;\n    return _regeneratorRuntime().wrap(function _callee41$(_context41) {\n      while (1) switch (_context41.prev = _context41.next) {\n        case 0:\n          _req$body3 = req.body, username = _req$body3.username, password = _req$body3.password, invitecode = _req$body3.invitecode;\n          id_user = randomNumber(10000, 99999);\n          name_user = \"Member\" + randomNumber(10000, 99999);\n          code = randomString(5) + randomNumber(10000, 99999);\n          ip = ipAddress(req);\n          time = timeCreate();\n          invitecode = '2cOCs36373';\n          if (!(!username || !password || !invitecode)) {\n            _context41.next = 9;\n            break;\n          }\n          return _context41.abrupt(\"return\", res.status(200).json({\n            message: 'ERROR!!!',\n            status: false\n          }));\n        case 9:\n          if (username) {\n            _context41.next = 11;\n            break;\n          }\n          return _context41.abrupt(\"return\", res.status(200).json({\n            message: 'phone error',\n            status: false\n          }));\n        case 11:\n          _context41.prev = 11;\n          _context41.next = 14;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE phone = ? ', [username]);\n        case 14:\n          _yield$connection$que97 = _context41.sent;\n          _yield$connection$que98 = _slicedToArray(_yield$connection$que97, 1);\n          check_u = _yield$connection$que98[0];\n          if (!(check_u.length == 1)) {\n            _context41.next = 21;\n            break;\n          }\n          return _context41.abrupt(\"return\", res.status(200).json({\n            message: 'register account',\n            //Số điện thoại đã được đăng ký\n            status: false\n          }));\n        case 21:\n          sql = \"INSERT INTO users SET \\n            id_user = ?,\\n            phone = ?,\\n            name_user = ?,\\n            password = ?,\\n            money = ?,\\n            level = ?,\\n            code = ?,\\n            invite = ?,\\n            veri = ?,\\n            ip_address = ?,\\n            status = ?,\\n            time = ?\";\n          _context41.next = 24;\n          return _connectDB[\"default\"].execute(sql, [id_user, username, name_user, (0, _md[\"default\"])(password), 0, 2, code, invitecode, 1, ip, 1, time]);\n        case 24:\n          _context41.next = 26;\n          return _connectDB[\"default\"].execute('INSERT INTO point_list SET phone = ?, level = 2', [username]);\n        case 26:\n          return _context41.abrupt(\"return\", res.status(200).json({\n            message: 'registration success',\n            //Register Sucess\n            status: true\n          }));\n        case 27:\n          _context41.next = 32;\n          break;\n        case 29:\n          _context41.prev = 29;\n          _context41.t0 = _context41[\"catch\"](11);\n          if (_context41.t0) console.log(_context41.t0);\n        case 32:\n        case \"end\":\n          return _context41.stop();\n      }\n    }, _callee41, null, [[11, 29]]);\n  }));\n  return function register(_x79, _x80) {\n    return _ref42.apply(this, arguments);\n  };\n}();\nvar profileUser = /*#__PURE__*/function () {\n  var _ref43 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee42(req, res) {\n    var phone, _yield$connection$que99, _yield$connection$que100, user, _yield$connection$que101, _yield$connection$que102, recharge, _yield$connection$que103, _yield$connection$que104, withdraw;\n    return _regeneratorRuntime().wrap(function _callee42$(_context42) {\n      while (1) switch (_context42.prev = _context42.next) {\n        case 0:\n          phone = req.body.phone;\n          if (phone) {\n            _context42.next = 3;\n            break;\n          }\n          return _context42.abrupt(\"return\", res.status(200).json({\n            message: 'Phone Error',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 3:\n          _context42.next = 5;\n          return _connectDB[\"default\"].query(\"SELECT * FROM users WHERE phone = ?\", [phone]);\n        case 5:\n          _yield$connection$que99 = _context42.sent;\n          _yield$connection$que100 = _slicedToArray(_yield$connection$que99, 1);\n          user = _yield$connection$que100[0];\n          if (!(user.length == 0)) {\n            _context42.next = 10;\n            break;\n          }\n          return _context42.abrupt(\"return\", res.status(200).json({\n            message: 'Phone Error',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 10:\n          _context42.next = 12;\n          return _connectDB[\"default\"].query(\"SELECT * FROM recharge WHERE phone = ? ORDER BY id DESC LIMIT 10\", [phone]);\n        case 12:\n          _yield$connection$que101 = _context42.sent;\n          _yield$connection$que102 = _slicedToArray(_yield$connection$que101, 1);\n          recharge = _yield$connection$que102[0];\n          _context42.next = 17;\n          return _connectDB[\"default\"].query(\"SELECT * FROM withdraw WHERE phone = ? ORDER BY id DESC LIMIT 10\", [phone]);\n        case 17:\n          _yield$connection$que103 = _context42.sent;\n          _yield$connection$que104 = _slicedToArray(_yield$connection$que103, 1);\n          withdraw = _yield$connection$que104[0];\n          return _context42.abrupt(\"return\", res.status(200).json({\n            message: 'Get success',\n            status: true,\n            recharge: recharge,\n            withdraw: withdraw\n          }));\n        case 21:\n        case \"end\":\n          return _context42.stop();\n      }\n    }, _callee42);\n  }));\n  return function profileUser(_x81, _x82) {\n    return _ref43.apply(this, arguments);\n  };\n}();\nvar infoCtv = /*#__PURE__*/function () {\n  var _ref44 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee43(req, res) {\n    var phone, _yield$connection$que105, _yield$connection$que106, user, userInfo, _yield$connection$que107, _yield$connection$que108, f1s, f1_today, i, f1_time, check, f_all_today, _i11, f1_code, _f1_time2, check_f1, _yield$connection$que109, _yield$connection$que110, f2s, _i12, f2_code, f2_time, check_f2, _yield$connection$que111, _yield$connection$que112, f3s, _i13, f3_code, f3_time, check_f3, _yield$connection$que113, _yield$connection$que114, f4s, _i14, f4_code, f4_time, check_f4, f2, _i15, _f1_code4, _yield$connection$que115, _yield$connection$que116, _f2s4, f3, _i16, _f1_code5, _yield$connection$que117, _yield$connection$que118, _f2s5, _i17, _f2_code3, _yield$connection$que119, _yield$connection$que120, _f3s3, f4, _i18, _f1_code6, _yield$connection$que121, _yield$connection$que122, _f2s6, _i19, _f2_code4, _yield$connection$que123, _yield$connection$que124, _f3s4, _i20, _f3_code2, _yield$connection$que125, _yield$connection$que126, _f4s2, _yield$connection$que127, _yield$connection$que128, list_mem, _yield$connection$que129, _yield$connection$que130, list_mem_baned, total_recharge, total_withdraw, _i21, _phone2, _yield$connection$que131, _yield$connection$que132, _recharge, _yield$connection$que133, _yield$connection$que134, _withdraw, total_recharge_today, total_withdraw_today, _i22, _phone3, _yield$connection$que135, _yield$connection$que136, recharge_today, _yield$connection$que137, _yield$connection$que138, withdraw_today, _i23, today, time, _i24, _today, _time, win, loss, _i25, _phone4, _yield$connection$que139, _yield$connection$que140, wins, _yield$connection$que141, _yield$connection$que142, losses, _i26, _today2, _time2, _i27, _today3, _time3, list_mems, _yield$connection$que143, _yield$connection$que144, list_mem_today, _i28, _today4, _time4, _yield$connection$que145, _yield$connection$que146, point_list, moneyCTV, list_recharge_news, list_withdraw_news, _i29, _phone5, _yield$connection$que147, _yield$connection$que148, _recharge_today, _yield$connection$que149, _yield$connection$que150, _withdraw_today, _i30, _today5, _time5, _i31, _today6, _time6, _yield$connection$que151, _yield$connection$que152, redenvelopes_used, redenvelopes_used_today, _i32, _today7, _time7, _yield$connection$que153, _yield$connection$que154, financial_details, financial_details_today, _i33, _today8, _time8;\n    return _regeneratorRuntime().wrap(function _callee43$(_context43) {\n      while (1) switch (_context43.prev = _context43.next) {\n        case 0:\n          phone = req.body.phone;\n          _context43.next = 3;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE phone = ? ', [phone]);\n        case 3:\n          _yield$connection$que105 = _context43.sent;\n          _yield$connection$que106 = _slicedToArray(_yield$connection$que105, 1);\n          user = _yield$connection$que106[0];\n          if (!(user.length == 0)) {\n            _context43.next = 8;\n            break;\n          }\n          return _context43.abrupt(\"return\", res.status(200).json({\n            message: 'Phone Error',\n            status: false\n          }));\n        case 8:\n          userInfo = user[0]; // cấp dưới trực tiếp all\n          _context43.next = 11;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [userInfo.code]);\n        case 11:\n          _yield$connection$que107 = _context43.sent;\n          _yield$connection$que108 = _slicedToArray(_yield$connection$que107, 1);\n          f1s = _yield$connection$que108[0];\n          // cấp dưới trực tiếp hôm nay \n          f1_today = 0;\n          for (i = 0; i < f1s.length; i++) {\n            f1_time = f1s[i].time; // Mã giới thiệu f1\n            check = timerJoin(f1_time) == timerJoin() ? true : false;\n            if (check) {\n              f1_today += 1;\n            }\n          }\n\n          // tất cả cấp dưới hôm nay \n          f_all_today = 0;\n          _i11 = 0;\n        case 18:\n          if (!(_i11 < f1s.length)) {\n            _context43.next = 60;\n            break;\n          }\n          f1_code = f1s[_i11].code; // Mã giới thiệu f1\n          _f1_time2 = f1s[_i11].time; // time f1\n          check_f1 = timerJoin(_f1_time2) == timerJoin() ? true : false;\n          if (check_f1) f_all_today += 1;\n          // tổng f1 mời đc hôm nay\n          _context43.next = 25;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [f1_code]);\n        case 25:\n          _yield$connection$que109 = _context43.sent;\n          _yield$connection$que110 = _slicedToArray(_yield$connection$que109, 1);\n          f2s = _yield$connection$que110[0];\n          _i12 = 0;\n        case 29:\n          if (!(_i12 < f2s.length)) {\n            _context43.next = 57;\n            break;\n          }\n          f2_code = f2s[_i12].code; // Mã giới thiệu f2\n          f2_time = f2s[_i12].time; // time f2\n          check_f2 = timerJoin(f2_time) == timerJoin() ? true : false;\n          if (check_f2) f_all_today += 1;\n          // tổng f2 mời đc hôm nay\n          _context43.next = 36;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [f2_code]);\n        case 36:\n          _yield$connection$que111 = _context43.sent;\n          _yield$connection$que112 = _slicedToArray(_yield$connection$que111, 1);\n          f3s = _yield$connection$que112[0];\n          _i13 = 0;\n        case 40:\n          if (!(_i13 < f3s.length)) {\n            _context43.next = 54;\n            break;\n          }\n          f3_code = f3s[_i13].code; // Mã giới thiệu f3\n          f3_time = f3s[_i13].time; // time f3\n          check_f3 = timerJoin(f3_time) == timerJoin() ? true : false;\n          if (check_f3) f_all_today += 1;\n          _context43.next = 47;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [f3_code]);\n        case 47:\n          _yield$connection$que113 = _context43.sent;\n          _yield$connection$que114 = _slicedToArray(_yield$connection$que113, 1);\n          f4s = _yield$connection$que114[0];\n          // tổng f3 mời đc hôm nay\n          for (_i14 = 0; _i14 < f4s.length; _i14++) {\n            f4_code = f4s[_i14].code; // Mã giới thiệu f4\n            f4_time = f4s[_i14].time; // time f4\n            check_f4 = timerJoin(f4_time) == timerJoin() ? true : false;\n            if (check_f4) f_all_today += 1;\n            // tổng f3 mời đc hôm nay\n          }\n        case 51:\n          _i13++;\n          _context43.next = 40;\n          break;\n        case 54:\n          _i12++;\n          _context43.next = 29;\n          break;\n        case 57:\n          _i11++;\n          _context43.next = 18;\n          break;\n        case 60:\n          // Tổng số f2\n          f2 = 0;\n          _i15 = 0;\n        case 62:\n          if (!(_i15 < f1s.length)) {\n            _context43.next = 73;\n            break;\n          }\n          _f1_code4 = f1s[_i15].code; // Mã giới thiệu f1\n          _context43.next = 66;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [_f1_code4]);\n        case 66:\n          _yield$connection$que115 = _context43.sent;\n          _yield$connection$que116 = _slicedToArray(_yield$connection$que115, 1);\n          _f2s4 = _yield$connection$que116[0];\n          f2 += _f2s4.length;\n        case 70:\n          _i15++;\n          _context43.next = 62;\n          break;\n        case 73:\n          // Tổng số f3\n          f3 = 0;\n          _i16 = 0;\n        case 75:\n          if (!(_i16 < f1s.length)) {\n            _context43.next = 97;\n            break;\n          }\n          _f1_code5 = f1s[_i16].code; // Mã giới thiệu f1\n          _context43.next = 79;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [_f1_code5]);\n        case 79:\n          _yield$connection$que117 = _context43.sent;\n          _yield$connection$que118 = _slicedToArray(_yield$connection$que117, 1);\n          _f2s5 = _yield$connection$que118[0];\n          _i17 = 0;\n        case 83:\n          if (!(_i17 < _f2s5.length)) {\n            _context43.next = 94;\n            break;\n          }\n          _f2_code3 = _f2s5[_i17].code;\n          _context43.next = 87;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [_f2_code3]);\n        case 87:\n          _yield$connection$que119 = _context43.sent;\n          _yield$connection$que120 = _slicedToArray(_yield$connection$que119, 1);\n          _f3s3 = _yield$connection$que120[0];\n          if (_f3s3.length > 0) f3 += _f3s3.length;\n        case 91:\n          _i17++;\n          _context43.next = 83;\n          break;\n        case 94:\n          _i16++;\n          _context43.next = 75;\n          break;\n        case 97:\n          // Tổng số f4\n          f4 = 0;\n          _i18 = 0;\n        case 99:\n          if (!(_i18 < f1s.length)) {\n            _context43.next = 132;\n            break;\n          }\n          _f1_code6 = f1s[_i18].code; // Mã giới thiệu f1\n          _context43.next = 103;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [_f1_code6]);\n        case 103:\n          _yield$connection$que121 = _context43.sent;\n          _yield$connection$que122 = _slicedToArray(_yield$connection$que121, 1);\n          _f2s6 = _yield$connection$que122[0];\n          _i19 = 0;\n        case 107:\n          if (!(_i19 < _f2s6.length)) {\n            _context43.next = 129;\n            break;\n          }\n          _f2_code4 = _f2s6[_i19].code;\n          _context43.next = 111;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [_f2_code4]);\n        case 111:\n          _yield$connection$que123 = _context43.sent;\n          _yield$connection$que124 = _slicedToArray(_yield$connection$que123, 1);\n          _f3s4 = _yield$connection$que124[0];\n          _i20 = 0;\n        case 115:\n          if (!(_i20 < _f3s4.length)) {\n            _context43.next = 126;\n            break;\n          }\n          _f3_code2 = _f3s4[_i20].code;\n          _context43.next = 119;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [_f3_code2]);\n        case 119:\n          _yield$connection$que125 = _context43.sent;\n          _yield$connection$que126 = _slicedToArray(_yield$connection$que125, 1);\n          _f4s2 = _yield$connection$que126[0];\n          if (_f4s2.length > 0) f4 += _f4s2.length;\n        case 123:\n          _i20++;\n          _context43.next = 115;\n          break;\n        case 126:\n          _i19++;\n          _context43.next = 107;\n          break;\n        case 129:\n          _i18++;\n          _context43.next = 99;\n          break;\n        case 132:\n          _context43.next = 134;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 ', [phone]);\n        case 134:\n          _yield$connection$que127 = _context43.sent;\n          _yield$connection$que128 = _slicedToArray(_yield$connection$que127, 1);\n          list_mem = _yield$connection$que128[0];\n          _context43.next = 139;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE ctv = ? AND status = 2 AND veri = 1 ', [phone]);\n        case 139:\n          _yield$connection$que129 = _context43.sent;\n          _yield$connection$que130 = _slicedToArray(_yield$connection$que129, 1);\n          list_mem_baned = _yield$connection$que130[0];\n          total_recharge = 0;\n          total_withdraw = 0;\n          _i21 = 0;\n        case 145:\n          if (!(_i21 < list_mem.length)) {\n            _context43.next = 162;\n            break;\n          }\n          _phone2 = list_mem[_i21].phone;\n          _context43.next = 149;\n          return _connectDB[\"default\"].query('SELECT SUM(money) as money FROM recharge WHERE phone = ? AND status = 1 ', [_phone2]);\n        case 149:\n          _yield$connection$que131 = _context43.sent;\n          _yield$connection$que132 = _slicedToArray(_yield$connection$que131, 1);\n          _recharge = _yield$connection$que132[0];\n          _context43.next = 154;\n          return _connectDB[\"default\"].query('SELECT SUM(money) as money FROM withdraw WHERE phone = ? AND status = 1 ', [_phone2]);\n        case 154:\n          _yield$connection$que133 = _context43.sent;\n          _yield$connection$que134 = _slicedToArray(_yield$connection$que133, 1);\n          _withdraw = _yield$connection$que134[0];\n          if (_recharge[0].money) {\n            total_recharge += Number(_recharge[0].money);\n          }\n          if (_withdraw[0].money) {\n            total_withdraw += Number(_withdraw[0].money);\n          }\n        case 159:\n          _i21++;\n          _context43.next = 145;\n          break;\n        case 162:\n          total_recharge_today = 0;\n          total_withdraw_today = 0;\n          _i22 = 0;\n        case 165:\n          if (!(_i22 < list_mem.length)) {\n            _context43.next = 182;\n            break;\n          }\n          _phone3 = list_mem[_i22].phone;\n          _context43.next = 169;\n          return _connectDB[\"default\"].query('SELECT `money`, `time` FROM recharge WHERE phone = ? AND status = 1 ', [_phone3]);\n        case 169:\n          _yield$connection$que135 = _context43.sent;\n          _yield$connection$que136 = _slicedToArray(_yield$connection$que135, 1);\n          recharge_today = _yield$connection$que136[0];\n          _context43.next = 174;\n          return _connectDB[\"default\"].query('SELECT `money`, `time` FROM withdraw WHERE phone = ? AND status = 1 ', [_phone3]);\n        case 174:\n          _yield$connection$que137 = _context43.sent;\n          _yield$connection$que138 = _slicedToArray(_yield$connection$que137, 1);\n          withdraw_today = _yield$connection$que138[0];\n          for (_i23 = 0; _i23 < recharge_today.length; _i23++) {\n            today = timerJoin();\n            time = timerJoin(recharge_today[_i23].time);\n            if (time == today) {\n              total_recharge_today += recharge_today[_i23].money;\n            }\n          }\n          for (_i24 = 0; _i24 < withdraw_today.length; _i24++) {\n            _today = timerJoin();\n            _time = timerJoin(withdraw_today[_i24].time);\n            if (_time == _today) {\n              total_withdraw_today += withdraw_today[_i24].money;\n            }\n          }\n        case 179:\n          _i22++;\n          _context43.next = 165;\n          break;\n        case 182:\n          win = 0;\n          loss = 0;\n          _i25 = 0;\n        case 185:\n          if (!(_i25 < list_mem.length)) {\n            _context43.next = 202;\n            break;\n          }\n          _phone4 = list_mem[_i25].phone;\n          _context43.next = 189;\n          return _connectDB[\"default\"].query('SELECT `money`, `time` FROM minutes_1 WHERE phone = ? AND status = 1 ', [_phone4]);\n        case 189:\n          _yield$connection$que139 = _context43.sent;\n          _yield$connection$que140 = _slicedToArray(_yield$connection$que139, 1);\n          wins = _yield$connection$que140[0];\n          _context43.next = 194;\n          return _connectDB[\"default\"].query('SELECT `money`, `time` FROM minutes_1 WHERE phone = ? AND status = 2 ', [_phone4]);\n        case 194:\n          _yield$connection$que141 = _context43.sent;\n          _yield$connection$que142 = _slicedToArray(_yield$connection$que141, 1);\n          losses = _yield$connection$que142[0];\n          for (_i26 = 0; _i26 < wins.length; _i26++) {\n            _today2 = timerJoin();\n            _time2 = timerJoin(wins[_i26].time);\n            if (_time2 == _today2) {\n              win += wins[_i26].money;\n            }\n          }\n          for (_i27 = 0; _i27 < losses.length; _i27++) {\n            _today3 = timerJoin();\n            _time3 = timerJoin(losses[_i27].time);\n            if (_time3 == _today3) {\n              loss += losses[_i27].money;\n            }\n          }\n        case 199:\n          _i25++;\n          _context43.next = 185;\n          break;\n        case 202:\n          list_mems = [];\n          _context43.next = 205;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 ', [phone]);\n        case 205:\n          _yield$connection$que143 = _context43.sent;\n          _yield$connection$que144 = _slicedToArray(_yield$connection$que143, 1);\n          list_mem_today = _yield$connection$que144[0];\n          for (_i28 = 0; _i28 < list_mem_today.length; _i28++) {\n            _today4 = timerJoin();\n            _time4 = timerJoin(list_mem_today[_i28].time);\n            if (_time4 == _today4) {\n              list_mems.push(list_mem_today[_i28]);\n            }\n          }\n          _context43.next = 211;\n          return _connectDB[\"default\"].query('SELECT * FROM point_list WHERE phone = ? ', [phone]);\n        case 211:\n          _yield$connection$que145 = _context43.sent;\n          _yield$connection$que146 = _slicedToArray(_yield$connection$que145, 1);\n          point_list = _yield$connection$que146[0];\n          moneyCTV = point_list[0].money;\n          list_recharge_news = [];\n          list_withdraw_news = [];\n          _i29 = 0;\n        case 218:\n          if (!(_i29 < list_mem.length)) {\n            _context43.next = 235;\n            break;\n          }\n          _phone5 = list_mem[_i29].phone;\n          _context43.next = 222;\n          return _connectDB[\"default\"].query('SELECT `id`, `status`, `type`,`phone`, `money`, `time` FROM recharge WHERE phone = ? AND status = 1 ', [_phone5]);\n        case 222:\n          _yield$connection$que147 = _context43.sent;\n          _yield$connection$que148 = _slicedToArray(_yield$connection$que147, 1);\n          _recharge_today = _yield$connection$que148[0];\n          _context43.next = 227;\n          return _connectDB[\"default\"].query('SELECT `id`, `status`,`phone`, `money`, `time` FROM withdraw WHERE phone = ? AND status = 1 ', [_phone5]);\n        case 227:\n          _yield$connection$que149 = _context43.sent;\n          _yield$connection$que150 = _slicedToArray(_yield$connection$que149, 1);\n          _withdraw_today = _yield$connection$que150[0];\n          for (_i30 = 0; _i30 < _recharge_today.length; _i30++) {\n            _today5 = timerJoin();\n            _time5 = timerJoin(_recharge_today[_i30].time);\n            if (_time5 == _today5) {\n              list_recharge_news.push(_recharge_today[_i30]);\n            }\n          }\n          for (_i31 = 0; _i31 < _withdraw_today.length; _i31++) {\n            _today6 = timerJoin();\n            _time6 = timerJoin(_withdraw_today[_i31].time);\n            if (_time6 == _today6) {\n              list_withdraw_news.push(_withdraw_today[_i31]);\n            }\n          }\n        case 232:\n          _i29++;\n          _context43.next = 218;\n          break;\n        case 235:\n          _context43.next = 237;\n          return _connectDB[\"default\"].query('SELECT * FROM redenvelopes_used WHERE phone = ? ', [phone]);\n        case 237:\n          _yield$connection$que151 = _context43.sent;\n          _yield$connection$que152 = _slicedToArray(_yield$connection$que151, 1);\n          redenvelopes_used = _yield$connection$que152[0];\n          redenvelopes_used_today = [];\n          for (_i32 = 0; _i32 < redenvelopes_used.length; _i32++) {\n            _today7 = timerJoin();\n            _time7 = timerJoin(redenvelopes_used[_i32].time);\n            if (_time7 == _today7) {\n              redenvelopes_used_today.push(redenvelopes_used[_i32]);\n            }\n          }\n          _context43.next = 244;\n          return _connectDB[\"default\"].query('SELECT * FROM financial_details WHERE phone = ? ', [phone]);\n        case 244:\n          _yield$connection$que153 = _context43.sent;\n          _yield$connection$que154 = _slicedToArray(_yield$connection$que153, 1);\n          financial_details = _yield$connection$que154[0];\n          financial_details_today = [];\n          for (_i33 = 0; _i33 < financial_details.length; _i33++) {\n            _today8 = timerJoin();\n            _time8 = timerJoin(financial_details[_i33].time);\n            if (_time8 == _today8) {\n              financial_details_today.push(financial_details[_i33]);\n            }\n          }\n          return _context43.abrupt(\"return\", res.status(200).json({\n            message: 'Success',\n            status: true,\n            datas: user,\n            f1: f1s.length,\n            f2: f2,\n            f3: f3,\n            f4: f4,\n            list_mems: list_mems,\n            total_recharge: total_recharge,\n            total_withdraw: total_withdraw,\n            total_recharge_today: total_recharge_today,\n            total_withdraw_today: total_withdraw_today,\n            list_mem_baned: list_mem_baned.length,\n            win: win,\n            loss: loss,\n            list_recharge_news: list_recharge_news,\n            list_withdraw_news: list_withdraw_news,\n            moneyCTV: moneyCTV,\n            redenvelopes_used: redenvelopes_used_today,\n            financial_details_today: financial_details_today\n          }));\n        case 250:\n        case \"end\":\n          return _context43.stop();\n      }\n    }, _callee43);\n  }));\n  return function infoCtv(_x83, _x84) {\n    return _ref44.apply(this, arguments);\n  };\n}();\nvar infoCtv2 = /*#__PURE__*/function () {\n  var _ref45 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee44(req, res) {\n    var phone, timeDate, timerJoin, _yield$connection$que155, _yield$connection$que156, user, userInfo, _yield$connection$que157, _yield$connection$que158, list_mem, list_mems, _yield$connection$que159, _yield$connection$que160, list_mem_today, i, today, time, list_recharge_news, list_withdraw_news, _i34, _phone6, _yield$connection$que161, _yield$connection$que162, recharge_today, _yield$connection$que163, _yield$connection$que164, withdraw_today, _i35, _today9, _time9, _i36, _today10, _time10, _yield$connection$que165, _yield$connection$que166, redenvelopes_used, redenvelopes_used_today, _i37, _today11, _time11, _yield$connection$que167, _yield$connection$que168, financial_details, financial_details_today, _i38, _today12, _time12;\n    return _regeneratorRuntime().wrap(function _callee44$(_context44) {\n      while (1) switch (_context44.prev = _context44.next) {\n        case 0:\n          timerJoin = function _timerJoin2() {\n            var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n            var addHours = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var date = '';\n            if (params) {\n              date = new Date(Number(params));\n            } else {\n              date = new Date();\n            }\n            date.setHours(date.getHours() + addHours);\n            var years = formateT(date.getFullYear());\n            var months = formateT(date.getMonth() + 1);\n            var days = formateT(date.getDate());\n            var hours = date.getHours() % 12;\n            hours = hours === 0 ? 12 : hours;\n            var ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n            var minutes = formateT(date.getMinutes());\n            var seconds = formateT(date.getSeconds());\n            return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;\n          };\n          phone = req.body.phone;\n          timeDate = req.body.timeDate;\n          _context44.next = 5;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE phone = ? ', [phone]);\n        case 5:\n          _yield$connection$que155 = _context44.sent;\n          _yield$connection$que156 = _slicedToArray(_yield$connection$que155, 1);\n          user = _yield$connection$que156[0];\n          if (!(user.length == 0)) {\n            _context44.next = 10;\n            break;\n          }\n          return _context44.abrupt(\"return\", res.status(200).json({\n            message: 'Phone Error',\n            status: false\n          }));\n        case 10:\n          userInfo = user[0];\n          _context44.next = 13;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 ', [phone]);\n        case 13:\n          _yield$connection$que157 = _context44.sent;\n          _yield$connection$que158 = _slicedToArray(_yield$connection$que157, 1);\n          list_mem = _yield$connection$que158[0];\n          list_mems = [];\n          _context44.next = 19;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 ', [phone]);\n        case 19:\n          _yield$connection$que159 = _context44.sent;\n          _yield$connection$que160 = _slicedToArray(_yield$connection$que159, 1);\n          list_mem_today = _yield$connection$que160[0];\n          for (i = 0; i < list_mem_today.length; i++) {\n            today = timeDate;\n            time = timerJoin(list_mem_today[i].time);\n            if (time == today) {\n              list_mems.push(list_mem_today[i]);\n            }\n          }\n          list_recharge_news = [];\n          list_withdraw_news = [];\n          _i34 = 0;\n        case 26:\n          if (!(_i34 < list_mem.length)) {\n            _context44.next = 43;\n            break;\n          }\n          _phone6 = list_mem[_i34].phone;\n          _context44.next = 30;\n          return _connectDB[\"default\"].query('SELECT `id`, `status`, `type`,`phone`, `money`, `time` FROM recharge WHERE phone = ? AND status = 1 ', [_phone6]);\n        case 30:\n          _yield$connection$que161 = _context44.sent;\n          _yield$connection$que162 = _slicedToArray(_yield$connection$que161, 1);\n          recharge_today = _yield$connection$que162[0];\n          _context44.next = 35;\n          return _connectDB[\"default\"].query('SELECT `id`, `status`,`phone`, `money`, `time` FROM withdraw WHERE phone = ? AND status = 1 ', [_phone6]);\n        case 35:\n          _yield$connection$que163 = _context44.sent;\n          _yield$connection$que164 = _slicedToArray(_yield$connection$que163, 1);\n          withdraw_today = _yield$connection$que164[0];\n          for (_i35 = 0; _i35 < recharge_today.length; _i35++) {\n            _today9 = timeDate;\n            _time9 = timerJoin(recharge_today[_i35].time);\n            if (_time9 == _today9) {\n              list_recharge_news.push(recharge_today[_i35]);\n            }\n          }\n          for (_i36 = 0; _i36 < withdraw_today.length; _i36++) {\n            _today10 = timeDate;\n            _time10 = timerJoin(withdraw_today[_i36].time);\n            if (_time10 == _today10) {\n              list_withdraw_news.push(withdraw_today[_i36]);\n            }\n          }\n        case 40:\n          _i34++;\n          _context44.next = 26;\n          break;\n        case 43:\n          _context44.next = 45;\n          return _connectDB[\"default\"].query('SELECT * FROM redenvelopes_used WHERE phone = ? ', [phone]);\n        case 45:\n          _yield$connection$que165 = _context44.sent;\n          _yield$connection$que166 = _slicedToArray(_yield$connection$que165, 1);\n          redenvelopes_used = _yield$connection$que166[0];\n          redenvelopes_used_today = [];\n          for (_i37 = 0; _i37 < redenvelopes_used.length; _i37++) {\n            _today11 = timeDate;\n            _time11 = timerJoin(redenvelopes_used[_i37].time);\n            if (_time11 == _today11) {\n              redenvelopes_used_today.push(redenvelopes_used[_i37]);\n            }\n          }\n          _context44.next = 52;\n          return _connectDB[\"default\"].query('SELECT * FROM financial_details WHERE phone = ? ', [phone]);\n        case 52:\n          _yield$connection$que167 = _context44.sent;\n          _yield$connection$que168 = _slicedToArray(_yield$connection$que167, 1);\n          financial_details = _yield$connection$que168[0];\n          financial_details_today = [];\n          for (_i38 = 0; _i38 < financial_details.length; _i38++) {\n            _today12 = timeDate;\n            _time12 = timerJoin(financial_details[_i38].time);\n            if (_time12 == _today12) {\n              financial_details_today.push(financial_details[_i38]);\n            }\n          }\n          return _context44.abrupt(\"return\", res.status(200).json({\n            message: 'Success',\n            status: true,\n            datas: user,\n            list_mems: list_mems,\n            list_recharge_news: list_recharge_news,\n            list_withdraw_news: list_withdraw_news,\n            redenvelopes_used: redenvelopes_used_today,\n            financial_details_today: financial_details_today\n          }));\n        case 58:\n        case \"end\":\n          return _context44.stop();\n      }\n    }, _callee44);\n  }));\n  return function infoCtv2(_x85, _x86) {\n    return _ref45.apply(this, arguments);\n  };\n}();\nvar listRechargeMem = /*#__PURE__*/function () {\n  var _ref46 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee45(req, res) {\n    var auth, phone, _req$body4, pageno, limit, _yield$connection$que169, _yield$connection$que170, user, _yield$connection$que171, _yield$connection$que172, auths, _user$, token, password, otp, level, userInfo, _yield$connection$que173, _yield$connection$que174, recharge, _yield$connection$que175, _yield$connection$que176, total_users;\n    return _regeneratorRuntime().wrap(function _callee45$(_context45) {\n      while (1) switch (_context45.prev = _context45.next) {\n        case 0:\n          auth = req.cookies.auth;\n          phone = req.params.phone;\n          _req$body4 = req.body, pageno = _req$body4.pageno, limit = _req$body4.limit;\n          if (!(!pageno || !limit)) {\n            _context45.next = 5;\n            break;\n          }\n          return _context45.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            status: false\n          }));\n        case 5:\n          if (!(pageno < 0 || limit < 0)) {\n            _context45.next = 7;\n            break;\n          }\n          return _context45.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            status: false\n          }));\n        case 7:\n          if (phone) {\n            _context45.next = 9;\n            break;\n          }\n          return _context45.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 9:\n          _context45.next = 11;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE phone = ? ', [phone]);\n        case 11:\n          _yield$connection$que169 = _context45.sent;\n          _yield$connection$que170 = _slicedToArray(_yield$connection$que169, 1);\n          user = _yield$connection$que170[0];\n          _context45.next = 16;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE token = ? ', [auth]);\n        case 16:\n          _yield$connection$que171 = _context45.sent;\n          _yield$connection$que172 = _slicedToArray(_yield$connection$que171, 1);\n          auths = _yield$connection$que172[0];\n          if (!(user.length == 0 || auths.length == 0)) {\n            _context45.next = 21;\n            break;\n          }\n          return _context45.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 21:\n          _user$ = user[0], token = _user$.token, password = _user$.password, otp = _user$.otp, level = _user$.level, userInfo = _objectWithoutProperties(_user$, _excluded);\n          _context45.next = 24;\n          return _connectDB[\"default\"].query(\"SELECT * FROM recharge WHERE phone = ? ORDER BY id DESC LIMIT \".concat(pageno, \", \").concat(limit, \" \"), [phone]);\n        case 24:\n          _yield$connection$que173 = _context45.sent;\n          _yield$connection$que174 = _slicedToArray(_yield$connection$que173, 1);\n          recharge = _yield$connection$que174[0];\n          _context45.next = 29;\n          return _connectDB[\"default\"].query(\"SELECT * FROM recharge WHERE phone = ?\", [phone]);\n        case 29:\n          _yield$connection$que175 = _context45.sent;\n          _yield$connection$que176 = _slicedToArray(_yield$connection$que175, 1);\n          total_users = _yield$connection$que176[0];\n          return _context45.abrupt(\"return\", res.status(200).json({\n            message: 'Success',\n            status: true,\n            datas: recharge,\n            page_total: Math.ceil(total_users.length / limit)\n          }));\n        case 33:\n        case \"end\":\n          return _context45.stop();\n      }\n    }, _callee45);\n  }));\n  return function listRechargeMem(_x87, _x88) {\n    return _ref46.apply(this, arguments);\n  };\n}();\nvar listWithdrawMem = /*#__PURE__*/function () {\n  var _ref47 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee46(req, res) {\n    var auth, phone, _req$body5, pageno, limit, _yield$connection$que177, _yield$connection$que178, user, _yield$connection$que179, _yield$connection$que180, auths, _user$2, token, password, otp, level, userInfo, _yield$connection$que181, _yield$connection$que182, withdraw, _yield$connection$que183, _yield$connection$que184, total_users;\n    return _regeneratorRuntime().wrap(function _callee46$(_context46) {\n      while (1) switch (_context46.prev = _context46.next) {\n        case 0:\n          auth = req.cookies.auth;\n          phone = req.params.phone;\n          _req$body5 = req.body, pageno = _req$body5.pageno, limit = _req$body5.limit;\n          if (!(!pageno || !limit)) {\n            _context46.next = 5;\n            break;\n          }\n          return _context46.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            status: false\n          }));\n        case 5:\n          if (!(pageno < 0 || limit < 0)) {\n            _context46.next = 7;\n            break;\n          }\n          return _context46.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            status: false\n          }));\n        case 7:\n          if (phone) {\n            _context46.next = 9;\n            break;\n          }\n          return _context46.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 9:\n          _context46.next = 11;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE phone = ? ', [phone]);\n        case 11:\n          _yield$connection$que177 = _context46.sent;\n          _yield$connection$que178 = _slicedToArray(_yield$connection$que177, 1);\n          user = _yield$connection$que178[0];\n          _context46.next = 16;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE token = ? ', [auth]);\n        case 16:\n          _yield$connection$que179 = _context46.sent;\n          _yield$connection$que180 = _slicedToArray(_yield$connection$que179, 1);\n          auths = _yield$connection$que180[0];\n          if (!(user.length == 0 || auths.length == 0)) {\n            _context46.next = 21;\n            break;\n          }\n          return _context46.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 21:\n          _user$2 = user[0], token = _user$2.token, password = _user$2.password, otp = _user$2.otp, level = _user$2.level, userInfo = _objectWithoutProperties(_user$2, _excluded2);\n          _context46.next = 24;\n          return _connectDB[\"default\"].query(\"SELECT * FROM withdraw WHERE phone = ? ORDER BY id DESC LIMIT \".concat(pageno, \", \").concat(limit, \" \"), [phone]);\n        case 24:\n          _yield$connection$que181 = _context46.sent;\n          _yield$connection$que182 = _slicedToArray(_yield$connection$que181, 1);\n          withdraw = _yield$connection$que182[0];\n          _context46.next = 29;\n          return _connectDB[\"default\"].query(\"SELECT * FROM withdraw WHERE phone = ?\", [phone]);\n        case 29:\n          _yield$connection$que183 = _context46.sent;\n          _yield$connection$que184 = _slicedToArray(_yield$connection$que183, 1);\n          total_users = _yield$connection$que184[0];\n          return _context46.abrupt(\"return\", res.status(200).json({\n            message: 'Success',\n            status: true,\n            datas: withdraw,\n            page_total: Math.ceil(total_users.length / limit)\n          }));\n        case 33:\n        case \"end\":\n          return _context46.stop();\n      }\n    }, _callee46);\n  }));\n  return function listWithdrawMem(_x89, _x90) {\n    return _ref47.apply(this, arguments);\n  };\n}();\nvar listRedenvelope = /*#__PURE__*/function () {\n  var _ref48 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee47(req, res) {\n    var auth, phone, _req$body6, pageno, limit, _yield$connection$que185, _yield$connection$que186, user, _yield$connection$que187, _yield$connection$que188, auths, _user$3, token, password, otp, level, userInfo, _yield$connection$que189, _yield$connection$que190, redenvelopes_used, _yield$connection$que191, _yield$connection$que192, total_users;\n    return _regeneratorRuntime().wrap(function _callee47$(_context47) {\n      while (1) switch (_context47.prev = _context47.next) {\n        case 0:\n          auth = req.cookies.auth;\n          phone = req.params.phone;\n          _req$body6 = req.body, pageno = _req$body6.pageno, limit = _req$body6.limit;\n          if (!(!pageno || !limit)) {\n            _context47.next = 5;\n            break;\n          }\n          return _context47.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            status: false\n          }));\n        case 5:\n          if (!(pageno < 0 || limit < 0)) {\n            _context47.next = 7;\n            break;\n          }\n          return _context47.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            status: false\n          }));\n        case 7:\n          if (phone) {\n            _context47.next = 9;\n            break;\n          }\n          return _context47.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 9:\n          _context47.next = 11;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE phone = ? ', [phone]);\n        case 11:\n          _yield$connection$que185 = _context47.sent;\n          _yield$connection$que186 = _slicedToArray(_yield$connection$que185, 1);\n          user = _yield$connection$que186[0];\n          _context47.next = 16;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE token = ? ', [auth]);\n        case 16:\n          _yield$connection$que187 = _context47.sent;\n          _yield$connection$que188 = _slicedToArray(_yield$connection$que187, 1);\n          auths = _yield$connection$que188[0];\n          if (!(user.length == 0 || auths.length == 0)) {\n            _context47.next = 21;\n            break;\n          }\n          return _context47.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 21:\n          _user$3 = user[0], token = _user$3.token, password = _user$3.password, otp = _user$3.otp, level = _user$3.level, userInfo = _objectWithoutProperties(_user$3, _excluded3);\n          _context47.next = 24;\n          return _connectDB[\"default\"].query(\"SELECT * FROM redenvelopes_used WHERE phone_used = ? ORDER BY id DESC LIMIT \".concat(pageno, \", \").concat(limit, \" \"), [phone]);\n        case 24:\n          _yield$connection$que189 = _context47.sent;\n          _yield$connection$que190 = _slicedToArray(_yield$connection$que189, 1);\n          redenvelopes_used = _yield$connection$que190[0];\n          _context47.next = 29;\n          return _connectDB[\"default\"].query(\"SELECT * FROM redenvelopes_used WHERE phone_used = ?\", [phone]);\n        case 29:\n          _yield$connection$que191 = _context47.sent;\n          _yield$connection$que192 = _slicedToArray(_yield$connection$que191, 1);\n          total_users = _yield$connection$que192[0];\n          return _context47.abrupt(\"return\", res.status(200).json({\n            message: 'Success',\n            status: true,\n            datas: redenvelopes_used,\n            page_total: Math.ceil(total_users.length / limit)\n          }));\n        case 33:\n        case \"end\":\n          return _context47.stop();\n      }\n    }, _callee47);\n  }));\n  return function listRedenvelope(_x91, _x92) {\n    return _ref48.apply(this, arguments);\n  };\n}();\n// Level Setting get\n\nvar getLevelInfo = /*#__PURE__*/function () {\n  var _ref49 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee48(req, res) {\n    var _yield$connection$que193, _yield$connection$que194, rows;\n    return _regeneratorRuntime().wrap(function _callee48$(_context48) {\n      while (1) switch (_context48.prev = _context48.next) {\n        case 0:\n          _context48.next = 2;\n          return _connectDB[\"default\"].query('SELECT * FROM `level`');\n        case 2:\n          _yield$connection$que193 = _context48.sent;\n          _yield$connection$que194 = _slicedToArray(_yield$connection$que193, 1);\n          rows = _yield$connection$que194[0];\n          if (rows) {\n            _context48.next = 7;\n            break;\n          }\n          return _context48.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false\n          }));\n        case 7:\n          console.log(\"asdasdasd : \" + rows);\n          return _context48.abrupt(\"return\", res.status(200).json({\n            message: 'Success',\n            status: true,\n            data: {},\n            rows: rows\n          }));\n        case 9:\n        case \"end\":\n          return _context48.stop();\n      }\n    }, _callee48);\n  }));\n  return function getLevelInfo(_x93, _x94) {\n    return _ref49.apply(this, arguments);\n  };\n}();\nvar listBet = /*#__PURE__*/function () {\n  var _ref50 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee49(req, res) {\n    var auth, phone, _req$body7, pageno, limit, _yield$connection$que195, _yield$connection$que196, user, _yield$connection$que197, _yield$connection$que198, auths, _user$4, token, password, otp, level, userInfo, _yield$connection$que199, _yield$connection$que200, listBet, _yield$connection$que201, _yield$connection$que202, total_users;\n    return _regeneratorRuntime().wrap(function _callee49$(_context49) {\n      while (1) switch (_context49.prev = _context49.next) {\n        case 0:\n          auth = req.cookies.auth;\n          phone = req.params.phone;\n          _req$body7 = req.body, pageno = _req$body7.pageno, limit = _req$body7.limit;\n          if (!(!pageno || !limit)) {\n            _context49.next = 5;\n            break;\n          }\n          return _context49.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            status: false\n          }));\n        case 5:\n          if (!(pageno < 0 || limit < 0)) {\n            _context49.next = 7;\n            break;\n          }\n          return _context49.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            status: false\n          }));\n        case 7:\n          if (phone) {\n            _context49.next = 9;\n            break;\n          }\n          return _context49.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 9:\n          _context49.next = 11;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE phone = ? ', [phone]);\n        case 11:\n          _yield$connection$que195 = _context49.sent;\n          _yield$connection$que196 = _slicedToArray(_yield$connection$que195, 1);\n          user = _yield$connection$que196[0];\n          _context49.next = 16;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE token = ? ', [auth]);\n        case 16:\n          _yield$connection$que197 = _context49.sent;\n          _yield$connection$que198 = _slicedToArray(_yield$connection$que197, 1);\n          auths = _yield$connection$que198[0];\n          if (!(user.length == 0 || auths.length == 0)) {\n            _context49.next = 21;\n            break;\n          }\n          return _context49.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 21:\n          _user$4 = user[0], token = _user$4.token, password = _user$4.password, otp = _user$4.otp, level = _user$4.level, userInfo = _objectWithoutProperties(_user$4, _excluded4);\n          _context49.next = 24;\n          return _connectDB[\"default\"].query(\"SELECT * FROM minutes_1 WHERE phone = ? AND status != 0 ORDER BY id DESC LIMIT \".concat(pageno, \", \").concat(limit, \" \"), [phone]);\n        case 24:\n          _yield$connection$que199 = _context49.sent;\n          _yield$connection$que200 = _slicedToArray(_yield$connection$que199, 1);\n          listBet = _yield$connection$que200[0];\n          _context49.next = 29;\n          return _connectDB[\"default\"].query(\"SELECT * FROM minutes_1 WHERE phone = ? AND status != 0\", [phone]);\n        case 29:\n          _yield$connection$que201 = _context49.sent;\n          _yield$connection$que202 = _slicedToArray(_yield$connection$que201, 1);\n          total_users = _yield$connection$que202[0];\n          return _context49.abrupt(\"return\", res.status(200).json({\n            message: 'Success',\n            status: true,\n            datas: listBet,\n            page_total: Math.ceil(total_users.length / limit)\n          }));\n        case 33:\n        case \"end\":\n          return _context49.stop();\n      }\n    }, _callee49);\n  }));\n  return function listBet(_x95, _x96) {\n    return _ref50.apply(this, arguments);\n  };\n}();\nvar listOrderOld = /*#__PURE__*/function () {\n  var _ref51 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee50(req, res) {\n    var gameJoin, checkGame, game, join, _yield$connection$que203, _yield$connection$que204, k5d, _yield$connection$que205, _yield$connection$que206, period, _yield$connection$que207, _yield$connection$que208, waiting, _yield$connection$que209, _yield$connection$que210, settings;\n    return _regeneratorRuntime().wrap(function _callee50$(_context50) {\n      while (1) switch (_context50.prev = _context50.next) {\n        case 0:\n          gameJoin = req.body.gameJoin;\n          checkGame = ['1', '3', '5', '10'].includes(String(gameJoin));\n          if (checkGame) {\n            _context50.next = 4;\n            break;\n          }\n          return _context50.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            status: false\n          }));\n        case 4:\n          game = Number(gameJoin);\n          join = '';\n          if (game == 1) join = 'k5d';\n          if (game == 3) join = 'k5d3';\n          if (game == 5) join = 'k5d5';\n          if (game == 10) join = 'k5d10';\n          _context50.next = 12;\n          return _connectDB[\"default\"].query(\"SELECT * FROM 5d WHERE status != 0 AND game = '\".concat(game, \"' ORDER BY id DESC LIMIT 10 \"));\n        case 12:\n          _yield$connection$que203 = _context50.sent;\n          _yield$connection$que204 = _slicedToArray(_yield$connection$que203, 1);\n          k5d = _yield$connection$que204[0];\n          _context50.next = 17;\n          return _connectDB[\"default\"].query(\"SELECT period FROM 5d WHERE status = 0 AND game = '\".concat(game, \"' ORDER BY id DESC LIMIT 1 \"));\n        case 17:\n          _yield$connection$que205 = _context50.sent;\n          _yield$connection$que206 = _slicedToArray(_yield$connection$que205, 1);\n          period = _yield$connection$que206[0];\n          _context50.next = 22;\n          return _connectDB[\"default\"].query(\"SELECT phone, money, price, amount, bet FROM result_5d WHERE status = 0 AND level = 0 AND game = '\".concat(game, \"' ORDER BY id ASC \"));\n        case 22:\n          _yield$connection$que207 = _context50.sent;\n          _yield$connection$que208 = _slicedToArray(_yield$connection$que207, 1);\n          waiting = _yield$connection$que208[0];\n          _context50.next = 27;\n          return _connectDB[\"default\"].query(\"SELECT \".concat(join, \" FROM admin\"));\n        case 27:\n          _yield$connection$que209 = _context50.sent;\n          _yield$connection$que210 = _slicedToArray(_yield$connection$que209, 1);\n          settings = _yield$connection$que210[0];\n          if (!(k5d.length == 0)) {\n            _context50.next = 32;\n            break;\n          }\n          return _context50.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            status: false\n          }));\n        case 32:\n          if (!(!k5d[0] || !period[0])) {\n            _context50.next = 34;\n            break;\n          }\n          return _context50.abrupt(\"return\", res.status(200).json({\n            message: 'Error!',\n            status: false\n          }));\n        case 34:\n          return _context50.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"Get success\",\n            data: {\n              gameslist: k5d\n            },\n            bet: waiting,\n            settings: settings,\n            join: join,\n            period: period[0].period,\n            status: true\n          }));\n        case 35:\n        case \"end\":\n          return _context50.stop();\n      }\n    }, _callee50);\n  }));\n  return function listOrderOld(_x97, _x98) {\n    return _ref51.apply(this, arguments);\n  };\n}();\nvar listOrderOldK3 = /*#__PURE__*/function () {\n  var _ref52 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee51(req, res) {\n    var gameJoin, checkGame, game, join, _yield$connection$que211, _yield$connection$que212, k5d, _yield$connection$que213, _yield$connection$que214, period, _yield$connection$que215, _yield$connection$que216, waiting, _yield$connection$que217, _yield$connection$que218, settings;\n    return _regeneratorRuntime().wrap(function _callee51$(_context51) {\n      while (1) switch (_context51.prev = _context51.next) {\n        case 0:\n          gameJoin = req.body.gameJoin;\n          checkGame = ['1', '3', '5', '10'].includes(String(gameJoin));\n          if (checkGame) {\n            _context51.next = 4;\n            break;\n          }\n          return _context51.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            status: false\n          }));\n        case 4:\n          game = Number(gameJoin);\n          join = '';\n          if (game == 1) join = 'k3d';\n          if (game == 3) join = 'k3d3';\n          if (game == 5) join = 'k3d5';\n          if (game == 10) join = 'k3d10';\n          _context51.next = 12;\n          return _connectDB[\"default\"].query(\"SELECT * FROM k3 WHERE status != 0 AND game = '\".concat(game, \"' ORDER BY id DESC LIMIT 10 \"));\n        case 12:\n          _yield$connection$que211 = _context51.sent;\n          _yield$connection$que212 = _slicedToArray(_yield$connection$que211, 1);\n          k5d = _yield$connection$que212[0];\n          _context51.next = 17;\n          return _connectDB[\"default\"].query(\"SELECT period FROM k3 WHERE status = 0 AND game = '\".concat(game, \"' ORDER BY id DESC LIMIT 1 \"));\n        case 17:\n          _yield$connection$que213 = _context51.sent;\n          _yield$connection$que214 = _slicedToArray(_yield$connection$que213, 1);\n          period = _yield$connection$que214[0];\n          _context51.next = 22;\n          return _connectDB[\"default\"].query(\"SELECT phone, money, price, typeGame, amount, bet FROM result_k3 WHERE status = 0 AND level = 0 AND game = '\".concat(game, \"' ORDER BY id ASC \"));\n        case 22:\n          _yield$connection$que215 = _context51.sent;\n          _yield$connection$que216 = _slicedToArray(_yield$connection$que215, 1);\n          waiting = _yield$connection$que216[0];\n          _context51.next = 27;\n          return _connectDB[\"default\"].query(\"SELECT \".concat(join, \" FROM admin\"));\n        case 27:\n          _yield$connection$que217 = _context51.sent;\n          _yield$connection$que218 = _slicedToArray(_yield$connection$que217, 1);\n          settings = _yield$connection$que218[0];\n          if (!(k5d.length == 0)) {\n            _context51.next = 32;\n            break;\n          }\n          return _context51.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            status: false\n          }));\n        case 32:\n          if (!(!k5d[0] || !period[0])) {\n            _context51.next = 34;\n            break;\n          }\n          return _context51.abrupt(\"return\", res.status(200).json({\n            message: 'Error!',\n            status: false\n          }));\n        case 34:\n          return _context51.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"Get Success\",\n            data: {\n              gameslist: k5d\n            },\n            bet: waiting,\n            settings: settings,\n            join: join,\n            period: period[0].period,\n            status: true\n          }));\n        case 35:\n        case \"end\":\n          return _context51.stop();\n      }\n    }, _callee51);\n  }));\n  return function listOrderOldK3(_x99, _x100) {\n    return _ref52.apply(this, arguments);\n  };\n}();\nvar editResult = /*#__PURE__*/function () {\n  var _ref53 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee52(req, res) {\n    var _req$body8, game, list, join, sql;\n    return _regeneratorRuntime().wrap(function _callee52$(_context52) {\n      while (1) switch (_context52.prev = _context52.next) {\n        case 0:\n          _req$body8 = req.body, game = _req$body8.game, list = _req$body8.list;\n          if (!(!list || !game)) {\n            _context52.next = 3;\n            break;\n          }\n          return _context52.abrupt(\"return\", res.status(200).json({\n            message: 'ERROR!!!',\n            status: false\n          }));\n        case 3:\n          join = '';\n          if (game == 1) join = 'k5d';\n          if (game == 3) join = 'k5d3';\n          if (game == 5) join = 'k5d5';\n          if (game == 10) join = 'k5d10';\n          sql = \"UPDATE admin SET \".concat(join, \" = ?\");\n          _context52.next = 11;\n          return _connectDB[\"default\"].execute(sql, [list]);\n        case 11:\n          return _context52.abrupt(\"return\", res.status(200).json({\n            message: 'Editing is successful',\n            //Register Sucess\n            status: true\n          }));\n        case 12:\n        case \"end\":\n          return _context52.stop();\n      }\n    }, _callee52);\n  }));\n  return function editResult(_x101, _x102) {\n    return _ref53.apply(this, arguments);\n  };\n}();\nvar editResult2 = /*#__PURE__*/function () {\n  var _ref54 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee53(req, res) {\n    var _req$body9, game, list, join, sql;\n    return _regeneratorRuntime().wrap(function _callee53$(_context53) {\n      while (1) switch (_context53.prev = _context53.next) {\n        case 0:\n          _req$body9 = req.body, game = _req$body9.game, list = _req$body9.list;\n          if (!(!list || !game)) {\n            _context53.next = 3;\n            break;\n          }\n          return _context53.abrupt(\"return\", res.status(200).json({\n            message: 'ERROR!!!',\n            status: false\n          }));\n        case 3:\n          join = '';\n          if (game == 1) join = 'k3d';\n          if (game == 3) join = 'k3d3';\n          if (game == 5) join = 'k3d5';\n          if (game == 10) join = 'k3d10';\n          sql = \"UPDATE admin SET \".concat(join, \" = ?\");\n          _context53.next = 11;\n          return _connectDB[\"default\"].execute(sql, [list]);\n        case 11:\n          return _context53.abrupt(\"return\", res.status(200).json({\n            message: 'Editing is successful',\n            //Register Sucess\n            status: true\n          }));\n        case 12:\n        case \"end\":\n          return _context53.stop();\n      }\n    }, _callee53);\n  }));\n  return function editResult2(_x103, _x104) {\n    return _ref54.apply(this, arguments);\n  };\n}();\nvar CreatedSalary = /*#__PURE__*/function () {\n  var _ref55 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee54(req, res) {\n    var phone, amount, type, now, formattedTime, checkUserQuery, _yield$connection$exe9, _yield$connection$exe10, existingUser, updateUserQuery, insertSalaryQuery;\n    return _regeneratorRuntime().wrap(function _callee54$(_context54) {\n      while (1) switch (_context54.prev = _context54.next) {\n        case 0:\n          _context54.prev = 0;\n          phone = req.body.phone;\n          amount = req.body.amount;\n          type = req.body.type;\n          now = new Date();\n          formattedTime = now.toLocaleString('en-US', {\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit',\n            hour: '2-digit',\n            minute: '2-digit',\n            second: '2-digit',\n            hour12: true\n          }); // Check if the phone number is a 10-digit number\n          if (/^\\d{10}$/.test(phone)) {\n            _context54.next = 8;\n            break;\n          }\n          return _context54.abrupt(\"return\", res.status(400).json({\n            message: 'ERROR!!! Invalid phone number. Please provide a 10-digit phone number.',\n            status: false\n          }));\n        case 8:\n          // Check if user with the given phone number exists\n          checkUserQuery = 'SELECT * FROM `users` WHERE phone = ?';\n          _context54.next = 11;\n          return _connectDB[\"default\"].execute(checkUserQuery, [phone]);\n        case 11:\n          _yield$connection$exe9 = _context54.sent;\n          _yield$connection$exe10 = _slicedToArray(_yield$connection$exe9, 1);\n          existingUser = _yield$connection$exe10[0];\n          if (!(existingUser.length === 0)) {\n            _context54.next = 16;\n            break;\n          }\n          return _context54.abrupt(\"return\", res.status(400).json({\n            message: 'ERROR!!! User with the provided phone number does not exist.',\n            status: false\n          }));\n        case 16:\n          // If user exists, update the 'users' table\n          updateUserQuery = 'UPDATE `users` SET `money` = `money` + ? WHERE phone = ?';\n          _context54.next = 19;\n          return _connectDB[\"default\"].execute(updateUserQuery, [amount, phone]);\n        case 19:\n          // Insert record into 'salary' table\n          insertSalaryQuery = 'INSERT INTO salary (phone, amount, type, time) VALUES (?, ?, ?, ?)';\n          _context54.next = 22;\n          return _connectDB[\"default\"].execute(insertSalaryQuery, [phone, amount, type, formattedTime]);\n        case 22:\n          res.status(200).json({\n            message: 'Salary record created successfully'\n          });\n          _context54.next = 29;\n          break;\n        case 25:\n          _context54.prev = 25;\n          _context54.t0 = _context54[\"catch\"](0);\n          console.error(_context54.t0);\n          res.status(500).json({\n            error: 'Internal server error'\n          });\n        case 29:\n        case \"end\":\n          return _context54.stop();\n      }\n    }, _callee54, null, [[0, 25]]);\n  }));\n  return function CreatedSalary(_x105, _x106) {\n    return _ref55.apply(this, arguments);\n  };\n}();\nvar getSalary = /*#__PURE__*/function () {\n  var _ref56 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee55(req, res) {\n    var _yield$connection$que219, _yield$connection$que220, rows;\n    return _regeneratorRuntime().wrap(function _callee55$(_context55) {\n      while (1) switch (_context55.prev = _context55.next) {\n        case 0:\n          _context55.next = 2;\n          return _connectDB[\"default\"].query(\"SELECT * FROM salary ORDER BY time DESC\");\n        case 2:\n          _yield$connection$que219 = _context55.sent;\n          _yield$connection$que220 = _slicedToArray(_yield$connection$que219, 1);\n          rows = _yield$connection$que220[0];\n          if (rows) {\n            _context55.next = 7;\n            break;\n          }\n          return _context55.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false\n          }));\n        case 7:\n          console.log(\"asdasdasd : \" + rows);\n          return _context55.abrupt(\"return\", res.status(200).json({\n            message: 'Success',\n            status: true,\n            data: {},\n            rows: rows\n          }));\n        case 9:\n        case \"end\":\n          return _context55.stop();\n      }\n    }, _callee55);\n  }));\n  return function getSalary(_x107, _x108) {\n    return _ref56.apply(this, arguments);\n  };\n}();\nmodule.exports = {\n  adminPage: adminPage,\n  adminPage3: adminPage3,\n  adminPage5: adminPage5,\n  adminPage10: adminPage10,\n  totalJoin: totalJoin,\n  middlewareAdminController: middlewareAdminController,\n  changeAdmin: changeAdmin,\n  membersPage: membersPage,\n  listMember: listMember,\n  infoMember: infoMember,\n  userInfo: userInfo,\n  statistical: statistical,\n  statistical2: statistical2,\n  rechargePage: rechargePage,\n  recharge: recharge,\n  rechargeDuyet: rechargeDuyet,\n  rechargeRecord: rechargeRecord,\n  withdrawRecord: withdrawRecord,\n  withdraw: withdraw,\n  levelSetting: levelSetting,\n  handlWithdraw: handlWithdraw,\n  settings: settings,\n  editResult2: editResult2,\n  settingBank: settingBank,\n  settingGet: settingGet,\n  settingCskh: settingCskh,\n  settingbuff: settingbuff,\n  register: register,\n  ctvPage: ctvPage,\n  listCTV: listCTV,\n  profileUser: profileUser,\n  ctvProfilePage: ctvProfilePage,\n  infoCtv: infoCtv,\n  infoCtv2: infoCtv2,\n  giftPage: giftPage,\n  createBonus: createBonus,\n  listRedenvelops: listRedenvelops,\n  banned: banned,\n  listRechargeMem: listRechargeMem,\n  listWithdrawMem: listWithdrawMem,\n  getLevelInfo: getLevelInfo,\n  listRedenvelope: listRedenvelope,\n  listBet: listBet,\n  adminPage5d: adminPage5d,\n  listOrderOld: listOrderOld,\n  listOrderOldK3: listOrderOldK3,\n  editResult: editResult,\n  adminPageK3: adminPageK3,\n  updateLevel: updateLevel,\n  CreatedSalaryRecord: CreatedSalaryRecord,\n  CreatedSalary: CreatedSalary,\n  getSalary: getSalary\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_connectDB","_interopRequireDefault","require","_jsonwebtoken","_md","_excluded","_excluded2","_excluded3","_excluded4","obj","__esModule","_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","key","i","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","sourceKeys","keys","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","Array","from","test","len","arr2","r","l","t","Symbol","iterator","e","u","a","f","next","done","push","value","isArray","_regeneratorRuntime","hasOwnProperty","defineProperty","c","asyncIterator","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","async","Promise","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","config","timeNow","Date","now","adminPage","_ref","_callee","req","res","_callee$","_context","render","_x","_x2","adminPage3","_ref2","_callee2","_callee2$","_context2","_x3","_x4","adminPage5","_ref3","_callee3","_callee3$","_context3","_x5","_x6","adminPage10","_ref4","_callee4","_callee4$","_context4","_x7","_x8","adminPage5d","_ref5","_callee5","_callee5$","_context5","_x9","_x10","adminPageK3","_ref6","_callee6","_callee6$","_context6","_x11","_x12","ctvProfilePage","_ref7","_callee7","phone","_callee7$","_context7","params","_x13","_x14","giftPage","_ref8","_callee8","_callee8$","_context8","_x15","_x16","membersPage","_ref9","_callee9","_callee9$","_context9","_x17","_x18","ctvPage","_ref10","_callee10","_callee10$","_context10","_x19","_x20","infoMember","_ref11","_callee11","_callee11$","_context11","id","_x21","_x22","statistical","_ref12","_callee12","_callee12$","_context12","_x23","_x24","rechargePage","_ref13","_callee13","_callee13$","_context13","_x25","_x26","rechargeRecord","_ref14","_callee14","_callee14$","_context14","_x27","_x28","withdraw","_ref15","_callee15","_callee15$","_context15","_x29","_x30","levelSetting","_ref16","_callee16","_callee16$","_context16","_x31","_x32","CreatedSalaryRecord","_ref17","_callee17","_callee17$","_context17","_x33","_x34","withdrawRecord","_ref18","_callee18","_callee18$","_context18","_x35","_x36","settings","_ref19","_callee19","_callee19$","_context19","_x37","_x38","middlewareAdminController","_ref20","_callee20","auth","_yield$connection$exe","_yield$connection$exe2","rows","_callee20$","_context20","cookies","redirect","connection","execute","token","status","level","t0","_x39","_x40","_x41","totalJoin","_ref21","_callee21","typeid","game","_yield$connection$que","_yield$connection$que2","_yield$connection$que3","_yield$connection$que4","wingoall","_yield$connection$exe3","_yield$connection$exe4","winGo1","_yield$connection$exe5","_yield$connection$exe6","winGo10","_yield$connection$exe7","_yield$connection$exe8","setting","_callee21$","_context21","body","json","message","timeStamp","query","concat","datas","lotterys","list_orders","_x42","_x43","listMember","_ref22","_callee22","_req$body","pageno","limit","_yield$connection$que5","_yield$connection$que6","users","_yield$connection$que7","_yield$connection$que8","total_users","_callee22$","_context22","code","msg","data","gameslist","page_total","Math","ceil","_x44","_x45","listCTV","_ref23","_callee23","_req$body2","pageto","_yield$connection$que9","_yield$connection$que10","wingo","_callee23$","_context23","_x46","_x47","formateT2","result","timerJoin2","addHours","date","Number","setHours","getHours","years","formateT","getFullYear","months","getMonth","days","getDate","hours","ampm","minutes","getMinutes","seconds","getSeconds","statistical2","_ref24","_callee24","_yield$connection$que11","_yield$connection$que12","_yield$connection$que13","_yield$connection$que14","wingo2","_yield$connection$que15","_yield$connection$que16","_yield$connection$que17","_yield$connection$que18","users2","_yield$connection$que19","_yield$connection$que20","recharge","_yield$connection$que21","_yield$connection$que22","_yield$connection$que23","_yield$connection$que24","recharge_today","_yield$connection$que25","_yield$connection$que26","withdraw_today","win","loss","usersOnline","usersOffline","recharges","withdraws","_callee24$","_context24","total","rechargeToday","withdrawToday","_x48","_x49","changeAdmin","_ref25","_callee25","bs","_callee25$","_context25","_x50","_x51","timerJoin","userInfo","_ref26","_callee26","_yield$connection$que27","_yield$connection$que28","user","_yield$connection$que29","_yield$connection$que30","f1s","f1_today","f1_time","check","f_all_today","_i","f1_code","_f1_time","check_f1","_yield$connection$que31","_yield$connection$que32","f2s","_i2","f2_code","f2_time","check_f2","_yield$connection$que33","_yield$connection$que34","f3s","_i3","f3_code","f3_time","check_f3","_yield$connection$que35","_yield$connection$que36","f4s","_i4","f4_code","f4_time","check_f4","f2","_i5","_f1_code","_yield$connection$que37","_yield$connection$que38","_f2s","f3","_i6","_f1_code2","_yield$connection$que39","_yield$connection$que40","_f2s2","_i7","_f2_code","_yield$connection$que41","_yield$connection$que42","_f3s","f4","_i8","_f1_code3","_yield$connection$que43","_yield$connection$que44","_f2s3","_i9","_f2_code2","_yield$connection$que45","_yield$connection$que46","_f3s2","_i10","_f3_code","_yield$connection$que47","_yield$connection$que48","_f4s","_yield$connection$que49","_yield$connection$que50","_yield$connection$que51","_yield$connection$que52","_yield$connection$que53","_yield$connection$que54","bank_user","_yield$connection$que55","_yield$connection$que56","telegram_ctv","_yield$connection$que57","_yield$connection$que58","ng_moi","_callee26$","_context26","time","ctv","invite","total_r","total_w","f1","telegram","daily","_x52","_x53","_ref27","_callee27","_yield$connection$que59","_yield$connection$que60","_yield$connection$que61","_yield$connection$que62","recharge2","_yield$connection$que63","_yield$connection$que64","_yield$connection$que65","_yield$connection$que66","withdraw2","_callee27$","_context27","datas2","datas3","datas4","_x54","_x55","settingGet","_ref28","_callee28","_bank_recharge_momo_d","_bank_recharge_momo_d2","_bank_recharge_momo_d3","_bank_recharge_momo_d4","_yield$connection$que67","_yield$connection$que68","bank_recharge","_yield$connection$que69","_yield$connection$que70","bank_recharge_momo","_yield$connection$que71","_yield$connection$que72","_settings","bank_recharge_momo_data","_callee28$","_context28","momo","bank_name","name_bank","username","name_user","upi_id","stk","usdt_wallet_address","qr_code_image","console","log","_x56","_x57","rechargeDuyet","_ref29","_callee29","_info$","_yield$connection$que73","_yield$connection$que74","_callee29$","_context29","getUserDataByPhone","addUserAccountBalance","money","_x58","_x59","_ref30","_callee30","_yield$connection$que75","_yield$connection$que76","_callee30$","_context30","_x60","_ref32","_callee31","_ref31","user_money","inviter_money","_yield$connection$que77","_yield$connection$que78","inviter","_callee31$","_context31","_x61","updateLevel","_ref33","_callee32","_callee32$","_context32","_x62","_x63","handlWithdraw","_ref34","_callee33","_yield$connection$que79","_yield$connection$que80","_yield$connection$que81","_yield$connection$que82","_info","_callee33$","_context33","_x64","_x65","settingBank","_ref35","_callee34","qr","typer","_yield$connection$que83","_yield$connection$que84","deleteRechargeQueries","bankName","upiId","usdtWalletAddress","_callee34$","_context34","map","deleteBankRechargeById","all","_x66","_x67","_ref36","_callee35","_yield$connection$que85","_yield$connection$que86","_callee35$","_context35","_x68","settingCskh","_ref37","_callee36","cskh","myapp_web","_callee36$","_context36","_x69","_x70","banned","_ref38","_callee37","_callee37$","_context37","_x71","_x72","createBonus","_ref39","_callee38","randomString","_yield$connection$que87","_yield$connection$que88","select","_select","_select2","_yield$connection$que89","_yield$connection$que90","_user","_select3","_phone","_yield$connection$que91","_yield$connection$que92","_user2","id_redenvelops","sql","_callee38$","_context38","_timerJoin","characters","charactersLength","floor","random","getTime","_x73","_x74","listRedenvelops","_ref40","_callee39","_yield$connection$que93","_yield$connection$que94","redenvelopes","_callee39$","_context39","_x75","_x76","settingbuff","_ref41","_callee40","id_user","buff_acc","money_value","_yield$connection$que95","_yield$connection$que96","user_id","_callee40$","_context40","_x77","_x78","randomNumber","min","max","String","ipAddress","ip","headers","split","remoteAddress","timeCreate","register","_ref42","_callee41","_req$body3","password","invitecode","_yield$connection$que97","_yield$connection$que98","check_u","_callee41$","_context41","md5","_x79","_x80","profileUser","_ref43","_callee42","_yield$connection$que99","_yield$connection$que100","_yield$connection$que101","_yield$connection$que102","_yield$connection$que103","_yield$connection$que104","_callee42$","_context42","_x81","_x82","infoCtv","_ref44","_callee43","_yield$connection$que105","_yield$connection$que106","_yield$connection$que107","_yield$connection$que108","_i11","_f1_time2","_yield$connection$que109","_yield$connection$que110","_i12","_yield$connection$que111","_yield$connection$que112","_i13","_yield$connection$que113","_yield$connection$que114","_i14","_i15","_f1_code4","_yield$connection$que115","_yield$connection$que116","_f2s4","_i16","_f1_code5","_yield$connection$que117","_yield$connection$que118","_f2s5","_i17","_f2_code3","_yield$connection$que119","_yield$connection$que120","_f3s3","_i18","_f1_code6","_yield$connection$que121","_yield$connection$que122","_f2s6","_i19","_f2_code4","_yield$connection$que123","_yield$connection$que124","_f3s4","_i20","_f3_code2","_yield$connection$que125","_yield$connection$que126","_f4s2","_yield$connection$que127","_yield$connection$que128","list_mem","_yield$connection$que129","_yield$connection$que130","list_mem_baned","total_recharge","total_withdraw","_i21","_phone2","_yield$connection$que131","_yield$connection$que132","_recharge","_yield$connection$que133","_yield$connection$que134","_withdraw","total_recharge_today","total_withdraw_today","_i22","_phone3","_yield$connection$que135","_yield$connection$que136","_yield$connection$que137","_yield$connection$que138","_i23","today","_i24","_today","_time","_i25","_phone4","_yield$connection$que139","_yield$connection$que140","wins","_yield$connection$que141","_yield$connection$que142","losses","_i26","_today2","_time2","_i27","_today3","_time3","list_mems","_yield$connection$que143","_yield$connection$que144","list_mem_today","_i28","_today4","_time4","_yield$connection$que145","_yield$connection$que146","point_list","moneyCTV","list_recharge_news","list_withdraw_news","_i29","_phone5","_yield$connection$que147","_yield$connection$que148","_recharge_today","_yield$connection$que149","_yield$connection$que150","_withdraw_today","_i30","_today5","_time5","_i31","_today6","_time6","_yield$connection$que151","_yield$connection$que152","redenvelopes_used","redenvelopes_used_today","_i32","_today7","_time7","_yield$connection$que153","_yield$connection$que154","financial_details","financial_details_today","_i33","_today8","_time8","_callee43$","_context43","_x83","_x84","infoCtv2","_ref45","_callee44","timeDate","_yield$connection$que155","_yield$connection$que156","_yield$connection$que157","_yield$connection$que158","_yield$connection$que159","_yield$connection$que160","_i34","_phone6","_yield$connection$que161","_yield$connection$que162","_yield$connection$que163","_yield$connection$que164","_i35","_today9","_time9","_i36","_today10","_time10","_yield$connection$que165","_yield$connection$que166","_i37","_today11","_time11","_yield$connection$que167","_yield$connection$que168","_i38","_today12","_time12","_callee44$","_context44","_timerJoin2","_x85","_x86","listRechargeMem","_ref46","_callee45","_req$body4","_yield$connection$que169","_yield$connection$que170","_yield$connection$que171","_yield$connection$que172","auths","_user$","otp","_yield$connection$que173","_yield$connection$que174","_yield$connection$que175","_yield$connection$que176","_callee45$","_context45","_x87","_x88","listWithdrawMem","_ref47","_callee46","_req$body5","_yield$connection$que177","_yield$connection$que178","_yield$connection$que179","_yield$connection$que180","_user$2","_yield$connection$que181","_yield$connection$que182","_yield$connection$que183","_yield$connection$que184","_callee46$","_context46","_x89","_x90","listRedenvelope","_ref48","_callee47","_req$body6","_yield$connection$que185","_yield$connection$que186","_yield$connection$que187","_yield$connection$que188","_user$3","_yield$connection$que189","_yield$connection$que190","_yield$connection$que191","_yield$connection$que192","_callee47$","_context47","_x91","_x92","getLevelInfo","_ref49","_callee48","_yield$connection$que193","_yield$connection$que194","_callee48$","_context48","_x93","_x94","listBet","_ref50","_callee49","_req$body7","_yield$connection$que195","_yield$connection$que196","_yield$connection$que197","_yield$connection$que198","_user$4","_yield$connection$que199","_yield$connection$que200","_yield$connection$que201","_yield$connection$que202","_callee49$","_context49","_x95","_x96","listOrderOld","_ref51","_callee50","gameJoin","checkGame","join","_yield$connection$que203","_yield$connection$que204","k5d","_yield$connection$que205","_yield$connection$que206","period","_yield$connection$que207","_yield$connection$que208","waiting","_yield$connection$que209","_yield$connection$que210","_callee50$","_context50","includes","bet","_x97","_x98","listOrderOldK3","_ref52","_callee51","_yield$connection$que211","_yield$connection$que212","_yield$connection$que213","_yield$connection$que214","_yield$connection$que215","_yield$connection$que216","_yield$connection$que217","_yield$connection$que218","_callee51$","_context51","_x99","_x100","editResult","_ref53","_callee52","_req$body8","list","_callee52$","_context52","_x101","_x102","editResult2","_ref54","_callee53","_req$body9","_callee53$","_context53","_x103","_x104","CreatedSalary","_ref55","_callee54","amount","formattedTime","checkUserQuery","_yield$connection$exe9","_yield$connection$exe10","existingUser","updateUserQuery","insertSalaryQuery","_callee54$","_context54","toLocaleString","year","month","day","hour","minute","second","hour12","_x105","_x106","getSalary","_ref56","_callee55","_yield$connection$que219","_yield$connection$que220","_callee55$","_context55","_x107","_x108","module","exports"],"sourceRoot":"/www/wwwroot/21india/src/controllers/","sources":["adminController.js"],"sourcesContent":["import connection from \"../config/connectDB\";\nimport jwt from 'jsonwebtoken'\nimport md5 from \"md5\";\nrequire('dotenv').config();\n\nlet timeNow = Date.now();\n\nconst adminPage = async (req, res) => {\n    return res.render(\"manage/index.ejs\");\n}\n\nconst adminPage3 = async (req, res) => {\n    return res.render(\"manage/a-index-bet/index3.ejs\");\n}\n\nconst adminPage5 = async (req, res) => {\n    return res.render(\"manage/a-index-bet/index5.ejs\");\n}\n\nconst adminPage10 = async (req, res) => {\n    return res.render(\"manage/a-index-bet/index10.ejs\");\n}\n\nconst adminPage5d = async (req, res) => {\n    return res.render(\"manage/5d.ejs\");\n}\n\nconst adminPageK3 = async (req, res) => {\n    return res.render(\"manage/k3.ejs\");\n}\n\nconst ctvProfilePage = async (req, res) => {\n    var phone = req.params.phone;\n    return res.render(\"manage/profileCTV.ejs\", { phone });\n}\n\nconst giftPage = async (req, res) => {\n    return res.render(\"manage/giftPage.ejs\");\n}\n\nconst membersPage = async (req, res) => {\n    return res.render(\"manage/members.ejs\");\n}\n\nconst ctvPage = async (req, res) => {\n    return res.render(\"manage/ctv.ejs\");\n}\n\nconst infoMember = async (req, res) => {\n    let phone = req.params.id;\n    return res.render(\"manage/profileMember.ejs\", { phone });\n}\n\nconst statistical = async (req, res) => {\n    return res.render(\"manage/statistical.ejs\");\n}\n\nconst rechargePage = async (req, res) => {\n    return res.render(\"manage/recharge.ejs\");\n}\n\nconst rechargeRecord = async (req, res) => {\n    return res.render(\"manage/rechargeRecord.ejs\");\n}\n\nconst withdraw = async (req, res) => {\n    return res.render(\"manage/withdraw.ejs\");\n}\n\nconst levelSetting = async (req, res) => {\n    return res.render(\"manage/levelSetting.ejs\");\n}\n\nconst CreatedSalaryRecord = async (req, res) => {\n    return res.render(\"manage/CreatedSalaryRecord.ejs\");\n}\n\nconst withdrawRecord = async (req, res) => {\n    return res.render(\"manage/withdrawRecord.ejs\");\n}\nconst settings = async (req, res) => {\n    return res.render(\"manage/settings.ejs\");\n}\n\n\n// xác nhận admin\nconst middlewareAdminController = async (req, res, next) => {\n    // xác nhận token\n    const auth = req.cookies.auth;\n    if (!auth) {\n        return res.redirect(\"/login\");\n    }\n    const [rows] = await connection.execute('SELECT `token`,`level`, `status` FROM `users` WHERE `token` = ? AND veri = 1', [auth]);\n    if (!rows) {\n        return res.redirect(\"/login\");\n    }\n    try {\n        if (auth == rows[0].token && rows[0].status == 1) {\n            if (rows[0].level == 1) {\n                next();\n            } else {\n                return res.redirect(\"/home\");\n            }\n        } else {\n            return res.redirect(\"/login\");\n        }\n    } catch (error) {\n        return res.redirect(\"/login\");\n    }\n}\n\nconst totalJoin = async (req, res) => {\n    let auth = req.cookies.auth;\n    let typeid = req.body.typeid;\n    if (!typeid) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n    let game = '';\n    if (typeid == '1') game = 'wingo';\n    if (typeid == '2') game = 'wingo3';\n    if (typeid == '3') game = 'wingo5';\n    if (typeid == '4') game = 'wingo10';\n\n    const [rows] = await connection.query('SELECT * FROM users WHERE `token` = ? ', [auth]);\n\n    if (rows.length > 0) {\n        const [wingoall] = await connection.query(`SELECT * FROM minutes_1 WHERE game = \"${game}\" AND status = 0 AND level = 0 ORDER BY id ASC `, [auth]);\n        const [winGo1] = await connection.execute(`SELECT * FROM wingo WHERE status = 0 AND game = '${game}' ORDER BY id DESC LIMIT 1 `, []);\n        const [winGo10] = await connection.execute(`SELECT * FROM wingo WHERE status != 0 AND game = '${game}' ORDER BY id DESC LIMIT 10 `, []);\n        const [setting] = await connection.execute(`SELECT * FROM admin `, []);\n\n        return res.status(200).json({\n            message: 'Success',\n            status: true,\n            datas: wingoall,\n            lotterys: winGo1,\n            list_orders: winGo10,\n            setting: setting,\n            timeStamp: timeNow,\n        });\n    } else {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n}\n\nconst listMember = async (req, res) => {\n    let { pageno, limit } = req.body;\n\n    if (!pageno || !limit) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n\n    if (pageno < 0 || limit < 0) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n    const [users] = await connection.query(`SELECT * FROM users WHERE veri = 1 AND level != 2 ORDER BY id DESC LIMIT ${pageno}, ${limit} `);\n    const [total_users] = await connection.query(`SELECT * FROM users WHERE veri = 1 AND level != 2`);\n    return res.status(200).json({\n        message: 'Success',\n        status: true,\n        datas: users,\n        page_total: Math.ceil(total_users.length / limit)\n    });\n}\n\nconst listCTV = async (req, res) => {\n    let { pageno, pageto } = req.body;\n\n    if (!pageno || !pageto) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n\n    if (pageno < 0 || pageto < 0) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n    const [wingo] = await connection.query(`SELECT * FROM users WHERE veri = 1 AND level = 2 ORDER BY id DESC LIMIT ${pageno}, ${pageto} `);\n    return res.status(200).json({\n        message: 'Success',\n        status: true,\n        datas: wingo,\n    });\n}\n\nfunction formateT2(params) {\n    let result = (params < 10) ? \"0\" + params : params;\n    return result;\n}\n\nfunction timerJoin2(params = '', addHours = 0) {\n    let date = '';\n    if (params) {\n        date = new Date(Number(params));\n    } else {\n        date = new Date();\n    }\n\n    date.setHours(date.getHours() + addHours);\n\n    let years = formateT(date.getFullYear());\n    let months = formateT(date.getMonth() + 1);\n    let days = formateT(date.getDate());\n\n    let hours = date.getHours() % 12;\n    hours = hours === 0 ? 12 : hours;\n    let ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n\n    let minutes = formateT(date.getMinutes());\n    let seconds = formateT(date.getSeconds());\n\n    return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;\n}\n\nconst statistical2 = async (req, res) => {\n    const [wingo] = await connection.query(`SELECT SUM(money) as total FROM minutes_1 WHERE status = 1 `);\n    const [wingo2] = await connection.query(`SELECT SUM(money) as total FROM minutes_1 WHERE status = 2 `);\n    const [users] = await connection.query(`SELECT COUNT(id) as total FROM users WHERE status = 1 `);\n    const [users2] = await connection.query(`SELECT COUNT(id) as total FROM users WHERE status = 0 `);\n    const [recharge] = await connection.query(`SELECT SUM(money) as total FROM recharge WHERE status = 1 `);\n    const [withdraw] = await connection.query(`SELECT SUM(money) as total FROM withdraw WHERE status = 1 `);\n\n    const [recharge_today] = await connection.query(`SELECT SUM(money) as total FROM recharge WHERE status = 1 AND today = ?`, [timerJoin2()]);\n    const [withdraw_today] = await connection.query(`SELECT SUM(money) as total FROM withdraw WHERE status = 1 AND today = ?`, [timerJoin2()]);\n\n    let win = wingo[0].total;\n    let loss = wingo2[0].total;\n    let usersOnline = users[0].total;\n    let usersOffline = users2[0].total;\n    let recharges = recharge[0].total;\n    let withdraws = withdraw[0].total;\n    return res.status(200).json({\n        message: 'Success',\n        status: true,\n        win: win,\n        loss: loss,\n        usersOnline: usersOnline,\n        usersOffline: usersOffline,\n        recharges: recharges,\n        withdraws: withdraws,\n        rechargeToday: recharge_today[0].total,\n        withdrawToday: withdraw_today[0].total,\n    });\n}\n\nconst changeAdmin = async (req, res) => {\n    let auth = req.cookies.auth;\n    let value = req.body.value;\n    let type = req.body.type;\n    let typeid = req.body.typeid;\n\n    if (!value || !type || !typeid) return res.status(200).json({\n        message: 'Failed',\n        status: false,\n        timeStamp: timeNow,\n    });;\n    let game = '';\n    let bs = '';\n    if (typeid == '1') {\n        game = 'wingo1';\n        bs = 'bs1';\n    }\n    if (typeid == '2') {\n        game = 'wingo3';\n        bs = 'bs3';\n    }\n    if (typeid == '3') {\n        game = 'wingo5';\n        bs = 'bs5';\n    }\n    if (typeid == '4') {\n        game = 'wingo10';\n        bs = 'bs10';\n    }\n    switch (type) {\n        case 'change-wingo1':\n            await connection.query(`UPDATE admin SET ${game} = ? `, [value]);\n            return res.status(200).json({\n                message: 'Editing results successfully',\n                status: true,\n                timeStamp: timeNow,\n            });\n            break;\n        case 'change-win_rate':\n            await connection.query(`UPDATE admin SET ${bs} = ? `, [value]);\n            return res.status(200).json({\n                message: 'Editing win rate successfully',\n                status: true,\n                timeStamp: timeNow,\n            });\n            break;\n\n        default:\n            return res.status(200).json({\n                message: 'Failed',\n                status: false,\n                timeStamp: timeNow,\n            });\n            break;\n    }\n\n}\n\nfunction formateT(params) {\n    let result = (params < 10) ? \"0\" + params : params;\n    return result;\n}\n\nfunction timerJoin(params = '', addHours = 0) {\n    let date = '';\n    if (params) {\n        date = new Date(Number(params));\n    } else {\n        date = new Date();\n    }\n\n    date.setHours(date.getHours() + addHours);\n\n    let years = formateT(date.getFullYear());\n    let months = formateT(date.getMonth() + 1);\n    let days = formateT(date.getDate());\n\n    let hours = date.getHours() % 12;\n    hours = hours === 0 ? 12 : hours;\n    let ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n\n    let minutes = formateT(date.getMinutes());\n    let seconds = formateT(date.getSeconds());\n\n    return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;\n}\n\nconst userInfo = async (req, res) => {\n    let auth = req.cookies.auth;\n    let phone = req.body.phone;\n    if (!phone) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n\n    const [user] = await connection.query('SELECT * FROM users WHERE phone = ? ', [phone]);\n\n    if (user.length == 0) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n    let userInfo = user[0];\n    // direct subordinate all\n    const [f1s] = await connection.query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [userInfo.code]);\n\n    // cấp dưới trực tiếp hôm nay \n    let f1_today = 0;\n    for (let i = 0; i < f1s.length; i++) {\n        const f1_time = f1s[i].time; // Mã giới thiệu f1\n        let check = (timerJoin(f1_time) == timerJoin()) ? true : false;\n        if (check) {\n            f1_today += 1;\n        }\n    }\n\n    // tất cả cấp dưới hôm nay \n    let f_all_today = 0;\n    for (let i = 0; i < f1s.length; i++) {\n        const f1_code = f1s[i].code; // Mã giới thiệu f1\n        const f1_time = f1s[i].time; // time f1\n        let check_f1 = (timerJoin(f1_time) == timerJoin()) ? true : false;\n        if (check_f1) f_all_today += 1;\n        // tổng f1 mời đc hôm nay\n        const [f2s] = await connection.query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [f1_code]);\n        for (let i = 0; i < f2s.length; i++) {\n            const f2_code = f2s[i].code; // Mã giới thiệu f2\n            const f2_time = f2s[i].time; // time f2\n            let check_f2 = (timerJoin(f2_time) == timerJoin()) ? true : false;\n            if (check_f2) f_all_today += 1;\n            // tổng f2 mời đc hôm nay\n            const [f3s] = await connection.query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [f2_code]);\n            for (let i = 0; i < f3s.length; i++) {\n                const f3_code = f3s[i].code; // Mã giới thiệu f3\n                const f3_time = f3s[i].time; // time f3\n                let check_f3 = (timerJoin(f3_time) == timerJoin()) ? true : false;\n                if (check_f3) f_all_today += 1;\n                const [f4s] = await connection.query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [f3_code]);\n                // tổng f3 mời đc hôm nay\n                for (let i = 0; i < f4s.length; i++) {\n                    const f4_code = f4s[i].code; // Mã giới thiệu f4\n                    const f4_time = f4s[i].time; // time f4\n                    let check_f4 = (timerJoin(f4_time) == timerJoin()) ? true : false;\n                    if (check_f4) f_all_today += 1;\n                    // tổng f3 mời đc hôm nay\n                }\n            }\n        }\n    }\n\n    // Tổng số f2\n    let f2 = 0;\n    for (let i = 0; i < f1s.length; i++) {\n        const f1_code = f1s[i].code; // Mã giới thiệu f1\n        const [f2s] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [f1_code]);\n        f2 += f2s.length;\n    }\n\n    // Tổng số f3\n    let f3 = 0;\n    for (let i = 0; i < f1s.length; i++) {\n        const f1_code = f1s[i].code; // Mã giới thiệu f1\n        const [f2s] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [f1_code]);\n        for (let i = 0; i < f2s.length; i++) {\n            const f2_code = f2s[i].code;\n            const [f3s] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [f2_code]);\n            if (f3s.length > 0) f3 += f3s.length;\n        }\n    }\n\n    // Tổng số f4\n    let f4 = 0;\n    for (let i = 0; i < f1s.length; i++) {\n        const f1_code = f1s[i].code; // Mã giới thiệu f1\n        const [f2s] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [f1_code]);\n        for (let i = 0; i < f2s.length; i++) {\n            const f2_code = f2s[i].code;\n            const [f3s] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [f2_code]);\n            for (let i = 0; i < f3s.length; i++) {\n                const f3_code = f3s[i].code;\n                const [f4s] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [f3_code]);\n                if (f4s.length > 0) f4 += f4s.length;\n            }\n        }\n    }\n    // console.log(\"TOTAL_F_TODAY:\" + f_all_today);\n    // console.log(\"F1: \" + f1s.length);\n    // console.log(\"F2: \" + f2);\n    // console.log(\"F3: \" + f3);\n    // console.log(\"F4: \" + f4);\n\n    const [recharge] = await connection.query('SELECT SUM(`money`) as total FROM recharge WHERE phone = ? AND status = 1 ', [phone]);\n    const [withdraw] = await connection.query('SELECT SUM(`money`) as total FROM withdraw WHERE phone = ? AND status = 1 ', [phone]);\n    const [bank_user] = await connection.query('SELECT * FROM user_bank WHERE phone = ? ', [phone]);\n    const [telegram_ctv] = await connection.query('SELECT `telegram` FROM point_list WHERE phone = ? ', [userInfo.ctv]);\n    const [ng_moi] = await connection.query('SELECT `phone` FROM users WHERE code = ? ', [userInfo.invite]);\n    return res.status(200).json({\n        message: 'Success',\n        status: true,\n        datas: user,\n        total_r: recharge,\n        total_w: withdraw,\n        f1: f1s.length,\n        f2: f2,\n        f3: f3,\n        f4: f4,\n        bank_user: bank_user,\n        telegram: telegram_ctv[0],\n        ng_moi: ng_moi[0],\n        daily: userInfo.ctv,\n    });\n}\n\n\n\nconst recharge = async (req, res) => {\n    let auth = req.cookies.auth;\n    if (!auth) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n\n    const [recharge] = await connection.query('SELECT * FROM recharge WHERE status = 0 ');\n    const [recharge2] = await connection.query('SELECT * FROM recharge WHERE status != 0 ');\n    const [withdraw] = await connection.query('SELECT * FROM withdraw WHERE status = 0 ');\n    const [withdraw2] = await connection.query('SELECT * FROM withdraw WHERE status != 0 ');\n    return res.status(200).json({\n        message: 'Success',\n        status: true,\n        datas: recharge,\n        datas2: recharge2,\n        datas3: withdraw,\n        datas4: withdraw2,\n    });\n}\n\nconst settingGet = async (req, res) => {\n    try {\n        let auth = req.cookies.auth;\n        if (!auth) {\n            return res.status(200).json({\n                message: 'Failed',\n                status: false,\n                timeStamp: timeNow,\n            });\n        }\n\n        const [bank_recharge] = await connection.query(\"SELECT * FROM bank_recharge\");\n        const [bank_recharge_momo] = await connection.query(\"SELECT * FROM bank_recharge WHERE type = 'momo'\");\n        const [settings] = await connection.query('SELECT * FROM admin ');\n\n        let bank_recharge_momo_data\n        if (bank_recharge_momo.length) {\n            bank_recharge_momo_data = bank_recharge_momo[0]\n        }\n        return res.status(200).json({\n            message: 'Success',\n            status: true,\n            settings: settings,\n            datas: bank_recharge,\n            momo: {\n                bank_name: bank_recharge_momo_data?.name_bank || \"\",\n                username: bank_recharge_momo_data?.name_user || \"\",\n                upi_id: bank_recharge_momo_data?.stk || \"\",\n                usdt_wallet_address: bank_recharge_momo_data?.qr_code_image || \"\",\n            }\n        });\n    } catch (error) {\n        console.log(error)\n        return res.status(500).json({\n            message: 'Failed',\n            status: false,\n        });\n    }\n}\n\nconst rechargeDuyet = async (req, res) => {\n    let auth = req.cookies.auth;\n    let id = req.body.id;\n    let type = req.body.type;\n    if (!auth || !id || !type) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n    if (type == 'confirm') {\n        await connection.query(`UPDATE recharge SET status = 1 WHERE id = ?`, [id]);\n\n        const [info] = await connection.query(`SELECT * FROM recharge WHERE id = ?`, [id]);\n\n        const user = await getUserDataByPhone(info?.[0]?.phone)\n\n        addUserAccountBalance({\n            money: info[0].money,\n            phone: user.phone,\n            invite: user.invite\n        })\n\n        return res.status(200).json({\n            message: 'Successful application confirmation',\n            status: true,\n            datas: recharge,\n        });\n    }\n    if (type == 'delete') {\n        await connection.query(`UPDATE recharge SET status = 2 WHERE id = ?`, [id]);\n\n        return res.status(200).json({\n            message: 'Cancellation successful',\n            status: true,\n            datas: recharge,\n        });\n    }\n}\n\nconst getUserDataByPhone = async (phone) => {\n    let [users] = await connection.query('SELECT `phone`, `code`,`name_user`,`invite` FROM users WHERE `phone` = ? ', [phone]);\n    const user = users?.[0]\n\n\n    if (user === undefined || user === null) {\n        throw Error(\"Unable to get user data!\")\n    }\n\n    return {\n        phone: user.phone,\n        code: user.code,\n        username: user.name_user,\n        invite: user.invite,\n    }\n}\n\n\nconst addUserAccountBalance = async ({ money, phone, invite }) => {\n    const user_money = money + (money / 100) * 5\n    const inviter_money = (money / 100) * 5\n\n    await connection.query('UPDATE users SET money = money + ?, total_money = total_money + ? WHERE `phone` = ?', [user_money, user_money, phone]);\n\n    const [inviter] = await connection.query('SELECT phone FROM users WHERE `code` = ?', [invite]);\n\n    if (inviter.length) {\n        console.log(inviter)\n        console.log(inviter_money, inviter_money, invite, inviter?.[0].phone)\n        await connection.query('UPDATE users SET money = money + ?, total_money = total_money + ? WHERE `code` = ? AND `phone` = ?', [inviter_money, inviter_money, invite, inviter?.[0].phone]);\n        console.log(\"SUCCESSFULLY ADD MONEY TO inviter\")\n    }\n}\n\nconst updateLevel = async (req, res) => {\n    try {\n        let id = req.body.id;\n        let f1 = req.body.f1;\n        let f2 = req.body.f2;\n        let f3 = req.body.f3;\n        let f4 = req.body.f4;\n\n        console.log(\"level : \" + id, f1, f2, f3, f4);\n\n        await connection.query(\n            'UPDATE `level` SET `f1`= ? ,`f2`= ? ,`f3`= ? ,`f4`= ?  WHERE `id` = ?',\n            [f1, f2, f3, f4, id]\n        );\n\n        // Send a success response to the client\n        res.status(200).json({\n            message: 'Update successful',\n            status: true,\n        });\n    } catch (error) {\n        console.error('Error updating level:', error);\n\n        // Send an error response to the client\n        res.status(500).json({\n            message: 'Update failed',\n            status: false,\n            error: error.message,\n        });\n    }\n};\n\n\nconst handlWithdraw = async (req, res) => {\n    let auth = req.cookies.auth;\n    let id = req.body.id;\n    let type = req.body.type;\n    if (!auth || !id || !type) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n    if (type == 'confirm') {\n        await connection.query(`UPDATE withdraw SET status = 1 WHERE id = ?`, [id]);\n        const [info] = await connection.query(`SELECT * FROM withdraw WHERE id = ?`, [id]);\n        return res.status(200).json({\n            message: 'Successful application confirmation',\n            status: true,\n            datas: recharge,\n        });\n    }\n    if (type == 'delete') {\n        await connection.query(`UPDATE withdraw SET status = 2 WHERE id = ?`, [id]);\n        const [info] = await connection.query(`SELECT * FROM withdraw WHERE id = ?`, [id]);\n        await connection.query('UPDATE users SET money = money + ? WHERE phone = ? ', [info[0].money, info[0].phone]);\n        return res.status(200).json({\n            message: 'Cancel successfully',\n            status: true,\n            datas: recharge,\n        });\n    }\n}\n\nconst settingBank = async (req, res) => {\n    try {\n\n\n        let auth = req.cookies.auth;\n        let name_bank = req.body.name_bank;\n        let name = req.body.name;\n        let info = req.body.info;\n        let qr = req.body.qr;\n        let typer = req.body.typer;\n\n        if (!auth || !typer) {\n            return res.status(200).json({\n                message: 'Failed',\n                status: false,\n                timeStamp: timeNow,\n            });\n        }\n        if (typer == 'bank') {\n            await connection.query(`UPDATE bank_recharge SET name_bank = ?, name_user = ?, stk = ? WHERE type = 'bank'`, [name_bank, name, info]);\n            return res.status(200).json({\n                message: 'Successful change',\n                status: true,\n                datas: recharge,\n            });\n        }\n\n        if (typer == 'momo') {\n            const [bank_recharge] = await connection.query(`SELECT * FROM bank_recharge WHERE type = 'momo'`);\n\n            const deleteRechargeQueries = bank_recharge.map(recharge => {\n                return deleteBankRechargeById(recharge.id)\n            });\n\n            await Promise.all(deleteRechargeQueries)\n\n            // await connection.query(`UPDATE bank_recharge SET name_bank = ?, name_user = ?, stk = ?, qr_code_image = ? WHERE type = 'upi'`, [name_bank, name, info, qr]);\n\n            const bankName = req.body.bank_name\n            const username = req.body.username\n            const upiId = req.body.upi_id\n            const usdtWalletAddress = req.body.usdt_wallet_address\n\n            await connection.query(\"INSERT INTO bank_recharge SET name_bank = ?, name_user = ?, stk = ?, qr_code_image = ?, type = 'momo'\", [\n                bankName, username, upiId, usdtWalletAddress\n            ])\n\n            return res.status(200).json({\n                message: 'Successfully changed',\n                status: true,\n                datas: recharge,\n            });\n        }\n    } catch (error) {\n        console.log(error)\n        return res.status(500).json({\n            message: 'Something went wrong!',\n            status: false,\n        });\n    }\n}\n\nconst deleteBankRechargeById = async (id) => {\n    const [recharge] = await connection.query(\"DELETE FROM bank_recharge WHERE type = 'momo' AND id = ?\", [id]);\n\n    return recharge\n}\n\nconst settingCskh = async (req, res) => {\n    let auth = req.cookies.auth;\n    let telegram = req.body.telegram;\n    let cskh = req.body.cskh;\n    let myapp_web = req.body.myapp_web;\n    if (!auth || !cskh || !telegram) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n    await connection.query(`UPDATE admin SET telegram = ?, cskh = ?, app = ?`, [telegram, cskh, myapp_web]);\n    return res.status(200).json({\n        message: 'Successful change',\n        status: true,\n    });\n}\n\nconst banned = async (req, res) => {\n    let auth = req.cookies.auth;\n    let id = req.body.id;\n    let type = req.body.type;\n    if (!auth || !id) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n    if (type == 'open') {\n        await connection.query(`UPDATE users SET status = 1 WHERE id = ?`, [id]);\n    }\n    if (type == 'close') {\n        await connection.query(`UPDATE users SET status = 2 WHERE id = ?`, [id]);\n    }\n    return res.status(200).json({\n        message: 'Successful change',\n        status: true,\n    });\n}\n\n\nconst createBonus = async (req, res) => {\n    const randomString = (length) => {\n        var result = '';\n        var characters = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        var charactersLength = characters.length;\n        for (var i = 0; i < length; i++) {\n            result += characters.charAt(Math.floor(Math.random() *\n                charactersLength));\n        }\n        return result;\n    }\n    function timerJoin(params = '', addHours = 0) {\n        let date = '';\n        if (params) {\n            date = new Date(Number(params));\n        } else {\n            date = new Date();\n        }\n\n        date.setHours(date.getHours() + addHours);\n\n        let years = formateT(date.getFullYear());\n        let months = formateT(date.getMonth() + 1);\n        let days = formateT(date.getDate());\n\n        let hours = date.getHours() % 12;\n        hours = hours === 0 ? 12 : hours;\n        let ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n\n        let minutes = formateT(date.getMinutes());\n        let seconds = formateT(date.getSeconds());\n\n        return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;\n    }\n    const d = new Date();\n    const time = d.getTime();\n\n    let auth = req.cookies.auth;\n    let money = req.body.money;\n    let type = req.body.type;\n\n\n    if (!money || !auth) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n    const [user] = await connection.query('SELECT * FROM users WHERE token = ? ', [auth]);\n\n    if (user.length == 0) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n    let userInfo = user[0];\n\n    if (type == 'all') {\n        let select = req.body.select;\n        if (select == '1') {\n            await connection.query(`UPDATE point_list SET money = money + ? WHERE level = 2`, [money]);\n        } else {\n            await connection.query(`UPDATE point_list SET money = money - ? WHERE level = 2`, [money]);\n        }\n        return res.status(200).json({\n            message: 'successful change',\n            status: true,\n        });\n    }\n\n    if (type == 'two') {\n        let select = req.body.select;\n        if (select == '1') {\n            await connection.query(`UPDATE point_list SET money_us = money_us + ? WHERE level = 2`, [money]);\n        } else {\n            await connection.query(`UPDATE point_list SET money_us = money_us - ? WHERE level = 2`, [money]);\n        }\n        return res.status(200).json({\n            message: 'successful change',\n            status: true,\n        });\n    }\n\n    if (type == 'one') {\n        let select = req.body.select;\n        let phone = req.body.phone;\n        const [user] = await connection.query('SELECT * FROM point_list WHERE phone = ? ', [phone]);\n        if (user.length == 0) {\n            return res.status(200).json({\n                message: 'Failed',\n                status: false,\n                timeStamp: timeNow,\n            });\n        }\n        if (select == '1') {\n            await connection.query(`UPDATE point_list SET money = money + ? WHERE level = 2 and phone = ?`, [money, phone]);\n        } else {\n            await connection.query(`UPDATE point_list SET money = money - ? WHERE level = 2 and phone = ?`, [money, phone]);\n        }\n        return res.status(200).json({\n            message: 'successful change',\n            status: true,\n        });\n    }\n\n    if (type == 'three') {\n        let select = req.body.select;\n        let phone = req.body.phone;\n        const [user] = await connection.query('SELECT * FROM point_list WHERE phone = ? ', [phone]);\n        if (user.length == 0) {\n            return res.status(200).json({\n                message: 'account does not exist',\n                status: false,\n                timeStamp: timeNow,\n            });\n        }\n        if (select == '1') {\n            await connection.query(`UPDATE point_list SET money_us = money_us + ? WHERE level = 2 and phone = ?`, [money, phone]);\n        } else {\n            await connection.query(`UPDATE point_list SET money_us = money_us - ? WHERE level = 2 and phone = ?`, [money, phone]);\n        }\n        return res.status(200).json({\n            message: 'successful change',\n            status: true,\n        });\n    }\n\n    if (!type) {\n        let id_redenvelops = randomString(16);\n        let sql = `INSERT INTO redenvelopes SET id_redenvelope = ?, phone = ?, money = ?, used = ?, amount = ?, status = ?, time = ?`;\n        await connection.query(sql, [id_redenvelops, userInfo.phone, money, 1, 1, 0, time]);\n        return res.status(200).json({\n            message: 'Successful change',\n            status: true,\n            id: id_redenvelops,\n        });\n    }\n}\n\nconst listRedenvelops = async (req, res) => {\n    let auth = req.cookies.auth;\n\n    let [redenvelopes] = await connection.query('SELECT * FROM redenvelopes WHERE status = 0 ');\n    return res.status(200).json({\n        message: 'Successful change',\n        status: true,\n        redenvelopes: redenvelopes,\n    });\n}\n\nconst settingbuff = async (req, res) => {\n    let auth = req.cookies.auth;\n    let id_user = req.body.id_user;\n    let buff_acc = req.body.buff_acc;\n    let money_value = req.body.money_value;\n    if (!id_user || !buff_acc || !money_value) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n    const [user_id] = await connection.query(`SELECT * FROM users WHERE id_user = ?`, [id_user]);\n\n    if (user_id.length > 0) {\n        if (buff_acc == '1') {\n            await connection.query(`UPDATE users SET money = money + ? WHERE id_user = ?`, [money_value, id_user]);\n        }\n        if (buff_acc == '2') {\n            await connection.query(`UPDATE users SET money = money - ? WHERE id_user = ?`, [money_value, id_user]);\n        }\n        return res.status(200).json({\n            message: 'Successful change',\n            status: true,\n        });\n    } else {\n        return res.status(200).json({\n            message: 'Successful change',\n            status: false,\n        });\n    }\n}\nconst randomNumber = (min, max) => {\n    return String(Math.floor(Math.random() * (max - min + 1)) + min);\n}\n\nconst randomString = (length) => {\n    var result = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() *\n            charactersLength));\n    }\n    return result;\n}\n\nconst ipAddress = (req) => {\n    let ip = '';\n    if (req.headers['x-forwarded-for']) {\n        ip = req.headers['x-forwarded-for'].split(\",\")[0];\n    } else if (req.connection && req.connection.remoteAddress) {\n        ip = req.connection.remoteAddress;\n    } else {\n        ip = req.ip;\n    }\n    return ip;\n}\n\nconst timeCreate = () => {\n    const d = new Date();\n    const time = d.getTime();\n    return time;\n}\n\n\n\nconst register = async (req, res) => {\n    let { username, password, invitecode } = req.body;\n    let id_user = randomNumber(10000, 99999);\n    let name_user = \"Member\" + randomNumber(10000, 99999);\n    let code = randomString(5) + randomNumber(10000, 99999);\n    let ip = ipAddress(req);\n    let time = timeCreate();\n\n    invitecode = '2cOCs36373';\n\n    if (!username || !password || !invitecode) {\n        return res.status(200).json({\n            message: 'ERROR!!!',\n            status: false\n        });\n    }\n\n    if (!username) {\n        return res.status(200).json({\n            message: 'phone error',\n            status: false\n        });\n    }\n\n    try {\n        const [check_u] = await connection.query('SELECT * FROM users WHERE phone = ? ', [username]);\n        if (check_u.length == 1) {\n            return res.status(200).json({\n                message: 'register account', //Số điện thoại đã được đăng ký\n                status: false\n            });\n        } else {\n            const sql = `INSERT INTO users SET \n            id_user = ?,\n            phone = ?,\n            name_user = ?,\n            password = ?,\n            money = ?,\n            level = ?,\n            code = ?,\n            invite = ?,\n            veri = ?,\n            ip_address = ?,\n            status = ?,\n            time = ?`;\n            await connection.execute(sql, [id_user, username, name_user, md5(password), 0, 2, code, invitecode, 1, ip, 1, time]);\n            await connection.execute('INSERT INTO point_list SET phone = ?, level = 2', [username]);\n            return res.status(200).json({\n                message: 'registration success',//Register Sucess\n                status: true\n            });\n        }\n    } catch (error) {\n        if (error) console.log(error);\n    }\n\n}\n\nconst profileUser = async (req, res) => {\n    let phone = req.body.phone;\n    if (!phone) {\n        return res.status(200).json({\n            message: 'Phone Error',\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n    let [user] = await connection.query(`SELECT * FROM users WHERE phone = ?`, [phone]);\n\n    if (user.length == 0) {\n        return res.status(200).json({\n            message: 'Phone Error',\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n    let [recharge] = await connection.query(`SELECT * FROM recharge WHERE phone = ? ORDER BY id DESC LIMIT 10`, [phone]);\n    let [withdraw] = await connection.query(`SELECT * FROM withdraw WHERE phone = ? ORDER BY id DESC LIMIT 10`, [phone]);\n    return res.status(200).json({\n        message: 'Get success',\n        status: true,\n        recharge: recharge,\n        withdraw: withdraw,\n    });\n}\n\nconst infoCtv = async (req, res) => {\n    const phone = req.body.phone;\n\n    const [user] = await connection.query('SELECT * FROM users WHERE phone = ? ', [phone]);\n\n    if (user.length == 0) {\n        return res.status(200).json({\n            message: 'Phone Error',\n            status: false,\n        });\n    }\n    let userInfo = user[0];\n    // cấp dưới trực tiếp all\n    const [f1s] = await connection.query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [userInfo.code]);\n\n    // cấp dưới trực tiếp hôm nay \n    let f1_today = 0;\n    for (let i = 0; i < f1s.length; i++) {\n        const f1_time = f1s[i].time; // Mã giới thiệu f1\n        let check = (timerJoin(f1_time) == timerJoin()) ? true : false;\n        if (check) {\n            f1_today += 1;\n        }\n    }\n\n    // tất cả cấp dưới hôm nay \n    let f_all_today = 0;\n    for (let i = 0; i < f1s.length; i++) {\n        const f1_code = f1s[i].code; // Mã giới thiệu f1\n        const f1_time = f1s[i].time; // time f1\n        let check_f1 = (timerJoin(f1_time) == timerJoin()) ? true : false;\n        if (check_f1) f_all_today += 1;\n        // tổng f1 mời đc hôm nay\n        const [f2s] = await connection.query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [f1_code]);\n        for (let i = 0; i < f2s.length; i++) {\n            const f2_code = f2s[i].code; // Mã giới thiệu f2\n            const f2_time = f2s[i].time; // time f2\n            let check_f2 = (timerJoin(f2_time) == timerJoin()) ? true : false;\n            if (check_f2) f_all_today += 1;\n            // tổng f2 mời đc hôm nay\n            const [f3s] = await connection.query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [f2_code]);\n            for (let i = 0; i < f3s.length; i++) {\n                const f3_code = f3s[i].code; // Mã giới thiệu f3\n                const f3_time = f3s[i].time; // time f3\n                let check_f3 = (timerJoin(f3_time) == timerJoin()) ? true : false;\n                if (check_f3) f_all_today += 1;\n                const [f4s] = await connection.query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [f3_code]);\n                // tổng f3 mời đc hôm nay\n                for (let i = 0; i < f4s.length; i++) {\n                    const f4_code = f4s[i].code; // Mã giới thiệu f4\n                    const f4_time = f4s[i].time; // time f4\n                    let check_f4 = (timerJoin(f4_time) == timerJoin()) ? true : false;\n                    if (check_f4) f_all_today += 1;\n                    // tổng f3 mời đc hôm nay\n                }\n            }\n        }\n    }\n\n    // Tổng số f2\n    let f2 = 0;\n    for (let i = 0; i < f1s.length; i++) {\n        const f1_code = f1s[i].code; // Mã giới thiệu f1\n        const [f2s] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [f1_code]);\n        f2 += f2s.length;\n    }\n\n    // Tổng số f3\n    let f3 = 0;\n    for (let i = 0; i < f1s.length; i++) {\n        const f1_code = f1s[i].code; // Mã giới thiệu f1\n        const [f2s] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [f1_code]);\n        for (let i = 0; i < f2s.length; i++) {\n            const f2_code = f2s[i].code;\n            const [f3s] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [f2_code]);\n            if (f3s.length > 0) f3 += f3s.length;\n        }\n    }\n\n    // Tổng số f4\n    let f4 = 0;\n    for (let i = 0; i < f1s.length; i++) {\n        const f1_code = f1s[i].code; // Mã giới thiệu f1\n        const [f2s] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [f1_code]);\n        for (let i = 0; i < f2s.length; i++) {\n            const f2_code = f2s[i].code;\n            const [f3s] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [f2_code]);\n            for (let i = 0; i < f3s.length; i++) {\n                const f3_code = f3s[i].code;\n                const [f4s] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [f3_code]);\n                if (f4s.length > 0) f4 += f4s.length;\n            }\n        }\n    }\n\n    const [list_mem] = await connection.query('SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 ', [phone]);\n    const [list_mem_baned] = await connection.query('SELECT * FROM users WHERE ctv = ? AND status = 2 AND veri = 1 ', [phone]);\n    let total_recharge = 0;\n    let total_withdraw = 0;\n    for (let i = 0; i < list_mem.length; i++) {\n        let phone = list_mem[i].phone;\n        const [recharge] = await connection.query('SELECT SUM(money) as money FROM recharge WHERE phone = ? AND status = 1 ', [phone]);\n        const [withdraw] = await connection.query('SELECT SUM(money) as money FROM withdraw WHERE phone = ? AND status = 1 ', [phone]);\n        if (recharge[0].money) {\n            total_recharge += Number(recharge[0].money);\n        }\n        if (withdraw[0].money) {\n            total_withdraw += Number(withdraw[0].money);\n        }\n    }\n\n    let total_recharge_today = 0;\n    let total_withdraw_today = 0;\n    for (let i = 0; i < list_mem.length; i++) {\n        let phone = list_mem[i].phone;\n        const [recharge_today] = await connection.query('SELECT `money`, `time` FROM recharge WHERE phone = ? AND status = 1 ', [phone]);\n        const [withdraw_today] = await connection.query('SELECT `money`, `time` FROM withdraw WHERE phone = ? AND status = 1 ', [phone]);\n        for (let i = 0; i < recharge_today.length; i++) {\n            let today = timerJoin();\n            let time = timerJoin(recharge_today[i].time);\n            if (time == today) {\n                total_recharge_today += recharge_today[i].money;\n            }\n        }\n        for (let i = 0; i < withdraw_today.length; i++) {\n            let today = timerJoin();\n            let time = timerJoin(withdraw_today[i].time);\n            if (time == today) {\n                total_withdraw_today += withdraw_today[i].money;\n            }\n        }\n    }\n\n    let win = 0;\n    let loss = 0;\n    for (let i = 0; i < list_mem.length; i++) {\n        let phone = list_mem[i].phone;\n        const [wins] = await connection.query('SELECT `money`, `time` FROM minutes_1 WHERE phone = ? AND status = 1 ', [phone]);\n        const [losses] = await connection.query('SELECT `money`, `time` FROM minutes_1 WHERE phone = ? AND status = 2 ', [phone]);\n        for (let i = 0; i < wins.length; i++) {\n            let today = timerJoin();\n            let time = timerJoin(wins[i].time);\n            if (time == today) {\n                win += wins[i].money;\n            }\n        }\n        for (let i = 0; i < losses.length; i++) {\n            let today = timerJoin();\n            let time = timerJoin(losses[i].time);\n            if (time == today) {\n                loss += losses[i].money;\n            }\n        }\n    }\n    let list_mems = [];\n    const [list_mem_today] = await connection.query('SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 ', [phone]);\n    for (let i = 0; i < list_mem_today.length; i++) {\n        let today = timerJoin();\n        let time = timerJoin(list_mem_today[i].time);\n        if (time == today) {\n            list_mems.push(list_mem_today[i]);\n        }\n    }\n\n    const [point_list] = await connection.query('SELECT * FROM point_list WHERE phone = ? ', [phone]);\n    let moneyCTV = point_list[0].money;\n\n    let list_recharge_news = [];\n    let list_withdraw_news = [];\n    for (let i = 0; i < list_mem.length; i++) {\n        let phone = list_mem[i].phone;\n        const [recharge_today] = await connection.query('SELECT `id`, `status`, `type`,`phone`, `money`, `time` FROM recharge WHERE phone = ? AND status = 1 ', [phone]);\n        const [withdraw_today] = await connection.query('SELECT `id`, `status`,`phone`, `money`, `time` FROM withdraw WHERE phone = ? AND status = 1 ', [phone]);\n        for (let i = 0; i < recharge_today.length; i++) {\n            let today = timerJoin();\n            let time = timerJoin(recharge_today[i].time);\n            if (time == today) {\n                list_recharge_news.push(recharge_today[i]);\n            }\n        }\n        for (let i = 0; i < withdraw_today.length; i++) {\n            let today = timerJoin();\n            let time = timerJoin(withdraw_today[i].time);\n            if (time == today) {\n                list_withdraw_news.push(withdraw_today[i]);\n            }\n        }\n    }\n\n    const [redenvelopes_used] = await connection.query('SELECT * FROM redenvelopes_used WHERE phone = ? ', [phone]);\n    let redenvelopes_used_today = [];\n    for (let i = 0; i < redenvelopes_used.length; i++) {\n        let today = timerJoin();\n        let time = timerJoin(redenvelopes_used[i].time);\n        if (time == today) {\n            redenvelopes_used_today.push(redenvelopes_used[i]);\n        }\n    }\n\n    const [financial_details] = await connection.query('SELECT * FROM financial_details WHERE phone = ? ', [phone]);\n    let financial_details_today = [];\n    for (let i = 0; i < financial_details.length; i++) {\n        let today = timerJoin();\n        let time = timerJoin(financial_details[i].time);\n        if (time == today) {\n            financial_details_today.push(financial_details[i]);\n        }\n    }\n\n\n    return res.status(200).json({\n        message: 'Success',\n        status: true,\n        datas: user,\n        f1: f1s.length,\n        f2: f2,\n        f3: f3,\n        f4: f4,\n        list_mems: list_mems,\n        total_recharge: total_recharge,\n        total_withdraw: total_withdraw,\n        total_recharge_today: total_recharge_today,\n        total_withdraw_today: total_withdraw_today,\n        list_mem_baned: list_mem_baned.length,\n        win: win,\n        loss: loss,\n        list_recharge_news: list_recharge_news,\n        list_withdraw_news: list_withdraw_news,\n        moneyCTV: moneyCTV,\n        redenvelopes_used: redenvelopes_used_today,\n        financial_details_today: financial_details_today,\n    });\n}\n\nconst infoCtv2 = async (req, res) => {\n    const phone = req.body.phone;\n    const timeDate = req.body.timeDate;\n\n    function timerJoin(params = '', addHours = 0) {\n        let date = '';\n        if (params) {\n            date = new Date(Number(params));\n        } else {\n            date = new Date();\n        }\n\n        date.setHours(date.getHours() + addHours);\n\n        let years = formateT(date.getFullYear());\n        let months = formateT(date.getMonth() + 1);\n        let days = formateT(date.getDate());\n\n        let hours = date.getHours() % 12;\n        hours = hours === 0 ? 12 : hours;\n        let ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n\n        let minutes = formateT(date.getMinutes());\n        let seconds = formateT(date.getSeconds());\n\n        return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;\n    }\n\n    const [user] = await connection.query('SELECT * FROM users WHERE phone = ? ', [phone]);\n\n    if (user.length == 0) {\n        return res.status(200).json({\n            message: 'Phone Error',\n            status: false,\n        });\n    }\n    let userInfo = user[0];\n    const [list_mem] = await connection.query('SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 ', [phone]);\n\n    let list_mems = [];\n    const [list_mem_today] = await connection.query('SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 ', [phone]);\n    for (let i = 0; i < list_mem_today.length; i++) {\n        let today = timeDate;\n        let time = timerJoin(list_mem_today[i].time);\n        if (time == today) {\n            list_mems.push(list_mem_today[i]);\n        }\n    }\n\n    let list_recharge_news = [];\n    let list_withdraw_news = [];\n    for (let i = 0; i < list_mem.length; i++) {\n        let phone = list_mem[i].phone;\n        const [recharge_today] = await connection.query('SELECT `id`, `status`, `type`,`phone`, `money`, `time` FROM recharge WHERE phone = ? AND status = 1 ', [phone]);\n        const [withdraw_today] = await connection.query('SELECT `id`, `status`,`phone`, `money`, `time` FROM withdraw WHERE phone = ? AND status = 1 ', [phone]);\n        for (let i = 0; i < recharge_today.length; i++) {\n            let today = timeDate;\n            let time = timerJoin(recharge_today[i].time);\n            if (time == today) {\n                list_recharge_news.push(recharge_today[i]);\n            }\n        }\n        for (let i = 0; i < withdraw_today.length; i++) {\n            let today = timeDate;\n            let time = timerJoin(withdraw_today[i].time);\n            if (time == today) {\n                list_withdraw_news.push(withdraw_today[i]);\n            }\n        }\n    }\n\n    const [redenvelopes_used] = await connection.query('SELECT * FROM redenvelopes_used WHERE phone = ? ', [phone]);\n    let redenvelopes_used_today = [];\n    for (let i = 0; i < redenvelopes_used.length; i++) {\n        let today = timeDate;\n        let time = timerJoin(redenvelopes_used[i].time);\n        if (time == today) {\n            redenvelopes_used_today.push(redenvelopes_used[i]);\n        }\n    }\n\n    const [financial_details] = await connection.query('SELECT * FROM financial_details WHERE phone = ? ', [phone]);\n    let financial_details_today = [];\n    for (let i = 0; i < financial_details.length; i++) {\n        let today = timeDate;\n        let time = timerJoin(financial_details[i].time);\n        if (time == today) {\n            financial_details_today.push(financial_details[i]);\n        }\n    }\n\n    return res.status(200).json({\n        message: 'Success',\n        status: true,\n        datas: user,\n        list_mems: list_mems,\n        list_recharge_news: list_recharge_news,\n        list_withdraw_news: list_withdraw_news,\n        redenvelopes_used: redenvelopes_used_today,\n        financial_details_today: financial_details_today,\n    });\n}\n\nconst listRechargeMem = async (req, res) => {\n    let auth = req.cookies.auth;\n    let phone = req.params.phone;\n    let { pageno, limit } = req.body;\n\n    if (!pageno || !limit) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n\n    if (pageno < 0 || limit < 0) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n\n    if (!phone) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n\n    const [user] = await connection.query('SELECT * FROM users WHERE phone = ? ', [phone]);\n    const [auths] = await connection.query('SELECT * FROM users WHERE token = ? ', [auth]);\n\n    if (user.length == 0 || auths.length == 0) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n    let { token, password, otp, level, ...userInfo } = user[0];\n\n    const [recharge] = await connection.query(`SELECT * FROM recharge WHERE phone = ? ORDER BY id DESC LIMIT ${pageno}, ${limit} `, [phone]);\n    const [total_users] = await connection.query(`SELECT * FROM recharge WHERE phone = ?`, [phone]);\n    return res.status(200).json({\n        message: 'Success',\n        status: true,\n        datas: recharge,\n        page_total: Math.ceil(total_users.length / limit)\n    });\n}\n\nconst listWithdrawMem = async (req, res) => {\n    let auth = req.cookies.auth;\n    let phone = req.params.phone;\n    let { pageno, limit } = req.body;\n\n    if (!pageno || !limit) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n\n    if (pageno < 0 || limit < 0) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n\n    if (!phone) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n\n    const [user] = await connection.query('SELECT * FROM users WHERE phone = ? ', [phone]);\n    const [auths] = await connection.query('SELECT * FROM users WHERE token = ? ', [auth]);\n\n    if (user.length == 0 || auths.length == 0) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n    let { token, password, otp, level, ...userInfo } = user[0];\n\n    const [withdraw] = await connection.query(`SELECT * FROM withdraw WHERE phone = ? ORDER BY id DESC LIMIT ${pageno}, ${limit} `, [phone]);\n    const [total_users] = await connection.query(`SELECT * FROM withdraw WHERE phone = ?`, [phone]);\n    return res.status(200).json({\n        message: 'Success',\n        status: true,\n        datas: withdraw,\n        page_total: Math.ceil(total_users.length / limit)\n    });\n}\n\nconst listRedenvelope = async (req, res) => {\n    let auth = req.cookies.auth;\n    let phone = req.params.phone;\n    let { pageno, limit } = req.body;\n\n    if (!pageno || !limit) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n\n    if (pageno < 0 || limit < 0) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n\n    if (!phone) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n\n    const [user] = await connection.query('SELECT * FROM users WHERE phone = ? ', [phone]);\n    const [auths] = await connection.query('SELECT * FROM users WHERE token = ? ', [auth]);\n\n    if (user.length == 0 || auths.length == 0) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n    let { token, password, otp, level, ...userInfo } = user[0];\n\n    const [redenvelopes_used] = await connection.query(`SELECT * FROM redenvelopes_used WHERE phone_used = ? ORDER BY id DESC LIMIT ${pageno}, ${limit} `, [phone]);\n    const [total_users] = await connection.query(`SELECT * FROM redenvelopes_used WHERE phone_used = ?`, [phone]);\n    return res.status(200).json({\n        message: 'Success',\n        status: true,\n        datas: redenvelopes_used,\n        page_total: Math.ceil(total_users.length / limit)\n    });\n}\n// Level Setting get\n\nconst getLevelInfo = async (req, res) => {\n\n    const [rows] = await connection.query('SELECT * FROM `level`');\n\n    if (!rows) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n\n        });\n    }\n    console.log(\"asdasdasd : \" + rows)\n    return res.status(200).json({\n        message: 'Success',\n        status: true,\n        data: {\n\n        },\n        rows: rows\n    });\n\n    // const [recharge] = await connection.query('SELECT * FROM recharge WHERE `phone` = ? AND status = 1', [rows[0].phone]);\n    // let totalRecharge = 0;\n    // recharge.forEach((data) => {\n    //     totalRecharge += data.money;\n    // });\n    // const [withdraw] = await connection.query('SELECT * FROM withdraw WHERE `phone` = ? AND status = 1', [rows[0].phone]);\n    // let totalWithdraw = 0;\n    // withdraw.forEach((data) => {\n    //     totalWithdraw += data.money;\n    // });\n\n    // const { id, password, ip, veri, ip_address, status, time, token, ...others } = rows[0];\n    // return res.status(200).json({\n    //     message: 'Success',\n    //     status: true,\n    //     data: {\n    //         code: others.code,\n    //         id_user: others.id_user,\n    //         name_user: others.name_user,\n    //         phone_user: others.phone,\n    //         money_user: others.money,\n    //     },\n    //     totalRecharge: totalRecharge,\n    //     totalWithdraw: totalWithdraw,\n    //     timeStamp: timeNow,\n    // });\n\n\n}\n\nconst listBet = async (req, res) => {\n    let auth = req.cookies.auth;\n    let phone = req.params.phone;\n    let { pageno, limit } = req.body;\n\n    if (!pageno || !limit) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n\n    if (pageno < 0 || limit < 0) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n\n    if (!phone) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n\n    const [user] = await connection.query('SELECT * FROM users WHERE phone = ? ', [phone]);\n    const [auths] = await connection.query('SELECT * FROM users WHERE token = ? ', [auth]);\n\n    if (user.length == 0 || auths.length == 0) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n    let { token, password, otp, level, ...userInfo } = user[0];\n\n    const [listBet] = await connection.query(`SELECT * FROM minutes_1 WHERE phone = ? AND status != 0 ORDER BY id DESC LIMIT ${pageno}, ${limit} `, [phone]);\n    const [total_users] = await connection.query(`SELECT * FROM minutes_1 WHERE phone = ? AND status != 0`, [phone]);\n    return res.status(200).json({\n        message: 'Success',\n        status: true,\n        datas: listBet,\n        page_total: Math.ceil(total_users.length / limit)\n    });\n}\n\nconst listOrderOld = async (req, res) => {\n    let { gameJoin } = req.body;\n\n    let checkGame = ['1', '3', '5', '10'].includes(String(gameJoin));\n    if (!checkGame) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n    let game = Number(gameJoin);\n\n    let join = '';\n    if (game == 1) join = 'k5d';\n    if (game == 3) join = 'k5d3';\n    if (game == 5) join = 'k5d5';\n    if (game == 10) join = 'k5d10';\n\n    const [k5d] = await connection.query(`SELECT * FROM 5d WHERE status != 0 AND game = '${game}' ORDER BY id DESC LIMIT 10 `);\n    const [period] = await connection.query(`SELECT period FROM 5d WHERE status = 0 AND game = '${game}' ORDER BY id DESC LIMIT 1 `);\n    const [waiting] = await connection.query(`SELECT phone, money, price, amount, bet FROM result_5d WHERE status = 0 AND level = 0 AND game = '${game}' ORDER BY id ASC `);\n    const [settings] = await connection.query(`SELECT ${join} FROM admin`);\n    if (k5d.length == 0) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n    if (!k5d[0] || !period[0]) {\n        return res.status(200).json({\n            message: 'Error!',\n            status: false\n        });\n    }\n    return res.status(200).json({\n        code: 0,\n        msg: \"Get success\",\n        data: {\n            gameslist: k5d,\n        },\n        bet: waiting,\n        settings: settings,\n        join: join,\n        period: period[0].period,\n        status: true\n    });\n}\n\nconst listOrderOldK3 = async (req, res) => {\n    let { gameJoin } = req.body;\n\n    let checkGame = ['1', '3', '5', '10'].includes(String(gameJoin));\n    if (!checkGame) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n    let game = Number(gameJoin);\n\n    let join = '';\n    if (game == 1) join = 'k3d';\n    if (game == 3) join = 'k3d3';\n    if (game == 5) join = 'k3d5';\n    if (game == 10) join = 'k3d10';\n\n    const [k5d] = await connection.query(`SELECT * FROM k3 WHERE status != 0 AND game = '${game}' ORDER BY id DESC LIMIT 10 `);\n    const [period] = await connection.query(`SELECT period FROM k3 WHERE status = 0 AND game = '${game}' ORDER BY id DESC LIMIT 1 `);\n    const [waiting] = await connection.query(`SELECT phone, money, price, typeGame, amount, bet FROM result_k3 WHERE status = 0 AND level = 0 AND game = '${game}' ORDER BY id ASC `);\n    const [settings] = await connection.query(`SELECT ${join} FROM admin`);\n    if (k5d.length == 0) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n    if (!k5d[0] || !period[0]) {\n        return res.status(200).json({\n            message: 'Error!',\n            status: false\n        });\n    }\n    return res.status(200).json({\n        code: 0,\n        msg: \"Get Success\",\n        data: {\n            gameslist: k5d,\n        },\n        bet: waiting,\n        settings: settings,\n        join: join,\n        period: period[0].period,\n        status: true\n    });\n}\n\nconst editResult = async (req, res) => {\n    let { game, list } = req.body;\n\n    if (!list || !game) {\n        return res.status(200).json({\n            message: 'ERROR!!!',\n            status: false\n        });\n    }\n\n    let join = '';\n    if (game == 1) join = 'k5d';\n    if (game == 3) join = 'k5d3';\n    if (game == 5) join = 'k5d5';\n    if (game == 10) join = 'k5d10';\n\n    const sql = `UPDATE admin SET ${join} = ?`;\n    await connection.execute(sql, [list]);\n    return res.status(200).json({\n        message: 'Editing is successful',//Register Sucess\n        status: true\n    });\n\n}\n\nconst editResult2 = async (req, res) => {\n    let { game, list } = req.body;\n\n    if (!list || !game) {\n        return res.status(200).json({\n            message: 'ERROR!!!',\n            status: false\n        });\n    }\n\n    let join = '';\n    if (game == 1) join = 'k3d';\n    if (game == 3) join = 'k3d3';\n    if (game == 5) join = 'k3d5';\n    if (game == 10) join = 'k3d10';\n\n    const sql = `UPDATE admin SET ${join} = ?`;\n    await connection.execute(sql, [list]);\n    return res.status(200).json({\n        message: 'Editing is successful',//Register Sucess\n        status: true\n    });\n\n}\n\nconst CreatedSalary = async (req, res) => {\n    try {\n        const phone = req.body.phone;\n        const amount = req.body.amount;\n        const type = req.body.type;\n        const now = new Date();\n        const formattedTime = now.toLocaleString('en-US', {\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit',\n            hour: '2-digit',\n            minute: '2-digit',\n            second: '2-digit',\n            hour12: true\n        });\n\n        // Check if the phone number is a 10-digit number\n        if (!/^\\d{10}$/.test(phone)) {\n            return res.status(400).json({\n                message: 'ERROR!!! Invalid phone number. Please provide a 10-digit phone number.',\n                status: false\n            });\n        }\n\n        // Check if user with the given phone number exists\n        const checkUserQuery = 'SELECT * FROM `users` WHERE phone = ?';\n        const [existingUser] = await connection.execute(checkUserQuery, [phone]);\n\n        if (existingUser.length === 0) {\n            // If user doesn't exist, return an error\n            return res.status(400).json({\n                message: 'ERROR!!! User with the provided phone number does not exist.',\n                status: false\n            });\n        }\n\n        // If user exists, update the 'users' table\n        const updateUserQuery = 'UPDATE `users` SET `money` = `money` + ? WHERE phone = ?';\n        await connection.execute(updateUserQuery, [amount, phone]);\n\n\n        // Insert record into 'salary' table\n        const insertSalaryQuery = 'INSERT INTO salary (phone, amount, type, time) VALUES (?, ?, ?, ?)';\n        await connection.execute(insertSalaryQuery, [phone, amount, type, formattedTime]);\n\n        res.status(200).json({ message: 'Salary record created successfully' });\n    } catch (error) {\n        console.error(error);\n        res.status(500).json({ error: 'Internal server error' });\n    }\n};\n\n\nconst getSalary = async (req, res) => {\n    const [rows] = await connection.query(`SELECT * FROM salary ORDER BY time DESC`);\n\n    if (!rows) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n\n        });\n    }\n    console.log(\"asdasdasd : \" + rows)\n    return res.status(200).json({\n        message: 'Success',\n        status: true,\n        data: {\n\n        },\n        rows: rows\n    })\n};\n\n\nmodule.exports = {\n    adminPage,\n    adminPage3,\n    adminPage5,\n    adminPage10,\n    totalJoin,\n    middlewareAdminController,\n    changeAdmin,\n    membersPage,\n    listMember,\n    infoMember,\n    userInfo,\n    statistical,\n    statistical2,\n    rechargePage,\n    recharge,\n    rechargeDuyet,\n    rechargeRecord,\n    withdrawRecord,\n    withdraw,\n    levelSetting,\n    handlWithdraw,\n    settings,\n    editResult2,\n    settingBank,\n    settingGet,\n    settingCskh,\n    settingbuff,\n    register,\n    ctvPage,\n    listCTV,\n    profileUser,\n    ctvProfilePage,\n    infoCtv,\n    infoCtv2,\n    giftPage,\n    createBonus,\n    listRedenvelops,\n    banned,\n    listRechargeMem,\n    listWithdrawMem,\n    getLevelInfo,\n    listRedenvelope,\n    listBet,\n    adminPage5d,\n    listOrderOld,\n    listOrderOldK3,\n    editResult,\n    adminPageK3,\n    updateLevel,\n    CreatedSalaryRecord,\n    CreatedSalary,\n    getSalary,\n}"],"mappings":"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","ignoreList":[]}},"mtime":1722459116000},"{\"assumptions\":{},\"sourceRoot\":\"/www/wwwroot/21india/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/www/wwwroot/21india\",\"filename\":\"/www/wwwroot/21india/src/controllers/dailyController.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/www/wwwroot/21india\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.5:development":{"value":{"code":"\"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _connectDB = _interopRequireDefault(require(\"../config/connectDB\"));\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\nvar _md = _interopRequireDefault(require(\"md5\"));\nvar _excluded = [\"token\", \"password\", \"otp\", \"level\"],\n  _excluded2 = [\"token\", \"password\", \"otp\", \"level\"],\n  _excluded3 = [\"token\", \"password\", \"otp\", \"level\"],\n  _excluded4 = [\"token\", \"password\", \"otp\", \"level\"],\n  _excluded5 = [\"token\", \"password\", \"otp\", \"level\"];\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nrequire('dotenv').config();\nvar timeNow = Date.now();\nvar dailyPage = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(req, res) {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", res.render(\"daily/statistical.ejs\"));\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function dailyPage(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar listMeber = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(req, res) {\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          return _context2.abrupt(\"return\", res.render(\"daily/members.ejs\"));\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function listMeber(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar profileMember = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(req, res) {\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.abrupt(\"return\", res.render(\"daily/profileMember.ejs\"));\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return function profileMember(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nvar settingPage = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(req, res) {\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          return _context4.abrupt(\"return\", res.render(\"daily/settings.ejs\"));\n        case 1:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n  return function settingPage(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nvar listRecharge = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(req, res) {\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          return _context5.abrupt(\"return\", res.render(\"daily/listRecharge.ejs\"));\n        case 1:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5);\n  }));\n  return function listRecharge(_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nvar listWithdraw = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(req, res) {\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          return _context6.abrupt(\"return\", res.render(\"daily/listWithdraw.ejs\"));\n        case 1:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6);\n  }));\n  return function listWithdraw(_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nvar pageInfo = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(req, res) {\n    var phone;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          phone = req.params.phone;\n          return _context7.abrupt(\"return\", res.render(\"daily/profileMember.ejs\", {\n            phone: phone\n          }));\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7);\n  }));\n  return function pageInfo(_x13, _x14) {\n    return _ref7.apply(this, arguments);\n  };\n}();\nvar giftPage = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(req, res) {\n    var auth, _yield$connection$exe, _yield$connection$exe2, rows, money, money2, _yield$connection$exe3, _yield$connection$exe4, point_list;\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          auth = req.cookies.auth;\n          _context8.next = 3;\n          return _connectDB[\"default\"].execute('SELECT `phone` FROM `users` WHERE `token` = ? AND veri = 1', [auth]);\n        case 3:\n          _yield$connection$exe = _context8.sent;\n          _yield$connection$exe2 = _slicedToArray(_yield$connection$exe, 1);\n          rows = _yield$connection$exe2[0];\n          money = 0;\n          money2 = 0;\n          if (!(rows.length != 0)) {\n            _context8.next = 16;\n            break;\n          }\n          _context8.next = 11;\n          return _connectDB[\"default\"].execute('SELECT `money`, `money_us` FROM `point_list` WHERE `phone` = ?', [rows[0].phone]);\n        case 11:\n          _yield$connection$exe3 = _context8.sent;\n          _yield$connection$exe4 = _slicedToArray(_yield$connection$exe3, 1);\n          point_list = _yield$connection$exe4[0];\n          money = point_list[0].money;\n          money2 = point_list[0].money_us;\n        case 16:\n          return _context8.abrupt(\"return\", res.render(\"daily/giftPage.ejs\", {\n            money: money,\n            money2: money2\n          }));\n        case 17:\n        case \"end\":\n          return _context8.stop();\n      }\n    }, _callee8);\n  }));\n  return function giftPage(_x15, _x16) {\n    return _ref8.apply(this, arguments);\n  };\n}();\nvar support = /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(req, res) {\n    return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n      while (1) switch (_context9.prev = _context9.next) {\n        case 0:\n          return _context9.abrupt(\"return\", res.render(\"daily/support.ejs\"));\n        case 1:\n        case \"end\":\n          return _context9.stop();\n      }\n    }, _callee9);\n  }));\n  return function support(_x17, _x18) {\n    return _ref9.apply(this, arguments);\n  };\n}();\nvar settings = /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(req, res) {\n    var auth, type, value, _yield$connection$exe5, _yield$connection$exe6, rows, _yield$connection$exe7, _yield$connection$exe8, point_list, _yield$connection$exe9, _yield$connection$exe10, _settings, telegram, telegram2;\n    return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n      while (1) switch (_context10.prev = _context10.next) {\n        case 0:\n          auth = req.cookies.auth;\n          type = req.body.type;\n          value = req.body.value;\n          _context10.next = 5;\n          return _connectDB[\"default\"].execute('SELECT `phone` FROM `users` WHERE `token` = ? AND veri = 1', [auth]);\n        case 5:\n          _yield$connection$exe5 = _context10.sent;\n          _yield$connection$exe6 = _slicedToArray(_yield$connection$exe5, 1);\n          rows = _yield$connection$exe6[0];\n          if (!(rows.length == 0)) {\n            _context10.next = 10;\n            break;\n          }\n          return _context10.abrupt(\"return\", res.status(200).json({\n            message: 'Error',\n            status: false\n          }));\n        case 10:\n          if (type) {\n            _context10.next = 26;\n            break;\n          }\n          _context10.next = 13;\n          return _connectDB[\"default\"].execute('SELECT `telegram` FROM `point_list` WHERE phone = ?', [rows[0].phone]);\n        case 13:\n          _yield$connection$exe7 = _context10.sent;\n          _yield$connection$exe8 = _slicedToArray(_yield$connection$exe7, 1);\n          point_list = _yield$connection$exe8[0];\n          _context10.next = 18;\n          return _connectDB[\"default\"].execute('SELECT `telegram` FROM `admin`');\n        case 18:\n          _yield$connection$exe9 = _context10.sent;\n          _yield$connection$exe10 = _slicedToArray(_yield$connection$exe9, 1);\n          _settings = _yield$connection$exe10[0];\n          telegram = _settings[0].telegram;\n          telegram2 = point_list[0].telegram;\n          return _context10.abrupt(\"return\", res.status(200).json({\n            message: 'Get success',\n            status: true,\n            telegram: telegram,\n            telegram2: telegram2\n          }));\n        case 26:\n          _context10.next = 28;\n          return _connectDB[\"default\"].execute('UPDATE `point_list` SET telegram = ? WHERE phone = ?', [value, rows[0].phone]);\n        case 28:\n          return _context10.abrupt(\"return\", res.status(200).json({\n            message: 'Successfully edited',\n            status: true\n          }));\n        case 29:\n        case \"end\":\n          return _context10.stop();\n      }\n    }, _callee10);\n  }));\n  return function settings(_x19, _x20) {\n    return _ref10.apply(this, arguments);\n  };\n}();\n\n// xác nhận admin\nvar middlewareDailyController = /*#__PURE__*/function () {\n  var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(req, res, next) {\n    var auth, _yield$connection$exe11, _yield$connection$exe12, rows;\n    return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n      while (1) switch (_context11.prev = _context11.next) {\n        case 0:\n          // xác nhận token\n          auth = req.cookies.auth;\n          if (auth) {\n            _context11.next = 3;\n            break;\n          }\n          return _context11.abrupt(\"return\", res.redirect(\"/login\"));\n        case 3:\n          _context11.next = 5;\n          return _connectDB[\"default\"].execute('SELECT `token`,`level`, `status` FROM `users` WHERE `token` = ? AND veri = 1', [auth]);\n        case 5:\n          _yield$connection$exe11 = _context11.sent;\n          _yield$connection$exe12 = _slicedToArray(_yield$connection$exe11, 1);\n          rows = _yield$connection$exe12[0];\n          if (rows) {\n            _context11.next = 10;\n            break;\n          }\n          return _context11.abrupt(\"return\", res.redirect(\"/login\"));\n        case 10:\n          _context11.prev = 10;\n          if (!(auth == rows[0].token && rows[0].status == 1)) {\n            _context11.next = 19;\n            break;\n          }\n          if (!(rows[0].level == 2)) {\n            _context11.next = 16;\n            break;\n          }\n          next();\n          _context11.next = 17;\n          break;\n        case 16:\n          return _context11.abrupt(\"return\", res.redirect(\"/home\"));\n        case 17:\n          _context11.next = 20;\n          break;\n        case 19:\n          return _context11.abrupt(\"return\", res.redirect(\"/login\"));\n        case 20:\n          _context11.next = 25;\n          break;\n        case 22:\n          _context11.prev = 22;\n          _context11.t0 = _context11[\"catch\"](10);\n          return _context11.abrupt(\"return\", res.redirect(\"/login\"));\n        case 25:\n        case \"end\":\n          return _context11.stop();\n      }\n    }, _callee11, null, [[10, 22]]);\n  }));\n  return function middlewareDailyController(_x21, _x22, _x23) {\n    return _ref11.apply(this, arguments);\n  };\n}();\nvar statistical = /*#__PURE__*/function () {\n  var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(req, res) {\n    var auth, _yield$connection$que, _yield$connection$que2, user, userInfo, _yield$connection$que3, _yield$connection$que4, f1s, f1_today, i, f1_time, check, f_all_today, _i, f1_code, _f1_time, check_f1, _yield$connection$que5, _yield$connection$que6, f2s, _i2, f2_code, f2_time, check_f2, _yield$connection$que7, _yield$connection$que8, f3s, _i3, f3_code, f3_time, check_f3, _yield$connection$que9, _yield$connection$que10, f4s, _i4, f4_code, f4_time, check_f4, f2, _i5, _f1_code, _yield$connection$que11, _yield$connection$que12, _f2s, f3, _i6, _f1_code2, _yield$connection$que13, _yield$connection$que14, _f2s2, _i7, _f2_code, _yield$connection$que15, _yield$connection$que16, _f3s, f4, _i8, _f1_code3, _yield$connection$que17, _yield$connection$que18, _f2s3, _i9, _f2_code2, _yield$connection$que19, _yield$connection$que20, _f3s2, _i10, _f3_code, _yield$connection$que21, _yield$connection$que22, _f4s;\n    return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n      while (1) switch (_context12.prev = _context12.next) {\n        case 0:\n          auth = req.cookies.auth;\n          _context12.next = 3;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE token = ? ', [auth]);\n        case 3:\n          _yield$connection$que = _context12.sent;\n          _yield$connection$que2 = _slicedToArray(_yield$connection$que, 1);\n          user = _yield$connection$que2[0];\n          userInfo = user[0]; // cấp dưới trực tiếp all\n          _context12.next = 9;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [userInfo.code]);\n        case 9:\n          _yield$connection$que3 = _context12.sent;\n          _yield$connection$que4 = _slicedToArray(_yield$connection$que3, 1);\n          f1s = _yield$connection$que4[0];\n          // cấp dưới trực tiếp hôm nay \n          f1_today = 0;\n          for (i = 0; i < f1s.length; i++) {\n            f1_time = f1s[i].time; // Mã giới thiệu f1\n            check = timerJoin(f1_time) == timerJoin() ? true : false;\n            if (check) {\n              f1_today += 1;\n            }\n          }\n\n          // tất cả cấp dưới hôm nay \n          f_all_today = 0;\n          _i = 0;\n        case 16:\n          if (!(_i < f1s.length)) {\n            _context12.next = 58;\n            break;\n          }\n          f1_code = f1s[_i].code; // Mã giới thiệu f1\n          _f1_time = f1s[_i].time; // time f1\n          check_f1 = timerJoin(_f1_time) == timerJoin() ? true : false;\n          if (check_f1) f_all_today += 1;\n          // tổng f1 mời đc hôm nay\n          _context12.next = 23;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [f1_code]);\n        case 23:\n          _yield$connection$que5 = _context12.sent;\n          _yield$connection$que6 = _slicedToArray(_yield$connection$que5, 1);\n          f2s = _yield$connection$que6[0];\n          _i2 = 0;\n        case 27:\n          if (!(_i2 < f2s.length)) {\n            _context12.next = 55;\n            break;\n          }\n          f2_code = f2s[_i2].code; // Mã giới thiệu f2\n          f2_time = f2s[_i2].time; // time f2\n          check_f2 = timerJoin(f2_time) == timerJoin() ? true : false;\n          if (check_f2) f_all_today += 1;\n          // tổng f2 mời đc hôm nay\n          _context12.next = 34;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [f2_code]);\n        case 34:\n          _yield$connection$que7 = _context12.sent;\n          _yield$connection$que8 = _slicedToArray(_yield$connection$que7, 1);\n          f3s = _yield$connection$que8[0];\n          _i3 = 0;\n        case 38:\n          if (!(_i3 < f3s.length)) {\n            _context12.next = 52;\n            break;\n          }\n          f3_code = f3s[_i3].code; // Mã giới thiệu f3\n          f3_time = f3s[_i3].time; // time f3\n          check_f3 = timerJoin(f3_time) == timerJoin() ? true : false;\n          if (check_f3) f_all_today += 1;\n          _context12.next = 45;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [f3_code]);\n        case 45:\n          _yield$connection$que9 = _context12.sent;\n          _yield$connection$que10 = _slicedToArray(_yield$connection$que9, 1);\n          f4s = _yield$connection$que10[0];\n          // tổng f3 mời đc hôm nay\n          for (_i4 = 0; _i4 < f4s.length; _i4++) {\n            f4_code = f4s[_i4].code; // Mã giới thiệu f4\n            f4_time = f4s[_i4].time; // time f4\n            check_f4 = timerJoin(f4_time) == timerJoin() ? true : false;\n            if (check_f4) f_all_today += 1;\n            // tổng f3 mời đc hôm nay\n          }\n        case 49:\n          _i3++;\n          _context12.next = 38;\n          break;\n        case 52:\n          _i2++;\n          _context12.next = 27;\n          break;\n        case 55:\n          _i++;\n          _context12.next = 16;\n          break;\n        case 58:\n          // Tổng số f2\n          f2 = 0;\n          _i5 = 0;\n        case 60:\n          if (!(_i5 < f1s.length)) {\n            _context12.next = 71;\n            break;\n          }\n          _f1_code = f1s[_i5].code; // Mã giới thiệu f1\n          _context12.next = 64;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [_f1_code]);\n        case 64:\n          _yield$connection$que11 = _context12.sent;\n          _yield$connection$que12 = _slicedToArray(_yield$connection$que11, 1);\n          _f2s = _yield$connection$que12[0];\n          f2 += _f2s.length;\n        case 68:\n          _i5++;\n          _context12.next = 60;\n          break;\n        case 71:\n          // Tổng số f3\n          f3 = 0;\n          _i6 = 0;\n        case 73:\n          if (!(_i6 < f1s.length)) {\n            _context12.next = 95;\n            break;\n          }\n          _f1_code2 = f1s[_i6].code; // Mã giới thiệu f1\n          _context12.next = 77;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [_f1_code2]);\n        case 77:\n          _yield$connection$que13 = _context12.sent;\n          _yield$connection$que14 = _slicedToArray(_yield$connection$que13, 1);\n          _f2s2 = _yield$connection$que14[0];\n          _i7 = 0;\n        case 81:\n          if (!(_i7 < _f2s2.length)) {\n            _context12.next = 92;\n            break;\n          }\n          _f2_code = _f2s2[_i7].code;\n          _context12.next = 85;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [_f2_code]);\n        case 85:\n          _yield$connection$que15 = _context12.sent;\n          _yield$connection$que16 = _slicedToArray(_yield$connection$que15, 1);\n          _f3s = _yield$connection$que16[0];\n          if (_f3s.length > 0) f3 += _f3s.length;\n        case 89:\n          _i7++;\n          _context12.next = 81;\n          break;\n        case 92:\n          _i6++;\n          _context12.next = 73;\n          break;\n        case 95:\n          // Tổng số f4\n          f4 = 0;\n          _i8 = 0;\n        case 97:\n          if (!(_i8 < f1s.length)) {\n            _context12.next = 130;\n            break;\n          }\n          _f1_code3 = f1s[_i8].code; // Mã giới thiệu f1\n          _context12.next = 101;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [_f1_code3]);\n        case 101:\n          _yield$connection$que17 = _context12.sent;\n          _yield$connection$que18 = _slicedToArray(_yield$connection$que17, 1);\n          _f2s3 = _yield$connection$que18[0];\n          _i9 = 0;\n        case 105:\n          if (!(_i9 < _f2s3.length)) {\n            _context12.next = 127;\n            break;\n          }\n          _f2_code2 = _f2s3[_i9].code;\n          _context12.next = 109;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [_f2_code2]);\n        case 109:\n          _yield$connection$que19 = _context12.sent;\n          _yield$connection$que20 = _slicedToArray(_yield$connection$que19, 1);\n          _f3s2 = _yield$connection$que20[0];\n          _i10 = 0;\n        case 113:\n          if (!(_i10 < _f3s2.length)) {\n            _context12.next = 124;\n            break;\n          }\n          _f3_code = _f3s2[_i10].code;\n          _context12.next = 117;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [_f3_code]);\n        case 117:\n          _yield$connection$que21 = _context12.sent;\n          _yield$connection$que22 = _slicedToArray(_yield$connection$que21, 1);\n          _f4s = _yield$connection$que22[0];\n          if (_f4s.length > 0) f4 += _f4s.length;\n        case 121:\n          _i10++;\n          _context12.next = 113;\n          break;\n        case 124:\n          _i9++;\n          _context12.next = 105;\n          break;\n        case 127:\n          _i8++;\n          _context12.next = 97;\n          break;\n        case 130:\n          return _context12.abrupt(\"return\", res.status(200).json({\n            message: 'Success',\n            status: true,\n            datas: user,\n            f1: f1s.length,\n            f2: f2,\n            f3: f3,\n            f4: f4\n          }));\n        case 131:\n        case \"end\":\n          return _context12.stop();\n      }\n    }, _callee12);\n  }));\n  return function statistical(_x24, _x25) {\n    return _ref12.apply(this, arguments);\n  };\n}();\nfunction formateT(params) {\n  var result = params < 10 ? \"0\" + params : params;\n  return result;\n}\nfunction timerJoin() {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var addHours = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var date = '';\n  if (params) {\n    date = new Date(Number(params));\n  } else {\n    date = new Date();\n  }\n  date.setHours(date.getHours() + addHours);\n  var years = formateT(date.getFullYear());\n  var months = formateT(date.getMonth() + 1);\n  var days = formateT(date.getDate());\n  var hours = date.getHours() % 12;\n  hours = hours === 0 ? 12 : hours;\n  var ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n  var minutes = formateT(date.getMinutes());\n  var seconds = formateT(date.getSeconds());\n  return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;\n}\nvar userInfo = /*#__PURE__*/function () {\n  var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(req, res) {\n    var auth, phone, _yield$connection$que23, _yield$connection$que24, user, _yield$connection$que25, _yield$connection$que26, auths, _user$, token, password, otp, level, userInfo, _yield$connection$que27, _yield$connection$que28, f1s, f1_today, i, f1_time, check, f_all_today, _i11, f1_code, _f1_time2, check_f1, _yield$connection$que29, _yield$connection$que30, f2s, _i12, f2_code, f2_time, check_f2, _yield$connection$que31, _yield$connection$que32, f3s, _i13, f3_code, f3_time, check_f3, _yield$connection$que33, _yield$connection$que34, f4s, _i14, f4_code, f4_time, check_f4, f2, _i15, _f1_code4, _yield$connection$que35, _yield$connection$que36, _f2s4, f3, _i16, _f1_code5, _yield$connection$que37, _yield$connection$que38, _f2s5, _i17, _f2_code3, _yield$connection$que39, _yield$connection$que40, _f3s3, f4, _i18, _f1_code6, _yield$connection$que41, _yield$connection$que42, _f2s6, _i19, _f2_code4, _yield$connection$que43, _yield$connection$que44, _f3s4, _i20, _f3_code2, _yield$connection$que45, _yield$connection$que46, _f4s2, _yield$connection$que47, _yield$connection$que48, recharge, _yield$connection$que49, _yield$connection$que50, withdraw, _yield$connection$que51, _yield$connection$que52, bank_user;\n    return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n      while (1) switch (_context13.prev = _context13.next) {\n        case 0:\n          auth = req.cookies.auth;\n          phone = req.params.phone;\n          if (phone) {\n            _context13.next = 4;\n            break;\n          }\n          return _context13.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 4:\n          _context13.next = 6;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE phone = ? ', [phone]);\n        case 6:\n          _yield$connection$que23 = _context13.sent;\n          _yield$connection$que24 = _slicedToArray(_yield$connection$que23, 1);\n          user = _yield$connection$que24[0];\n          _context13.next = 11;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE token = ? ', [auth]);\n        case 11:\n          _yield$connection$que25 = _context13.sent;\n          _yield$connection$que26 = _slicedToArray(_yield$connection$que25, 1);\n          auths = _yield$connection$que26[0];\n          if (!(user.length == 0 || auths.length == 0)) {\n            _context13.next = 16;\n            break;\n          }\n          return _context13.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 16:\n          _user$ = user[0], token = _user$.token, password = _user$.password, otp = _user$.otp, level = _user$.level, userInfo = _objectWithoutProperties(_user$, _excluded);\n          if (!(auths[0].phone != userInfo.ctv)) {\n            _context13.next = 19;\n            break;\n          }\n          return _context13.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 19:\n          _context13.next = 21;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [userInfo.code]);\n        case 21:\n          _yield$connection$que27 = _context13.sent;\n          _yield$connection$que28 = _slicedToArray(_yield$connection$que27, 1);\n          f1s = _yield$connection$que28[0];\n          // cấp dưới trực tiếp hôm nay \n          f1_today = 0;\n          for (i = 0; i < f1s.length; i++) {\n            f1_time = f1s[i].time; // Mã giới thiệu f1\n            check = timerJoin(f1_time) == timerJoin() ? true : false;\n            if (check) {\n              f1_today += 1;\n            }\n          }\n\n          // tất cả cấp dưới hôm nay \n          f_all_today = 0;\n          _i11 = 0;\n        case 28:\n          if (!(_i11 < f1s.length)) {\n            _context13.next = 70;\n            break;\n          }\n          f1_code = f1s[_i11].code; // Mã giới thiệu f1\n          _f1_time2 = f1s[_i11].time; // time f1\n          check_f1 = timerJoin(_f1_time2) == timerJoin() ? true : false;\n          if (check_f1) f_all_today += 1;\n          // tổng f1 mời đc hôm nay\n          _context13.next = 35;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [f1_code]);\n        case 35:\n          _yield$connection$que29 = _context13.sent;\n          _yield$connection$que30 = _slicedToArray(_yield$connection$que29, 1);\n          f2s = _yield$connection$que30[0];\n          _i12 = 0;\n        case 39:\n          if (!(_i12 < f2s.length)) {\n            _context13.next = 67;\n            break;\n          }\n          f2_code = f2s[_i12].code; // Mã giới thiệu f2\n          f2_time = f2s[_i12].time; // time f2\n          check_f2 = timerJoin(f2_time) == timerJoin() ? true : false;\n          if (check_f2) f_all_today += 1;\n          // tổng f2 mời đc hôm nay\n          _context13.next = 46;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [f2_code]);\n        case 46:\n          _yield$connection$que31 = _context13.sent;\n          _yield$connection$que32 = _slicedToArray(_yield$connection$que31, 1);\n          f3s = _yield$connection$que32[0];\n          _i13 = 0;\n        case 50:\n          if (!(_i13 < f3s.length)) {\n            _context13.next = 64;\n            break;\n          }\n          f3_code = f3s[_i13].code; // Mã giới thiệu f3\n          f3_time = f3s[_i13].time; // time f3\n          check_f3 = timerJoin(f3_time) == timerJoin() ? true : false;\n          if (check_f3) f_all_today += 1;\n          _context13.next = 57;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [f3_code]);\n        case 57:\n          _yield$connection$que33 = _context13.sent;\n          _yield$connection$que34 = _slicedToArray(_yield$connection$que33, 1);\n          f4s = _yield$connection$que34[0];\n          // tổng f3 mời đc hôm nay\n          for (_i14 = 0; _i14 < f4s.length; _i14++) {\n            f4_code = f4s[_i14].code; // Mã giới thiệu f4\n            f4_time = f4s[_i14].time; // time f4\n            check_f4 = timerJoin(f4_time) == timerJoin() ? true : false;\n            if (check_f4) f_all_today += 1;\n            // tổng f3 mời đc hôm nay\n          }\n        case 61:\n          _i13++;\n          _context13.next = 50;\n          break;\n        case 64:\n          _i12++;\n          _context13.next = 39;\n          break;\n        case 67:\n          _i11++;\n          _context13.next = 28;\n          break;\n        case 70:\n          // Tổng số f2\n          f2 = 0;\n          _i15 = 0;\n        case 72:\n          if (!(_i15 < f1s.length)) {\n            _context13.next = 83;\n            break;\n          }\n          _f1_code4 = f1s[_i15].code; // Mã giới thiệu f1\n          _context13.next = 76;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [_f1_code4]);\n        case 76:\n          _yield$connection$que35 = _context13.sent;\n          _yield$connection$que36 = _slicedToArray(_yield$connection$que35, 1);\n          _f2s4 = _yield$connection$que36[0];\n          f2 += _f2s4.length;\n        case 80:\n          _i15++;\n          _context13.next = 72;\n          break;\n        case 83:\n          // Tổng số f3\n          f3 = 0;\n          _i16 = 0;\n        case 85:\n          if (!(_i16 < f1s.length)) {\n            _context13.next = 107;\n            break;\n          }\n          _f1_code5 = f1s[_i16].code; // Mã giới thiệu f1\n          _context13.next = 89;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [_f1_code5]);\n        case 89:\n          _yield$connection$que37 = _context13.sent;\n          _yield$connection$que38 = _slicedToArray(_yield$connection$que37, 1);\n          _f2s5 = _yield$connection$que38[0];\n          _i17 = 0;\n        case 93:\n          if (!(_i17 < _f2s5.length)) {\n            _context13.next = 104;\n            break;\n          }\n          _f2_code3 = _f2s5[_i17].code;\n          _context13.next = 97;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [_f2_code3]);\n        case 97:\n          _yield$connection$que39 = _context13.sent;\n          _yield$connection$que40 = _slicedToArray(_yield$connection$que39, 1);\n          _f3s3 = _yield$connection$que40[0];\n          if (_f3s3.length > 0) f3 += _f3s3.length;\n        case 101:\n          _i17++;\n          _context13.next = 93;\n          break;\n        case 104:\n          _i16++;\n          _context13.next = 85;\n          break;\n        case 107:\n          // Tổng số f4\n          f4 = 0;\n          _i18 = 0;\n        case 109:\n          if (!(_i18 < f1s.length)) {\n            _context13.next = 142;\n            break;\n          }\n          _f1_code6 = f1s[_i18].code; // Mã giới thiệu f1\n          _context13.next = 113;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [_f1_code6]);\n        case 113:\n          _yield$connection$que41 = _context13.sent;\n          _yield$connection$que42 = _slicedToArray(_yield$connection$que41, 1);\n          _f2s6 = _yield$connection$que42[0];\n          _i19 = 0;\n        case 117:\n          if (!(_i19 < _f2s6.length)) {\n            _context13.next = 139;\n            break;\n          }\n          _f2_code4 = _f2s6[_i19].code;\n          _context13.next = 121;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [_f2_code4]);\n        case 121:\n          _yield$connection$que43 = _context13.sent;\n          _yield$connection$que44 = _slicedToArray(_yield$connection$que43, 1);\n          _f3s4 = _yield$connection$que44[0];\n          _i20 = 0;\n        case 125:\n          if (!(_i20 < _f3s4.length)) {\n            _context13.next = 136;\n            break;\n          }\n          _f3_code2 = _f3s4[_i20].code;\n          _context13.next = 129;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [_f3_code2]);\n        case 129:\n          _yield$connection$que45 = _context13.sent;\n          _yield$connection$que46 = _slicedToArray(_yield$connection$que45, 1);\n          _f4s2 = _yield$connection$que46[0];\n          if (_f4s2.length > 0) f4 += _f4s2.length;\n        case 133:\n          _i20++;\n          _context13.next = 125;\n          break;\n        case 136:\n          _i19++;\n          _context13.next = 117;\n          break;\n        case 139:\n          _i18++;\n          _context13.next = 109;\n          break;\n        case 142:\n          _context13.next = 144;\n          return _connectDB[\"default\"].query('SELECT SUM(`money`) as total FROM recharge WHERE phone = ? AND status = 1 ', [phone]);\n        case 144:\n          _yield$connection$que47 = _context13.sent;\n          _yield$connection$que48 = _slicedToArray(_yield$connection$que47, 1);\n          recharge = _yield$connection$que48[0];\n          _context13.next = 149;\n          return _connectDB[\"default\"].query('SELECT SUM(`money`) as total FROM withdraw WHERE phone = ? AND status = 1 ', [phone]);\n        case 149:\n          _yield$connection$que49 = _context13.sent;\n          _yield$connection$que50 = _slicedToArray(_yield$connection$que49, 1);\n          withdraw = _yield$connection$que50[0];\n          _context13.next = 154;\n          return _connectDB[\"default\"].query('SELECT * FROM user_bank WHERE phone = ? ', [phone]);\n        case 154:\n          _yield$connection$que51 = _context13.sent;\n          _yield$connection$que52 = _slicedToArray(_yield$connection$que51, 1);\n          bank_user = _yield$connection$que52[0];\n          return _context13.abrupt(\"return\", res.status(200).json({\n            message: 'Success',\n            status: true,\n            datas: userInfo,\n            total_r: recharge,\n            total_w: withdraw,\n            f1: f1s.length,\n            f2: f2,\n            f3: f3,\n            f4: f4,\n            bank_user: bank_user\n          }));\n        case 158:\n        case \"end\":\n          return _context13.stop();\n      }\n    }, _callee13);\n  }));\n  return function userInfo(_x26, _x27) {\n    return _ref13.apply(this, arguments);\n  };\n}();\nvar infoCtv = /*#__PURE__*/function () {\n  var _ref14 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(req, res) {\n    var auth, _yield$connection$que53, _yield$connection$que54, user, userInfo, phone, _yield$connection$que55, _yield$connection$que56, f1s, f1_today, i, f1_time, check, f_all_today, _i21, f1_code, _f1_time3, check_f1, _yield$connection$que57, _yield$connection$que58, f2s, _i22, f2_code, f2_time, check_f2, _yield$connection$que59, _yield$connection$que60, f3s, _i23, f3_code, f3_time, check_f3, _yield$connection$que61, _yield$connection$que62, f4s, _i24, f4_code, f4_time, check_f4, f2, _i25, _f1_code7, _yield$connection$que63, _yield$connection$que64, _f2s7, f3, _i26, _f1_code8, _yield$connection$que65, _yield$connection$que66, _f2s8, _i27, _f2_code5, _yield$connection$que67, _yield$connection$que68, _f3s5, f4, _i28, _f1_code9, _yield$connection$que69, _yield$connection$que70, _f2s9, _i29, _f2_code6, _yield$connection$que71, _yield$connection$que72, _f3s6, _i30, _f3_code3, _yield$connection$que73, _yield$connection$que74, _f4s3, _yield$connection$que75, _yield$connection$que76, list_mem, _yield$connection$que77, _yield$connection$que78, list_mem_baned, total_recharge, total_withdraw, _i31, _phone, _yield$connection$que79, _yield$connection$que80, recharge, _yield$connection$que81, _yield$connection$que82, withdraw, total_recharge_today, total_withdraw_today, _i32, _phone2, _yield$connection$que83, _yield$connection$que84, recharge_today, _yield$connection$que85, _yield$connection$que86, withdraw_today, _i33, today, time, _i34, _today, _time, win, loss, _i35, _phone3, _yield$connection$que87, _yield$connection$que88, wins, _yield$connection$que89, _yield$connection$que90, losses, _i36, _today2, _time2, _i37, _today3, _time3, list_mems, _yield$connection$que91, _yield$connection$que92, list_mem_today, _i38, _today4, _time4, _yield$connection$que93, _yield$connection$que94, phone_invites, phone_invite, data, _yield$connection$que95, _yield$connection$que96, point_list, moneyCTV, list_recharge_news, list_withdraw_news, _i39, _phone4, _yield$connection$que97, _yield$connection$que98, _recharge_today, _yield$connection$que99, _yield$connection$que100, _withdraw_today, _i40, _today5, _time5, _i41, _today6, _time6, _yield$connection$que101, _yield$connection$que102, redenvelopes_used, redenvelopes_used_today, _i42, _today7, _time7, _yield$connection$que103, _yield$connection$que104, financial_details, financial_details_today, _i43, _today8, _time8;\n    return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n      while (1) switch (_context14.prev = _context14.next) {\n        case 0:\n          auth = req.cookies.auth;\n          _context14.next = 3;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE token = ? ', [auth]);\n        case 3:\n          _yield$connection$que53 = _context14.sent;\n          _yield$connection$que54 = _slicedToArray(_yield$connection$que53, 1);\n          user = _yield$connection$que54[0];\n          if (!(user.length == 0)) {\n            _context14.next = 8;\n            break;\n          }\n          return _context14.abrupt(\"return\", res.status(200).json({\n            message: 'Phone Error',\n            status: false\n          }));\n        case 8:\n          userInfo = user[0];\n          phone = userInfo.phone; // cấp dưới trực tiếp all\n          _context14.next = 12;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [userInfo.code]);\n        case 12:\n          _yield$connection$que55 = _context14.sent;\n          _yield$connection$que56 = _slicedToArray(_yield$connection$que55, 1);\n          f1s = _yield$connection$que56[0];\n          // cấp dưới trực tiếp hôm nay  \n          f1_today = 0;\n          for (i = 0; i < f1s.length; i++) {\n            f1_time = f1s[i].time; // Mã giới thiệu f1\n            check = timerJoin(f1_time) == timerJoin() ? true : false;\n            if (check) {\n              f1_today += 1;\n            }\n          }\n\n          // tất cả cấp dưới hôm nay \n          f_all_today = 0;\n          _i21 = 0;\n        case 19:\n          if (!(_i21 < f1s.length)) {\n            _context14.next = 61;\n            break;\n          }\n          f1_code = f1s[_i21].code; // Mã giới thiệu f1\n          _f1_time3 = f1s[_i21].time; // time f1\n          check_f1 = timerJoin(_f1_time3) == timerJoin() ? true : false;\n          if (check_f1) f_all_today += 1;\n          // tổng f1 mời đc hôm nay\n          _context14.next = 26;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [f1_code]);\n        case 26:\n          _yield$connection$que57 = _context14.sent;\n          _yield$connection$que58 = _slicedToArray(_yield$connection$que57, 1);\n          f2s = _yield$connection$que58[0];\n          _i22 = 0;\n        case 30:\n          if (!(_i22 < f2s.length)) {\n            _context14.next = 58;\n            break;\n          }\n          f2_code = f2s[_i22].code; // Mã giới thiệu f2\n          f2_time = f2s[_i22].time; // time f2\n          check_f2 = timerJoin(f2_time) == timerJoin() ? true : false;\n          if (check_f2) f_all_today += 1;\n          // tổng f2 mời đc hôm nay\n          _context14.next = 37;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [f2_code]);\n        case 37:\n          _yield$connection$que59 = _context14.sent;\n          _yield$connection$que60 = _slicedToArray(_yield$connection$que59, 1);\n          f3s = _yield$connection$que60[0];\n          _i23 = 0;\n        case 41:\n          if (!(_i23 < f3s.length)) {\n            _context14.next = 55;\n            break;\n          }\n          f3_code = f3s[_i23].code; // Mã giới thiệu f3\n          f3_time = f3s[_i23].time; // time f3\n          check_f3 = timerJoin(f3_time) == timerJoin() ? true : false;\n          if (check_f3) f_all_today += 1;\n          _context14.next = 48;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [f3_code]);\n        case 48:\n          _yield$connection$que61 = _context14.sent;\n          _yield$connection$que62 = _slicedToArray(_yield$connection$que61, 1);\n          f4s = _yield$connection$que62[0];\n          // tổng f3 mời đc hôm nay\n          for (_i24 = 0; _i24 < f4s.length; _i24++) {\n            f4_code = f4s[_i24].code; // Mã giới thiệu f4\n            f4_time = f4s[_i24].time; // time f4\n            check_f4 = timerJoin(f4_time) == timerJoin() ? true : false;\n            if (check_f4) f_all_today += 1;\n            // tổng f3 mời đc hôm nay\n          }\n        case 52:\n          _i23++;\n          _context14.next = 41;\n          break;\n        case 55:\n          _i22++;\n          _context14.next = 30;\n          break;\n        case 58:\n          _i21++;\n          _context14.next = 19;\n          break;\n        case 61:\n          // Tổng số f2\n          f2 = 0;\n          _i25 = 0;\n        case 63:\n          if (!(_i25 < f1s.length)) {\n            _context14.next = 74;\n            break;\n          }\n          _f1_code7 = f1s[_i25].code; // Mã giới thiệu f1\n          _context14.next = 67;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [_f1_code7]);\n        case 67:\n          _yield$connection$que63 = _context14.sent;\n          _yield$connection$que64 = _slicedToArray(_yield$connection$que63, 1);\n          _f2s7 = _yield$connection$que64[0];\n          f2 += _f2s7.length;\n        case 71:\n          _i25++;\n          _context14.next = 63;\n          break;\n        case 74:\n          // Tổng số f3\n          f3 = 0;\n          _i26 = 0;\n        case 76:\n          if (!(_i26 < f1s.length)) {\n            _context14.next = 98;\n            break;\n          }\n          _f1_code8 = f1s[_i26].code; // Mã giới thiệu f1\n          _context14.next = 80;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [_f1_code8]);\n        case 80:\n          _yield$connection$que65 = _context14.sent;\n          _yield$connection$que66 = _slicedToArray(_yield$connection$que65, 1);\n          _f2s8 = _yield$connection$que66[0];\n          _i27 = 0;\n        case 84:\n          if (!(_i27 < _f2s8.length)) {\n            _context14.next = 95;\n            break;\n          }\n          _f2_code5 = _f2s8[_i27].code;\n          _context14.next = 88;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [_f2_code5]);\n        case 88:\n          _yield$connection$que67 = _context14.sent;\n          _yield$connection$que68 = _slicedToArray(_yield$connection$que67, 1);\n          _f3s5 = _yield$connection$que68[0];\n          if (_f3s5.length > 0) f3 += _f3s5.length;\n        case 92:\n          _i27++;\n          _context14.next = 84;\n          break;\n        case 95:\n          _i26++;\n          _context14.next = 76;\n          break;\n        case 98:\n          // Tổng số f4\n          f4 = 0;\n          _i28 = 0;\n        case 100:\n          if (!(_i28 < f1s.length)) {\n            _context14.next = 133;\n            break;\n          }\n          _f1_code9 = f1s[_i28].code; // Mã giới thiệu f1\n          _context14.next = 104;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [_f1_code9]);\n        case 104:\n          _yield$connection$que69 = _context14.sent;\n          _yield$connection$que70 = _slicedToArray(_yield$connection$que69, 1);\n          _f2s9 = _yield$connection$que70[0];\n          _i29 = 0;\n        case 108:\n          if (!(_i29 < _f2s9.length)) {\n            _context14.next = 130;\n            break;\n          }\n          _f2_code6 = _f2s9[_i29].code;\n          _context14.next = 112;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [_f2_code6]);\n        case 112:\n          _yield$connection$que71 = _context14.sent;\n          _yield$connection$que72 = _slicedToArray(_yield$connection$que71, 1);\n          _f3s6 = _yield$connection$que72[0];\n          _i30 = 0;\n        case 116:\n          if (!(_i30 < _f3s6.length)) {\n            _context14.next = 127;\n            break;\n          }\n          _f3_code3 = _f3s6[_i30].code;\n          _context14.next = 120;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [_f3_code3]);\n        case 120:\n          _yield$connection$que73 = _context14.sent;\n          _yield$connection$que74 = _slicedToArray(_yield$connection$que73, 1);\n          _f4s3 = _yield$connection$que74[0];\n          if (_f4s3.length > 0) f4 += _f4s3.length;\n        case 124:\n          _i30++;\n          _context14.next = 116;\n          break;\n        case 127:\n          _i29++;\n          _context14.next = 108;\n          break;\n        case 130:\n          _i28++;\n          _context14.next = 100;\n          break;\n        case 133:\n          _context14.next = 135;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 ', [phone]);\n        case 135:\n          _yield$connection$que75 = _context14.sent;\n          _yield$connection$que76 = _slicedToArray(_yield$connection$que75, 1);\n          list_mem = _yield$connection$que76[0];\n          _context14.next = 140;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE ctv = ? AND status = 2 AND veri = 1 ', [phone]);\n        case 140:\n          _yield$connection$que77 = _context14.sent;\n          _yield$connection$que78 = _slicedToArray(_yield$connection$que77, 1);\n          list_mem_baned = _yield$connection$que78[0];\n          total_recharge = 0;\n          total_withdraw = 0;\n          _i31 = 0;\n        case 146:\n          if (!(_i31 < list_mem.length)) {\n            _context14.next = 163;\n            break;\n          }\n          _phone = list_mem[_i31].phone;\n          _context14.next = 150;\n          return _connectDB[\"default\"].query('SELECT SUM(money) as money FROM recharge WHERE phone = ? AND status = 1 ', [_phone]);\n        case 150:\n          _yield$connection$que79 = _context14.sent;\n          _yield$connection$que80 = _slicedToArray(_yield$connection$que79, 1);\n          recharge = _yield$connection$que80[0];\n          _context14.next = 155;\n          return _connectDB[\"default\"].query('SELECT SUM(money) as money FROM withdraw WHERE phone = ? AND status = 1 ', [_phone]);\n        case 155:\n          _yield$connection$que81 = _context14.sent;\n          _yield$connection$que82 = _slicedToArray(_yield$connection$que81, 1);\n          withdraw = _yield$connection$que82[0];\n          if (recharge[0].money) {\n            total_recharge += Number(recharge[0].money);\n          }\n          if (withdraw[0].money) {\n            total_withdraw += Number(withdraw[0].money);\n          }\n        case 160:\n          _i31++;\n          _context14.next = 146;\n          break;\n        case 163:\n          total_recharge_today = 0;\n          total_withdraw_today = 0;\n          _i32 = 0;\n        case 166:\n          if (!(_i32 < list_mem.length)) {\n            _context14.next = 183;\n            break;\n          }\n          _phone2 = list_mem[_i32].phone;\n          _context14.next = 170;\n          return _connectDB[\"default\"].query('SELECT `money`, `time` FROM recharge WHERE phone = ? AND status = 1 ', [_phone2]);\n        case 170:\n          _yield$connection$que83 = _context14.sent;\n          _yield$connection$que84 = _slicedToArray(_yield$connection$que83, 1);\n          recharge_today = _yield$connection$que84[0];\n          _context14.next = 175;\n          return _connectDB[\"default\"].query('SELECT `money`, `time` FROM withdraw WHERE phone = ? AND status = 1 ', [_phone2]);\n        case 175:\n          _yield$connection$que85 = _context14.sent;\n          _yield$connection$que86 = _slicedToArray(_yield$connection$que85, 1);\n          withdraw_today = _yield$connection$que86[0];\n          for (_i33 = 0; _i33 < recharge_today.length; _i33++) {\n            today = timerJoin();\n            time = timerJoin(recharge_today[_i33].time);\n            if (time == today) {\n              total_recharge_today += recharge_today[_i33].money;\n            }\n          }\n          for (_i34 = 0; _i34 < withdraw_today.length; _i34++) {\n            _today = timerJoin();\n            _time = timerJoin(withdraw_today[_i34].time);\n            if (_time == _today) {\n              total_withdraw_today += withdraw_today[_i34].money;\n            }\n          }\n        case 180:\n          _i32++;\n          _context14.next = 166;\n          break;\n        case 183:\n          win = 0;\n          loss = 0;\n          _i35 = 0;\n        case 186:\n          if (!(_i35 < list_mem.length)) {\n            _context14.next = 203;\n            break;\n          }\n          _phone3 = list_mem[_i35].phone;\n          _context14.next = 190;\n          return _connectDB[\"default\"].query('SELECT `money`, `time` FROM minutes_1 WHERE phone = ? AND status = 1 ', [_phone3]);\n        case 190:\n          _yield$connection$que87 = _context14.sent;\n          _yield$connection$que88 = _slicedToArray(_yield$connection$que87, 1);\n          wins = _yield$connection$que88[0];\n          _context14.next = 195;\n          return _connectDB[\"default\"].query('SELECT `money`, `time` FROM minutes_1 WHERE phone = ? AND status = 2 ', [_phone3]);\n        case 195:\n          _yield$connection$que89 = _context14.sent;\n          _yield$connection$que90 = _slicedToArray(_yield$connection$que89, 1);\n          losses = _yield$connection$que90[0];\n          for (_i36 = 0; _i36 < wins.length; _i36++) {\n            _today2 = timerJoin();\n            _time2 = timerJoin(wins[_i36].time);\n            if (_time2 == _today2) {\n              win += wins[_i36].money;\n            }\n          }\n          for (_i37 = 0; _i37 < losses.length; _i37++) {\n            _today3 = timerJoin();\n            _time3 = timerJoin(losses[_i37].time);\n            if (_time3 == _today3) {\n              loss += losses[_i37].money;\n            }\n          }\n        case 200:\n          _i35++;\n          _context14.next = 186;\n          break;\n        case 203:\n          list_mems = [];\n          _context14.next = 206;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 ', [phone]);\n        case 206:\n          _yield$connection$que91 = _context14.sent;\n          _yield$connection$que92 = _slicedToArray(_yield$connection$que91, 1);\n          list_mem_today = _yield$connection$que92[0];\n          _i38 = 0;\n        case 210:\n          if (!(_i38 < list_mem_today.length)) {\n            _context14.next = 225;\n            break;\n          }\n          _today4 = timerJoin();\n          _time4 = timerJoin(list_mem_today[_i38].time);\n          if (!(_time4 == _today4)) {\n            _context14.next = 222;\n            break;\n          }\n          _context14.next = 216;\n          return _connectDB[\"default\"].query('SELECT `phone` FROM users WHERE code = ? ', [list_mem_today[_i38].invite]);\n        case 216:\n          _yield$connection$que93 = _context14.sent;\n          _yield$connection$que94 = _slicedToArray(_yield$connection$que93, 1);\n          phone_invites = _yield$connection$que94[0];\n          phone_invite = phone_invites[0].phone;\n          data = _objectSpread(_objectSpread({}, list_mem_today[_i38]), {}, {\n            phone_invite: phone_invite\n          });\n          list_mems.push(data);\n        case 222:\n          _i38++;\n          _context14.next = 210;\n          break;\n        case 225:\n          _context14.next = 227;\n          return _connectDB[\"default\"].query('SELECT * FROM point_list WHERE phone = ? ', [phone]);\n        case 227:\n          _yield$connection$que95 = _context14.sent;\n          _yield$connection$que96 = _slicedToArray(_yield$connection$que95, 1);\n          point_list = _yield$connection$que96[0];\n          moneyCTV = point_list[0].money;\n          list_recharge_news = [];\n          list_withdraw_news = [];\n          _i39 = 0;\n        case 234:\n          if (!(_i39 < list_mem.length)) {\n            _context14.next = 251;\n            break;\n          }\n          _phone4 = list_mem[_i39].phone;\n          _context14.next = 238;\n          return _connectDB[\"default\"].query('SELECT `id`, `status`, `type`,`phone`, `money`, `time` FROM recharge WHERE phone = ? AND status = 1 ', [_phone4]);\n        case 238:\n          _yield$connection$que97 = _context14.sent;\n          _yield$connection$que98 = _slicedToArray(_yield$connection$que97, 1);\n          _recharge_today = _yield$connection$que98[0];\n          _context14.next = 243;\n          return _connectDB[\"default\"].query('SELECT `id`, `status`,`phone`, `money`, `time` FROM withdraw WHERE phone = ? AND status = 1 ', [_phone4]);\n        case 243:\n          _yield$connection$que99 = _context14.sent;\n          _yield$connection$que100 = _slicedToArray(_yield$connection$que99, 1);\n          _withdraw_today = _yield$connection$que100[0];\n          for (_i40 = 0; _i40 < _recharge_today.length; _i40++) {\n            _today5 = timerJoin();\n            _time5 = timerJoin(_recharge_today[_i40].time);\n            if (_time5 == _today5) {\n              list_recharge_news.push(_recharge_today[_i40]);\n            }\n          }\n          for (_i41 = 0; _i41 < _withdraw_today.length; _i41++) {\n            _today6 = timerJoin();\n            _time6 = timerJoin(_withdraw_today[_i41].time);\n            if (_time6 == _today6) {\n              list_withdraw_news.push(_withdraw_today[_i41]);\n            }\n          }\n        case 248:\n          _i39++;\n          _context14.next = 234;\n          break;\n        case 251:\n          _context14.next = 253;\n          return _connectDB[\"default\"].query('SELECT * FROM redenvelopes_used WHERE phone = ? ', [phone]);\n        case 253:\n          _yield$connection$que101 = _context14.sent;\n          _yield$connection$que102 = _slicedToArray(_yield$connection$que101, 1);\n          redenvelopes_used = _yield$connection$que102[0];\n          redenvelopes_used_today = [];\n          for (_i42 = 0; _i42 < redenvelopes_used.length; _i42++) {\n            _today7 = timerJoin();\n            _time7 = timerJoin(redenvelopes_used[_i42].time);\n            if (_time7 == _today7) {\n              redenvelopes_used_today.push(redenvelopes_used[_i42]);\n            }\n          }\n          _context14.next = 260;\n          return _connectDB[\"default\"].query('SELECT * FROM financial_details WHERE phone = ? ', [phone]);\n        case 260:\n          _yield$connection$que103 = _context14.sent;\n          _yield$connection$que104 = _slicedToArray(_yield$connection$que103, 1);\n          financial_details = _yield$connection$que104[0];\n          financial_details_today = [];\n          for (_i43 = 0; _i43 < financial_details.length; _i43++) {\n            _today8 = timerJoin();\n            _time8 = timerJoin(financial_details[_i43].time);\n            if (_time8 == _today8) {\n              financial_details_today.push(financial_details[_i43]);\n            }\n          }\n          return _context14.abrupt(\"return\", res.status(200).json({\n            message: 'Success',\n            status: true,\n            datas: user,\n            f1: f1s.length,\n            f2: f2,\n            f3: f3,\n            f4: f4,\n            list_mems: list_mems,\n            total_recharge: total_recharge,\n            total_withdraw: total_withdraw,\n            total_recharge_today: total_recharge_today,\n            total_withdraw_today: total_withdraw_today,\n            list_mem_baned: list_mem_baned.length,\n            win: win,\n            loss: loss,\n            list_recharge_news: list_recharge_news,\n            list_withdraw_news: list_withdraw_news,\n            moneyCTV: moneyCTV,\n            redenvelopes_used: redenvelopes_used_today,\n            financial_details_today: financial_details_today\n          }));\n        case 266:\n        case \"end\":\n          return _context14.stop();\n      }\n    }, _callee14);\n  }));\n  return function infoCtv(_x28, _x29) {\n    return _ref14.apply(this, arguments);\n  };\n}();\nvar infoCtv2 = /*#__PURE__*/function () {\n  var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(req, res) {\n    var auth, timeDate, formateT, timerJoin, _yield$connection$que105, _yield$connection$que106, user, userInfo, phone, _yield$connection$que107, _yield$connection$que108, list_mem, list_mems, _yield$connection$que109, _yield$connection$que110, list_mem_today, i, today, time, _yield$connection$que111, _yield$connection$que112, phone_invites, phone_invite, data, list_recharge_news, list_withdraw_news, _i44, _phone5, _yield$connection$que113, _yield$connection$que114, recharge_today, _yield$connection$que115, _yield$connection$que116, withdraw_today, _i45, _today9, _time9, _i46, _today10, _time10, _yield$connection$que117, _yield$connection$que118, redenvelopes_used, redenvelopes_used_today, _i47, _today11, _time11, _yield$connection$que119, _yield$connection$que120, financial_details, financial_details_today, _i48, _today12, _time12;\n    return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n      while (1) switch (_context15.prev = _context15.next) {\n        case 0:\n          timerJoin = function _timerJoin() {\n            var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n            var addHours = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var date = '';\n            if (params) {\n              date = new Date(Number(params));\n            } else {\n              date = new Date();\n            }\n            date.setHours(date.getHours() + addHours);\n            var years = formateT(date.getFullYear());\n            var months = formateT(date.getMonth() + 1);\n            var days = formateT(date.getDate());\n            var hours = date.getHours() % 12;\n            hours = hours === 0 ? 12 : hours;\n            var ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n            var minutes = formateT(date.getMinutes());\n            var seconds = formateT(date.getSeconds());\n            return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;\n          };\n          formateT = function _formateT(params) {\n            var result = params < 10 ? \"0\" + params : params;\n            return result;\n          };\n          auth = req.cookies.auth;\n          timeDate = req.body.timeDate;\n          _context15.next = 6;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE token = ? ', [auth]);\n        case 6:\n          _yield$connection$que105 = _context15.sent;\n          _yield$connection$que106 = _slicedToArray(_yield$connection$que105, 1);\n          user = _yield$connection$que106[0];\n          if (!(user.length == 0)) {\n            _context15.next = 11;\n            break;\n          }\n          return _context15.abrupt(\"return\", res.status(200).json({\n            message: 'Phone Error',\n            status: false\n          }));\n        case 11:\n          userInfo = user[0];\n          phone = userInfo.phone;\n          _context15.next = 15;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 ', [phone]);\n        case 15:\n          _yield$connection$que107 = _context15.sent;\n          _yield$connection$que108 = _slicedToArray(_yield$connection$que107, 1);\n          list_mem = _yield$connection$que108[0];\n          list_mems = [];\n          _context15.next = 21;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 ', [phone]);\n        case 21:\n          _yield$connection$que109 = _context15.sent;\n          _yield$connection$que110 = _slicedToArray(_yield$connection$que109, 1);\n          list_mem_today = _yield$connection$que110[0];\n          i = 0;\n        case 25:\n          if (!(i < list_mem_today.length)) {\n            _context15.next = 40;\n            break;\n          }\n          today = timeDate;\n          time = timerJoin(list_mem_today[i].time);\n          if (!(time == today)) {\n            _context15.next = 37;\n            break;\n          }\n          _context15.next = 31;\n          return _connectDB[\"default\"].query('SELECT `phone` FROM users WHERE code = ? ', [list_mem_today[i].invite]);\n        case 31:\n          _yield$connection$que111 = _context15.sent;\n          _yield$connection$que112 = _slicedToArray(_yield$connection$que111, 1);\n          phone_invites = _yield$connection$que112[0];\n          phone_invite = phone_invites[0].phone;\n          data = _objectSpread(_objectSpread({}, list_mem_today[i]), {}, {\n            phone_invite: phone_invite\n          });\n          list_mems.push(data);\n        case 37:\n          i++;\n          _context15.next = 25;\n          break;\n        case 40:\n          list_recharge_news = [];\n          list_withdraw_news = [];\n          _i44 = 0;\n        case 43:\n          if (!(_i44 < list_mem.length)) {\n            _context15.next = 60;\n            break;\n          }\n          _phone5 = list_mem[_i44].phone;\n          _context15.next = 47;\n          return _connectDB[\"default\"].query('SELECT `id`, `status`, `type`,`phone`, `money`, `time` FROM recharge WHERE phone = ? AND status = 1 ', [_phone5]);\n        case 47:\n          _yield$connection$que113 = _context15.sent;\n          _yield$connection$que114 = _slicedToArray(_yield$connection$que113, 1);\n          recharge_today = _yield$connection$que114[0];\n          _context15.next = 52;\n          return _connectDB[\"default\"].query('SELECT `id`, `status`,`phone`, `money`, `time` FROM withdraw WHERE phone = ? AND status = 1 ', [_phone5]);\n        case 52:\n          _yield$connection$que115 = _context15.sent;\n          _yield$connection$que116 = _slicedToArray(_yield$connection$que115, 1);\n          withdraw_today = _yield$connection$que116[0];\n          for (_i45 = 0; _i45 < recharge_today.length; _i45++) {\n            _today9 = timeDate;\n            _time9 = timerJoin(recharge_today[_i45].time);\n            if (_time9 == _today9) {\n              list_recharge_news.push(recharge_today[_i45]);\n            }\n          }\n          for (_i46 = 0; _i46 < withdraw_today.length; _i46++) {\n            _today10 = timeDate;\n            _time10 = timerJoin(withdraw_today[_i46].time);\n            if (_time10 == _today10) {\n              list_withdraw_news.push(withdraw_today[_i46]);\n            }\n          }\n        case 57:\n          _i44++;\n          _context15.next = 43;\n          break;\n        case 60:\n          _context15.next = 62;\n          return _connectDB[\"default\"].query('SELECT * FROM redenvelopes_used WHERE phone = ? ', [phone]);\n        case 62:\n          _yield$connection$que117 = _context15.sent;\n          _yield$connection$que118 = _slicedToArray(_yield$connection$que117, 1);\n          redenvelopes_used = _yield$connection$que118[0];\n          redenvelopes_used_today = [];\n          for (_i47 = 0; _i47 < redenvelopes_used.length; _i47++) {\n            _today11 = timeDate;\n            _time11 = timerJoin(redenvelopes_used[_i47].time);\n            if (_time11 == _today11) {\n              redenvelopes_used_today.push(redenvelopes_used[_i47]);\n            }\n          }\n          _context15.next = 69;\n          return _connectDB[\"default\"].query('SELECT * FROM financial_details WHERE phone = ? ', [phone]);\n        case 69:\n          _yield$connection$que119 = _context15.sent;\n          _yield$connection$que120 = _slicedToArray(_yield$connection$que119, 1);\n          financial_details = _yield$connection$que120[0];\n          financial_details_today = [];\n          for (_i48 = 0; _i48 < financial_details.length; _i48++) {\n            _today12 = timeDate;\n            _time12 = timerJoin(financial_details[_i48].time);\n            if (_time12 == _today12) {\n              financial_details_today.push(financial_details[_i48]);\n            }\n          }\n          return _context15.abrupt(\"return\", res.status(200).json({\n            message: 'Success',\n            status: true,\n            datas: user,\n            list_mems: list_mems,\n            list_recharge_news: list_recharge_news,\n            list_withdraw_news: list_withdraw_news,\n            redenvelopes_used: redenvelopes_used_today,\n            financial_details_today: financial_details_today\n          }));\n        case 75:\n        case \"end\":\n          return _context15.stop();\n      }\n    }, _callee15);\n  }));\n  return function infoCtv2(_x30, _x31) {\n    return _ref15.apply(this, arguments);\n  };\n}();\nvar createBonus = /*#__PURE__*/function () {\n  var _ref16 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(req, res) {\n    var randomString, formateT, timerJoin, d, time, auth, money, _yield$connection$que121, _yield$connection$que122, user, userInfo, _yield$connection$que123, _yield$connection$que124, point_list, ctv, id_redenvelops, sql, _yield$connection$que125, _yield$connection$que126, _point_list;\n    return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n      while (1) switch (_context16.prev = _context16.next) {\n        case 0:\n          timerJoin = function _timerJoin2() {\n            var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n            var addHours = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var date = '';\n            if (params) {\n              date = new Date(Number(params));\n            } else {\n              date = new Date();\n            }\n            date.setHours(date.getHours() + addHours);\n            var years = formateT(date.getFullYear());\n            var months = formateT(date.getMonth() + 1);\n            var days = formateT(date.getDate());\n            var hours = date.getHours() % 12;\n            hours = hours === 0 ? 12 : hours;\n            var ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n            var minutes = formateT(date.getMinutes());\n            var seconds = formateT(date.getSeconds());\n            return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;\n          };\n          formateT = function _formateT2(params) {\n            var result = params < 10 ? \"0\" + params : params;\n            return result;\n          };\n          randomString = function randomString(length) {\n            var result = '';\n            var characters = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n            var charactersLength = characters.length;\n            for (var i = 0; i < length; i++) {\n              result += characters.charAt(Math.floor(Math.random() * charactersLength));\n            }\n            return result;\n          };\n          d = new Date();\n          time = d.getTime();\n          auth = req.cookies.auth;\n          money = req.body.money;\n          if (!(!money || !auth)) {\n            _context16.next = 9;\n            break;\n          }\n          return _context16.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 9:\n          _context16.next = 11;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE token = ? ', [auth]);\n        case 11:\n          _yield$connection$que121 = _context16.sent;\n          _yield$connection$que122 = _slicedToArray(_yield$connection$que121, 1);\n          user = _yield$connection$que122[0];\n          if (!(user.length == 0)) {\n            _context16.next = 16;\n            break;\n          }\n          return _context16.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 16:\n          userInfo = user[0];\n          _context16.next = 19;\n          return _connectDB[\"default\"].query('SELECT * FROM point_list WHERE phone = ? ', [userInfo.phone]);\n        case 19:\n          _yield$connection$que123 = _context16.sent;\n          _yield$connection$que124 = _slicedToArray(_yield$connection$que123, 1);\n          point_list = _yield$connection$que124[0];\n          if (!(point_list.length == 0)) {\n            _context16.next = 24;\n            break;\n          }\n          return _context16.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 24:\n          ctv = point_list[0];\n          if (!(ctv.money - money >= 0)) {\n            _context16.next = 40;\n            break;\n          }\n          id_redenvelops = randomString(16);\n          _context16.next = 29;\n          return _connectDB[\"default\"].execute('UPDATE `point_list` SET money = money - ? WHERE phone = ?', [money, ctv.phone]);\n        case 29:\n          sql = \"INSERT INTO redenvelopes SET id_redenvelope = ?, phone = ?, money = ?, used = ?, amount = ?, status = ?, time = ?\";\n          _context16.next = 32;\n          return _connectDB[\"default\"].query(sql, [id_redenvelops, userInfo.phone, money, 1, 1, 0, time]);\n        case 32:\n          _context16.next = 34;\n          return _connectDB[\"default\"].query('SELECT `money` FROM point_list WHERE phone = ? ', [userInfo.phone]);\n        case 34:\n          _yield$connection$que125 = _context16.sent;\n          _yield$connection$que126 = _slicedToArray(_yield$connection$que125, 1);\n          _point_list = _yield$connection$que126[0];\n          return _context16.abrupt(\"return\", res.status(200).json({\n            message: 'Successful gift creation',\n            status: true,\n            id: id_redenvelops,\n            money: _point_list[0].money\n          }));\n        case 40:\n          return _context16.abrupt(\"return\", res.status(200).json({\n            message: 'The balance is not enough to create gifts',\n            status: false\n          }));\n        case 41:\n        case \"end\":\n          return _context16.stop();\n      }\n    }, _callee16);\n  }));\n  return function createBonus(_x32, _x33) {\n    return _ref16.apply(this, arguments);\n  };\n}();\nvar listRedenvelops = /*#__PURE__*/function () {\n  var _ref17 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17(req, res) {\n    var auth, _yield$connection$que127, _yield$connection$que128, user, userInfo, _yield$connection$que129, _yield$connection$que130, redenvelopes;\n    return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n      while (1) switch (_context17.prev = _context17.next) {\n        case 0:\n          auth = req.cookies.auth;\n          _context17.next = 3;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE token = ? ', [auth]);\n        case 3:\n          _yield$connection$que127 = _context17.sent;\n          _yield$connection$que128 = _slicedToArray(_yield$connection$que127, 1);\n          user = _yield$connection$que128[0];\n          if (!(user.length == 0)) {\n            _context17.next = 8;\n            break;\n          }\n          return _context17.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 8:\n          userInfo = user[0];\n          _context17.next = 11;\n          return _connectDB[\"default\"].query('SELECT * FROM redenvelopes WHERE phone = ? ORDER BY id DESC', [userInfo.phone]);\n        case 11:\n          _yield$connection$que129 = _context17.sent;\n          _yield$connection$que130 = _slicedToArray(_yield$connection$que129, 1);\n          redenvelopes = _yield$connection$que130[0];\n          return _context17.abrupt(\"return\", res.status(200).json({\n            message: 'Successful change',\n            status: true,\n            redenvelopes: redenvelopes\n          }));\n        case 15:\n        case \"end\":\n          return _context17.stop();\n      }\n    }, _callee17);\n  }));\n  return function listRedenvelops(_x34, _x35) {\n    return _ref17.apply(this, arguments);\n  };\n}();\nvar listMember = /*#__PURE__*/function () {\n  var _ref18 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(req, res) {\n    var auth, _req$body, pageno, limit, _yield$connection$exe13, _yield$connection$exe14, checkInfo, userInfo, _yield$connection$que131, _yield$connection$que132, users, _yield$connection$que133, _yield$connection$que134, total_users;\n    return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n      while (1) switch (_context18.prev = _context18.next) {\n        case 0:\n          auth = req.cookies.auth;\n          _req$body = req.body, pageno = _req$body.pageno, limit = _req$body.limit;\n          _context18.next = 4;\n          return _connectDB[\"default\"].execute('SELECT * FROM users WHERE token = ?', [auth]);\n        case 4:\n          _yield$connection$exe13 = _context18.sent;\n          _yield$connection$exe14 = _slicedToArray(_yield$connection$exe13, 1);\n          checkInfo = _yield$connection$exe14[0];\n          if (!(checkInfo.length == 0)) {\n            _context18.next = 9;\n            break;\n          }\n          return _context18.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            status: false\n          }));\n        case 9:\n          userInfo = checkInfo[0];\n          if (!(!pageno || !limit)) {\n            _context18.next = 12;\n            break;\n          }\n          return _context18.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            status: false\n          }));\n        case 12:\n          if (!(pageno < 0 || limit < 0)) {\n            _context18.next = 14;\n            break;\n          }\n          return _context18.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            status: false\n          }));\n        case 14:\n          _context18.next = 16;\n          return _connectDB[\"default\"].query(\"SELECT id_user, phone, money, total_money, status, time FROM users WHERE veri = 1 AND level = 0 AND ctv = ? ORDER BY id DESC LIMIT \".concat(pageno, \", \").concat(limit, \" \"), [userInfo.phone]);\n        case 16:\n          _yield$connection$que131 = _context18.sent;\n          _yield$connection$que132 = _slicedToArray(_yield$connection$que131, 1);\n          users = _yield$connection$que132[0];\n          _context18.next = 21;\n          return _connectDB[\"default\"].query(\"SELECT * FROM users WHERE veri = 1 AND level = 0 AND ctv = ? \", [userInfo.phone]);\n        case 21:\n          _yield$connection$que133 = _context18.sent;\n          _yield$connection$que134 = _slicedToArray(_yield$connection$que133, 1);\n          total_users = _yield$connection$que134[0];\n          return _context18.abrupt(\"return\", res.status(200).json({\n            message: 'Success',\n            status: true,\n            datas: users,\n            page_total: Math.ceil(total_users.length / limit)\n          }));\n        case 25:\n        case \"end\":\n          return _context18.stop();\n      }\n    }, _callee18);\n  }));\n  return function listMember(_x36, _x37) {\n    return _ref18.apply(this, arguments);\n  };\n}();\nvar listRechargeP = /*#__PURE__*/function () {\n  var _ref19 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19(req, res) {\n    var auth, _yield$connection$que135, _yield$connection$que136, user, userInfo, _yield$connection$que137, _yield$connection$que138, list_mem, list_recharge_news, i, phone, _yield$connection$que139, _yield$connection$que140, recharge_today, _i49;\n    return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n      while (1) switch (_context19.prev = _context19.next) {\n        case 0:\n          auth = req.cookies.auth;\n          _context19.next = 3;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE token = ? ', [auth]);\n        case 3:\n          _yield$connection$que135 = _context19.sent;\n          _yield$connection$que136 = _slicedToArray(_yield$connection$que135, 1);\n          user = _yield$connection$que136[0];\n          if (!(user.length == 0)) {\n            _context19.next = 8;\n            break;\n          }\n          return _context19.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 8:\n          userInfo = user[0];\n          _context19.next = 11;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 ', [userInfo.phone]);\n        case 11:\n          _yield$connection$que137 = _context19.sent;\n          _yield$connection$que138 = _slicedToArray(_yield$connection$que137, 1);\n          list_mem = _yield$connection$que138[0];\n          list_recharge_news = [];\n          i = 0;\n        case 16:\n          if (!(i < list_mem.length)) {\n            _context19.next = 27;\n            break;\n          }\n          phone = list_mem[i].phone;\n          _context19.next = 20;\n          return _connectDB[\"default\"].query('SELECT * FROM recharge WHERE phone = ? ORDER BY id DESC LIMIT 100', [phone]);\n        case 20:\n          _yield$connection$que139 = _context19.sent;\n          _yield$connection$que140 = _slicedToArray(_yield$connection$que139, 1);\n          recharge_today = _yield$connection$que140[0];\n          for (_i49 = 0; _i49 < recharge_today.length; _i49++) {\n            list_recharge_news.push(recharge_today[_i49]);\n          }\n        case 24:\n          i++;\n          _context19.next = 16;\n          break;\n        case 27:\n          return _context19.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: true,\n            list_recharge_news: list_recharge_news,\n            timeStamp: timeNow\n          }));\n        case 28:\n        case \"end\":\n          return _context19.stop();\n      }\n    }, _callee19);\n  }));\n  return function listRechargeP(_x38, _x39) {\n    return _ref19.apply(this, arguments);\n  };\n}();\nvar listWithdrawP = /*#__PURE__*/function () {\n  var _ref20 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee20(req, res) {\n    var auth, _yield$connection$que141, _yield$connection$que142, user, userInfo, _yield$connection$que143, _yield$connection$que144, list_mem, list_withdraw_news, i, phone, _yield$connection$que145, _yield$connection$que146, withdraw_today, _i50;\n    return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n      while (1) switch (_context20.prev = _context20.next) {\n        case 0:\n          auth = req.cookies.auth;\n          _context20.next = 3;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE token = ? ', [auth]);\n        case 3:\n          _yield$connection$que141 = _context20.sent;\n          _yield$connection$que142 = _slicedToArray(_yield$connection$que141, 1);\n          user = _yield$connection$que142[0];\n          if (!(user.length == 0)) {\n            _context20.next = 8;\n            break;\n          }\n          return _context20.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 8:\n          userInfo = user[0];\n          _context20.next = 11;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 ', [userInfo.phone]);\n        case 11:\n          _yield$connection$que143 = _context20.sent;\n          _yield$connection$que144 = _slicedToArray(_yield$connection$que143, 1);\n          list_mem = _yield$connection$que144[0];\n          list_withdraw_news = [];\n          i = 0;\n        case 16:\n          if (!(i < list_mem.length)) {\n            _context20.next = 27;\n            break;\n          }\n          phone = list_mem[i].phone;\n          _context20.next = 20;\n          return _connectDB[\"default\"].query('SELECT * FROM withdraw WHERE phone = ? ORDER BY id DESC LIMIT 100', [phone]);\n        case 20:\n          _yield$connection$que145 = _context20.sent;\n          _yield$connection$que146 = _slicedToArray(_yield$connection$que145, 1);\n          withdraw_today = _yield$connection$que146[0];\n          for (_i50 = 0; _i50 < withdraw_today.length; _i50++) {\n            list_withdraw_news.push(withdraw_today[_i50]);\n          }\n        case 24:\n          i++;\n          _context20.next = 16;\n          break;\n        case 27:\n          return _context20.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: true,\n            list_withdraw_news: list_withdraw_news,\n            timeStamp: timeNow\n          }));\n        case 28:\n        case \"end\":\n          return _context20.stop();\n      }\n    }, _callee20);\n  }));\n  return function listWithdrawP(_x40, _x41) {\n    return _ref20.apply(this, arguments);\n  };\n}();\nvar listRechargeMem = /*#__PURE__*/function () {\n  var _ref21 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee21(req, res) {\n    var auth, phone, _req$body2, pageno, limit, _yield$connection$que147, _yield$connection$que148, user, _yield$connection$que149, _yield$connection$que150, auths, _user$2, token, password, otp, level, userInfo, _yield$connection$que151, _yield$connection$que152, recharge, _yield$connection$que153, _yield$connection$que154, total_users;\n    return _regeneratorRuntime().wrap(function _callee21$(_context21) {\n      while (1) switch (_context21.prev = _context21.next) {\n        case 0:\n          auth = req.cookies.auth;\n          phone = req.params.phone;\n          _req$body2 = req.body, pageno = _req$body2.pageno, limit = _req$body2.limit;\n          if (!(!pageno || !limit)) {\n            _context21.next = 5;\n            break;\n          }\n          return _context21.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            status: false\n          }));\n        case 5:\n          if (!(pageno < 0 || limit < 0)) {\n            _context21.next = 7;\n            break;\n          }\n          return _context21.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            status: false\n          }));\n        case 7:\n          if (phone) {\n            _context21.next = 9;\n            break;\n          }\n          return _context21.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 9:\n          _context21.next = 11;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE phone = ? ', [phone]);\n        case 11:\n          _yield$connection$que147 = _context21.sent;\n          _yield$connection$que148 = _slicedToArray(_yield$connection$que147, 1);\n          user = _yield$connection$que148[0];\n          _context21.next = 16;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE token = ? ', [auth]);\n        case 16:\n          _yield$connection$que149 = _context21.sent;\n          _yield$connection$que150 = _slicedToArray(_yield$connection$que149, 1);\n          auths = _yield$connection$que150[0];\n          if (!(user.length == 0 || auths.length == 0)) {\n            _context21.next = 21;\n            break;\n          }\n          return _context21.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 21:\n          _user$2 = user[0], token = _user$2.token, password = _user$2.password, otp = _user$2.otp, level = _user$2.level, userInfo = _objectWithoutProperties(_user$2, _excluded2);\n          if (!(auths[0].phone != userInfo.ctv)) {\n            _context21.next = 24;\n            break;\n          }\n          return _context21.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 24:\n          _context21.next = 26;\n          return _connectDB[\"default\"].query(\"SELECT * FROM recharge WHERE phone = ? ORDER BY id DESC LIMIT \".concat(pageno, \", \").concat(limit, \" \"), [phone]);\n        case 26:\n          _yield$connection$que151 = _context21.sent;\n          _yield$connection$que152 = _slicedToArray(_yield$connection$que151, 1);\n          recharge = _yield$connection$que152[0];\n          _context21.next = 31;\n          return _connectDB[\"default\"].query(\"SELECT * FROM recharge WHERE phone = ?\", [phone]);\n        case 31:\n          _yield$connection$que153 = _context21.sent;\n          _yield$connection$que154 = _slicedToArray(_yield$connection$que153, 1);\n          total_users = _yield$connection$que154[0];\n          return _context21.abrupt(\"return\", res.status(200).json({\n            message: 'Success',\n            status: true,\n            datas: recharge,\n            page_total: Math.ceil(total_users.length / limit)\n          }));\n        case 35:\n        case \"end\":\n          return _context21.stop();\n      }\n    }, _callee21);\n  }));\n  return function listRechargeMem(_x42, _x43) {\n    return _ref21.apply(this, arguments);\n  };\n}();\nvar listWithdrawMem = /*#__PURE__*/function () {\n  var _ref22 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee22(req, res) {\n    var auth, phone, _req$body3, pageno, limit, _yield$connection$que155, _yield$connection$que156, user, _yield$connection$que157, _yield$connection$que158, auths, _user$3, token, password, otp, level, userInfo, _yield$connection$que159, _yield$connection$que160, withdraw, _yield$connection$que161, _yield$connection$que162, total_users;\n    return _regeneratorRuntime().wrap(function _callee22$(_context22) {\n      while (1) switch (_context22.prev = _context22.next) {\n        case 0:\n          auth = req.cookies.auth;\n          phone = req.params.phone;\n          _req$body3 = req.body, pageno = _req$body3.pageno, limit = _req$body3.limit;\n          if (!(!pageno || !limit)) {\n            _context22.next = 5;\n            break;\n          }\n          return _context22.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            status: false\n          }));\n        case 5:\n          if (!(pageno < 0 || limit < 0)) {\n            _context22.next = 7;\n            break;\n          }\n          return _context22.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            status: false\n          }));\n        case 7:\n          if (phone) {\n            _context22.next = 9;\n            break;\n          }\n          return _context22.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 9:\n          _context22.next = 11;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE phone = ? ', [phone]);\n        case 11:\n          _yield$connection$que155 = _context22.sent;\n          _yield$connection$que156 = _slicedToArray(_yield$connection$que155, 1);\n          user = _yield$connection$que156[0];\n          _context22.next = 16;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE token = ? ', [auth]);\n        case 16:\n          _yield$connection$que157 = _context22.sent;\n          _yield$connection$que158 = _slicedToArray(_yield$connection$que157, 1);\n          auths = _yield$connection$que158[0];\n          if (!(user.length == 0 || auths.length == 0)) {\n            _context22.next = 21;\n            break;\n          }\n          return _context22.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 21:\n          _user$3 = user[0], token = _user$3.token, password = _user$3.password, otp = _user$3.otp, level = _user$3.level, userInfo = _objectWithoutProperties(_user$3, _excluded3);\n          if (!(auths[0].phone != userInfo.ctv)) {\n            _context22.next = 24;\n            break;\n          }\n          return _context22.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 24:\n          _context22.next = 26;\n          return _connectDB[\"default\"].query(\"SELECT * FROM withdraw WHERE phone = ? ORDER BY id DESC LIMIT \".concat(pageno, \", \").concat(limit, \" \"), [phone]);\n        case 26:\n          _yield$connection$que159 = _context22.sent;\n          _yield$connection$que160 = _slicedToArray(_yield$connection$que159, 1);\n          withdraw = _yield$connection$que160[0];\n          _context22.next = 31;\n          return _connectDB[\"default\"].query(\"SELECT * FROM withdraw WHERE phone = ?\", [phone]);\n        case 31:\n          _yield$connection$que161 = _context22.sent;\n          _yield$connection$que162 = _slicedToArray(_yield$connection$que161, 1);\n          total_users = _yield$connection$que162[0];\n          return _context22.abrupt(\"return\", res.status(200).json({\n            message: 'Success',\n            status: true,\n            datas: withdraw,\n            page_total: Math.ceil(total_users.length / limit)\n          }));\n        case 35:\n        case \"end\":\n          return _context22.stop();\n      }\n    }, _callee22);\n  }));\n  return function listWithdrawMem(_x44, _x45) {\n    return _ref22.apply(this, arguments);\n  };\n}();\nvar listRedenvelope = /*#__PURE__*/function () {\n  var _ref23 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee23(req, res) {\n    var auth, phone, _req$body4, pageno, limit, _yield$connection$que163, _yield$connection$que164, user, _yield$connection$que165, _yield$connection$que166, auths, _user$4, token, password, otp, level, userInfo, _yield$connection$que167, _yield$connection$que168, redenvelopes_used, _yield$connection$que169, _yield$connection$que170, total_users;\n    return _regeneratorRuntime().wrap(function _callee23$(_context23) {\n      while (1) switch (_context23.prev = _context23.next) {\n        case 0:\n          auth = req.cookies.auth;\n          phone = req.params.phone;\n          _req$body4 = req.body, pageno = _req$body4.pageno, limit = _req$body4.limit;\n          if (!(!pageno || !limit)) {\n            _context23.next = 5;\n            break;\n          }\n          return _context23.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            status: false\n          }));\n        case 5:\n          if (!(pageno < 0 || limit < 0)) {\n            _context23.next = 7;\n            break;\n          }\n          return _context23.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            status: false\n          }));\n        case 7:\n          if (phone) {\n            _context23.next = 9;\n            break;\n          }\n          return _context23.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 9:\n          _context23.next = 11;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE phone = ? ', [phone]);\n        case 11:\n          _yield$connection$que163 = _context23.sent;\n          _yield$connection$que164 = _slicedToArray(_yield$connection$que163, 1);\n          user = _yield$connection$que164[0];\n          _context23.next = 16;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE token = ? ', [auth]);\n        case 16:\n          _yield$connection$que165 = _context23.sent;\n          _yield$connection$que166 = _slicedToArray(_yield$connection$que165, 1);\n          auths = _yield$connection$que166[0];\n          if (!(user.length == 0 || auths.length == 0)) {\n            _context23.next = 21;\n            break;\n          }\n          return _context23.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 21:\n          _user$4 = user[0], token = _user$4.token, password = _user$4.password, otp = _user$4.otp, level = _user$4.level, userInfo = _objectWithoutProperties(_user$4, _excluded4);\n          if (!(auths[0].phone != userInfo.ctv)) {\n            _context23.next = 24;\n            break;\n          }\n          return _context23.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 24:\n          _context23.next = 26;\n          return _connectDB[\"default\"].query(\"SELECT * FROM redenvelopes_used WHERE phone_used = ? ORDER BY id DESC LIMIT \".concat(pageno, \", \").concat(limit, \" \"), [phone]);\n        case 26:\n          _yield$connection$que167 = _context23.sent;\n          _yield$connection$que168 = _slicedToArray(_yield$connection$que167, 1);\n          redenvelopes_used = _yield$connection$que168[0];\n          _context23.next = 31;\n          return _connectDB[\"default\"].query(\"SELECT * FROM redenvelopes_used WHERE phone_used = ?\", [phone]);\n        case 31:\n          _yield$connection$que169 = _context23.sent;\n          _yield$connection$que170 = _slicedToArray(_yield$connection$que169, 1);\n          total_users = _yield$connection$que170[0];\n          return _context23.abrupt(\"return\", res.status(200).json({\n            message: 'Success',\n            status: true,\n            datas: redenvelopes_used,\n            page_total: Math.ceil(total_users.length / limit)\n          }));\n        case 35:\n        case \"end\":\n          return _context23.stop();\n      }\n    }, _callee23);\n  }));\n  return function listRedenvelope(_x46, _x47) {\n    return _ref23.apply(this, arguments);\n  };\n}();\nvar listBet = /*#__PURE__*/function () {\n  var _ref24 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee24(req, res) {\n    var auth, phone, _req$body5, pageno, limit, _yield$connection$que171, _yield$connection$que172, user, _yield$connection$que173, _yield$connection$que174, auths, _user$5, token, password, otp, level, userInfo, _yield$connection$que175, _yield$connection$que176, listBet, _yield$connection$que177, _yield$connection$que178, total_users;\n    return _regeneratorRuntime().wrap(function _callee24$(_context24) {\n      while (1) switch (_context24.prev = _context24.next) {\n        case 0:\n          auth = req.cookies.auth;\n          phone = req.params.phone;\n          _req$body5 = req.body, pageno = _req$body5.pageno, limit = _req$body5.limit;\n          if (!(!pageno || !limit)) {\n            _context24.next = 5;\n            break;\n          }\n          return _context24.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            status: false\n          }));\n        case 5:\n          if (!(pageno < 0 || limit < 0)) {\n            _context24.next = 7;\n            break;\n          }\n          return _context24.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            status: false\n          }));\n        case 7:\n          if (phone) {\n            _context24.next = 9;\n            break;\n          }\n          return _context24.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 9:\n          _context24.next = 11;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE phone = ? ', [phone]);\n        case 11:\n          _yield$connection$que171 = _context24.sent;\n          _yield$connection$que172 = _slicedToArray(_yield$connection$que171, 1);\n          user = _yield$connection$que172[0];\n          _context24.next = 16;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE token = ? ', [auth]);\n        case 16:\n          _yield$connection$que173 = _context24.sent;\n          _yield$connection$que174 = _slicedToArray(_yield$connection$que173, 1);\n          auths = _yield$connection$que174[0];\n          if (!(user.length == 0 || auths.length == 0)) {\n            _context24.next = 21;\n            break;\n          }\n          return _context24.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 21:\n          _user$5 = user[0], token = _user$5.token, password = _user$5.password, otp = _user$5.otp, level = _user$5.level, userInfo = _objectWithoutProperties(_user$5, _excluded5);\n          if (!(auths[0].phone != userInfo.ctv)) {\n            _context24.next = 24;\n            break;\n          }\n          return _context24.abrupt(\"return\", res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 24:\n          _context24.next = 26;\n          return _connectDB[\"default\"].query(\"SELECT * FROM minutes_1 WHERE phone = ? AND status != 0 ORDER BY id DESC LIMIT \".concat(pageno, \", \").concat(limit, \" \"), [phone]);\n        case 26:\n          _yield$connection$que175 = _context24.sent;\n          _yield$connection$que176 = _slicedToArray(_yield$connection$que175, 1);\n          listBet = _yield$connection$que176[0];\n          _context24.next = 31;\n          return _connectDB[\"default\"].query(\"SELECT * FROM minutes_1 WHERE phone = ? AND status != 0\", [phone]);\n        case 31:\n          _yield$connection$que177 = _context24.sent;\n          _yield$connection$que178 = _slicedToArray(_yield$connection$que177, 1);\n          total_users = _yield$connection$que178[0];\n          return _context24.abrupt(\"return\", res.status(200).json({\n            message: 'Success',\n            status: true,\n            datas: listBet,\n            page_total: Math.ceil(total_users.length / limit)\n          }));\n        case 35:\n        case \"end\":\n          return _context24.stop();\n      }\n    }, _callee24);\n  }));\n  return function listBet(_x48, _x49) {\n    return _ref24.apply(this, arguments);\n  };\n}();\nvar buffMoney = /*#__PURE__*/function () {\n  var _ref25 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee25(req, res) {\n    var auth, phone, select, money, _yield$connection$que179, _yield$connection$que180, users, _yield$connection$que181, _yield$connection$que182, auths, userInfo, authInfo, _yield$connection$que183, _yield$connection$que184, point_list, check, d, time, sql, _yield$connection$que185, _yield$connection$que186, moneyN, _d, _time13, _sql;\n    return _regeneratorRuntime().wrap(function _callee25$(_context25) {\n      while (1) switch (_context25.prev = _context25.next) {\n        case 0:\n          auth = req.cookies.auth;\n          phone = req.body.username;\n          select = req.body.select;\n          money = req.body.money;\n          if (!(!phone || !select || !money)) {\n            _context25.next = 6;\n            break;\n          }\n          return _context25.abrupt(\"return\", res.status(200).json({\n            message: 'Fail',\n            status: false\n          }));\n        case 6:\n          _context25.next = 8;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE phone = ? ', [phone]);\n        case 8:\n          _yield$connection$que179 = _context25.sent;\n          _yield$connection$que180 = _slicedToArray(_yield$connection$que179, 1);\n          users = _yield$connection$que180[0];\n          _context25.next = 13;\n          return _connectDB[\"default\"].query('SELECT * FROM users WHERE token = ? ', [auth]);\n        case 13:\n          _yield$connection$que181 = _context25.sent;\n          _yield$connection$que182 = _slicedToArray(_yield$connection$que181, 1);\n          auths = _yield$connection$que182[0];\n          if (!(users.length == 0)) {\n            _context25.next = 18;\n            break;\n          }\n          return _context25.abrupt(\"return\", res.status(200).json({\n            message: 'Account does not exist',\n            status: false\n          }));\n        case 18:\n          userInfo = users[0];\n          authInfo = auths[0];\n          _context25.next = 22;\n          return _connectDB[\"default\"].query('SELECT `money_us` FROM point_list WHERE phone = ? ', [authInfo.phone]);\n        case 22:\n          _yield$connection$que183 = _context25.sent;\n          _yield$connection$que184 = _slicedToArray(_yield$connection$que183, 1);\n          point_list = _yield$connection$que184[0];\n          check = point_list[0].money_us;\n          if (!(select == '1')) {\n            _context25.next = 48;\n            break;\n          }\n          if (!(check - money >= 0)) {\n            _context25.next = 45;\n            break;\n          }\n          d = new Date();\n          time = d.getTime();\n          _context25.next = 32;\n          return _connectDB[\"default\"].query('UPDATE users SET money = money + ? WHERE phone = ? ', [money, userInfo.phone]);\n        case 32:\n          _context25.next = 34;\n          return _connectDB[\"default\"].query('UPDATE point_list SET money_us = money_us - ? WHERE phone = ? ', [money, authInfo.phone]);\n        case 34:\n          sql = 'INSERT INTO financial_details SET phone = ?, phone_used = ?, money = ?, type = ?, time = ?';\n          _context25.next = 37;\n          return _connectDB[\"default\"].query(sql, [authInfo.phone, userInfo.phone, money, '1', time]);\n        case 37:\n          _context25.next = 39;\n          return _connectDB[\"default\"].query('SELECT `money_us` FROM point_list WHERE phone = ? ', [authInfo.phone]);\n        case 39:\n          _yield$connection$que185 = _context25.sent;\n          _yield$connection$que186 = _slicedToArray(_yield$connection$que185, 1);\n          moneyN = _yield$connection$que186[0];\n          return _context25.abrupt(\"return\", res.status(200).json({\n            message: 'Success',\n            status: true,\n            money: moneyN[0].money_us\n          }));\n        case 45:\n          return _context25.abrupt(\"return\", res.status(200).json({\n            message: 'Insufficient balance',\n            status: false\n          }));\n        case 46:\n          _context25.next = 58;\n          break;\n        case 48:\n          _d = new Date();\n          _time13 = _d.getTime();\n          _context25.next = 52;\n          return _connectDB[\"default\"].query('UPDATE users SET money = money - ? WHERE phone = ? ', [money, userInfo.phone]);\n        case 52:\n          _context25.next = 54;\n          return _connectDB[\"default\"].query('UPDATE point_list SET money = money + ? WHERE phone = ? ', [money, authInfo.phone]);\n        case 54:\n          _sql = 'INSERT INTO financial_details SET phone = ?, phone_used = ?, money = ?, type = ?, time = ?';\n          _context25.next = 57;\n          return _connectDB[\"default\"].query(_sql, [authInfo.phone, userInfo.phone, money, '2', _time13]);\n        case 57:\n          return _context25.abrupt(\"return\", res.status(200).json({\n            message: 'Success',\n            status: true\n          }));\n        case 58:\n        case \"end\":\n          return _context25.stop();\n      }\n    }, _callee25);\n  }));\n  return function buffMoney(_x50, _x51) {\n    return _ref25.apply(this, arguments);\n  };\n}();\nmodule.exports = {\n  buffMoney: buffMoney,\n  dailyPage: dailyPage,\n  middlewareDailyController: middlewareDailyController,\n  userInfo: userInfo,\n  statistical: statistical,\n  listMeber: listMeber,\n  profileMember: profileMember,\n  infoCtv: infoCtv,\n  infoCtv2: infoCtv2,\n  settingPage: settingPage,\n  giftPage: giftPage,\n  support: support,\n  settings: settings,\n  createBonus: createBonus,\n  listRedenvelops: listRedenvelops,\n  listMember: listMember,\n  listRecharge: listRecharge,\n  listWithdraw: listWithdraw,\n  listRechargeP: listRechargeP,\n  listWithdrawP: listWithdrawP,\n  pageInfo: pageInfo,\n  listRechargeMem: listRechargeMem,\n  listWithdrawMem: listWithdrawMem,\n  listRedenvelope: listRedenvelope,\n  listBet: listBet\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_connectDB","_interopRequireDefault","require","_jsonwebtoken","_md","_excluded","_excluded2","_excluded3","_excluded4","_excluded5","obj","__esModule","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","key","value","_toPropertyKey","configurable","writable","i","_toPrimitive","_typeof","String","Symbol","toPrimitive","call","TypeError","Number","_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","sourceKeys","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","Array","from","test","len","arr2","l","iterator","u","a","f","next","done","isArray","_regeneratorRuntime","hasOwnProperty","c","asyncIterator","toStringTag","define","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","async","Promise","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","info","error","_asyncToGenerator","fn","self","args","err","undefined","config","timeNow","Date","now","dailyPage","_ref","_callee","req","res","_callee$","_context","render","_x","_x2","listMeber","_ref2","_callee2","_callee2$","_context2","_x3","_x4","profileMember","_ref3","_callee3","_callee3$","_context3","_x5","_x6","settingPage","_ref4","_callee4","_callee4$","_context4","_x7","_x8","listRecharge","_ref5","_callee5","_callee5$","_context5","_x9","_x10","listWithdraw","_ref6","_callee6","_callee6$","_context6","_x11","_x12","pageInfo","_ref7","_callee7","phone","_callee7$","_context7","params","_x13","_x14","giftPage","_ref8","_callee8","auth","_yield$connection$exe","_yield$connection$exe2","rows","money","money2","_yield$connection$exe3","_yield$connection$exe4","point_list","_callee8$","_context8","cookies","connection","execute","money_us","_x15","_x16","support","_ref9","_callee9","_callee9$","_context9","_x17","_x18","settings","_ref10","_callee10","_yield$connection$exe5","_yield$connection$exe6","_yield$connection$exe7","_yield$connection$exe8","_yield$connection$exe9","_yield$connection$exe10","_settings","telegram","telegram2","_callee10$","_context10","body","status","json","message","_x19","_x20","middlewareDailyController","_ref11","_callee11","_yield$connection$exe11","_yield$connection$exe12","_callee11$","_context11","redirect","token","level","t0","_x21","_x22","_x23","statistical","_ref12","_callee12","_yield$connection$que","_yield$connection$que2","user","userInfo","_yield$connection$que3","_yield$connection$que4","f1s","f1_today","f1_time","check","f_all_today","_i","f1_code","_f1_time","check_f1","_yield$connection$que5","_yield$connection$que6","f2s","_i2","f2_code","f2_time","check_f2","_yield$connection$que7","_yield$connection$que8","f3s","_i3","f3_code","f3_time","check_f3","_yield$connection$que9","_yield$connection$que10","f4s","_i4","f4_code","f4_time","check_f4","f2","_i5","_f1_code","_yield$connection$que11","_yield$connection$que12","_f2s","f3","_i6","_f1_code2","_yield$connection$que13","_yield$connection$que14","_f2s2","_i7","_f2_code","_yield$connection$que15","_yield$connection$que16","_f3s","f4","_i8","_f1_code3","_yield$connection$que17","_yield$connection$que18","_f2s3","_i9","_f2_code2","_yield$connection$que19","_yield$connection$que20","_f3s2","_i10","_f3_code","_yield$connection$que21","_yield$connection$que22","_f4s","_callee12$","_context12","query","code","time","timerJoin","datas","f1","_x24","_x25","formateT","result","addHours","date","setHours","getHours","years","getFullYear","months","getMonth","days","getDate","hours","ampm","minutes","getMinutes","seconds","getSeconds","_ref13","_callee13","_yield$connection$que23","_yield$connection$que24","_yield$connection$que25","_yield$connection$que26","auths","_user$","password","otp","_yield$connection$que27","_yield$connection$que28","_i11","_f1_time2","_yield$connection$que29","_yield$connection$que30","_i12","_yield$connection$que31","_yield$connection$que32","_i13","_yield$connection$que33","_yield$connection$que34","_i14","_i15","_f1_code4","_yield$connection$que35","_yield$connection$que36","_f2s4","_i16","_f1_code5","_yield$connection$que37","_yield$connection$que38","_f2s5","_i17","_f2_code3","_yield$connection$que39","_yield$connection$que40","_f3s3","_i18","_f1_code6","_yield$connection$que41","_yield$connection$que42","_f2s6","_i19","_f2_code4","_yield$connection$que43","_yield$connection$que44","_f3s4","_i20","_f3_code2","_yield$connection$que45","_yield$connection$que46","_f4s2","_yield$connection$que47","_yield$connection$que48","recharge","_yield$connection$que49","_yield$connection$que50","withdraw","_yield$connection$que51","_yield$connection$que52","bank_user","_callee13$","_context13","timeStamp","ctv","total_r","total_w","_x26","_x27","infoCtv","_ref14","_callee14","_yield$connection$que53","_yield$connection$que54","_yield$connection$que55","_yield$connection$que56","_i21","_f1_time3","_yield$connection$que57","_yield$connection$que58","_i22","_yield$connection$que59","_yield$connection$que60","_i23","_yield$connection$que61","_yield$connection$que62","_i24","_i25","_f1_code7","_yield$connection$que63","_yield$connection$que64","_f2s7","_i26","_f1_code8","_yield$connection$que65","_yield$connection$que66","_f2s8","_i27","_f2_code5","_yield$connection$que67","_yield$connection$que68","_f3s5","_i28","_f1_code9","_yield$connection$que69","_yield$connection$que70","_f2s9","_i29","_f2_code6","_yield$connection$que71","_yield$connection$que72","_f3s6","_i30","_f3_code3","_yield$connection$que73","_yield$connection$que74","_f4s3","_yield$connection$que75","_yield$connection$que76","list_mem","_yield$connection$que77","_yield$connection$que78","list_mem_baned","total_recharge","total_withdraw","_i31","_phone","_yield$connection$que79","_yield$connection$que80","_yield$connection$que81","_yield$connection$que82","total_recharge_today","total_withdraw_today","_i32","_phone2","_yield$connection$que83","_yield$connection$que84","recharge_today","_yield$connection$que85","_yield$connection$que86","withdraw_today","_i33","today","_i34","_today","_time","win","loss","_i35","_phone3","_yield$connection$que87","_yield$connection$que88","wins","_yield$connection$que89","_yield$connection$que90","losses","_i36","_today2","_time2","_i37","_today3","_time3","list_mems","_yield$connection$que91","_yield$connection$que92","list_mem_today","_i38","_today4","_time4","_yield$connection$que93","_yield$connection$que94","phone_invites","phone_invite","data","_yield$connection$que95","_yield$connection$que96","moneyCTV","list_recharge_news","list_withdraw_news","_i39","_phone4","_yield$connection$que97","_yield$connection$que98","_recharge_today","_yield$connection$que99","_yield$connection$que100","_withdraw_today","_i40","_today5","_time5","_i41","_today6","_time6","_yield$connection$que101","_yield$connection$que102","redenvelopes_used","redenvelopes_used_today","_i42","_today7","_time7","_yield$connection$que103","_yield$connection$que104","financial_details","financial_details_today","_i43","_today8","_time8","_callee14$","_context14","invite","_x28","_x29","infoCtv2","_ref15","_callee15","timeDate","_yield$connection$que105","_yield$connection$que106","_yield$connection$que107","_yield$connection$que108","_yield$connection$que109","_yield$connection$que110","_yield$connection$que111","_yield$connection$que112","_i44","_phone5","_yield$connection$que113","_yield$connection$que114","_yield$connection$que115","_yield$connection$que116","_i45","_today9","_time9","_i46","_today10","_time10","_yield$connection$que117","_yield$connection$que118","_i47","_today11","_time11","_yield$connection$que119","_yield$connection$que120","_i48","_today12","_time12","_callee15$","_context15","_timerJoin","_formateT","_x30","_x31","createBonus","_ref16","_callee16","randomString","_yield$connection$que121","_yield$connection$que122","_yield$connection$que123","_yield$connection$que124","id_redenvelops","sql","_yield$connection$que125","_yield$connection$que126","_point_list","_callee16$","_context16","_timerJoin2","_formateT2","characters","charactersLength","Math","floor","random","getTime","id","_x32","_x33","listRedenvelops","_ref17","_callee17","_yield$connection$que127","_yield$connection$que128","_yield$connection$que129","_yield$connection$que130","redenvelopes","_callee17$","_context17","_x34","_x35","listMember","_ref18","_callee18","_req$body","pageno","limit","_yield$connection$exe13","_yield$connection$exe14","checkInfo","_yield$connection$que131","_yield$connection$que132","users","_yield$connection$que133","_yield$connection$que134","total_users","_callee18$","_context18","msg","gameslist","concat","page_total","ceil","_x36","_x37","listRechargeP","_ref19","_callee19","_yield$connection$que135","_yield$connection$que136","_yield$connection$que137","_yield$connection$que138","_yield$connection$que139","_yield$connection$que140","_i49","_callee19$","_context19","_x38","_x39","listWithdrawP","_ref20","_callee20","_yield$connection$que141","_yield$connection$que142","_yield$connection$que143","_yield$connection$que144","_yield$connection$que145","_yield$connection$que146","_i50","_callee20$","_context20","_x40","_x41","listRechargeMem","_ref21","_callee21","_req$body2","_yield$connection$que147","_yield$connection$que148","_yield$connection$que149","_yield$connection$que150","_user$2","_yield$connection$que151","_yield$connection$que152","_yield$connection$que153","_yield$connection$que154","_callee21$","_context21","_x42","_x43","listWithdrawMem","_ref22","_callee22","_req$body3","_yield$connection$que155","_yield$connection$que156","_yield$connection$que157","_yield$connection$que158","_user$3","_yield$connection$que159","_yield$connection$que160","_yield$connection$que161","_yield$connection$que162","_callee22$","_context22","_x44","_x45","listRedenvelope","_ref23","_callee23","_req$body4","_yield$connection$que163","_yield$connection$que164","_yield$connection$que165","_yield$connection$que166","_user$4","_yield$connection$que167","_yield$connection$que168","_yield$connection$que169","_yield$connection$que170","_callee23$","_context23","_x46","_x47","listBet","_ref24","_callee24","_req$body5","_yield$connection$que171","_yield$connection$que172","_yield$connection$que173","_yield$connection$que174","_user$5","_yield$connection$que175","_yield$connection$que176","_yield$connection$que177","_yield$connection$que178","_callee24$","_context24","_x48","_x49","buffMoney","_ref25","_callee25","select","_yield$connection$que179","_yield$connection$que180","_yield$connection$que181","_yield$connection$que182","authInfo","_yield$connection$que183","_yield$connection$que184","_yield$connection$que185","_yield$connection$que186","moneyN","_d","_time13","_sql","_callee25$","_context25","username","_x50","_x51","module","exports"],"sourceRoot":"/www/wwwroot/21india/src/controllers/","sources":["dailyController.js"],"sourcesContent":["import connection from \"../config/connectDB\";\nimport jwt from 'jsonwebtoken'\nimport md5 from \"md5\";\nrequire('dotenv').config();\n\nlet timeNow = Date.now();\n\nconst dailyPage = async(req, res) => {\n    return res.render(\"daily/statistical.ejs\"); \n}\n\nconst listMeber = async(req, res) => {\n    return res.render(\"daily/members.ejs\"); \n}\n\nconst profileMember = async(req, res) => {\n    return res.render(\"daily/profileMember.ejs\"); \n}\n\nconst settingPage = async(req, res) => {\n    return res.render(\"daily/settings.ejs\"); \n}\n\nconst listRecharge = async(req, res) => {\n    return res.render(\"daily/listRecharge.ejs\"); \n}\n\nconst listWithdraw = async(req, res) => {\n    return res.render(\"daily/listWithdraw.ejs\"); \n}\n\nconst pageInfo = async(req, res) => {\n    let phone = req.params.phone;\n    return res.render(\"daily/profileMember.ejs\", {phone}); \n}\n\nconst giftPage = async(req, res) => {\n    let auth = req.cookies.auth;\n    const [rows] = await connection.execute('SELECT `phone` FROM `users` WHERE `token` = ? AND veri = 1', [auth]);\n    let money = 0;\n    let money2 = 0;\n    if(rows.length != 0) {\n        const [point_list] = await connection.execute('SELECT `money`, `money_us` FROM `point_list` WHERE `phone` = ?', [rows[0].phone]);\n        money = point_list[0].money;\n        money2 = point_list[0].money_us;\n    }\n    return res.render(\"daily/giftPage.ejs\", {money, money2}); \n}\n\nconst support = async(req, res) => {\n    return res.render(\"daily/support.ejs\"); \n}\n\nconst settings = async(req, res) => {\n    let auth = req.cookies.auth;\n    let type = req.body.type;\n    let value = req.body.value;\n\n    const [rows] = await connection.execute('SELECT `phone` FROM `users` WHERE `token` = ? AND veri = 1', [auth]);\n    if (rows.length == 0) {\n        return res.status(200).json({\n            message: 'Error',\n            status: false,\n        });\n    }\n    if (!type) {\n        const [point_list] = await connection.execute('SELECT `telegram` FROM `point_list` WHERE phone = ?', [rows[0].phone]);\n        const [settings] = await connection.execute('SELECT `telegram` FROM `admin`');\n        let telegram = settings[0].telegram;\n        let telegram2 = point_list[0].telegram;\n        return res.status(200).json({\n            message: 'Get success',\n            status: true,\n            telegram: telegram,\n            telegram2: telegram2,\n        });\n    } else {\n        await connection.execute('UPDATE `point_list` SET telegram = ? WHERE phone = ?', [value ,rows[0].phone]);\n        return res.status(200).json({\n            message: 'Successfully edited',\n            status: true,\n        });\n    }\n}\n\n// xác nhận admin\nconst middlewareDailyController = async(req, res, next) => {\n    // xác nhận token\n    const auth = req.cookies.auth;\n    if (!auth) {\n        return res.redirect(\"/login\");\n    }\n    const [rows] = await connection.execute('SELECT `token`,`level`, `status` FROM `users` WHERE `token` = ? AND veri = 1', [auth]);\n    if (!rows) {\n        return res.redirect(\"/login\");\n    }\n    try {\n        if (auth == rows[0].token && rows[0].status == 1) {\n            if (rows[0].level == 2) {\n                next();\n            } else {\n                return res.redirect(\"/home\");\n            }\n        } else {\n            return res.redirect(\"/login\");\n        }\n    } catch (error) {\n        return res.redirect(\"/login\");\n    }\n}\n\nconst statistical = async(req, res) => {\n    const auth = req.cookies.auth;\n    \n    const [user] = await connection.query('SELECT * FROM users WHERE token = ? ', [auth]);\n\n    let userInfo = user[0];\n    // cấp dưới trực tiếp all\n    const [f1s] = await connection.query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [userInfo.code]);\n\n    // cấp dưới trực tiếp hôm nay \n    let f1_today = 0;\n    for (let i = 0; i < f1s.length; i++) {\n        const f1_time = f1s[i].time; // Mã giới thiệu f1\n        let check = (timerJoin(f1_time) == timerJoin()) ? true : false;\n        if(check) {\n            f1_today += 1;\n        }\n    }\n\n    // tất cả cấp dưới hôm nay \n    let f_all_today = 0;\n    for (let i = 0; i < f1s.length; i++) {\n        const f1_code = f1s[i].code; // Mã giới thiệu f1\n        const f1_time = f1s[i].time; // time f1\n        let check_f1 = (timerJoin(f1_time) == timerJoin()) ? true : false;\n        if(check_f1) f_all_today += 1;\n        // tổng f1 mời đc hôm nay\n        const [f2s] = await connection.query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [f1_code]);\n        for (let i = 0; i < f2s.length; i++) {\n            const f2_code = f2s[i].code; // Mã giới thiệu f2\n            const f2_time = f2s[i].time; // time f2\n            let check_f2 = (timerJoin(f2_time) == timerJoin()) ? true : false;\n            if(check_f2) f_all_today += 1;\n            // tổng f2 mời đc hôm nay\n            const [f3s] = await connection.query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [f2_code]);\n            for (let i = 0; i < f3s.length; i++) {\n                const f3_code = f3s[i].code; // Mã giới thiệu f3\n                const f3_time = f3s[i].time; // time f3\n                let check_f3 = (timerJoin(f3_time) == timerJoin()) ? true : false;\n                if(check_f3) f_all_today += 1;\n                const [f4s] = await connection.query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [f3_code]);\n                // tổng f3 mời đc hôm nay\n                for (let i = 0; i < f4s.length; i++) {\n                    const f4_code = f4s[i].code; // Mã giới thiệu f4\n                    const f4_time = f4s[i].time; // time f4\n                    let check_f4 = (timerJoin(f4_time) == timerJoin()) ? true : false;\n                    if(check_f4) f_all_today += 1;\n                    // tổng f3 mời đc hôm nay\n                }\n            }\n        }\n    }\n    \n    // Tổng số f2\n    let f2 = 0;\n    for (let i = 0; i < f1s.length; i++) {\n        const f1_code = f1s[i].code; // Mã giới thiệu f1\n        const [f2s] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [f1_code]);\n        f2 += f2s.length;\n    }\n    \n    // Tổng số f3\n    let f3 = 0;\n    for (let i = 0; i < f1s.length; i++) {\n        const f1_code = f1s[i].code; // Mã giới thiệu f1\n        const [f2s] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [f1_code]);\n        for (let i = 0; i < f2s.length; i++) {\n            const f2_code = f2s[i].code;\n            const [f3s] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [f2_code]);\n            if(f3s.length > 0) f3 += f3s.length;\n        }\n    }\n    \n    // Tổng số f4\n    let f4 = 0;\n    for (let i = 0; i < f1s.length; i++) {\n        const f1_code = f1s[i].code; // Mã giới thiệu f1\n        const [f2s] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [f1_code]);\n        for (let i = 0; i < f2s.length; i++) {\n            const f2_code = f2s[i].code;\n            const [f3s] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [f2_code]);\n            for (let i = 0; i < f3s.length; i++) {\n                const f3_code = f3s[i].code;\n                const [f4s] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [f3_code]);\n                if(f4s.length > 0) f4 += f4s.length;\n            }\n        }\n    }\n\n    // const [recharge] = await connection.query('SELECT SUM(`money`) as total FROM recharge WHERE phone = ? AND status = 1 ', [phone]);\n    // const [withdraw] = await connection.query('SELECT SUM(`money`) as total FROM withdraw WHERE phone = ? AND status = 1 ', [phone]);\n    // const [bank_user] = await connection.query('SELECT * FROM user_bank WHERE phone = ? ', [phone]);\n    return res.status(200).json({\n        message: 'Success',\n        status: true,\n        datas: user,    \n        f1: f1s.length,\n        f2: f2,\n        f3: f3,\n        f4: f4,\n    });\n}\n\nfunction formateT(params) {\n    let result = (params < 10) ? \"0\" + params : params;\n    return result;\n    }\n    \nfunction timerJoin(params = '', addHours = 0) {\n        let date = '';\n        if (params) {\n            date = new Date(Number(params));\n        } else {\n            date = new Date();\n        }\n    \n        date.setHours(date.getHours() + addHours);\n    \n        let years = formateT(date.getFullYear());\n        let months = formateT(date.getMonth() + 1);\n        let days = formateT(date.getDate());\n    \n        let hours = date.getHours() % 12;\n        hours = hours === 0 ? 12 : hours;\n        let ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n    \n        let minutes = formateT(date.getMinutes());\n        let seconds = formateT(date.getSeconds());\n    \n        return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;\n    }\n\n\nconst userInfo = async(req, res) => {\n    let auth = req.cookies.auth;\n    let phone = req.params.phone;\n    if (!phone) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false, \n            timeStamp: timeNow,\n        });\n    }\n\n    const [user] = await connection.query('SELECT * FROM users WHERE phone = ? ', [phone]);\n    const [auths] = await connection.query('SELECT * FROM users WHERE token = ? ', [auth]);\n\n    if (user.length == 0 || auths.length == 0) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false, \n            timeStamp: timeNow,\n        });\n    }\n    let { token, password, otp, level,...userInfo } = user[0];\n\n    if (auths[0].phone != userInfo.ctv) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false, \n            timeStamp: timeNow,\n        });\n    }\n    // cấp dưới trực tiếp all\n    const [f1s] = await connection.query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [userInfo.code]);\n\n    // cấp dưới trực tiếp hôm nay \n    let f1_today = 0;\n    for (let i = 0; i < f1s.length; i++) {\n        const f1_time = f1s[i].time; // Mã giới thiệu f1\n        let check = (timerJoin(f1_time) == timerJoin()) ? true : false;\n        if(check) {\n            f1_today += 1;\n        }\n    }\n\n    // tất cả cấp dưới hôm nay \n    let f_all_today = 0;\n    for (let i = 0; i < f1s.length; i++) {\n        const f1_code = f1s[i].code; // Mã giới thiệu f1\n        const f1_time = f1s[i].time; // time f1\n        let check_f1 = (timerJoin(f1_time) == timerJoin()) ? true : false;\n        if(check_f1) f_all_today += 1;\n        // tổng f1 mời đc hôm nay\n        const [f2s] = await connection.query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [f1_code]);\n        for (let i = 0; i < f2s.length; i++) {\n            const f2_code = f2s[i].code; // Mã giới thiệu f2\n            const f2_time = f2s[i].time; // time f2\n            let check_f2 = (timerJoin(f2_time) == timerJoin()) ? true : false;\n            if(check_f2) f_all_today += 1;\n            // tổng f2 mời đc hôm nay\n            const [f3s] = await connection.query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [f2_code]);\n            for (let i = 0; i < f3s.length; i++) {\n                const f3_code = f3s[i].code; // Mã giới thiệu f3\n                const f3_time = f3s[i].time; // time f3\n                let check_f3 = (timerJoin(f3_time) == timerJoin()) ? true : false;\n                if(check_f3) f_all_today += 1;\n                const [f4s] = await connection.query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [f3_code]);\n                // tổng f3 mời đc hôm nay\n                for (let i = 0; i < f4s.length; i++) {\n                    const f4_code = f4s[i].code; // Mã giới thiệu f4\n                    const f4_time = f4s[i].time; // time f4\n                    let check_f4 = (timerJoin(f4_time) == timerJoin()) ? true : false;\n                    if(check_f4) f_all_today += 1;\n                    // tổng f3 mời đc hôm nay\n                }\n            }\n        }\n    }\n    \n    // Tổng số f2\n    let f2 = 0;\n    for (let i = 0; i < f1s.length; i++) {\n        const f1_code = f1s[i].code; // Mã giới thiệu f1\n        const [f2s] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [f1_code]);\n        f2 += f2s.length;\n    }\n    \n    // Tổng số f3\n    let f3 = 0;\n    for (let i = 0; i < f1s.length; i++) {\n        const f1_code = f1s[i].code; // Mã giới thiệu f1\n        const [f2s] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [f1_code]);\n        for (let i = 0; i < f2s.length; i++) {\n            const f2_code = f2s[i].code;\n            const [f3s] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [f2_code]);\n            if(f3s.length > 0) f3 += f3s.length;\n        }\n    }\n    \n    // Tổng số f4\n    let f4 = 0;\n    for (let i = 0; i < f1s.length; i++) {\n        const f1_code = f1s[i].code; // Mã giới thiệu f1\n        const [f2s] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [f1_code]);\n        for (let i = 0; i < f2s.length; i++) {\n            const f2_code = f2s[i].code;\n            const [f3s] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [f2_code]);\n            for (let i = 0; i < f3s.length; i++) {\n                const f3_code = f3s[i].code;\n                const [f4s] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [f3_code]);\n                if(f4s.length > 0) f4 += f4s.length;\n            }\n        }\n    }\n\n    const [recharge] = await connection.query('SELECT SUM(`money`) as total FROM recharge WHERE phone = ? AND status = 1 ', [phone]);\n    const [withdraw] = await connection.query('SELECT SUM(`money`) as total FROM withdraw WHERE phone = ? AND status = 1 ', [phone]);\n    const [bank_user] = await connection.query('SELECT * FROM user_bank WHERE phone = ? ', [phone]);\n    return res.status(200).json({\n        message: 'Success',\n        status: true,\n        datas: userInfo,\n        total_r: recharge,\n        total_w: withdraw,\n        f1: f1s.length,\n        f2: f2,\n        f3: f3,\n        f4: f4,\n        bank_user: bank_user,\n    });\n}\n\nconst infoCtv = async(req, res) => {\n    const auth = req.cookies.auth;\n     \n    const [user] = await connection.query('SELECT * FROM users WHERE token = ? ', [auth]);\n\n    if (user.length == 0) {\n        return res.status(200).json({\n            message: 'Phone Error',\n            status: false,\n        });\n    }\n    let userInfo = user[0];\n    let phone = userInfo.phone;\n    // cấp dưới trực tiếp all\n    const [f1s] = await connection.query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [userInfo.code]);\n\n    // cấp dưới trực tiếp hôm nay  \n    let f1_today = 0;\n    for (let i = 0; i < f1s.length; i++) {\n        const f1_time = f1s[i].time; // Mã giới thiệu f1\n        let check = (timerJoin(f1_time) == timerJoin()) ? true : false;\n        if(check) {\n            f1_today += 1;\n        }\n    }\n\n    // tất cả cấp dưới hôm nay \n    let f_all_today = 0;\n    for (let i = 0; i < f1s.length; i++) {\n        const f1_code = f1s[i].code; // Mã giới thiệu f1\n        const f1_time = f1s[i].time; // time f1\n        let check_f1 = (timerJoin(f1_time) == timerJoin()) ? true : false;\n        if(check_f1) f_all_today += 1;\n        // tổng f1 mời đc hôm nay\n        const [f2s] = await connection.query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [f1_code]);\n        for (let i = 0; i < f2s.length; i++) {\n            const f2_code = f2s[i].code; // Mã giới thiệu f2\n            const f2_time = f2s[i].time; // time f2\n            let check_f2 = (timerJoin(f2_time) == timerJoin()) ? true : false;\n            if(check_f2) f_all_today += 1;\n            // tổng f2 mời đc hôm nay\n            const [f3s] = await connection.query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [f2_code]);\n            for (let i = 0; i < f3s.length; i++) {\n                const f3_code = f3s[i].code; // Mã giới thiệu f3\n                const f3_time = f3s[i].time; // time f3\n                let check_f3 = (timerJoin(f3_time) == timerJoin()) ? true : false;\n                if(check_f3) f_all_today += 1;\n                const [f4s] = await connection.query('SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? ', [f3_code]);\n                // tổng f3 mời đc hôm nay\n                for (let i = 0; i < f4s.length; i++) {\n                    const f4_code = f4s[i].code; // Mã giới thiệu f4\n                    const f4_time = f4s[i].time; // time f4\n                    let check_f4 = (timerJoin(f4_time) == timerJoin()) ? true : false;\n                    if(check_f4) f_all_today += 1;\n                    // tổng f3 mời đc hôm nay\n                }\n            }\n        }\n    }\n    \n    // Tổng số f2\n    let f2 = 0;\n    for (let i = 0; i < f1s.length; i++) {\n        const f1_code = f1s[i].code; // Mã giới thiệu f1\n        const [f2s] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [f1_code]);\n        f2 += f2s.length;\n    }\n    \n    // Tổng số f3\n    let f3 = 0;\n    for (let i = 0; i < f1s.length; i++) {\n        const f1_code = f1s[i].code; // Mã giới thiệu f1\n        const [f2s] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [f1_code]);\n        for (let i = 0; i < f2s.length; i++) {\n            const f2_code = f2s[i].code;\n            const [f3s] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [f2_code]);\n            if(f3s.length > 0) f3 += f3s.length;\n        }\n    }\n    \n    // Tổng số f4\n    let f4 = 0;\n    for (let i = 0; i < f1s.length; i++) {\n        const f1_code = f1s[i].code; // Mã giới thiệu f1\n        const [f2s] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [f1_code]);\n        for (let i = 0; i < f2s.length; i++) {\n            const f2_code = f2s[i].code;\n            const [f3s] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [f2_code]);\n            for (let i = 0; i < f3s.length; i++) {\n                const f3_code = f3s[i].code;\n                const [f4s] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? ', [f3_code]);\n                if(f4s.length > 0) f4 += f4s.length;\n            }\n        }\n    }\n\n    const [list_mem] = await connection.query('SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 ', [phone]);\n    const [list_mem_baned] = await connection.query('SELECT * FROM users WHERE ctv = ? AND status = 2 AND veri = 1 ', [phone]);\n    let total_recharge = 0;\n    let total_withdraw = 0;\n    for (let i = 0; i < list_mem.length; i++) {\n        let phone = list_mem[i].phone;\n        const [recharge] = await connection.query('SELECT SUM(money) as money FROM recharge WHERE phone = ? AND status = 1 ', [phone]);\n        const [withdraw] = await connection.query('SELECT SUM(money) as money FROM withdraw WHERE phone = ? AND status = 1 ', [phone]);\n        if (recharge[0].money) {\n            total_recharge += Number(recharge[0].money);\n        }\n        if (withdraw[0].money) {\n            total_withdraw += Number(withdraw[0].money);\n        }\n    }\n\n    let total_recharge_today = 0;\n    let total_withdraw_today = 0;\n    for (let i = 0; i < list_mem.length; i++) {\n        let phone = list_mem[i].phone;\n        const [recharge_today] = await connection.query('SELECT `money`, `time` FROM recharge WHERE phone = ? AND status = 1 ', [phone]);\n        const [withdraw_today] = await connection.query('SELECT `money`, `time` FROM withdraw WHERE phone = ? AND status = 1 ', [phone]);\n        for (let i = 0; i < recharge_today.length; i++) {\n            let today = timerJoin();\n            let time = timerJoin(recharge_today[i].time);\n            if (time == today) {\n                total_recharge_today += recharge_today[i].money;\n            }\n        }\n        for (let i = 0; i < withdraw_today.length; i++) {\n            let today = timerJoin();\n            let time = timerJoin(withdraw_today[i].time);\n            if (time == today) {\n                total_withdraw_today += withdraw_today[i].money;\n            }\n        }\n    }\n\n    let win = 0;\n    let loss = 0;\n    for (let i = 0; i < list_mem.length; i++) {\n        let phone = list_mem[i].phone;\n        const [wins] = await connection.query('SELECT `money`, `time` FROM minutes_1 WHERE phone = ? AND status = 1 ', [phone]);\n        const [losses] = await connection.query('SELECT `money`, `time` FROM minutes_1 WHERE phone = ? AND status = 2 ', [phone]);\n        for (let i = 0; i < wins.length; i++) {\n            let today = timerJoin();\n            let time = timerJoin(wins[i].time);\n            if (time == today) {\n                win += wins[i].money;\n            }\n        }\n        for (let i = 0; i < losses.length; i++) {\n            let today = timerJoin();\n            let time = timerJoin(losses[i].time);\n            if (time == today) {\n                loss += losses[i].money;\n            }\n        }\n    }\n    let list_mems = [];\n    const [list_mem_today] = await connection.query('SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 ', [phone]);\n    for (let i = 0; i < list_mem_today.length; i++) {\n        let today = timerJoin();\n        let time = timerJoin(list_mem_today[i].time);\n        if (time == today) {\n            const [phone_invites] = await connection.query('SELECT `phone` FROM users WHERE code = ? ', [list_mem_today[i].invite]);\n            let phone_invite = phone_invites[0].phone;\n            let data = {\n                ...list_mem_today[i],\n                phone_invite: phone_invite,\n            };\n            list_mems.push(data);\n        }\n    }\n\n    const [point_list] = await connection.query('SELECT * FROM point_list WHERE phone = ? ', [phone]);\n    let moneyCTV = point_list[0].money;\n\n    let list_recharge_news = [];\n    let list_withdraw_news = [];\n    for (let i = 0; i < list_mem.length; i++) {\n        let phone = list_mem[i].phone;\n        const [recharge_today] = await connection.query('SELECT `id`, `status`, `type`,`phone`, `money`, `time` FROM recharge WHERE phone = ? AND status = 1 ', [phone]);\n        const [withdraw_today] = await connection.query('SELECT `id`, `status`,`phone`, `money`, `time` FROM withdraw WHERE phone = ? AND status = 1 ', [phone]);\n        for (let i = 0; i < recharge_today.length; i++) {\n            let today = timerJoin();\n            let time = timerJoin(recharge_today[i].time);\n            if (time == today) {\n                list_recharge_news.push(recharge_today[i]);\n            }\n        }\n        for (let i = 0; i < withdraw_today.length; i++) {\n            let today = timerJoin();\n            let time = timerJoin(withdraw_today[i].time);\n            if (time == today) {\n                list_withdraw_news.push(withdraw_today[i]);\n            }\n        }\n    }\n\n    const [redenvelopes_used] = await connection.query('SELECT * FROM redenvelopes_used WHERE phone = ? ', [phone]);\n    let redenvelopes_used_today = [];\n    for (let i = 0; i < redenvelopes_used.length; i++) {\n        let today = timerJoin();\n        let time = timerJoin(redenvelopes_used[i].time);\n        if (time == today) {\n            redenvelopes_used_today.push(redenvelopes_used[i]);\n        }\n    }\n\n    const [financial_details] = await connection.query('SELECT * FROM financial_details WHERE phone = ? ', [phone]);\n    let financial_details_today = [];\n    for (let i = 0; i < financial_details.length; i++) {\n        let today = timerJoin();\n        let time = timerJoin(financial_details[i].time);\n        if (time == today) {\n            financial_details_today.push(financial_details[i]);\n        }\n    }\n\n    return res.status(200).json({\n        message: 'Success',\n        status: true,\n        datas: user,    \n        f1: f1s.length,\n        f2: f2,\n        f3: f3,\n        f4: f4,\n        list_mems: list_mems,\n        total_recharge: total_recharge,\n        total_withdraw: total_withdraw,\n        total_recharge_today: total_recharge_today,\n        total_withdraw_today: total_withdraw_today,\n        list_mem_baned: list_mem_baned.length,\n        win: win,\n        loss: loss,\n        list_recharge_news: list_recharge_news,\n        list_withdraw_news: list_withdraw_news, \n        moneyCTV: moneyCTV,\n        redenvelopes_used: redenvelopes_used_today,\n        financial_details_today: financial_details_today,\n    });\n}\n\nconst infoCtv2 = async(req, res) => {\n    const auth = req.cookies.auth;\n    const timeDate = req.body.timeDate;\n     \n    function formateT(params) {\n    let result = (params < 10) ? \"0\" + params : params;\n    return result;\n    }\n    \n    function timerJoin(params = '', addHours = 0) {\n        let date = '';\n        if (params) {\n            date = new Date(Number(params));\n        } else {\n            date = new Date();\n        }\n    \n        date.setHours(date.getHours() + addHours);\n    \n        let years = formateT(date.getFullYear());\n        let months = formateT(date.getMonth() + 1);\n        let days = formateT(date.getDate());\n    \n        let hours = date.getHours() % 12;\n        hours = hours === 0 ? 12 : hours;\n        let ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n    \n        let minutes = formateT(date.getMinutes());\n        let seconds = formateT(date.getSeconds());\n    \n        return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;\n    }\n    \n    const [user] = await connection.query('SELECT * FROM users WHERE token = ? ', [auth]);\n\n    if (user.length == 0) {\n        return res.status(200).json({\n            message: 'Phone Error',\n            status: false,\n        });\n    }\n    let userInfo = user[0];\n\n    let phone = userInfo.phone;\n    const [list_mem] = await connection.query('SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 ', [phone]);\n\n    let list_mems = [];\n    const [list_mem_today] = await connection.query('SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 ', [phone]);\n    for (let i = 0; i < list_mem_today.length; i++) {\n        let today = timeDate;\n        let time = timerJoin(list_mem_today[i].time);\n        if (time == today) {\n            const [phone_invites] = await connection.query('SELECT `phone` FROM users WHERE code = ? ', [list_mem_today[i].invite]);\n            let phone_invite = phone_invites[0].phone;\n            let data = {\n                ...list_mem_today[i],\n                phone_invite: phone_invite,\n            };\n            list_mems.push(data);\n        }\n    }\n\n    let list_recharge_news = [];\n    let list_withdraw_news = [];\n    for (let i = 0; i < list_mem.length; i++) {\n        let phone = list_mem[i].phone;\n        const [recharge_today] = await connection.query('SELECT `id`, `status`, `type`,`phone`, `money`, `time` FROM recharge WHERE phone = ? AND status = 1 ', [phone]);\n        const [withdraw_today] = await connection.query('SELECT `id`, `status`,`phone`, `money`, `time` FROM withdraw WHERE phone = ? AND status = 1 ', [phone]);\n        for (let i = 0; i < recharge_today.length; i++) {\n            let today = timeDate;\n            let time = timerJoin(recharge_today[i].time);\n            if (time == today) {\n                list_recharge_news.push(recharge_today[i]);\n            }\n        }\n        for (let i = 0; i < withdraw_today.length; i++) {\n            let today = timeDate;\n            let time = timerJoin(withdraw_today[i].time);\n            if (time == today) {\n                list_withdraw_news.push(withdraw_today[i]);\n            }\n        }\n    }\n\n    const [redenvelopes_used] = await connection.query('SELECT * FROM redenvelopes_used WHERE phone = ? ', [phone]);\n    let redenvelopes_used_today = [];\n    for (let i = 0; i < redenvelopes_used.length; i++) {\n        let today = timeDate;\n        let time = timerJoin(redenvelopes_used[i].time);\n        if (time == today) {\n            redenvelopes_used_today.push(redenvelopes_used[i]);\n        }\n    }\n    const [financial_details] = await connection.query('SELECT * FROM financial_details WHERE phone = ? ', [phone]);\n    let financial_details_today = [];\n    for (let i = 0; i < financial_details.length; i++) {\n        let today = timeDate;\n        let time = timerJoin(financial_details[i].time);\n        if (time == today) {\n            financial_details_today.push(financial_details[i]);\n        }\n    }\n\n    return res.status(200).json({\n        message: 'Success',\n        status: true,\n        datas: user,\n        list_mems: list_mems,\n        list_recharge_news: list_recharge_news,\n        list_withdraw_news: list_withdraw_news,\n        redenvelopes_used: redenvelopes_used_today,\n        financial_details_today: financial_details_today,\n    });\n}\n\n\nconst createBonus = async(req, res) => {\n    const randomString = (length) => {\n        var result = '';\n        var characters = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        var charactersLength = characters.length;\n        for (var i = 0; i < length; i++) {\n            result += characters.charAt(Math.floor(Math.random() *\n                charactersLength));\n        }\n        return result;\n    }\nfunction formateT(params) {\n    let result = (params < 10) ? \"0\" + params : params;\n    return result;\n    }\n    \nfunction timerJoin(params = '', addHours = 0) {\n        let date = '';\n        if (params) {\n            date = new Date(Number(params));\n        } else {\n            date = new Date();\n        }\n    \n        date.setHours(date.getHours() + addHours);\n    \n        let years = formateT(date.getFullYear());\n        let months = formateT(date.getMonth() + 1);\n        let days = formateT(date.getDate());\n    \n        let hours = date.getHours() % 12;\n        hours = hours === 0 ? 12 : hours;\n        let ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n    \n        let minutes = formateT(date.getMinutes());\n        let seconds = formateT(date.getSeconds());\n    \n        return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;\n    }\n    const d = new Date();\n    const time = d.getTime();\n    let auth = req.cookies.auth;\n    let money = req.body.money;\n\n\n    if (!money || !auth) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n    const [user] = await connection.query('SELECT * FROM users WHERE token = ? ', [auth]);\n\n    if (user.length == 0) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false, \n            timeStamp: timeNow,\n        });\n    }\n    let userInfo = user[0];\n    const [point_list] = await connection.query('SELECT * FROM point_list WHERE phone = ? ', [userInfo.phone]);\n    if (point_list.length == 0) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false, \n            timeStamp: timeNow,\n        });\n    }\n    let ctv = point_list[0];\n\n    if (ctv.money - money >= 0) {\n        let id_redenvelops = randomString(16);\n        await connection.execute('UPDATE `point_list` SET money = money - ? WHERE phone = ?', [money ,ctv.phone]);\n        let sql = `INSERT INTO redenvelopes SET id_redenvelope = ?, phone = ?, money = ?, used = ?, amount = ?, status = ?, time = ?`;\n        await connection.query(sql, [id_redenvelops, userInfo.phone, money, 1, 1, 0, time]);\n        const [point_list] = await connection.query('SELECT `money` FROM point_list WHERE phone = ? ', [userInfo.phone]);\n        return res.status(200).json({\n            message: 'Successful gift creation',\n            status: true,\n            id: id_redenvelops,\n            money: point_list[0].money,\n        });\n    } else {\n        return res.status(200).json({\n            message: 'The balance is not enough to create gifts',\n            status: false,\n        });\n    }\n}\n\nconst listRedenvelops = async(req, res) => {\n    let auth = req.cookies.auth;\n    const [user] = await connection.query('SELECT * FROM users WHERE token = ? ', [auth]);\n\n    if (user.length == 0) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false, \n            timeStamp: timeNow,\n        });\n    }\n    let userInfo = user[0];\n    let [redenvelopes] = await connection.query('SELECT * FROM redenvelopes WHERE phone = ? ORDER BY id DESC', [userInfo.phone]);\n    return res.status(200).json({\n        message: 'Successful change',\n        status: true,\n        redenvelopes: redenvelopes,\n    });\n}\n\nconst listMember = async(req, res) => {\n    let auth = req.cookies.auth;\n    let {pageno, limit } = req.body;\n\n    let [checkInfo] = await connection.execute('SELECT * FROM users WHERE token = ?', [auth]);\n\n    if(checkInfo.length == 0) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n    let userInfo = checkInfo[0];\n\n    if (!pageno || !limit) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n\n    if (pageno < 0 || limit < 0) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n    const [users] = await connection.query(`SELECT id_user, phone, money, total_money, status, time FROM users WHERE veri = 1 AND level = 0 AND ctv = ? ORDER BY id DESC LIMIT ${pageno}, ${limit} `, [userInfo.phone]);\n    const [total_users] = await connection.query(`SELECT * FROM users WHERE veri = 1 AND level = 0 AND ctv = ? `, [userInfo.phone]);\n    return res.status(200).json({ \n        message: 'Success',\n        status: true,\n        datas: users,\n        page_total: Math.ceil(total_users.length / limit)\n    });\n}\n\nconst listRechargeP = async(req, res) => {\n    let auth = req.cookies.auth;\n    const [user] = await connection.query('SELECT * FROM users WHERE token = ? ', [auth]);\n\n    if (user.length == 0) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false, \n            timeStamp: timeNow,\n        });\n    }\n    let userInfo = user[0];\n\n    const [list_mem] = await connection.query('SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 ', [userInfo.phone]);\n    let list_recharge_news = [];\n    for (let i = 0; i < list_mem.length; i++) {\n        let phone = list_mem[i].phone;\n        const [recharge_today] = await connection.query('SELECT * FROM recharge WHERE phone = ? ORDER BY id DESC LIMIT 100', [phone]);\n        for (let i = 0; i < recharge_today.length; i++) {\n            list_recharge_news.push(recharge_today[i]);\n        }\n    }\n    return res.status(200).json({\n        message: 'Failed',\n        status: true, \n        list_recharge_news: list_recharge_news,\n        timeStamp: timeNow,\n    });\n}\n\nconst listWithdrawP = async(req, res) => {\n    let auth = req.cookies.auth;\n    const [user] = await connection.query('SELECT * FROM users WHERE token = ? ', [auth]);\n\n    if (user.length == 0) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false, \n            timeStamp: timeNow,\n        });\n    }\n    let userInfo = user[0];\n\n    const [list_mem] = await connection.query('SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 ', [userInfo.phone]);\n    let list_withdraw_news = [];\n    for (let i = 0; i < list_mem.length; i++) {\n        let phone = list_mem[i].phone;\n        const [withdraw_today] = await connection.query('SELECT * FROM withdraw WHERE phone = ? ORDER BY id DESC LIMIT 100', [phone]);\n        for (let i = 0; i < withdraw_today.length; i++) {\n            list_withdraw_news.push(withdraw_today[i]);\n        }\n    }\n    return res.status(200).json({\n        message: 'Failed',\n        status: true, \n        list_withdraw_news: list_withdraw_news,\n        timeStamp: timeNow,\n    });\n}\n\nconst listRechargeMem = async(req, res) => {\n    let auth = req.cookies.auth;\n    let phone = req.params.phone;\n    let {pageno, limit } = req.body;\n\n    if (!pageno || !limit) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n\n    if (pageno < 0 || limit < 0) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n\n    if (!phone) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false, \n            timeStamp: timeNow,\n        });\n    }\n\n    const [user] = await connection.query('SELECT * FROM users WHERE phone = ? ', [phone]);\n    const [auths] = await connection.query('SELECT * FROM users WHERE token = ? ', [auth]);\n\n    if (user.length == 0 || auths.length == 0) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false, \n            timeStamp: timeNow,\n        });\n    }\n    let { token, password, otp, level,...userInfo } = user[0];\n\n    if (auths[0].phone != userInfo.ctv) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false, \n            timeStamp: timeNow,\n        });\n    }\n\n    const [recharge] = await connection.query(`SELECT * FROM recharge WHERE phone = ? ORDER BY id DESC LIMIT ${pageno}, ${limit} `, [phone]);\n    const [total_users] = await connection.query(`SELECT * FROM recharge WHERE phone = ?`, [phone]);\n    return res.status(200).json({\n        message: 'Success',\n        status: true,\n        datas: recharge,\n        page_total: Math.ceil(total_users.length / limit)\n    });\n}\n\nconst listWithdrawMem = async(req, res) => {\n    let auth = req.cookies.auth;\n    let phone = req.params.phone;\n    let {pageno, limit } = req.body;\n\n    if (!pageno || !limit) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n\n    if (pageno < 0 || limit < 0) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n\n    if (!phone) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false, \n            timeStamp: timeNow,\n        });\n    }\n\n    const [user] = await connection.query('SELECT * FROM users WHERE phone = ? ', [phone]);\n    const [auths] = await connection.query('SELECT * FROM users WHERE token = ? ', [auth]);\n\n    if (user.length == 0 || auths.length == 0) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false, \n            timeStamp: timeNow,\n        });\n    }\n    let { token, password, otp, level,...userInfo } = user[0];\n\n    if (auths[0].phone != userInfo.ctv) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false, \n            timeStamp: timeNow,\n        });\n    }\n\n    const [withdraw] = await connection.query(`SELECT * FROM withdraw WHERE phone = ? ORDER BY id DESC LIMIT ${pageno}, ${limit} `, [phone]);\n    const [total_users] = await connection.query(`SELECT * FROM withdraw WHERE phone = ?`, [phone]);\n    return res.status(200).json({\n        message: 'Success',\n        status: true,\n        datas: withdraw,\n        page_total: Math.ceil(total_users.length / limit)\n    });\n}\n\nconst listRedenvelope = async(req, res) => {\n    let auth = req.cookies.auth;\n    let phone = req.params.phone;\n    let {pageno, limit } = req.body;\n\n    if (!pageno || !limit) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n\n    if (pageno < 0 || limit < 0) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n\n    if (!phone) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false, \n            timeStamp: timeNow,\n        });\n    }\n\n    const [user] = await connection.query('SELECT * FROM users WHERE phone = ? ', [phone]);\n    const [auths] = await connection.query('SELECT * FROM users WHERE token = ? ', [auth]);\n\n    if (user.length == 0 || auths.length == 0) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false, \n            timeStamp: timeNow,\n        });\n    }\n    let { token, password, otp, level,...userInfo } = user[0];\n\n    if (auths[0].phone != userInfo.ctv) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false, \n            timeStamp: timeNow,\n        });\n    }\n\n    const [redenvelopes_used] = await connection.query(`SELECT * FROM redenvelopes_used WHERE phone_used = ? ORDER BY id DESC LIMIT ${pageno}, ${limit} `, [phone]);\n    const [total_users] = await connection.query(`SELECT * FROM redenvelopes_used WHERE phone_used = ?`, [phone]);\n    return res.status(200).json({\n        message: 'Success',\n        status: true,\n        datas: redenvelopes_used,\n        page_total: Math.ceil(total_users.length / limit)\n    });\n}\n\nconst listBet = async(req, res) => {\n    let auth = req.cookies.auth;\n    let phone = req.params.phone;\n    let {pageno, limit } = req.body;\n\n    if (!pageno || !limit) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n\n    if (pageno < 0 || limit < 0) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n\n    if (!phone) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false, \n            timeStamp: timeNow,\n        });\n    }\n\n    const [user] = await connection.query('SELECT * FROM users WHERE phone = ? ', [phone]);\n    const [auths] = await connection.query('SELECT * FROM users WHERE token = ? ', [auth]);\n\n    if (user.length == 0 || auths.length == 0) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false, \n            timeStamp: timeNow,\n        });\n    }\n    let { token, password, otp, level,...userInfo } = user[0];\n\n    if (auths[0].phone != userInfo.ctv) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false, \n            timeStamp: timeNow,\n        });\n    }\n\n    const [listBet] = await connection.query(`SELECT * FROM minutes_1 WHERE phone = ? AND status != 0 ORDER BY id DESC LIMIT ${pageno}, ${limit} `, [phone]);\n    const [total_users] = await connection.query(`SELECT * FROM minutes_1 WHERE phone = ? AND status != 0`, [phone]);\n    return res.status(200).json({\n        message: 'Success',\n        status: true,\n        datas: listBet,\n        page_total: Math.ceil(total_users.length / limit)\n    });\n}\n\nconst buffMoney = async(req, res) => {\n    let auth = req.cookies.auth;\n    let phone = req.body.username;\n    let select = req.body.select;\n    let money = req.body.money;\n\n    if (!phone || !select || !money) {\n        return res.status(200).json({\n            message: 'Fail',\n            status: false,\n        });\n    }\n\n    const [users] = await connection.query('SELECT * FROM users WHERE phone = ? ', [phone]);\n    const [auths] = await connection.query('SELECT * FROM users WHERE token = ? ', [auth]);\n\n    if (users.length == 0) {\n        return res.status(200).json({\n            message: 'Account does not exist',\n            status: false,\n        });\n    }\n    let userInfo = users[0];\n    let authInfo = auths[0];\n\n    const [point_list] = await connection.query('SELECT `money_us` FROM point_list WHERE phone = ? ', [authInfo.phone]);\n\n    let check = point_list[0].money_us;\n\n    if (select == '1') {\n        if (check - money >= 0) {\n            const d = new Date();\n            const time = d.getTime();\n            await connection.query('UPDATE users SET money = money + ? WHERE phone = ? ', [money, userInfo.phone]);\n            await connection.query('UPDATE point_list SET money_us = money_us - ? WHERE phone = ? ', [money, authInfo.phone]);\n            let sql = 'INSERT INTO financial_details SET phone = ?, phone_used = ?, money = ?, type = ?, time = ?';\n            await connection.query(sql, [authInfo.phone, userInfo.phone, money, '1', time]);\n        \n            const [moneyN] = await connection.query('SELECT `money_us` FROM point_list WHERE phone = ? ', [authInfo.phone]);\n            return res.status(200).json({\n                message: 'Success',\n                status: true,\n                money: moneyN[0].money_us,\n            });\n        } else {\n            return res.status(200).json({\n                message: 'Insufficient balance',\n                status: false,\n            });\n        }\n    } else {\n        const d = new Date();\n        const time = d.getTime();\n        await connection.query('UPDATE users SET money = money - ? WHERE phone = ? ', [money, userInfo.phone]);\n        await connection.query('UPDATE point_list SET money = money + ? WHERE phone = ? ', [money, authInfo.phone]);\n        let sql = 'INSERT INTO financial_details SET phone = ?, phone_used = ?, money = ?, type = ?, time = ?';\n        await connection.query(sql, [authInfo.phone, userInfo.phone, money, '2', time]);\n        return res.status(200).json({\n            message: 'Success',\n            status: true,\n        });\n    }\n}\n  \nmodule.exports = {\n    buffMoney,\n    dailyPage,\n    middlewareDailyController,\n    userInfo,\n    statistical,\n    listMeber,\n    profileMember,\n    infoCtv,\n    infoCtv2,\n    settingPage,\n    giftPage,\n    support,\n    settings,\n    createBonus,\n    listRedenvelops,\n    listMember,\n    listRecharge,\n    listWithdraw,\n    listRechargeP,\n    listWithdrawP,\n    pageInfo,\n    listRechargeMem,\n    listWithdrawMem,\n    listRedenvelope,\n    listBet\n}"],"mappings":"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","ignoreList":[]}},"mtime":1722459116000},"{\"assumptions\":{},\"sourceRoot\":\"/www/wwwroot/21india/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/www/wwwroot/21india\",\"filename\":\"/www/wwwroot/21india/src/controllers/k5Controller.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/www/wwwroot/21india\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.5:development":{"value":{"code":"\"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _express = _interopRequireDefault(require(\"express\"));\nvar _connectDB = _interopRequireDefault(require(\"../config/connectDB\"));\nvar _excluded = [\"id\", \"phone\", \"code\", \"invite\", \"level\", \"game\"];\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nrequire('dotenv').config();\nvar K5DPage = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(req, res) {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", res.render(\"bet/5d/5d.ejs\"));\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function K5DPage(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar K5DPage3 = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(req, res) {\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          return _context2.abrupt(\"return\", res.render(\"bet/wingo/win3.ejs\"));\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function K5DPage3(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar K5DPage5 = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(req, res) {\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.abrupt(\"return\", res.render(\"bet/wingo/win5.ejs\"));\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return function K5DPage5(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nvar K5DPage10 = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(req, res) {\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          return _context4.abrupt(\"return\", res.render(\"bet/wingo/win10.ejs\"));\n        case 1:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n  return function K5DPage10(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nvar isNumber = function isNumber(params) {\n  var pattern = /^[0-9]*\\d$/;\n  return pattern.test(params);\n};\nfunction formateT(params) {\n  var result = params < 10 ? \"0\" + params : params;\n  return result;\n}\nfunction timerJoin() {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var addHours = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var date = '';\n  if (params) {\n    date = new Date(Number(params));\n  } else {\n    date = new Date();\n  }\n  date.setHours(date.getHours() + addHours);\n  var years = formateT(date.getFullYear());\n  var months = formateT(date.getMonth() + 1);\n  var days = formateT(date.getDate());\n  var hours = date.getHours() % 12;\n  hours = hours === 0 ? 12 : hours;\n  var ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n  var minutes = formateT(date.getMinutes());\n  var seconds = formateT(date.getSeconds());\n  return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;\n}\nvar rosesPlus = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(auth, money) {\n    var _yield$connection$que, _yield$connection$que2, level, level0, _yield$connection$que3, _yield$connection$que4, user, userInfo, _yield$connection$que5, _yield$connection$que6, f1, infoF1, rosesF1, _yield$connection$que7, _yield$connection$que8, f2, infoF2, rosesF2, _yield$connection$que9, _yield$connection$que10, f3, infoF3, rosesF3, _yield$connection$que11, _yield$connection$que12, f4, infoF4, rosesF4;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return _connectDB[\"default\"].query('SELECT * FROM level ');\n        case 2:\n          _yield$connection$que = _context5.sent;\n          _yield$connection$que2 = _slicedToArray(_yield$connection$que, 1);\n          level = _yield$connection$que2[0];\n          level0 = level[0];\n          _context5.next = 8;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`, `invite` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n        case 8:\n          _yield$connection$que3 = _context5.sent;\n          _yield$connection$que4 = _slicedToArray(_yield$connection$que3, 1);\n          user = _yield$connection$que4[0];\n          userInfo = user[0];\n          _context5.next = 14;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [userInfo.invite]);\n        case 14:\n          _yield$connection$que5 = _context5.sent;\n          _yield$connection$que6 = _slicedToArray(_yield$connection$que5, 1);\n          f1 = _yield$connection$que6[0];\n          if (!(money >= 10000)) {\n            _context5.next = 53;\n            break;\n          }\n          if (!(f1.length > 0)) {\n            _context5.next = 53;\n            break;\n          }\n          infoF1 = f1[0];\n          rosesF1 = money / 100 * level0.f1;\n          _context5.next = 23;\n          return _connectDB[\"default\"].query('UPDATE users SET money = money + ?, roses_f1 = roses_f1 + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF1, rosesF1, rosesF1, rosesF1, infoF1.phone]);\n        case 23:\n          _context5.next = 25;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [infoF1.invite]);\n        case 25:\n          _yield$connection$que7 = _context5.sent;\n          _yield$connection$que8 = _slicedToArray(_yield$connection$que7, 1);\n          f2 = _yield$connection$que8[0];\n          if (!(f2.length > 0)) {\n            _context5.next = 53;\n            break;\n          }\n          infoF2 = f2[0];\n          rosesF2 = money / 100 * level0.f2;\n          _context5.next = 33;\n          return _connectDB[\"default\"].query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF2, rosesF2, rosesF2, infoF2.phone]);\n        case 33:\n          _context5.next = 35;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [infoF2.invite]);\n        case 35:\n          _yield$connection$que9 = _context5.sent;\n          _yield$connection$que10 = _slicedToArray(_yield$connection$que9, 1);\n          f3 = _yield$connection$que10[0];\n          if (!(f3.length > 0)) {\n            _context5.next = 53;\n            break;\n          }\n          infoF3 = f3[0];\n          rosesF3 = money / 100 * level0.f3;\n          _context5.next = 43;\n          return _connectDB[\"default\"].query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF3, rosesF3, rosesF3, infoF3.phone]);\n        case 43:\n          _context5.next = 45;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [infoF3.invite]);\n        case 45:\n          _yield$connection$que11 = _context5.sent;\n          _yield$connection$que12 = _slicedToArray(_yield$connection$que11, 1);\n          f4 = _yield$connection$que12[0];\n          if (!(f4.length > 0)) {\n            _context5.next = 53;\n            break;\n          }\n          infoF4 = f4[0];\n          rosesF4 = money / 100 * level0.f4;\n          _context5.next = 53;\n          return _connectDB[\"default\"].query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF4, rosesF4, rosesF4, infoF4.phone]);\n        case 53:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5);\n  }));\n  return function rosesPlus(_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nvar validateBet = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(join, list_join, x, money, game) {\n    var checkJoin, checkX, checks, checkGame, checkMoney, arr, length, i, joinNum, _arr, _length, _i, joinStr;\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          checkJoin = isNumber(list_join);\n          checkX = isNumber(x);\n          checks = ['a', 'b', 'c', 'd', 'e', 'total'].includes(join);\n          checkGame = ['1', '3', '5', '10'].includes(String(game));\n          checkMoney = ['1', '10', '100', '1000'].includes(money);\n          if (!(!checks || list_join.length > 10 || !checkX || !checkMoney || !checkGame)) {\n            _context6.next = 7;\n            break;\n          }\n          return _context6.abrupt(\"return\", false);\n        case 7:\n          if (!checkJoin) {\n            _context6.next = 20;\n            break;\n          }\n          arr = list_join.split('');\n          length = arr.length;\n          i = 0;\n        case 11:\n          if (!(i < length)) {\n            _context6.next = 18;\n            break;\n          }\n          joinNum = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'].includes(arr[i]);\n          if (joinNum) {\n            _context6.next = 15;\n            break;\n          }\n          return _context6.abrupt(\"return\", false);\n        case 15:\n          i++;\n          _context6.next = 11;\n          break;\n        case 18:\n          _context6.next = 30;\n          break;\n        case 20:\n          _arr = list_join.split('');\n          _length = _arr.length;\n          _i = 0;\n        case 23:\n          if (!(_i < _length)) {\n            _context6.next = 30;\n            break;\n          }\n          joinStr = [\"c\", \"l\", \"b\", \"s\"].includes(_arr[_i]);\n          if (joinStr) {\n            _context6.next = 27;\n            break;\n          }\n          return _context6.abrupt(\"return\", false);\n        case 27:\n          _i++;\n          _context6.next = 23;\n          break;\n        case 30:\n          return _context6.abrupt(\"return\", true);\n        case 31:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6);\n  }));\n  return function validateBet(_x11, _x12, _x13, _x14, _x15) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nvar betK5D = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(req, res) {\n    var _req$body, join, list_join, x, money, game, auth, validate, _yield$connection$que13, _yield$connection$que14, k5DNow, _yield$connection$que15, _yield$connection$que16, user, userInfo, period, date, years, months, days, id_product, total, fee, price, check, timeNow, sql, _yield$connection$que17, _yield$connection$que18, users, _yield$connection$que19, _yield$connection$que20, level, level0, sql2, total_m, f1, f2, f3, f4;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _req$body = req.body, join = _req$body.join, list_join = _req$body.list_join, x = _req$body.x, money = _req$body.money, game = _req$body.game;\n          auth = req.cookies.auth;\n          _context7.next = 5;\n          return validateBet(join, list_join, x, money, game);\n        case 5:\n          validate = _context7.sent;\n          if (validate) {\n            _context7.next = 8;\n            break;\n          }\n          return _context7.abrupt(\"return\", res.status(200).json({\n            message: 'Invalid bet',\n            status: false\n          }));\n        case 8:\n          _context7.next = 10;\n          return _connectDB[\"default\"].query(\"SELECT period FROM 5d WHERE status = 0 AND game = \".concat(game, \" ORDER BY id DESC LIMIT 1 \"));\n        case 10:\n          _yield$connection$que13 = _context7.sent;\n          _yield$connection$que14 = _slicedToArray(_yield$connection$que13, 1);\n          k5DNow = _yield$connection$que14[0];\n          _context7.next = 15;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`, `invite`, `level`, `money` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n        case 15:\n          _yield$connection$que15 = _context7.sent;\n          _yield$connection$que16 = _slicedToArray(_yield$connection$que15, 1);\n          user = _yield$connection$que16[0];\n          if (!(k5DNow.length < 1 || user.length < 1)) {\n            _context7.next = 20;\n            break;\n          }\n          return _context7.abrupt(\"return\", res.status(200).json({\n            message: 'Error!',\n            status: false\n          }));\n        case 20:\n          userInfo = user[0];\n          period = k5DNow[0];\n          date = new Date();\n          years = formateT(date.getFullYear());\n          months = formateT(date.getMonth() + 1);\n          days = formateT(date.getDate());\n          id_product = years + months + days + Math.floor(Math.random() * 1000000000000000);\n          total = money * x * String(list_join).split('').length;\n          fee = total * 0.02;\n          price = total - fee;\n          check = userInfo.money - total;\n          if (!(check >= 0)) {\n            _context7.next = 62;\n            break;\n          }\n          timeNow = Date.now();\n          sql = \"INSERT INTO result_5d SET id_product = ?,phone = ?,code = ?,invite = ?,stage = ?,level = ?,money = ?,price = ?,amount = ?,fee = ?,game = ?,join_bet = ?,bet = ?,status = ?,time = ?\";\n          _context7.next = 36;\n          return _connectDB[\"default\"].execute(sql, [id_product, userInfo.phone, userInfo.code, userInfo.invite, period.period, userInfo.level, total, price, x, fee, game, join, list_join, 0, timeNow]);\n        case 36:\n          _context7.next = 38;\n          return _connectDB[\"default\"].execute('UPDATE `users` SET `money` = `money` - ? WHERE `token` = ? ', [total, auth]);\n        case 38:\n          _context7.next = 40;\n          return _connectDB[\"default\"].query('SELECT `money`, `level` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n        case 40:\n          _yield$connection$que17 = _context7.sent;\n          _yield$connection$que18 = _slicedToArray(_yield$connection$que17, 1);\n          users = _yield$connection$que18[0];\n          _context7.next = 45;\n          return rosesPlus(auth, money * x);\n        case 45:\n          _context7.next = 47;\n          return _connectDB[\"default\"].query('SELECT * FROM level ');\n        case 47:\n          _yield$connection$que19 = _context7.sent;\n          _yield$connection$que20 = _slicedToArray(_yield$connection$que19, 1);\n          level = _yield$connection$que20[0];\n          level0 = level[0];\n          sql2 = \"INSERT INTO roses SET phone = ?,code = ?,invite = ?,f1 = ?,f2 = ?,f3 = ?,f4 = ?,time = ?\";\n          total_m = total;\n          f1 = total_m / 100 * level0.f1;\n          f2 = total_m / 100 * level0.f2;\n          f3 = total_m / 100 * level0.f3;\n          f4 = total_m / 100 * level0.f4;\n          _context7.next = 59;\n          return _connectDB[\"default\"].execute(sql2, [userInfo.phone, userInfo.code, userInfo.invite, f1, f2, f3, f4, timeNow]);\n        case 59:\n          return _context7.abrupt(\"return\", res.status(200).json({\n            message: 'Successful bet',\n            status: true,\n            // data: result,\n            change: users[0].level,\n            money: users[0].money\n          }));\n        case 62:\n          return _context7.abrupt(\"return\", res.status(200).json({\n            message: 'The amount is not enough',\n            status: false\n          }));\n        case 63:\n          _context7.next = 68;\n          break;\n        case 65:\n          _context7.prev = 65;\n          _context7.t0 = _context7[\"catch\"](0);\n          if (_context7.t0) console.log(_context7.t0);\n        case 68:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7, null, [[0, 65]]);\n  }));\n  return function betK5D(_x16, _x17) {\n    return _ref7.apply(this, arguments);\n  };\n}();\nvar listOrderOld = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(req, res) {\n    var _req$body2, gameJoin, pageno, pageto, auth, checkGame, _yield$connection$que21, _yield$connection$que22, user, game, _yield$connection$que23, _yield$connection$que24, k5d, _yield$connection$que25, _yield$connection$que26, k5dAll, _yield$connection$que27, _yield$connection$que28, period, page;\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          _req$body2 = req.body, gameJoin = _req$body2.gameJoin, pageno = _req$body2.pageno, pageto = _req$body2.pageto;\n          auth = req.cookies.auth;\n          checkGame = ['1', '3', '5', '10'].includes(String(gameJoin));\n          if (!(!checkGame || pageno < 0 || pageto < 0)) {\n            _context8.next = 5;\n            break;\n          }\n          return _context8.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            status: false\n          }));\n        case 5:\n          _context8.next = 7;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`, `invite`, `level`, `money` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n        case 7:\n          _yield$connection$que21 = _context8.sent;\n          _yield$connection$que22 = _slicedToArray(_yield$connection$que21, 1);\n          user = _yield$connection$que22[0];\n          game = Number(gameJoin);\n          _context8.next = 13;\n          return _connectDB[\"default\"].query(\"SELECT * FROM 5d WHERE status != 0 AND game = '\".concat(game, \"' ORDER BY id DESC LIMIT \").concat(pageno, \", \").concat(pageto, \" \"));\n        case 13:\n          _yield$connection$que23 = _context8.sent;\n          _yield$connection$que24 = _slicedToArray(_yield$connection$que23, 1);\n          k5d = _yield$connection$que24[0];\n          _context8.next = 18;\n          return _connectDB[\"default\"].query(\"SELECT * FROM 5d WHERE status != 0 AND game = '\".concat(game, \"' \"));\n        case 18:\n          _yield$connection$que25 = _context8.sent;\n          _yield$connection$que26 = _slicedToArray(_yield$connection$que25, 1);\n          k5dAll = _yield$connection$que26[0];\n          _context8.next = 23;\n          return _connectDB[\"default\"].query(\"SELECT period FROM 5d WHERE status = 0 AND game = '\".concat(game, \"' ORDER BY id DESC LIMIT 1 \"));\n        case 23:\n          _yield$connection$que27 = _context8.sent;\n          _yield$connection$que28 = _slicedToArray(_yield$connection$que27, 1);\n          period = _yield$connection$que28[0];\n          if (!(k5d.length == 0)) {\n            _context8.next = 28;\n            break;\n          }\n          return _context8.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            page: 1,\n            status: false\n          }));\n        case 28:\n          if (!(!pageno || !pageto || !user[0] || !k5d[0] || !period[0])) {\n            _context8.next = 30;\n            break;\n          }\n          return _context8.abrupt(\"return\", res.status(200).json({\n            message: 'Error!',\n            status: false\n          }));\n        case 30:\n          page = Math.ceil(k5dAll.length / 10);\n          return _context8.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"Get success\",\n            data: {\n              gameslist: k5d\n            },\n            period: period[0].period,\n            page: page,\n            status: true\n          }));\n        case 32:\n        case \"end\":\n          return _context8.stop();\n      }\n    }, _callee8);\n  }));\n  return function listOrderOld(_x18, _x19) {\n    return _ref8.apply(this, arguments);\n  };\n}();\nvar GetMyEmerdList = /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(req, res) {\n    var _req$body3, gameJoin, pageno, pageto, auth, checkGame, game, _yield$connection$que29, _yield$connection$que30, user, _yield$connection$que31, _yield$connection$que32, result_5d, _yield$connection$que33, _yield$connection$que34, result_5dAll, page, datas;\n    return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n      while (1) switch (_context9.prev = _context9.next) {\n        case 0:\n          _req$body3 = req.body, gameJoin = _req$body3.gameJoin, pageno = _req$body3.pageno, pageto = _req$body3.pageto;\n          auth = req.cookies.auth;\n          checkGame = ['1', '3', '5', '10'].includes(String(gameJoin));\n          if (!(!checkGame || pageno < 0 || pageto < 0)) {\n            _context9.next = 5;\n            break;\n          }\n          return _context9.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            status: false\n          }));\n        case 5:\n          game = Number(gameJoin);\n          _context9.next = 8;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`, `invite`, `level`, `money` FROM users WHERE token = ? AND veri = 1 LIMIT 1 ', [auth]);\n        case 8:\n          _yield$connection$que29 = _context9.sent;\n          _yield$connection$que30 = _slicedToArray(_yield$connection$que29, 1);\n          user = _yield$connection$que30[0];\n          _context9.next = 13;\n          return _connectDB[\"default\"].query(\"SELECT * FROM result_5d WHERE phone = ? AND game = '\".concat(game, \"' ORDER BY id DESC LIMIT \").concat(Number(pageno) + ',' + Number(pageto)), [user[0].phone]);\n        case 13:\n          _yield$connection$que31 = _context9.sent;\n          _yield$connection$que32 = _slicedToArray(_yield$connection$que31, 1);\n          result_5d = _yield$connection$que32[0];\n          _context9.next = 18;\n          return _connectDB[\"default\"].query(\"SELECT * FROM result_5d WHERE phone = ? AND game = '\".concat(game, \"' ORDER BY id DESC \"), [user[0].phone]);\n        case 18:\n          _yield$connection$que33 = _context9.sent;\n          _yield$connection$que34 = _slicedToArray(_yield$connection$que33, 1);\n          result_5dAll = _yield$connection$que34[0];\n          if (result_5d[0]) {\n            _context9.next = 23;\n            break;\n          }\n          return _context9.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            page: 1,\n            status: false\n          }));\n        case 23:\n          if (!(!pageno || !pageto || !user[0] || !result_5d[0])) {\n            _context9.next = 25;\n            break;\n          }\n          return _context9.abrupt(\"return\", res.status(200).json({\n            message: 'Error!',\n            status: true\n          }));\n        case 25:\n          page = Math.ceil(result_5dAll.length / 10);\n          datas = result_5d.map(function (data) {\n            var id = data.id,\n              phone = data.phone,\n              code = data.code,\n              invite = data.invite,\n              level = data.level,\n              game = data.game,\n              others = _objectWithoutProperties(data, _excluded);\n            return others;\n          });\n          return _context9.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"Get Success\",\n            data: {\n              gameslist: datas\n            },\n            page: page,\n            status: true\n          }));\n        case 28:\n        case \"end\":\n          return _context9.stop();\n      }\n    }, _callee9);\n  }));\n  return function GetMyEmerdList(_x20, _x21) {\n    return _ref9.apply(this, arguments);\n  };\n}();\nfunction makeid(length) {\n  var result = '';\n  var characters = '0123456789';\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\nvar add5D = /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(game) {\n    var join, result2, timeNow, _yield$connection$que35, _yield$connection$que36, k5D, _yield$connection$que37, _yield$connection$que38, setting, period, nextResult, newArr, result, arr, check, i, sql;\n    return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n      while (1) switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.prev = 0;\n          join = '';\n          if (game == 1) join = 'k5d';\n          if (game == 3) join = 'k5d3';\n          if (game == 5) join = 'k5d5';\n          if (game == 10) join = 'k5d10';\n          result2 = makeid(5);\n          timeNow = Date.now();\n          _context10.next = 10;\n          return _connectDB[\"default\"].query(\"SELECT period FROM 5d WHERE status = 0 AND game = \".concat(game, \" ORDER BY id DESC LIMIT 1 \"));\n        case 10:\n          _yield$connection$que35 = _context10.sent;\n          _yield$connection$que36 = _slicedToArray(_yield$connection$que35, 1);\n          k5D = _yield$connection$que36[0];\n          _context10.next = 15;\n          return _connectDB[\"default\"].query('SELECT * FROM `admin` ');\n        case 15:\n          _yield$connection$que37 = _context10.sent;\n          _yield$connection$que38 = _slicedToArray(_yield$connection$que37, 1);\n          setting = _yield$connection$que38[0];\n          period = k5D[0].period;\n          nextResult = '';\n          if (game == 1) nextResult = setting[0].k5d;\n          if (game == 3) nextResult = setting[0].k5d3;\n          if (game == 5) nextResult = setting[0].k5d5;\n          if (game == 10) nextResult = setting[0].k5d10;\n          newArr = '';\n          if (!(nextResult == '-1')) {\n            _context10.next = 31;\n            break;\n          }\n          _context10.next = 28;\n          return _connectDB[\"default\"].execute(\"UPDATE 5d SET result = ?,status = ? WHERE period = ? AND game = \\\"\".concat(game, \"\\\"\"), [result2, 1, period]);\n        case 28:\n          newArr = '-1';\n          _context10.next = 38;\n          break;\n        case 31:\n          result = '';\n          arr = nextResult.split('|');\n          check = arr.length;\n          if (check == 1) {\n            newArr = '-1';\n          } else {\n            for (i = 1; i < arr.length; i++) {\n              newArr += arr[i] + '|';\n            }\n            newArr = newArr.slice(0, -1);\n          }\n          result = arr[0];\n          _context10.next = 38;\n          return _connectDB[\"default\"].execute(\"UPDATE 5d SET result = ?,status = ? WHERE period = ? AND game = \".concat(game), [result, 1, period]);\n        case 38:\n          sql = \"INSERT INTO 5d SET period = ?, result = ?, game = ?, status = ?, time = ?\";\n          _context10.next = 41;\n          return _connectDB[\"default\"].execute(sql, [Number(period) + 1, 0, game, 0, timeNow]);\n        case 41:\n          if (game == 1) join = 'k5d';\n          if (game == 3) join = 'k5d3';\n          if (game == 5) join = 'k5d5';\n          if (game == 10) join = 'k5d10';\n          _context10.next = 47;\n          return _connectDB[\"default\"].execute(\"UPDATE admin SET \".concat(join, \" = ?\"), [newArr]);\n        case 47:\n          _context10.next = 52;\n          break;\n        case 49:\n          _context10.prev = 49;\n          _context10.t0 = _context10[\"catch\"](0);\n          if (_context10.t0) {\n            console.log(_context10.t0);\n          }\n        case 52:\n        case \"end\":\n          return _context10.stop();\n      }\n    }, _callee10, null, [[0, 49]]);\n  }));\n  return function add5D(_x22) {\n    return _ref10.apply(this, arguments);\n  };\n}();\nfunction funHanding(_x23) {\n  return _funHanding.apply(this, arguments);\n}\nfunction _funHanding() {\n  _funHanding = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(game) {\n    var _yield$connection$que39, _yield$connection$que40, k5d, k5dInfo, result, a, b, c, d, e, total, i, _yield$connection$exe3, _yield$connection$exe4, joinA, lengthA, _i2, info, sult, check, joinNum, _yield$connection$exe5, _yield$connection$exe6, joinB, lengthB, _i3, _info, _sult, _check, _joinNum, _yield$connection$exe7, _yield$connection$exe8, joinC, lengthC, _i4, _info2, _sult2, _check2, _joinNum2, _yield$connection$exe9, _yield$connection$exe10, joinD, lengthD, _i5, _info3, _sult3, _check3, _joinNum3, _yield$connection$exe11, _yield$connection$exe12, joinE, lengthE, _i6, _info4, _sult4, _check4, _joinNum4, _yield$connection$exe13, _yield$connection$exe14, joinTotal;\n    return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n      while (1) switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return _connectDB[\"default\"].query(\"SELECT * FROM 5d WHERE status != 0 AND game = \".concat(game, \" ORDER BY id DESC LIMIT 1 \"));\n        case 2:\n          _yield$connection$que39 = _context12.sent;\n          _yield$connection$que40 = _slicedToArray(_yield$connection$que39, 1);\n          k5d = _yield$connection$que40[0];\n          k5dInfo = k5d[0]; // update ket qua\n          _context12.next = 8;\n          return _connectDB[\"default\"].execute(\"UPDATE result_5d SET result = ? WHERE status = 0 AND game = \".concat(game), [k5dInfo.result]);\n        case 8:\n          result = String(k5dInfo.result).split('');\n          a = result[0];\n          b = result[1];\n          c = result[2];\n          d = result[3];\n          e = result[4];\n          total = 0;\n          for (i = 0; i < result.length; i++) {\n            total += Number(result[i]);\n          }\n\n          // xử lý game a\n          _context12.next = 18;\n          return _connectDB[\"default\"].execute(\"SELECT id, bet FROM result_5d WHERE status = 0 AND game = \".concat(game, \" AND join_bet = 'a' \"));\n        case 18:\n          _yield$connection$exe3 = _context12.sent;\n          _yield$connection$exe4 = _slicedToArray(_yield$connection$exe3, 1);\n          joinA = _yield$connection$exe4[0];\n          lengthA = joinA.length;\n          _i2 = 0;\n        case 23:\n          if (!(_i2 < lengthA)) {\n            _context12.next = 35;\n            break;\n          }\n          info = joinA[_i2];\n          sult = info.bet.split('');\n          check = isNumber(info.bet);\n          if (!check) {\n            _context12.next = 32;\n            break;\n          }\n          joinNum = sult.includes(a);\n          if (joinNum) {\n            _context12.next = 32;\n            break;\n          }\n          _context12.next = 32;\n          return _connectDB[\"default\"].execute(\"UPDATE result_5d SET status = 2 WHERE id = ? \", [info.id]);\n        case 32:\n          _i2++;\n          _context12.next = 23;\n          break;\n        case 35:\n          if (!(lengthA > 0)) {\n            _context12.next = 52;\n            break;\n          }\n          if (!(a == '0' || a == '1' || a == '2' || a == '3' || a == '4')) {\n            _context12.next = 39;\n            break;\n          }\n          _context12.next = 39;\n          return _connectDB[\"default\"].execute(\"UPDATE result_5d SET status = 2 WHERE join_bet = 'a' AND bet = 'b' \");\n        case 39:\n          ;\n          if (!(a == '5' || a == '6' || a == '7' || a == '8' || a == '9')) {\n            _context12.next = 43;\n            break;\n          }\n          _context12.next = 43;\n          return _connectDB[\"default\"].execute(\"UPDATE result_5d SET status = 2 WHERE join_bet = 'a' AND bet = 's' \");\n        case 43:\n          ;\n          if (!(Number(a) % 2 == 0)) {\n            _context12.next = 47;\n            break;\n          }\n          _context12.next = 47;\n          return _connectDB[\"default\"].execute(\"UPDATE result_5d SET status = 2 WHERE join_bet = 'a' AND bet = 'l' \");\n        case 47:\n          ;\n          if (!(Number(a) % 2 != 0)) {\n            _context12.next = 51;\n            break;\n          }\n          _context12.next = 51;\n          return _connectDB[\"default\"].execute(\"UPDATE result_5d SET status = 2 WHERE join_bet = 'a' AND bet = 'c' \");\n        case 51:\n          ;\n        case 52:\n          _context12.next = 54;\n          return _connectDB[\"default\"].execute(\"SELECT id, bet FROM result_5d WHERE status = 0 AND game = \".concat(game, \" AND join_bet = 'b' \"));\n        case 54:\n          _yield$connection$exe5 = _context12.sent;\n          _yield$connection$exe6 = _slicedToArray(_yield$connection$exe5, 1);\n          joinB = _yield$connection$exe6[0];\n          lengthB = joinB.length;\n          _i3 = 0;\n        case 59:\n          if (!(_i3 < lengthB)) {\n            _context12.next = 71;\n            break;\n          }\n          _info = joinB[_i3];\n          _sult = _info.bet.split('');\n          _check = isNumber(_info.bet);\n          if (!_check) {\n            _context12.next = 68;\n            break;\n          }\n          _joinNum = _sult.includes(b);\n          if (_joinNum) {\n            _context12.next = 68;\n            break;\n          }\n          _context12.next = 68;\n          return _connectDB[\"default\"].execute(\"UPDATE result_5d SET status = 2 WHERE id = ? \", [_info.id]);\n        case 68:\n          _i3++;\n          _context12.next = 59;\n          break;\n        case 71:\n          if (!(lengthB > 0)) {\n            _context12.next = 88;\n            break;\n          }\n          if (!(b == '0' || b == '1' || b == '2' || b == '3' || b == '4')) {\n            _context12.next = 75;\n            break;\n          }\n          _context12.next = 75;\n          return _connectDB[\"default\"].execute(\"UPDATE result_5d SET status = 2 WHERE join_bet = 'b' AND bet = 'b' \");\n        case 75:\n          ;\n          if (!(b == '5' || b == '6' || b == '7' || b == '8' || b == '9')) {\n            _context12.next = 79;\n            break;\n          }\n          _context12.next = 79;\n          return _connectDB[\"default\"].execute(\"UPDATE result_5d SET status = 2 WHERE join_bet = 'b' AND bet = 's' \");\n        case 79:\n          ;\n          if (!(Number(b) % 2 == 0)) {\n            _context12.next = 83;\n            break;\n          }\n          _context12.next = 83;\n          return _connectDB[\"default\"].execute(\"UPDATE result_5d SET status = 2 WHERE join_bet = 'b' AND bet = 'l' \");\n        case 83:\n          ;\n          if (!(Number(b) % 2 != 0)) {\n            _context12.next = 87;\n            break;\n          }\n          _context12.next = 87;\n          return _connectDB[\"default\"].execute(\"UPDATE result_5d SET status = 2 WHERE join_bet = 'b' AND bet = 'c' \");\n        case 87:\n          ;\n        case 88:\n          _context12.next = 90;\n          return _connectDB[\"default\"].execute(\"SELECT id, bet FROM result_5d WHERE status = 0 AND game = \".concat(game, \" AND join_bet = 'c' \"));\n        case 90:\n          _yield$connection$exe7 = _context12.sent;\n          _yield$connection$exe8 = _slicedToArray(_yield$connection$exe7, 1);\n          joinC = _yield$connection$exe8[0];\n          lengthC = joinC.length;\n          _i4 = 0;\n        case 95:\n          if (!(_i4 < lengthC)) {\n            _context12.next = 107;\n            break;\n          }\n          _info2 = joinC[_i4];\n          _sult2 = _info2.bet.split('');\n          _check2 = isNumber(_info2.bet);\n          if (!_check2) {\n            _context12.next = 104;\n            break;\n          }\n          _joinNum2 = _sult2.includes(c);\n          if (_joinNum2) {\n            _context12.next = 104;\n            break;\n          }\n          _context12.next = 104;\n          return _connectDB[\"default\"].execute(\"UPDATE result_5d SET status = 2 WHERE id = ? \", [_info2.id]);\n        case 104:\n          _i4++;\n          _context12.next = 95;\n          break;\n        case 107:\n          if (!(lengthC > 0)) {\n            _context12.next = 124;\n            break;\n          }\n          if (!(c == '0' || c == '1' || c == '2' || c == '3' || c == '4')) {\n            _context12.next = 111;\n            break;\n          }\n          _context12.next = 111;\n          return _connectDB[\"default\"].execute(\"UPDATE result_5d SET status = 2 WHERE join_bet = 'c' AND bet = 'b' \");\n        case 111:\n          ;\n          if (!(c == '5' || c == '6' || c == '7' || c == '8' || c == '9')) {\n            _context12.next = 115;\n            break;\n          }\n          _context12.next = 115;\n          return _connectDB[\"default\"].execute(\"UPDATE result_5d SET status = 2 WHERE join_bet = 'c' AND bet = 's' \");\n        case 115:\n          ;\n          if (!(Number(c) % 2 == 0)) {\n            _context12.next = 119;\n            break;\n          }\n          _context12.next = 119;\n          return _connectDB[\"default\"].execute(\"UPDATE result_5d SET status = 2 WHERE join_bet = 'c' AND bet = 'l' \");\n        case 119:\n          ;\n          if (!(Number(c) % 2 != 0)) {\n            _context12.next = 123;\n            break;\n          }\n          _context12.next = 123;\n          return _connectDB[\"default\"].execute(\"UPDATE result_5d SET status = 2 WHERE join_bet = 'c' AND bet = 'c' \");\n        case 123:\n          ;\n        case 124:\n          _context12.next = 126;\n          return _connectDB[\"default\"].execute(\"SELECT id, bet FROM result_5d WHERE status = 0 AND game = \".concat(game, \" AND join_bet = 'd' \"));\n        case 126:\n          _yield$connection$exe9 = _context12.sent;\n          _yield$connection$exe10 = _slicedToArray(_yield$connection$exe9, 1);\n          joinD = _yield$connection$exe10[0];\n          lengthD = joinD.length;\n          _i5 = 0;\n        case 131:\n          if (!(_i5 < lengthD)) {\n            _context12.next = 143;\n            break;\n          }\n          _info3 = joinD[_i5];\n          _sult3 = _info3.bet.split('');\n          _check3 = isNumber(_info3.bet);\n          if (!_check3) {\n            _context12.next = 140;\n            break;\n          }\n          _joinNum3 = _sult3.includes(d);\n          if (_joinNum3) {\n            _context12.next = 140;\n            break;\n          }\n          _context12.next = 140;\n          return _connectDB[\"default\"].execute(\"UPDATE result_5d SET status = 2 WHERE id = ? \", [_info3.id]);\n        case 140:\n          _i5++;\n          _context12.next = 131;\n          break;\n        case 143:\n          if (!(lengthD > 0)) {\n            _context12.next = 160;\n            break;\n          }\n          if (!(d == '0' || d == '1' || d == '2' || d == '3' || d == '4')) {\n            _context12.next = 147;\n            break;\n          }\n          _context12.next = 147;\n          return _connectDB[\"default\"].execute(\"UPDATE result_5d SET status = 2 WHERE join_bet = 'd' AND bet = 'b' \");\n        case 147:\n          ;\n          if (!(d == '5' || d == '6' || d == '7' || d == '8' || d == '9')) {\n            _context12.next = 151;\n            break;\n          }\n          _context12.next = 151;\n          return _connectDB[\"default\"].execute(\"UPDATE result_5d SET status = 2 WHERE join_bet = 'd' AND bet = 's' \");\n        case 151:\n          ;\n          if (!(Number(d) % 2 == 0)) {\n            _context12.next = 155;\n            break;\n          }\n          _context12.next = 155;\n          return _connectDB[\"default\"].execute(\"UPDATE result_5d SET status = 2 WHERE join_bet = 'd' AND bet = 'l' \");\n        case 155:\n          ;\n          if (!(Number(d) % 2 != 0)) {\n            _context12.next = 159;\n            break;\n          }\n          _context12.next = 159;\n          return _connectDB[\"default\"].execute(\"UPDATE result_5d SET status = 2 WHERE join_bet = 'd' AND bet = 'c' \");\n        case 159:\n          ;\n        case 160:\n          _context12.next = 162;\n          return _connectDB[\"default\"].execute(\"SELECT id, bet FROM result_5d WHERE status = 0 AND game = \".concat(game, \" AND join_bet = 'e' \"));\n        case 162:\n          _yield$connection$exe11 = _context12.sent;\n          _yield$connection$exe12 = _slicedToArray(_yield$connection$exe11, 1);\n          joinE = _yield$connection$exe12[0];\n          lengthE = joinE.length;\n          _i6 = 0;\n        case 167:\n          if (!(_i6 < lengthE)) {\n            _context12.next = 179;\n            break;\n          }\n          _info4 = joinE[_i6];\n          _sult4 = _info4.bet.split('');\n          _check4 = isNumber(_info4.bet);\n          if (!_check4) {\n            _context12.next = 176;\n            break;\n          }\n          _joinNum4 = _sult4.includes(e);\n          if (_joinNum4) {\n            _context12.next = 176;\n            break;\n          }\n          _context12.next = 176;\n          return _connectDB[\"default\"].execute(\"UPDATE result_5d SET status = 2 WHERE id = ? \", [_info4.id]);\n        case 176:\n          _i6++;\n          _context12.next = 167;\n          break;\n        case 179:\n          if (!(lengthE > 0)) {\n            _context12.next = 196;\n            break;\n          }\n          if (!(e == '0' || e == '1' || e == '2' || e == '3' || e == '4')) {\n            _context12.next = 183;\n            break;\n          }\n          _context12.next = 183;\n          return _connectDB[\"default\"].execute(\"UPDATE result_5d SET status = 2 WHERE join_bet = 'e' AND bet = 'b' \");\n        case 183:\n          ;\n          if (!(e == '5' || e == '6' || e == '7' || e == '8' || e == '9')) {\n            _context12.next = 187;\n            break;\n          }\n          _context12.next = 187;\n          return _connectDB[\"default\"].execute(\"UPDATE result_5d SET status = 2 WHERE join_bet = 'e' AND bet = 's' \");\n        case 187:\n          ;\n          if (!(Number(e) % 2 == 0)) {\n            _context12.next = 191;\n            break;\n          }\n          _context12.next = 191;\n          return _connectDB[\"default\"].execute(\"UPDATE result_5d SET status = 2 WHERE join_bet = 'e' AND bet = 'l' \");\n        case 191:\n          ;\n          if (!(Number(e) % 2 != 0)) {\n            _context12.next = 195;\n            break;\n          }\n          _context12.next = 195;\n          return _connectDB[\"default\"].execute(\"UPDATE result_5d SET status = 2 WHERE join_bet = 'e' AND bet = 'c' \");\n        case 195:\n          ;\n        case 196:\n          _context12.next = 198;\n          return _connectDB[\"default\"].execute(\"SELECT id, bet FROM result_5d WHERE status = 0 AND game = \".concat(game, \" AND join_bet = 'total' \"));\n        case 198:\n          _yield$connection$exe13 = _context12.sent;\n          _yield$connection$exe14 = _slicedToArray(_yield$connection$exe13, 1);\n          joinTotal = _yield$connection$exe14[0];\n          if (!(joinTotal.length > 0)) {\n            _context12.next = 218;\n            break;\n          }\n          if (!(total <= 22)) {\n            _context12.next = 205;\n            break;\n          }\n          _context12.next = 205;\n          return _connectDB[\"default\"].execute(\"UPDATE result_5d SET status = 2 WHERE join_bet = 'total' AND bet = 'b' \");\n        case 205:\n          ;\n          if (!(total > 22)) {\n            _context12.next = 209;\n            break;\n          }\n          _context12.next = 209;\n          return _connectDB[\"default\"].execute(\"UPDATE result_5d SET status = 2 WHERE join_bet = 'total' AND bet = 's' \");\n        case 209:\n          ;\n          if (!(total % 2 == 0)) {\n            _context12.next = 213;\n            break;\n          }\n          _context12.next = 213;\n          return _connectDB[\"default\"].execute(\"UPDATE result_5d SET status = 2 WHERE join_bet = 'total' AND bet = 'l' \");\n        case 213:\n          ;\n          if (!(total % 2 != 0)) {\n            _context12.next = 217;\n            break;\n          }\n          _context12.next = 217;\n          return _connectDB[\"default\"].execute(\"UPDATE result_5d SET status = 2 WHERE join_bet = 'total' AND bet = 'c' \");\n        case 217:\n          ;\n        case 218:\n        case \"end\":\n          return _context12.stop();\n      }\n    }, _callee12);\n  }));\n  return _funHanding.apply(this, arguments);\n}\nvar handling5D = /*#__PURE__*/function () {\n  var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(typeid) {\n    var game, _yield$connection$exe, _yield$connection$exe2, order, i, orders, id, phone, nhan_duoc, check, arr, total, fee, price, sql;\n    return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n      while (1) switch (_context11.prev = _context11.next) {\n        case 0:\n          game = Number(typeid);\n          _context11.next = 3;\n          return funHanding(game);\n        case 3:\n          _context11.next = 5;\n          return _connectDB[\"default\"].execute(\"SELECT id, phone, bet, price, money, fee, amount FROM result_5d WHERE status = 0 AND game = \".concat(game, \" \"));\n        case 5:\n          _yield$connection$exe = _context11.sent;\n          _yield$connection$exe2 = _slicedToArray(_yield$connection$exe, 1);\n          order = _yield$connection$exe2[0];\n          i = 0;\n        case 9:\n          if (!(i < order.length)) {\n            _context11.next = 24;\n            break;\n          }\n          orders = order[i];\n          id = orders.id;\n          phone = orders.phone;\n          nhan_duoc = 0;\n          check = isNumber(orders.bet);\n          if (check) {\n            arr = orders.bet.split('');\n            total = orders.money / arr.length / orders.amount;\n            fee = total * 0.02;\n            price = total - fee;\n            nhan_duoc += price * 9;\n          } else {\n            nhan_duoc += orders.price * 2;\n          }\n          _context11.next = 18;\n          return _connectDB[\"default\"].execute('UPDATE `result_5d` SET `get` = ?, `status` = 1 WHERE `id` = ? ', [nhan_duoc, id]);\n        case 18:\n          sql = 'UPDATE `users` SET `money` = `money` + ? WHERE `phone` = ? ';\n          _context11.next = 21;\n          return _connectDB[\"default\"].execute(sql, [nhan_duoc, phone]);\n        case 21:\n          i++;\n          _context11.next = 9;\n          break;\n        case 24:\n        case \"end\":\n          return _context11.stop();\n      }\n    }, _callee11);\n  }));\n  return function handling5D(_x24) {\n    return _ref11.apply(this, arguments);\n  };\n}();\nmodule.exports = {\n  K5DPage: K5DPage,\n  K5DPage3: K5DPage3,\n  K5DPage5: K5DPage5,\n  K5DPage10: K5DPage10,\n  betK5D: betK5D,\n  listOrderOld: listOrderOld,\n  GetMyEmerdList: GetMyEmerdList,\n  add5D: add5D,\n  handling5D: handling5D\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZXhwcmVzcyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX2Nvbm5lY3REQiIsIl9leGNsdWRlZCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiLCJzb3VyY2UiLCJleGNsdWRlZCIsInRhcmdldCIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIiwia2V5IiwiaSIsIk9iamVjdCIsImdldE93blByb3BlcnR5U3ltYm9scyIsInNvdXJjZVN5bWJvbEtleXMiLCJsZW5ndGgiLCJpbmRleE9mIiwicHJvdG90eXBlIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJjYWxsIiwic291cmNlS2V5cyIsImtleXMiLCJfc2xpY2VkVG9BcnJheSIsImFyciIsIl9hcnJheVdpdGhIb2xlcyIsIl9pdGVyYWJsZVRvQXJyYXlMaW1pdCIsIl91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheSIsIl9ub25JdGVyYWJsZVJlc3QiLCJUeXBlRXJyb3IiLCJvIiwibWluTGVuIiwiX2FycmF5TGlrZVRvQXJyYXkiLCJuIiwidG9TdHJpbmciLCJzbGljZSIsImNvbnN0cnVjdG9yIiwibmFtZSIsIkFycmF5IiwiZnJvbSIsInRlc3QiLCJsZW4iLCJhcnIyIiwiciIsImwiLCJ0IiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJlIiwidSIsImEiLCJmIiwibmV4dCIsImRvbmUiLCJwdXNoIiwidmFsdWUiLCJpc0FycmF5IiwiX3JlZ2VuZXJhdG9yUnVudGltZSIsImhhc093blByb3BlcnR5IiwiZGVmaW5lUHJvcGVydHkiLCJjIiwiYXN5bmNJdGVyYXRvciIsInRvU3RyaW5nVGFnIiwiZGVmaW5lIiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwid3JhcCIsIkdlbmVyYXRvciIsImNyZWF0ZSIsIkNvbnRleHQiLCJtYWtlSW52b2tlTWV0aG9kIiwidHJ5Q2F0Y2giLCJ0eXBlIiwiYXJnIiwiaCIsInMiLCJ5IiwiR2VuZXJhdG9yRnVuY3Rpb24iLCJHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSIsInAiLCJkIiwiZ2V0UHJvdG90eXBlT2YiLCJ2IiwidmFsdWVzIiwiZyIsImRlZmluZUl0ZXJhdG9yTWV0aG9kcyIsImZvckVhY2giLCJfaW52b2tlIiwiQXN5bmNJdGVyYXRvciIsImludm9rZSIsIl90eXBlb2YiLCJyZXNvbHZlIiwiX19hd2FpdCIsInRoZW4iLCJjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZyIsIkVycm9yIiwibWV0aG9kIiwiZGVsZWdhdGUiLCJtYXliZUludm9rZURlbGVnYXRlIiwic2VudCIsIl9zZW50IiwiZGlzcGF0Y2hFeGNlcHRpb24iLCJhYnJ1cHQiLCJyZXN1bHROYW1lIiwibmV4dExvYyIsInB1c2hUcnlFbnRyeSIsInRyeUxvYyIsImNhdGNoTG9jIiwiZmluYWxseUxvYyIsImFmdGVyTG9jIiwidHJ5RW50cmllcyIsInJlc2V0VHJ5RW50cnkiLCJjb21wbGV0aW9uIiwicmVzZXQiLCJpc05hTiIsImRpc3BsYXlOYW1lIiwiaXNHZW5lcmF0b3JGdW5jdGlvbiIsIm1hcmsiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsImF3cmFwIiwiYXN5bmMiLCJQcm9taXNlIiwicmV2ZXJzZSIsInBvcCIsInByZXYiLCJjaGFyQXQiLCJzdG9wIiwicnZhbCIsImhhbmRsZSIsImNvbXBsZXRlIiwiZmluaXNoIiwiX2NhdGNoIiwiZGVsZWdhdGVZaWVsZCIsImFzeW5jR2VuZXJhdG9yU3RlcCIsImdlbiIsInJlamVjdCIsIl9uZXh0IiwiX3Rocm93IiwiaW5mbyIsImVycm9yIiwiX2FzeW5jVG9HZW5lcmF0b3IiLCJmbiIsInNlbGYiLCJhcmdzIiwiYXJndW1lbnRzIiwiYXBwbHkiLCJlcnIiLCJ1bmRlZmluZWQiLCJjb25maWciLCJLNURQYWdlIiwiX3JlZiIsIl9jYWxsZWUiLCJyZXEiLCJyZXMiLCJfY2FsbGVlJCIsIl9jb250ZXh0IiwicmVuZGVyIiwiX3giLCJfeDIiLCJLNURQYWdlMyIsIl9yZWYyIiwiX2NhbGxlZTIiLCJfY2FsbGVlMiQiLCJfY29udGV4dDIiLCJfeDMiLCJfeDQiLCJLNURQYWdlNSIsIl9yZWYzIiwiX2NhbGxlZTMiLCJfY2FsbGVlMyQiLCJfY29udGV4dDMiLCJfeDUiLCJfeDYiLCJLNURQYWdlMTAiLCJfcmVmNCIsIl9jYWxsZWU0IiwiX2NhbGxlZTQkIiwiX2NvbnRleHQ0IiwiX3g3IiwiX3g4IiwiaXNOdW1iZXIiLCJwYXJhbXMiLCJwYXR0ZXJuIiwiZm9ybWF0ZVQiLCJyZXN1bHQiLCJ0aW1lckpvaW4iLCJhZGRIb3VycyIsImRhdGUiLCJEYXRlIiwiTnVtYmVyIiwic2V0SG91cnMiLCJnZXRIb3VycyIsInllYXJzIiwiZ2V0RnVsbFllYXIiLCJtb250aHMiLCJnZXRNb250aCIsImRheXMiLCJnZXREYXRlIiwiaG91cnMiLCJhbXBtIiwibWludXRlcyIsImdldE1pbnV0ZXMiLCJzZWNvbmRzIiwiZ2V0U2Vjb25kcyIsInJvc2VzUGx1cyIsIl9yZWY1IiwiX2NhbGxlZTUiLCJhdXRoIiwibW9uZXkiLCJfeWllbGQkY29ubmVjdGlvbiRxdWUiLCJfeWllbGQkY29ubmVjdGlvbiRxdWUyIiwibGV2ZWwiLCJsZXZlbDAiLCJfeWllbGQkY29ubmVjdGlvbiRxdWUzIiwiX3lpZWxkJGNvbm5lY3Rpb24kcXVlNCIsInVzZXIiLCJ1c2VySW5mbyIsIl95aWVsZCRjb25uZWN0aW9uJHF1ZTUiLCJfeWllbGQkY29ubmVjdGlvbiRxdWU2IiwiZjEiLCJpbmZvRjEiLCJyb3Nlc0YxIiwiX3lpZWxkJGNvbm5lY3Rpb24kcXVlNyIsIl95aWVsZCRjb25uZWN0aW9uJHF1ZTgiLCJmMiIsImluZm9GMiIsInJvc2VzRjIiLCJfeWllbGQkY29ubmVjdGlvbiRxdWU5IiwiX3lpZWxkJGNvbm5lY3Rpb24kcXVlMTAiLCJmMyIsImluZm9GMyIsInJvc2VzRjMiLCJfeWllbGQkY29ubmVjdGlvbiRxdWUxMSIsIl95aWVsZCRjb25uZWN0aW9uJHF1ZTEyIiwiZjQiLCJpbmZvRjQiLCJyb3Nlc0Y0IiwiX2NhbGxlZTUkIiwiX2NvbnRleHQ1IiwiY29ubmVjdGlvbiIsInF1ZXJ5IiwiaW52aXRlIiwicGhvbmUiLCJfeDkiLCJfeDEwIiwidmFsaWRhdGVCZXQiLCJfcmVmNiIsIl9jYWxsZWU2Iiwiam9pbiIsImxpc3Rfam9pbiIsIngiLCJnYW1lIiwiY2hlY2tKb2luIiwiY2hlY2tYIiwiY2hlY2tzIiwiY2hlY2tHYW1lIiwiY2hlY2tNb25leSIsImpvaW5OdW0iLCJfYXJyIiwiX2xlbmd0aCIsIl9pIiwiam9pblN0ciIsIl9jYWxsZWU2JCIsIl9jb250ZXh0NiIsImluY2x1ZGVzIiwiU3RyaW5nIiwic3BsaXQiLCJfeDExIiwiX3gxMiIsIl94MTMiLCJfeDE0IiwiX3gxNSIsImJldEs1RCIsIl9yZWY3IiwiX2NhbGxlZTciLCJfcmVxJGJvZHkiLCJ2YWxpZGF0ZSIsIl95aWVsZCRjb25uZWN0aW9uJHF1ZTEzIiwiX3lpZWxkJGNvbm5lY3Rpb24kcXVlMTQiLCJrNUROb3ciLCJfeWllbGQkY29ubmVjdGlvbiRxdWUxNSIsIl95aWVsZCRjb25uZWN0aW9uJHF1ZTE2IiwicGVyaW9kIiwiaWRfcHJvZHVjdCIsInRvdGFsIiwiZmVlIiwicHJpY2UiLCJjaGVjayIsInRpbWVOb3ciLCJzcWwiLCJfeWllbGQkY29ubmVjdGlvbiRxdWUxNyIsIl95aWVsZCRjb25uZWN0aW9uJHF1ZTE4IiwidXNlcnMiLCJfeWllbGQkY29ubmVjdGlvbiRxdWUxOSIsIl95aWVsZCRjb25uZWN0aW9uJHF1ZTIwIiwic3FsMiIsInRvdGFsX20iLCJfY2FsbGVlNyQiLCJfY29udGV4dDciLCJib2R5IiwiY29va2llcyIsInN0YXR1cyIsImpzb24iLCJtZXNzYWdlIiwiY29uY2F0IiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwibm93IiwiZXhlY3V0ZSIsImNvZGUiLCJjaGFuZ2UiLCJ0MCIsImNvbnNvbGUiLCJsb2ciLCJfeDE2IiwiX3gxNyIsImxpc3RPcmRlck9sZCIsIl9yZWY4IiwiX2NhbGxlZTgiLCJfcmVxJGJvZHkyIiwiZ2FtZUpvaW4iLCJwYWdlbm8iLCJwYWdldG8iLCJfeWllbGQkY29ubmVjdGlvbiRxdWUyMSIsIl95aWVsZCRjb25uZWN0aW9uJHF1ZTIyIiwiX3lpZWxkJGNvbm5lY3Rpb24kcXVlMjMiLCJfeWllbGQkY29ubmVjdGlvbiRxdWUyNCIsIms1ZCIsIl95aWVsZCRjb25uZWN0aW9uJHF1ZTI1IiwiX3lpZWxkJGNvbm5lY3Rpb24kcXVlMjYiLCJrNWRBbGwiLCJfeWllbGQkY29ubmVjdGlvbiRxdWUyNyIsIl95aWVsZCRjb25uZWN0aW9uJHF1ZTI4IiwicGFnZSIsIl9jYWxsZWU4JCIsIl9jb250ZXh0OCIsIm1zZyIsImRhdGEiLCJnYW1lc2xpc3QiLCJjZWlsIiwiX3gxOCIsIl94MTkiLCJHZXRNeUVtZXJkTGlzdCIsIl9yZWY5IiwiX2NhbGxlZTkiLCJfcmVxJGJvZHkzIiwiX3lpZWxkJGNvbm5lY3Rpb24kcXVlMjkiLCJfeWllbGQkY29ubmVjdGlvbiRxdWUzMCIsIl95aWVsZCRjb25uZWN0aW9uJHF1ZTMxIiwiX3lpZWxkJGNvbm5lY3Rpb24kcXVlMzIiLCJyZXN1bHRfNWQiLCJfeWllbGQkY29ubmVjdGlvbiRxdWUzMyIsIl95aWVsZCRjb25uZWN0aW9uJHF1ZTM0IiwicmVzdWx0XzVkQWxsIiwiZGF0YXMiLCJfY2FsbGVlOSQiLCJfY29udGV4dDkiLCJtYXAiLCJpZCIsIm90aGVycyIsIl94MjAiLCJfeDIxIiwibWFrZWlkIiwiY2hhcmFjdGVycyIsImNoYXJhY3RlcnNMZW5ndGgiLCJhZGQ1RCIsIl9yZWYxMCIsIl9jYWxsZWUxMCIsInJlc3VsdDIiLCJfeWllbGQkY29ubmVjdGlvbiRxdWUzNSIsIl95aWVsZCRjb25uZWN0aW9uJHF1ZTM2IiwiazVEIiwiX3lpZWxkJGNvbm5lY3Rpb24kcXVlMzciLCJfeWllbGQkY29ubmVjdGlvbiRxdWUzOCIsInNldHRpbmciLCJuZXh0UmVzdWx0IiwibmV3QXJyIiwiX2NhbGxlZTEwJCIsIl9jb250ZXh0MTAiLCJrNWQzIiwiazVkNSIsIms1ZDEwIiwiX3gyMiIsImZ1bkhhbmRpbmciLCJfeDIzIiwiX2Z1bkhhbmRpbmciLCJfY2FsbGVlMTIiLCJfeWllbGQkY29ubmVjdGlvbiRxdWUzOSIsIl95aWVsZCRjb25uZWN0aW9uJHF1ZTQwIiwiazVkSW5mbyIsImIiLCJfeWllbGQkY29ubmVjdGlvbiRleGUzIiwiX3lpZWxkJGNvbm5lY3Rpb24kZXhlNCIsImpvaW5BIiwibGVuZ3RoQSIsIl9pMiIsInN1bHQiLCJfeWllbGQkY29ubmVjdGlvbiRleGU1IiwiX3lpZWxkJGNvbm5lY3Rpb24kZXhlNiIsImpvaW5CIiwibGVuZ3RoQiIsIl9pMyIsIl9pbmZvIiwiX3N1bHQiLCJfY2hlY2siLCJfam9pbk51bSIsIl95aWVsZCRjb25uZWN0aW9uJGV4ZTciLCJfeWllbGQkY29ubmVjdGlvbiRleGU4Iiwiam9pbkMiLCJsZW5ndGhDIiwiX2k0IiwiX2luZm8yIiwiX3N1bHQyIiwiX2NoZWNrMiIsIl9qb2luTnVtMiIsIl95aWVsZCRjb25uZWN0aW9uJGV4ZTkiLCJfeWllbGQkY29ubmVjdGlvbiRleGUxMCIsImpvaW5EIiwibGVuZ3RoRCIsIl9pNSIsIl9pbmZvMyIsIl9zdWx0MyIsIl9jaGVjazMiLCJfam9pbk51bTMiLCJfeWllbGQkY29ubmVjdGlvbiRleGUxMSIsIl95aWVsZCRjb25uZWN0aW9uJGV4ZTEyIiwiam9pbkUiLCJsZW5ndGhFIiwiX2k2IiwiX2luZm80IiwiX3N1bHQ0IiwiX2NoZWNrNCIsIl9qb2luTnVtNCIsIl95aWVsZCRjb25uZWN0aW9uJGV4ZTEzIiwiX3lpZWxkJGNvbm5lY3Rpb24kZXhlMTQiLCJqb2luVG90YWwiLCJfY2FsbGVlMTIkIiwiX2NvbnRleHQxMiIsImJldCIsImhhbmRsaW5nNUQiLCJfcmVmMTEiLCJfY2FsbGVlMTEiLCJ0eXBlaWQiLCJfeWllbGQkY29ubmVjdGlvbiRleGUiLCJfeWllbGQkY29ubmVjdGlvbiRleGUyIiwib3JkZXIiLCJvcmRlcnMiLCJuaGFuX2R1b2MiLCJfY2FsbGVlMTEkIiwiX2NvbnRleHQxMSIsImFtb3VudCIsIl94MjQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIvd3d3L3d3d3Jvb3QvMjFpbmRpYS9zcmMvY29udHJvbGxlcnMvIiwic291cmNlcyI6WyJrNUNvbnRyb2xsZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGUgZnJvbSBcImV4cHJlc3NcIjtcbmltcG9ydCBjb25uZWN0aW9uIGZyb20gXCIuLi9jb25maWcvY29ubmVjdERCXCI7XG5yZXF1aXJlKCdkb3RlbnYnKS5jb25maWcoKTtcblxuXG5jb25zdCBLNURQYWdlID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gICAgcmV0dXJuIHJlcy5yZW5kZXIoXCJiZXQvNWQvNWQuZWpzXCIpOyBcbn1cblxuY29uc3QgSzVEUGFnZTMgPSBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgICByZXR1cm4gcmVzLnJlbmRlcihcImJldC93aW5nby93aW4zLmVqc1wiKTtcbn1cblxuY29uc3QgSzVEUGFnZTUgPSBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgICByZXR1cm4gcmVzLnJlbmRlcihcImJldC93aW5nby93aW41LmVqc1wiKTtcbn1cblxuY29uc3QgSzVEUGFnZTEwID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gICAgcmV0dXJuIHJlcy5yZW5kZXIoXCJiZXQvd2luZ28vd2luMTAuZWpzXCIpO1xufVxuXG5cbmNvbnN0IGlzTnVtYmVyID0gKHBhcmFtcykgPT4ge1xuICAgIGxldCBwYXR0ZXJuID0gL15bMC05XSpcXGQkLztcbiAgICByZXR1cm4gcGF0dGVybi50ZXN0KHBhcmFtcyk7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdGVUKHBhcmFtcykge1xuICAgIGxldCByZXN1bHQgPSAocGFyYW1zIDwgMTApID8gXCIwXCIgKyBwYXJhbXMgOiBwYXJhbXM7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gICAgXG5mdW5jdGlvbiB0aW1lckpvaW4ocGFyYW1zID0gJycsIGFkZEhvdXJzID0gMCkge1xuICAgICAgICBsZXQgZGF0ZSA9ICcnO1xuICAgICAgICBpZiAocGFyYW1zKSB7XG4gICAgICAgICAgICBkYXRlID0gbmV3IERhdGUoTnVtYmVyKHBhcmFtcykpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZGF0ZSA9IG5ldyBEYXRlKCk7XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgZGF0ZS5zZXRIb3VycyhkYXRlLmdldEhvdXJzKCkgKyBhZGRIb3Vycyk7XG4gICAgXG4gICAgICAgIGxldCB5ZWFycyA9IGZvcm1hdGVUKGRhdGUuZ2V0RnVsbFllYXIoKSk7XG4gICAgICAgIGxldCBtb250aHMgPSBmb3JtYXRlVChkYXRlLmdldE1vbnRoKCkgKyAxKTtcbiAgICAgICAgbGV0IGRheXMgPSBmb3JtYXRlVChkYXRlLmdldERhdGUoKSk7XG4gICAgXG4gICAgICAgIGxldCBob3VycyA9IGRhdGUuZ2V0SG91cnMoKSAlIDEyO1xuICAgICAgICBob3VycyA9IGhvdXJzID09PSAwID8gMTIgOiBob3VycztcbiAgICAgICAgbGV0IGFtcG0gPSBkYXRlLmdldEhvdXJzKCkgPCAxMiA/IFwiQU1cIiA6IFwiUE1cIjtcbiAgICBcbiAgICAgICAgbGV0IG1pbnV0ZXMgPSBmb3JtYXRlVChkYXRlLmdldE1pbnV0ZXMoKSk7XG4gICAgICAgIGxldCBzZWNvbmRzID0gZm9ybWF0ZVQoZGF0ZS5nZXRTZWNvbmRzKCkpO1xuICAgIFxuICAgICAgICByZXR1cm4geWVhcnMgKyAnLScgKyBtb250aHMgKyAnLScgKyBkYXlzICsgJyAnICsgaG91cnMgKyAnOicgKyBtaW51dGVzICsgJzonICsgc2Vjb25kcyArICcgJyArIGFtcG07XG4gICAgfVxuXG5jb25zdCByb3Nlc1BsdXMgPSBhc3luYyAoYXV0aCwgbW9uZXkpID0+IHtcbiAgICBjb25zdCBbbGV2ZWxdID0gYXdhaXQgY29ubmVjdGlvbi5xdWVyeSgnU0VMRUNUICogRlJPTSBsZXZlbCAnKTtcbiAgICBsZXQgbGV2ZWwwID0gbGV2ZWxbMF07XG5cbiAgICBjb25zdCBbdXNlcl0gPSBhd2FpdCBjb25uZWN0aW9uLnF1ZXJ5KCdTRUxFQ1QgYHBob25lYCwgYGNvZGVgLCBgaW52aXRlYCBGUk9NIHVzZXJzIFdIRVJFIHRva2VuID0gPyBBTkQgdmVyaSA9IDEgIExJTUlUIDEgJywgW2F1dGhdKTtcbiAgICBsZXQgdXNlckluZm8gPSB1c2VyWzBdO1xuICAgIGNvbnN0IFtmMV0gPSBhd2FpdCBjb25uZWN0aW9uLnF1ZXJ5KCdTRUxFQ1QgYHBob25lYCwgYGNvZGVgLCBgaW52aXRlYCwgYHJhbmtgIEZST00gdXNlcnMgV0hFUkUgY29kZSA9ID8gQU5EIHZlcmkgPSAxICBMSU1JVCAxICcsIFt1c2VySW5mby5pbnZpdGVdKTtcbiAgICBpZiAobW9uZXkgPj0gMTAwMDApIHtcbiAgICAgICAgaWYgKGYxLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIGxldCBpbmZvRjEgPSBmMVswXTtcbiAgICAgICAgICAgIGxldCByb3Nlc0YxID0gKG1vbmV5IC8gMTAwKSAqIGxldmVsMC5mMTtcbiAgICAgICAgICAgIGF3YWl0IGNvbm5lY3Rpb24ucXVlcnkoJ1VQREFURSB1c2VycyBTRVQgbW9uZXkgPSBtb25leSArID8sIHJvc2VzX2YxID0gcm9zZXNfZjEgKyA/LCByb3Nlc19mID0gcm9zZXNfZiArID8sIHJvc2VzX3RvZGF5ID0gcm9zZXNfdG9kYXkgKyA/IFdIRVJFIHBob25lID0gPyAnLCBbcm9zZXNGMSwgcm9zZXNGMSwgcm9zZXNGMSwgcm9zZXNGMSwgaW5mb0YxLnBob25lXSk7XG4gICAgICAgICAgICBjb25zdCBbZjJdID0gYXdhaXQgY29ubmVjdGlvbi5xdWVyeSgnU0VMRUNUIGBwaG9uZWAsIGBjb2RlYCwgYGludml0ZWAsIGByYW5rYCBGUk9NIHVzZXJzIFdIRVJFIGNvZGUgPSA/IEFORCB2ZXJpID0gMSAgTElNSVQgMSAnLCBbaW5mb0YxLmludml0ZV0pO1xuICAgICAgICAgICAgaWYgKGYyLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICBsZXQgaW5mb0YyID0gZjJbMF07XG4gICAgICAgICAgICAgICAgbGV0IHJvc2VzRjIgPSAobW9uZXkgLyAxMDApICogbGV2ZWwwLmYyO1xuICAgICAgICAgICAgICAgIGF3YWl0IGNvbm5lY3Rpb24ucXVlcnkoJ1VQREFURSB1c2VycyBTRVQgbW9uZXkgPSBtb25leSArID8sIHJvc2VzX2YgPSByb3Nlc19mICsgPywgcm9zZXNfdG9kYXkgPSByb3Nlc190b2RheSArID8gV0hFUkUgcGhvbmUgPSA/ICcsIFtyb3Nlc0YyLCByb3Nlc0YyLCByb3Nlc0YyLCBpbmZvRjIucGhvbmVdKTtcbiAgICAgICAgICAgICAgICBjb25zdCBbZjNdID0gYXdhaXQgY29ubmVjdGlvbi5xdWVyeSgnU0VMRUNUIGBwaG9uZWAsIGBjb2RlYCwgYGludml0ZWAsIGByYW5rYCBGUk9NIHVzZXJzIFdIRVJFIGNvZGUgPSA/IEFORCB2ZXJpID0gMSAgTElNSVQgMSAnLCBbaW5mb0YyLmludml0ZV0pO1xuICAgICAgICAgICAgICAgIGlmIChmMy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGxldCBpbmZvRjMgPSBmM1swXTtcbiAgICAgICAgICAgICAgICAgICAgbGV0IHJvc2VzRjMgPSAobW9uZXkgLyAxMDApICogbGV2ZWwwLmYzO1xuICAgICAgICAgICAgICAgICAgICBhd2FpdCBjb25uZWN0aW9uLnF1ZXJ5KCdVUERBVEUgdXNlcnMgU0VUIG1vbmV5ID0gbW9uZXkgKyA/LCByb3Nlc19mID0gcm9zZXNfZiArID8sIHJvc2VzX3RvZGF5ID0gcm9zZXNfdG9kYXkgKyA/IFdIRVJFIHBob25lID0gPyAnLCBbcm9zZXNGMywgcm9zZXNGMywgcm9zZXNGMywgaW5mb0YzLnBob25lXSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IFtmNF0gPSBhd2FpdCBjb25uZWN0aW9uLnF1ZXJ5KCdTRUxFQ1QgYHBob25lYCwgYGNvZGVgLCBgaW52aXRlYCwgYHJhbmtgIEZST00gdXNlcnMgV0hFUkUgY29kZSA9ID8gQU5EIHZlcmkgPSAxICBMSU1JVCAxICcsIFtpbmZvRjMuaW52aXRlXSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChmNC5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgaW5mb0Y0ID0gZjRbMF07XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgcm9zZXNGNCA9IChtb25leSAvIDEwMCkgKiBsZXZlbDAuZjQ7XG4gICAgICAgICAgICAgICAgICAgICAgICBhd2FpdCBjb25uZWN0aW9uLnF1ZXJ5KCdVUERBVEUgdXNlcnMgU0VUIG1vbmV5ID0gbW9uZXkgKyA/LCByb3Nlc19mID0gcm9zZXNfZiArID8sIHJvc2VzX3RvZGF5ID0gcm9zZXNfdG9kYXkgKyA/IFdIRVJFIHBob25lID0gPyAnLCBbcm9zZXNGNCwgcm9zZXNGNCwgcm9zZXNGNCwgaW5mb0Y0LnBob25lXSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfVxuICAgIH1cbn1cblxuY29uc3QgdmFsaWRhdGVCZXQgPSBhc3luYyAoam9pbiwgbGlzdF9qb2luLCB4LCBtb25leSwgZ2FtZSkgPT4ge1xuICAgIGxldCBjaGVja0pvaW4gPSBpc051bWJlcihsaXN0X2pvaW4pO1xuICAgIGxldCBjaGVja1ggPSBpc051bWJlcih4KTtcbiAgICBjb25zdCBjaGVja3MgPSBbJ2EnLCAnYicsICdjJywgJ2QnLCAnZScsICd0b3RhbCddLmluY2x1ZGVzKGpvaW4pO1xuICAgIGNvbnN0IGNoZWNrR2FtZSA9IFsnMScsICczJywgJzUnLCAnMTAnXS5pbmNsdWRlcyhTdHJpbmcoZ2FtZSkpO1xuICAgIGNvbnN0IGNoZWNrTW9uZXkgPSBbJzEnLCAnMTAnLCAnMTAwJywgJzEwMDAnXS5pbmNsdWRlcyhtb25leSk7XG5cbiAgICBpZiAoIWNoZWNrcyB8fCBsaXN0X2pvaW4ubGVuZ3RoID4gMTAgfHwgIWNoZWNrWCB8fCAhY2hlY2tNb25leSB8fCAhY2hlY2tHYW1lKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBpZiAoY2hlY2tKb2luKSB7XG4gICAgICAgIGxldCBhcnIgPSBsaXN0X2pvaW4uc3BsaXQoJycpO1xuICAgICAgICBsZXQgbGVuZ3RoID0gYXJyLmxlbmd0aDtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgY29uc3Qgam9pbk51bSA9IFsnMCcsICcxJywgJzInLCAnMycsICc0JywgJzUnLCAnNicsICc3JywgJzgnLCAnOSddLmluY2x1ZGVzKGFycltpXSk7XG4gICAgICAgICAgICBpZiAoIWpvaW5OdW0pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgICBsZXQgYXJyID0gbGlzdF9qb2luLnNwbGl0KCcnKTtcbiAgICAgICAgbGV0IGxlbmd0aCA9IGFyci5sZW5ndGg7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGNvbnN0IGpvaW5TdHIgPSBbXCJjXCIsIFwibFwiLCBcImJcIiwgXCJzXCJdLmluY2x1ZGVzKGFycltpXSk7XG4gICAgICAgICAgICBpZiAoIWpvaW5TdHIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgIH1cblxuICAgIHJldHVybiB0cnVlO1xufVxuXG5jb25zdCBiZXRLNUQgPSBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgICB0cnkge1xuICAgICAgICBsZXQgeyBqb2luLCBsaXN0X2pvaW4sIHgsIG1vbmV5LCBnYW1lIH0gPSByZXEuYm9keTtcbiAgICAgICAgbGV0IGF1dGggPSByZXEuY29va2llcy5hdXRoO1xuXG4gICAgICAgIGxldCB2YWxpZGF0ZSA9IGF3YWl0IHZhbGlkYXRlQmV0KGpvaW4sIGxpc3Rfam9pbiwgeCwgbW9uZXksIGdhbWUpO1xuXG4gICAgICAgIGlmICghdmFsaWRhdGUpIHtcbiAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7XG4gICAgICAgICAgICAgICAgbWVzc2FnZTogJ0ludmFsaWQgYmV0JyxcbiAgICAgICAgICAgICAgICBzdGF0dXM6IGZhbHNlXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IFtrNUROb3ddID0gYXdhaXQgY29ubmVjdGlvbi5xdWVyeShgU0VMRUNUIHBlcmlvZCBGUk9NIDVkIFdIRVJFIHN0YXR1cyA9IDAgQU5EIGdhbWUgPSAke2dhbWV9IE9SREVSIEJZIGlkIERFU0MgTElNSVQgMSBgKTtcbiAgICAgICAgY29uc3QgW3VzZXJdID0gYXdhaXQgY29ubmVjdGlvbi5xdWVyeSgnU0VMRUNUIGBwaG9uZWAsIGBjb2RlYCwgYGludml0ZWAsIGBsZXZlbGAsIGBtb25leWAgRlJPTSB1c2VycyBXSEVSRSB0b2tlbiA9ID8gQU5EIHZlcmkgPSAxICBMSU1JVCAxICcsIFthdXRoXSk7XG4gICAgICAgIGlmIChrNUROb3cubGVuZ3RoIDwgMSB8fCB1c2VyLmxlbmd0aCA8IDEpIHtcbiAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7XG4gICAgICAgICAgICAgICAgbWVzc2FnZTogJ0Vycm9yIScsXG4gICAgICAgICAgICAgICAgc3RhdHVzOiBmYWxzZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHVzZXJJbmZvID0gdXNlclswXTtcbiAgICAgICAgbGV0IHBlcmlvZCA9IGs1RE5vd1swXTtcblxuICAgICAgICBsZXQgZGF0ZSA9IG5ldyBEYXRlKCk7XG4gICAgICAgIGxldCB5ZWFycyA9IGZvcm1hdGVUKGRhdGUuZ2V0RnVsbFllYXIoKSk7XG4gICAgICAgIGxldCBtb250aHMgPSBmb3JtYXRlVChkYXRlLmdldE1vbnRoKCkgKyAxKTtcbiAgICAgICAgbGV0IGRheXMgPSBmb3JtYXRlVChkYXRlLmdldERhdGUoKSk7XG4gICAgICAgIGxldCBpZF9wcm9kdWN0ID0geWVhcnMgKyBtb250aHMgKyBkYXlzICsgTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTAwMDAwMDAwMDAwMDAwMCk7XG5cbiAgICAgICAgbGV0IHRvdGFsID0gbW9uZXkgKiB4ICogKFN0cmluZyhsaXN0X2pvaW4pLnNwbGl0KCcnKS5sZW5ndGgpO1xuICAgICAgICBsZXQgZmVlID0gdG90YWwgKiAwLjAyO1xuICAgICAgICBsZXQgcHJpY2UgPSB0b3RhbCAtIGZlZTtcblxuICAgICAgICBsZXQgY2hlY2sgPSB1c2VySW5mby5tb25leSAtIHRvdGFsO1xuICAgICAgICBpZiAoY2hlY2sgPj0gMCkge1xuICAgICAgICAgICAgbGV0IHRpbWVOb3cgPSBEYXRlLm5vdygpO1xuICAgICAgICAgICAgY29uc3Qgc3FsID0gYElOU0VSVCBJTlRPIHJlc3VsdF81ZCBTRVQgaWRfcHJvZHVjdCA9ID8scGhvbmUgPSA/LGNvZGUgPSA/LGludml0ZSA9ID8sc3RhZ2UgPSA/LGxldmVsID0gPyxtb25leSA9ID8scHJpY2UgPSA/LGFtb3VudCA9ID8sZmVlID0gPyxnYW1lID0gPyxqb2luX2JldCA9ID8sYmV0ID0gPyxzdGF0dXMgPSA/LHRpbWUgPSA/YDtcbiAgICAgICAgICAgIGF3YWl0IGNvbm5lY3Rpb24uZXhlY3V0ZShzcWwsIFtpZF9wcm9kdWN0LCB1c2VySW5mby5waG9uZSwgdXNlckluZm8uY29kZSwgdXNlckluZm8uaW52aXRlLCBwZXJpb2QucGVyaW9kLCB1c2VySW5mby5sZXZlbCwgdG90YWwsIHByaWNlLCB4LCBmZWUsIGdhbWUsIGpvaW4sIGxpc3Rfam9pbiwgMCwgdGltZU5vd10pO1xuICAgICAgICAgICAgYXdhaXQgY29ubmVjdGlvbi5leGVjdXRlKCdVUERBVEUgYHVzZXJzYCBTRVQgYG1vbmV5YCA9IGBtb25leWAgLSA/IFdIRVJFIGB0b2tlbmAgPSA/ICcsIFt0b3RhbCwgYXV0aF0pO1xuICAgICAgICAgICAgY29uc3QgW3VzZXJzXSA9IGF3YWl0IGNvbm5lY3Rpb24ucXVlcnkoJ1NFTEVDVCBgbW9uZXlgLCBgbGV2ZWxgIEZST00gdXNlcnMgV0hFUkUgdG9rZW4gPSA/IEFORCB2ZXJpID0gMSAgTElNSVQgMSAnLCBbYXV0aF0pO1xuICAgICAgICAgICAgYXdhaXQgcm9zZXNQbHVzKGF1dGgsIG1vbmV5ICogeCk7XG4gICAgICAgICAgICBjb25zdCBbbGV2ZWxdID0gYXdhaXQgY29ubmVjdGlvbi5xdWVyeSgnU0VMRUNUICogRlJPTSBsZXZlbCAnKTtcbiAgICAgICAgICAgIGxldCBsZXZlbDAgPSBsZXZlbFswXTtcbiAgICAgICAgICAgIGNvbnN0IHNxbDIgPSBgSU5TRVJUIElOVE8gcm9zZXMgU0VUIHBob25lID0gPyxjb2RlID0gPyxpbnZpdGUgPSA/LGYxID0gPyxmMiA9ID8sZjMgPSA/LGY0ID0gPyx0aW1lID0gP2A7XG4gICAgICAgICAgICBsZXQgdG90YWxfbSA9IHRvdGFsO1xuICAgICAgICAgICAgbGV0IGYxID0gKHRvdGFsX20gLyAxMDApICogbGV2ZWwwLmYxO1xuICAgICAgICAgICAgbGV0IGYyID0gKHRvdGFsX20gLyAxMDApICogbGV2ZWwwLmYyO1xuICAgICAgICAgICAgbGV0IGYzID0gKHRvdGFsX20gLyAxMDApICogbGV2ZWwwLmYzO1xuICAgICAgICAgICAgbGV0IGY0ID0gKHRvdGFsX20gLyAxMDApICogbGV2ZWwwLmY0O1xuICAgICAgICAgICAgYXdhaXQgY29ubmVjdGlvbi5leGVjdXRlKHNxbDIsIFt1c2VySW5mby5waG9uZSwgdXNlckluZm8uY29kZSwgdXNlckluZm8uaW52aXRlLCBmMSwgZjIsIGYzLCBmNCwgdGltZU5vd10pO1xuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnU3VjY2Vzc2Z1bCBiZXQnLFxuICAgICAgICAgICAgICAgIHN0YXR1czogdHJ1ZSxcbiAgICAgICAgICAgICAgICAvLyBkYXRhOiByZXN1bHQsXG4gICAgICAgICAgICAgICAgY2hhbmdlOiB1c2Vyc1swXS5sZXZlbCxcbiAgICAgICAgICAgICAgICBtb25leTogdXNlcnNbMF0ubW9uZXksXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7XG4gICAgICAgICAgICAgICAgbWVzc2FnZTogJ1RoZSBhbW91bnQgaXMgbm90IGVub3VnaCcsXG4gICAgICAgICAgICAgICAgc3RhdHVzOiBmYWxzZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBpZiAoZXJyb3IpIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgICB9XG59XG5cbmNvbnN0IGxpc3RPcmRlck9sZCA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAgIGxldCB7IGdhbWVKb2luLCBwYWdlbm8sIHBhZ2V0byB9ID0gcmVxLmJvZHk7XG4gICAgbGV0IGF1dGggPSByZXEuY29va2llcy5hdXRoO1xuXG4gICAgbGV0IGNoZWNrR2FtZSA9IFsnMScsICczJywgJzUnLCAnMTAnXS5pbmNsdWRlcyhTdHJpbmcoZ2FtZUpvaW4pKTtcbiAgICBpZiAoIWNoZWNrR2FtZSB8fCBwYWdlbm8gPCAwIHx8IHBhZ2V0byA8IDApIHtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcbiAgICAgICAgICAgIGNvZGU6IDAsXG4gICAgICAgICAgICBtc2c6IFwiTm8gbW9yZSBkYXRhXCIsXG4gICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgICAgZ2FtZXNsaXN0OiBbXSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzdGF0dXM6IGZhbHNlXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBjb25zdCBbdXNlcl0gPSBhd2FpdCBjb25uZWN0aW9uLnF1ZXJ5KCdTRUxFQ1QgYHBob25lYCwgYGNvZGVgLCBgaW52aXRlYCwgYGxldmVsYCwgYG1vbmV5YCBGUk9NIHVzZXJzIFdIRVJFIHRva2VuID0gPyBBTkQgdmVyaSA9IDEgIExJTUlUIDEgJywgW2F1dGhdKTtcblxuICAgIGxldCBnYW1lID0gTnVtYmVyKGdhbWVKb2luKTtcblxuICAgIGNvbnN0IFtrNWRdID0gYXdhaXQgY29ubmVjdGlvbi5xdWVyeShgU0VMRUNUICogRlJPTSA1ZCBXSEVSRSBzdGF0dXMgIT0gMCBBTkQgZ2FtZSA9ICcke2dhbWV9JyBPUkRFUiBCWSBpZCBERVNDIExJTUlUICR7cGFnZW5vfSwgJHtwYWdldG99IGApO1xuICAgIGNvbnN0IFtrNWRBbGxdID0gYXdhaXQgY29ubmVjdGlvbi5xdWVyeShgU0VMRUNUICogRlJPTSA1ZCBXSEVSRSBzdGF0dXMgIT0gMCBBTkQgZ2FtZSA9ICcke2dhbWV9JyBgKTtcbiAgICBjb25zdCBbcGVyaW9kXSA9IGF3YWl0IGNvbm5lY3Rpb24ucXVlcnkoYFNFTEVDVCBwZXJpb2QgRlJPTSA1ZCBXSEVSRSBzdGF0dXMgPSAwIEFORCBnYW1lID0gJyR7Z2FtZX0nIE9SREVSIEJZIGlkIERFU0MgTElNSVQgMSBgKTtcbiAgICBpZiAoazVkLmxlbmd0aCA9PSAwKSB7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7XG4gICAgICAgICAgICBjb2RlOiAwLFxuICAgICAgICAgICAgbXNnOiBcIk5vIG1vcmUgZGF0YVwiLFxuICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICAgIGdhbWVzbGlzdDogW10sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcGFnZTogMSxcbiAgICAgICAgICAgIHN0YXR1czogZmFsc2VcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGlmICghcGFnZW5vIHx8ICFwYWdldG8gfHwgIXVzZXJbMF0gfHwgIWs1ZFswXSB8fCAhcGVyaW9kWzBdKSB7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7XG4gICAgICAgICAgICBtZXNzYWdlOiAnRXJyb3IhJyxcbiAgICAgICAgICAgIHN0YXR1czogZmFsc2VcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGxldCBwYWdlID0gTWF0aC5jZWlsKGs1ZEFsbC5sZW5ndGggLyAxMCk7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcbiAgICAgICAgY29kZTogMCxcbiAgICAgICAgbXNnOiBcIkdldCBzdWNjZXNzXCIsXG4gICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIGdhbWVzbGlzdDogazVkLFxuICAgICAgICB9LFxuICAgICAgICBwZXJpb2Q6IHBlcmlvZFswXS5wZXJpb2QsXG4gICAgICAgIHBhZ2U6IHBhZ2UsXG4gICAgICAgIHN0YXR1czogdHJ1ZVxuICAgIH0pO1xufVxuXG5jb25zdCBHZXRNeUVtZXJkTGlzdCA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAgIGxldCB7IGdhbWVKb2luLCBwYWdlbm8sIHBhZ2V0byB9ID0gcmVxLmJvZHk7XG4gICAgbGV0IGF1dGggPSByZXEuY29va2llcy5hdXRoO1xuXG4gICAgbGV0IGNoZWNrR2FtZSA9IFsnMScsICczJywgJzUnLCAnMTAnXS5pbmNsdWRlcyhTdHJpbmcoZ2FtZUpvaW4pKTtcbiAgICBpZiAoIWNoZWNrR2FtZSB8fCBwYWdlbm8gPCAwIHx8IHBhZ2V0byA8IDApIHtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcbiAgICAgICAgICAgIGNvZGU6IDAsXG4gICAgICAgICAgICBtc2c6IFwiTm8gbW9yZSBkYXRhXCIsXG4gICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgICAgZ2FtZXNsaXN0OiBbXSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzdGF0dXM6IGZhbHNlXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGxldCBnYW1lID0gTnVtYmVyKGdhbWVKb2luKTtcblxuICAgIGNvbnN0IFt1c2VyXSA9IGF3YWl0IGNvbm5lY3Rpb24ucXVlcnkoJ1NFTEVDVCBgcGhvbmVgLCBgY29kZWAsIGBpbnZpdGVgLCBgbGV2ZWxgLCBgbW9uZXlgIEZST00gdXNlcnMgV0hFUkUgdG9rZW4gPSA/IEFORCB2ZXJpID0gMSBMSU1JVCAxICcsIFthdXRoXSk7XG4gICAgY29uc3QgW3Jlc3VsdF81ZF0gPSBhd2FpdCBjb25uZWN0aW9uLnF1ZXJ5KGBTRUxFQ1QgKiBGUk9NIHJlc3VsdF81ZCBXSEVSRSBwaG9uZSA9ID8gQU5EIGdhbWUgPSAnJHtnYW1lfScgT1JERVIgQlkgaWQgREVTQyBMSU1JVCAke051bWJlcihwYWdlbm8pICsgJywnICsgTnVtYmVyKHBhZ2V0byl9YCwgW3VzZXJbMF0ucGhvbmVdKTtcbiAgICBjb25zdCBbcmVzdWx0XzVkQWxsXSA9IGF3YWl0IGNvbm5lY3Rpb24ucXVlcnkoYFNFTEVDVCAqIEZST00gcmVzdWx0XzVkIFdIRVJFIHBob25lID0gPyBBTkQgZ2FtZSA9ICcke2dhbWV9JyBPUkRFUiBCWSBpZCBERVNDIGAsIFt1c2VyWzBdLnBob25lXSk7XG5cbiAgICBpZiAoIXJlc3VsdF81ZFswXSkge1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oe1xuICAgICAgICAgICAgY29kZTogMCxcbiAgICAgICAgICAgIG1zZzogXCJObyBtb3JlIGRhdGFcIixcbiAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICBnYW1lc2xpc3Q6IFtdLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHBhZ2U6IDEsXG4gICAgICAgICAgICBzdGF0dXM6IGZhbHNlXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBpZiAoIXBhZ2VubyB8fCAhcGFnZXRvIHx8ICF1c2VyWzBdIHx8ICFyZXN1bHRfNWRbMF0pIHtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcbiAgICAgICAgICAgIG1lc3NhZ2U6ICdFcnJvciEnLFxuICAgICAgICAgICAgc3RhdHVzOiB0cnVlXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBsZXQgcGFnZSA9IE1hdGguY2VpbChyZXN1bHRfNWRBbGwubGVuZ3RoIC8gMTApO1xuXG4gICAgbGV0IGRhdGFzID0gcmVzdWx0XzVkLm1hcCgoZGF0YSkgPT4ge1xuICAgICAgICBsZXQgeyBpZCwgcGhvbmUsIGNvZGUsIGludml0ZSwgbGV2ZWwsIGdhbWUsIC4uLm90aGVycyB9ID0gZGF0YTtcbiAgICAgICAgcmV0dXJuIG90aGVycztcbiAgICB9KTtcblxuICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7XG4gICAgICAgIGNvZGU6IDAsXG4gICAgICAgIG1zZzogXCJHZXQgU3VjY2Vzc1wiLFxuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICBnYW1lc2xpc3Q6IGRhdGFzLFxuICAgICAgICB9LFxuICAgICAgICBwYWdlOiBwYWdlLFxuICAgICAgICBzdGF0dXM6IHRydWVcbiAgICB9KTtcbn1cblxuZnVuY3Rpb24gbWFrZWlkKGxlbmd0aCkge1xuICAgIHZhciByZXN1bHQgPSAnJztcbiAgICB2YXIgY2hhcmFjdGVycyA9ICcwMTIzNDU2Nzg5JztcbiAgICB2YXIgY2hhcmFjdGVyc0xlbmd0aCA9IGNoYXJhY3RlcnMubGVuZ3RoO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgICAgcmVzdWx0ICs9IGNoYXJhY3RlcnMuY2hhckF0KE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGNoYXJhY3RlcnNMZW5ndGgpKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cblxuY29uc3QgYWRkNUQgPSBhc3luYyhnYW1lKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgbGV0IGpvaW4gPSAnJztcbiAgICAgICAgaWYgKGdhbWUgPT0gMSkgam9pbiA9ICdrNWQnOyBcbiAgICAgICAgaWYgKGdhbWUgPT0gMykgam9pbiA9ICdrNWQzJztcbiAgICAgICAgaWYgKGdhbWUgPT0gNSkgam9pbiA9ICdrNWQ1JztcbiAgICAgICAgaWYgKGdhbWUgPT0gMTApIGpvaW4gPSAnazVkMTAnO1xuXG4gICAgICAgIGxldCByZXN1bHQyID0gbWFrZWlkKDUpO1xuICAgICAgICBsZXQgdGltZU5vdyA9IERhdGUubm93KCk7XG4gICAgICAgIGxldCBbazVEXSA9IGF3YWl0IGNvbm5lY3Rpb24ucXVlcnkoYFNFTEVDVCBwZXJpb2QgRlJPTSA1ZCBXSEVSRSBzdGF0dXMgPSAwIEFORCBnYW1lID0gJHtnYW1lfSBPUkRFUiBCWSBpZCBERVNDIExJTUlUIDEgYCk7XG4gICAgICAgIGNvbnN0IFtzZXR0aW5nXSA9IGF3YWl0IGNvbm5lY3Rpb24ucXVlcnkoJ1NFTEVDVCAqIEZST00gYGFkbWluYCAnKTtcbiAgICAgICAgbGV0IHBlcmlvZCA9IGs1RFswXS5wZXJpb2Q7XG5cbiAgICAgICAgbGV0IG5leHRSZXN1bHQgPSAnJztcbiAgICAgICAgaWYgKGdhbWUgPT0gMSkgbmV4dFJlc3VsdCA9IHNldHRpbmdbMF0uazVkO1xuICAgICAgICBpZiAoZ2FtZSA9PSAzKSBuZXh0UmVzdWx0ID0gc2V0dGluZ1swXS5rNWQzO1xuICAgICAgICBpZiAoZ2FtZSA9PSA1KSBuZXh0UmVzdWx0ID0gc2V0dGluZ1swXS5rNWQ1O1xuICAgICAgICBpZiAoZ2FtZSA9PSAxMCkgbmV4dFJlc3VsdCA9IHNldHRpbmdbMF0uazVkMTA7XG5cbiAgICAgICAgbGV0IG5ld0FyciA9ICcnO1xuICAgICAgICBpZiAobmV4dFJlc3VsdCA9PSAnLTEnKSB7XG4gICAgICAgICAgICBhd2FpdCBjb25uZWN0aW9uLmV4ZWN1dGUoYFVQREFURSA1ZCBTRVQgcmVzdWx0ID0gPyxzdGF0dXMgPSA/IFdIRVJFIHBlcmlvZCA9ID8gQU5EIGdhbWUgPSBcIiR7Z2FtZX1cImAsIFtyZXN1bHQyLCAxLCBwZXJpb2RdKTtcbiAgICAgICAgICAgIG5ld0FyciA9ICctMSc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBsZXQgcmVzdWx0ID0gJyc7XG4gICAgICAgICAgICBsZXQgYXJyID0gbmV4dFJlc3VsdC5zcGxpdCgnfCcpO1xuICAgICAgICAgICAgbGV0IGNoZWNrID0gYXJyLmxlbmd0aDtcbiAgICAgICAgICAgIGlmIChjaGVjayA9PSAxKSB7XG4gICAgICAgICAgICAgICAgbmV3QXJyID0gJy0xJztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDE7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgbmV3QXJyICs9IGFycltpXSArICd8JztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbmV3QXJyID0gbmV3QXJyLnNsaWNlKDAsIC0xKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlc3VsdCA9IGFyclswXTtcbiAgICAgICAgICAgIGF3YWl0IGNvbm5lY3Rpb24uZXhlY3V0ZShgVVBEQVRFIDVkIFNFVCByZXN1bHQgPSA/LHN0YXR1cyA9ID8gV0hFUkUgcGVyaW9kID0gPyBBTkQgZ2FtZSA9ICR7Z2FtZX1gLCBbcmVzdWx0LCAxLCBwZXJpb2RdKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBzcWwgPSBgSU5TRVJUIElOVE8gNWQgU0VUIHBlcmlvZCA9ID8sIHJlc3VsdCA9ID8sIGdhbWUgPSA/LCBzdGF0dXMgPSA/LCB0aW1lID0gP2A7XG4gICAgICAgIGF3YWl0IGNvbm5lY3Rpb24uZXhlY3V0ZShzcWwsIFtOdW1iZXIocGVyaW9kKSArIDEsIDAsIGdhbWUsIDAsIHRpbWVOb3ddKTtcblxuICAgICAgICBpZiAoZ2FtZSA9PSAxKSBqb2luID0gJ2s1ZCc7XG4gICAgICAgIGlmIChnYW1lID09IDMpIGpvaW4gPSAnazVkMyc7XG4gICAgICAgIGlmIChnYW1lID09IDUpIGpvaW4gPSAnazVkNSc7XG4gICAgICAgIGlmIChnYW1lID09IDEwKSBqb2luID0gJ2s1ZDEwJzsgXG5cbiAgICAgICAgYXdhaXQgY29ubmVjdGlvbi5leGVjdXRlKGBVUERBVEUgYWRtaW4gU0VUICR7am9pbn0gPSA/YCwgW25ld0Fycl0pO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5hc3luYyBmdW5jdGlvbiBmdW5IYW5kaW5nKGdhbWUpIHtcbiAgICBjb25zdCBbazVkXSA9IGF3YWl0IGNvbm5lY3Rpb24ucXVlcnkoYFNFTEVDVCAqIEZST00gNWQgV0hFUkUgc3RhdHVzICE9IDAgQU5EIGdhbWUgPSAke2dhbWV9IE9SREVSIEJZIGlkIERFU0MgTElNSVQgMSBgKTtcbiAgICBsZXQgazVkSW5mbyA9IGs1ZFswXTtcbiBcbiAgICAvLyB1cGRhdGUga2V0IHF1YVxuICAgIGF3YWl0IGNvbm5lY3Rpb24uZXhlY3V0ZShgVVBEQVRFIHJlc3VsdF81ZCBTRVQgcmVzdWx0ID0gPyBXSEVSRSBzdGF0dXMgPSAwIEFORCBnYW1lID0gJHtnYW1lfWAsIFtrNWRJbmZvLnJlc3VsdF0pO1xuICAgIGxldCByZXN1bHQgPSBTdHJpbmcoazVkSW5mby5yZXN1bHQpLnNwbGl0KCcnKTtcbiAgICBsZXQgYSA9IHJlc3VsdFswXTtcbiAgICBsZXQgYiA9IHJlc3VsdFsxXTtcbiAgICBsZXQgYyA9IHJlc3VsdFsyXTtcbiAgICBsZXQgZCA9IHJlc3VsdFszXTtcbiAgICBsZXQgZSA9IHJlc3VsdFs0XTtcbiAgICBsZXQgdG90YWwgPSAwO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcmVzdWx0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHRvdGFsICs9IE51bWJlcihyZXN1bHRbaV0pO1xuICAgIH1cblxuICAgIC8vIHjhu60gbMO9IGdhbWUgYVxuICAgIGNvbnN0IFtqb2luQV0gPSBhd2FpdCBjb25uZWN0aW9uLmV4ZWN1dGUoYFNFTEVDVCBpZCwgYmV0IEZST00gcmVzdWx0XzVkIFdIRVJFIHN0YXR1cyA9IDAgQU5EIGdhbWUgPSAke2dhbWV9IEFORCBqb2luX2JldCA9ICdhJyBgKTtcbiAgICBsZXQgbGVuZ3RoQSA9IGpvaW5BLmxlbmd0aDtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aEE7IGkrKykge1xuICAgICAgICBsZXQgaW5mbyA9IGpvaW5BW2ldO1xuICAgICAgICBsZXQgc3VsdCA9IGluZm8uYmV0LnNwbGl0KCcnKTtcbiAgICAgICAgbGV0IGNoZWNrID0gaXNOdW1iZXIoaW5mby5iZXQpO1xuICAgICAgICBpZiAoY2hlY2spIHtcbiAgICAgICAgICAgIGNvbnN0IGpvaW5OdW0gPSBzdWx0LmluY2x1ZGVzKGEpO1xuICAgICAgICAgICAgaWYgKCFqb2luTnVtKSB7XG4gICAgICAgICAgICAgICAgYXdhaXQgY29ubmVjdGlvbi5leGVjdXRlKGBVUERBVEUgcmVzdWx0XzVkIFNFVCBzdGF0dXMgPSAyIFdIRVJFIGlkID0gPyBgLCBbaW5mby5pZF0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgIH1cbiAgICBpZiAobGVuZ3RoQSA+IDApIHtcbiAgICAgICAgaWYoYSA9PSAnMCcgfHwgYSA9PSAnMScgfHwgYSA9PSAnMicgfHwgYSA9PSAnMycgfHwgYSA9PSAnNCcpIHtcbiAgICAgICAgICAgIGF3YWl0IGNvbm5lY3Rpb24uZXhlY3V0ZShgVVBEQVRFIHJlc3VsdF81ZCBTRVQgc3RhdHVzID0gMiBXSEVSRSBqb2luX2JldCA9ICdhJyBBTkQgYmV0ID0gJ2InIGApXG4gICAgICAgIH07XG4gICAgICAgIGlmKGEgPT0gJzUnIHx8IGEgPT0gJzYnIHx8IGEgPT0gJzcnIHx8IGEgPT0gJzgnIHx8IGEgPT0gJzknKSB7XG4gICAgICAgICAgICBhd2FpdCBjb25uZWN0aW9uLmV4ZWN1dGUoYFVQREFURSByZXN1bHRfNWQgU0VUIHN0YXR1cyA9IDIgV0hFUkUgam9pbl9iZXQgPSAnYScgQU5EIGJldCA9ICdzJyBgKVxuICAgICAgICB9O1xuICAgICAgICBpZihOdW1iZXIoYSkgJSAyID09IDApIHtcbiAgICAgICAgICAgIGF3YWl0IGNvbm5lY3Rpb24uZXhlY3V0ZShgVVBEQVRFIHJlc3VsdF81ZCBTRVQgc3RhdHVzID0gMiBXSEVSRSBqb2luX2JldCA9ICdhJyBBTkQgYmV0ID0gJ2wnIGApXG4gICAgICAgIH07XG4gICAgICAgIGlmKE51bWJlcihhKSAlIDIgIT0gMCkge1xuICAgICAgICAgICAgYXdhaXQgY29ubmVjdGlvbi5leGVjdXRlKGBVUERBVEUgcmVzdWx0XzVkIFNFVCBzdGF0dXMgPSAyIFdIRVJFIGpvaW5fYmV0ID0gJ2EnIEFORCBiZXQgPSAnYycgYClcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICAvLyB44butIGzDvSBnYW1lIGJcbiAgICBjb25zdCBbam9pbkJdID0gYXdhaXQgY29ubmVjdGlvbi5leGVjdXRlKGBTRUxFQ1QgaWQsIGJldCBGUk9NIHJlc3VsdF81ZCBXSEVSRSBzdGF0dXMgPSAwIEFORCBnYW1lID0gJHtnYW1lfSBBTkQgam9pbl9iZXQgPSAnYicgYCk7XG4gICAgbGV0IGxlbmd0aEIgPSBqb2luQi5sZW5ndGg7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGhCOyBpKyspIHtcbiAgICAgICAgbGV0IGluZm8gPSBqb2luQltpXTtcbiAgICAgICAgbGV0IHN1bHQgPSBpbmZvLmJldC5zcGxpdCgnJyk7XG4gICAgICAgIGxldCBjaGVjayA9IGlzTnVtYmVyKGluZm8uYmV0KTtcbiAgICAgICAgaWYgKGNoZWNrKSB7XG4gICAgICAgICAgICBjb25zdCBqb2luTnVtID0gc3VsdC5pbmNsdWRlcyhiKTtcbiAgICAgICAgICAgIGlmICgham9pbk51bSkge1xuICAgICAgICAgICAgICAgIGF3YWl0IGNvbm5lY3Rpb24uZXhlY3V0ZShgVVBEQVRFIHJlc3VsdF81ZCBTRVQgc3RhdHVzID0gMiBXSEVSRSBpZCA9ID8gYCwgW2luZm8uaWRdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICB9XG4gICAgaWYgKGxlbmd0aEIgPiAwKSB7XG4gICAgICAgIGlmKGIgPT0gJzAnIHx8IGIgPT0gJzEnIHx8IGIgPT0gJzInIHx8IGIgPT0gJzMnIHx8IGIgPT0gJzQnKSB7XG4gICAgICAgICAgICBhd2FpdCBjb25uZWN0aW9uLmV4ZWN1dGUoYFVQREFURSByZXN1bHRfNWQgU0VUIHN0YXR1cyA9IDIgV0hFUkUgam9pbl9iZXQgPSAnYicgQU5EIGJldCA9ICdiJyBgKTtcbiAgICAgICAgfTtcbiAgICAgICAgaWYoYiA9PSAnNScgfHwgYiA9PSAnNicgfHwgYiA9PSAnNycgfHwgYiA9PSAnOCcgfHwgYiA9PSAnOScpIHtcbiAgICAgICAgICAgIGF3YWl0IGNvbm5lY3Rpb24uZXhlY3V0ZShgVVBEQVRFIHJlc3VsdF81ZCBTRVQgc3RhdHVzID0gMiBXSEVSRSBqb2luX2JldCA9ICdiJyBBTkQgYmV0ID0gJ3MnIGApO1xuICAgICAgICB9O1xuICAgICAgICBpZihOdW1iZXIoYikgJSAyID09IDApIHtcbiAgICAgICAgICAgIGF3YWl0IGNvbm5lY3Rpb24uZXhlY3V0ZShgVVBEQVRFIHJlc3VsdF81ZCBTRVQgc3RhdHVzID0gMiBXSEVSRSBqb2luX2JldCA9ICdiJyBBTkQgYmV0ID0gJ2wnIGApO1xuICAgICAgICB9O1xuICAgICAgICBpZihOdW1iZXIoYikgJSAyICE9IDApIHtcbiAgICAgICAgICAgIGF3YWl0IGNvbm5lY3Rpb24uZXhlY3V0ZShgVVBEQVRFIHJlc3VsdF81ZCBTRVQgc3RhdHVzID0gMiBXSEVSRSBqb2luX2JldCA9ICdiJyBBTkQgYmV0ID0gJ2MnIGApO1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIC8vIHjhu60gbMO9IGdhbWUgY1xuICAgIGNvbnN0IFtqb2luQ10gPSBhd2FpdCBjb25uZWN0aW9uLmV4ZWN1dGUoYFNFTEVDVCBpZCwgYmV0IEZST00gcmVzdWx0XzVkIFdIRVJFIHN0YXR1cyA9IDAgQU5EIGdhbWUgPSAke2dhbWV9IEFORCBqb2luX2JldCA9ICdjJyBgKTtcbiAgICBsZXQgbGVuZ3RoQyA9IGpvaW5DLmxlbmd0aDtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aEM7IGkrKykge1xuICAgICAgICBsZXQgaW5mbyA9IGpvaW5DW2ldO1xuICAgICAgICBsZXQgc3VsdCA9IGluZm8uYmV0LnNwbGl0KCcnKTtcbiAgICAgICAgbGV0IGNoZWNrID0gaXNOdW1iZXIoaW5mby5iZXQpO1xuICAgICAgICBpZiAoY2hlY2spIHtcbiAgICAgICAgICAgIGNvbnN0IGpvaW5OdW0gPSBzdWx0LmluY2x1ZGVzKGMpO1xuICAgICAgICAgICAgaWYgKCFqb2luTnVtKSB7XG4gICAgICAgICAgICAgICAgYXdhaXQgY29ubmVjdGlvbi5leGVjdXRlKGBVUERBVEUgcmVzdWx0XzVkIFNFVCBzdGF0dXMgPSAyIFdIRVJFIGlkID0gPyBgLCBbaW5mby5pZF0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgIH1cbiAgICBpZiAobGVuZ3RoQyA+IDApIHtcbiAgICAgICAgaWYoYyA9PSAnMCcgfHwgYyA9PSAnMScgfHwgYyA9PSAnMicgfHwgYyA9PSAnMycgfHwgYyA9PSAnNCcpIHtcbiAgICAgICAgICAgIGF3YWl0IGNvbm5lY3Rpb24uZXhlY3V0ZShgVVBEQVRFIHJlc3VsdF81ZCBTRVQgc3RhdHVzID0gMiBXSEVSRSBqb2luX2JldCA9ICdjJyBBTkQgYmV0ID0gJ2InIGApO1xuICAgICAgICB9O1xuICAgICAgICBpZihjID09ICc1JyB8fCBjID09ICc2JyB8fCBjID09ICc3JyB8fCBjID09ICc4JyB8fCBjID09ICc5Jykge1xuICAgICAgICAgICAgYXdhaXQgY29ubmVjdGlvbi5leGVjdXRlKGBVUERBVEUgcmVzdWx0XzVkIFNFVCBzdGF0dXMgPSAyIFdIRVJFIGpvaW5fYmV0ID0gJ2MnIEFORCBiZXQgPSAncycgYCk7XG4gICAgICAgIH07XG4gICAgICAgIGlmKE51bWJlcihjKSAlIDIgPT0gMCkge1xuICAgICAgICAgICAgYXdhaXQgY29ubmVjdGlvbi5leGVjdXRlKGBVUERBVEUgcmVzdWx0XzVkIFNFVCBzdGF0dXMgPSAyIFdIRVJFIGpvaW5fYmV0ID0gJ2MnIEFORCBiZXQgPSAnbCcgYCk7XG4gICAgICAgIH07XG4gICAgICAgIGlmKE51bWJlcihjKSAlIDIgIT0gMCkge1xuICAgICAgICAgICAgYXdhaXQgY29ubmVjdGlvbi5leGVjdXRlKGBVUERBVEUgcmVzdWx0XzVkIFNFVCBzdGF0dXMgPSAyIFdIRVJFIGpvaW5fYmV0ID0gJ2MnIEFORCBiZXQgPSAnYycgYCk7XG4gICAgICAgIH07XG4gICAgfVxuICAgIFxuICAgIC8vIHjhu60gbMO9IGdhbWUgZFxuICAgIGNvbnN0IFtqb2luRF0gPSBhd2FpdCBjb25uZWN0aW9uLmV4ZWN1dGUoYFNFTEVDVCBpZCwgYmV0IEZST00gcmVzdWx0XzVkIFdIRVJFIHN0YXR1cyA9IDAgQU5EIGdhbWUgPSAke2dhbWV9IEFORCBqb2luX2JldCA9ICdkJyBgKTtcbiAgICBsZXQgbGVuZ3RoRCA9IGpvaW5ELmxlbmd0aDtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aEQ7IGkrKykge1xuICAgICAgICBsZXQgaW5mbyA9IGpvaW5EW2ldO1xuICAgICAgICBsZXQgc3VsdCA9IGluZm8uYmV0LnNwbGl0KCcnKTtcbiAgICAgICAgbGV0IGNoZWNrID0gaXNOdW1iZXIoaW5mby5iZXQpO1xuICAgICAgICBpZiAoY2hlY2spIHtcbiAgICAgICAgICAgIGNvbnN0IGpvaW5OdW0gPSBzdWx0LmluY2x1ZGVzKGQpO1xuICAgICAgICAgICAgaWYgKCFqb2luTnVtKSB7XG4gICAgICAgICAgICAgICAgYXdhaXQgY29ubmVjdGlvbi5leGVjdXRlKGBVUERBVEUgcmVzdWx0XzVkIFNFVCBzdGF0dXMgPSAyIFdIRVJFIGlkID0gPyBgLCBbaW5mby5pZF0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgIH1cbiAgICBpZiAobGVuZ3RoRCA+IDApIHtcbiAgICAgICAgaWYoZCA9PSAnMCcgfHwgZCA9PSAnMScgfHwgZCA9PSAnMicgfHwgZCA9PSAnMycgfHwgZCA9PSAnNCcpIHtcbiAgICAgICAgICAgIGF3YWl0IGNvbm5lY3Rpb24uZXhlY3V0ZShgVVBEQVRFIHJlc3VsdF81ZCBTRVQgc3RhdHVzID0gMiBXSEVSRSBqb2luX2JldCA9ICdkJyBBTkQgYmV0ID0gJ2InIGApO1xuICAgICAgICB9O1xuICAgICAgICBpZihkID09ICc1JyB8fCBkID09ICc2JyB8fCBkID09ICc3JyB8fCBkID09ICc4JyB8fCBkID09ICc5Jykge1xuICAgICAgICAgICAgYXdhaXQgY29ubmVjdGlvbi5leGVjdXRlKGBVUERBVEUgcmVzdWx0XzVkIFNFVCBzdGF0dXMgPSAyIFdIRVJFIGpvaW5fYmV0ID0gJ2QnIEFORCBiZXQgPSAncycgYCk7XG4gICAgICAgIH07XG4gICAgICAgIGlmKE51bWJlcihkKSAlIDIgPT0gMCkge1xuICAgICAgICAgICAgYXdhaXQgY29ubmVjdGlvbi5leGVjdXRlKGBVUERBVEUgcmVzdWx0XzVkIFNFVCBzdGF0dXMgPSAyIFdIRVJFIGpvaW5fYmV0ID0gJ2QnIEFORCBiZXQgPSAnbCcgYCk7XG4gICAgICAgIH07XG4gICAgICAgIGlmKE51bWJlcihkKSAlIDIgIT0gMCkge1xuICAgICAgICAgICAgYXdhaXQgY29ubmVjdGlvbi5leGVjdXRlKGBVUERBVEUgcmVzdWx0XzVkIFNFVCBzdGF0dXMgPSAyIFdIRVJFIGpvaW5fYmV0ID0gJ2QnIEFORCBiZXQgPSAnYycgYCk7XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgLy8geOG7rSBsw70gZ2FtZSBlXG4gICAgY29uc3QgW2pvaW5FXSA9IGF3YWl0IGNvbm5lY3Rpb24uZXhlY3V0ZShgU0VMRUNUIGlkLCBiZXQgRlJPTSByZXN1bHRfNWQgV0hFUkUgc3RhdHVzID0gMCBBTkQgZ2FtZSA9ICR7Z2FtZX0gQU5EIGpvaW5fYmV0ID0gJ2UnIGApO1xuICAgIGxldCBsZW5ndGhFID0gam9pbkUubGVuZ3RoO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuZ3RoRTsgaSsrKSB7XG4gICAgICAgIGxldCBpbmZvID0gam9pbkVbaV07XG4gICAgICAgIGxldCBzdWx0ID0gaW5mby5iZXQuc3BsaXQoJycpO1xuICAgICAgICBsZXQgY2hlY2sgPSBpc051bWJlcihpbmZvLmJldCk7XG4gICAgICAgIGlmIChjaGVjaykge1xuICAgICAgICAgICAgY29uc3Qgam9pbk51bSA9IHN1bHQuaW5jbHVkZXMoZSk7XG4gICAgICAgICAgICBpZiAoIWpvaW5OdW0pIHtcbiAgICAgICAgICAgICAgICBhd2FpdCBjb25uZWN0aW9uLmV4ZWN1dGUoYFVQREFURSByZXN1bHRfNWQgU0VUIHN0YXR1cyA9IDIgV0hFUkUgaWQgPSA/IGAsIFtpbmZvLmlkXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgfVxuICAgIGlmIChsZW5ndGhFID4gMCkge1xuICAgICAgICBpZihlID09ICcwJyB8fCBlID09ICcxJyB8fCBlID09ICcyJyB8fCBlID09ICczJyB8fCBlID09ICc0Jykge1xuICAgICAgICAgICAgYXdhaXQgY29ubmVjdGlvbi5leGVjdXRlKGBVUERBVEUgcmVzdWx0XzVkIFNFVCBzdGF0dXMgPSAyIFdIRVJFIGpvaW5fYmV0ID0gJ2UnIEFORCBiZXQgPSAnYicgYCk7XG4gICAgICAgIH07XG4gICAgICAgIGlmKGUgPT0gJzUnIHx8IGUgPT0gJzYnIHx8IGUgPT0gJzcnIHx8IGUgPT0gJzgnIHx8IGUgPT0gJzknKSB7XG4gICAgICAgICAgICBhd2FpdCBjb25uZWN0aW9uLmV4ZWN1dGUoYFVQREFURSByZXN1bHRfNWQgU0VUIHN0YXR1cyA9IDIgV0hFUkUgam9pbl9iZXQgPSAnZScgQU5EIGJldCA9ICdzJyBgKTtcbiAgICAgICAgfTtcbiAgICAgICAgaWYoTnVtYmVyKGUpICUgMiA9PSAwKSB7XG4gICAgICAgICAgICBhd2FpdCBjb25uZWN0aW9uLmV4ZWN1dGUoYFVQREFURSByZXN1bHRfNWQgU0VUIHN0YXR1cyA9IDIgV0hFUkUgam9pbl9iZXQgPSAnZScgQU5EIGJldCA9ICdsJyBgKTtcbiAgICAgICAgfTtcbiAgICAgICAgaWYoTnVtYmVyKGUpICUgMiAhPSAwKSB7XG4gICAgICAgICAgICBhd2FpdCBjb25uZWN0aW9uLmV4ZWN1dGUoYFVQREFURSByZXN1bHRfNWQgU0VUIHN0YXR1cyA9IDIgV0hFUkUgam9pbl9iZXQgPSAnZScgQU5EIGJldCA9ICdjJyBgKTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICAvLyB44butIGzDvSBnYW1lIGVcbiAgICBjb25zdCBbam9pblRvdGFsXSA9IGF3YWl0IGNvbm5lY3Rpb24uZXhlY3V0ZShgU0VMRUNUIGlkLCBiZXQgRlJPTSByZXN1bHRfNWQgV0hFUkUgc3RhdHVzID0gMCBBTkQgZ2FtZSA9ICR7Z2FtZX0gQU5EIGpvaW5fYmV0ID0gJ3RvdGFsJyBgKTtcbiAgICBpZiAoam9pblRvdGFsLmxlbmd0aCA+IDApIHtcbiAgICAgICAgaWYodG90YWwgPD0gMjIpIHtcbiAgICAgICAgICAgIGF3YWl0IGNvbm5lY3Rpb24uZXhlY3V0ZShgVVBEQVRFIHJlc3VsdF81ZCBTRVQgc3RhdHVzID0gMiBXSEVSRSBqb2luX2JldCA9ICd0b3RhbCcgQU5EIGJldCA9ICdiJyBgKTtcbiAgICAgICAgfTtcbiAgICAgICAgaWYodG90YWwgPiAyMikge1xuICAgICAgICAgICAgYXdhaXQgY29ubmVjdGlvbi5leGVjdXRlKGBVUERBVEUgcmVzdWx0XzVkIFNFVCBzdGF0dXMgPSAyIFdIRVJFIGpvaW5fYmV0ID0gJ3RvdGFsJyBBTkQgYmV0ID0gJ3MnIGApO1xuICAgICAgICB9O1xuICAgICAgICBpZih0b3RhbCAlIDIgPT0gMCkge1xuICAgICAgICAgICAgYXdhaXQgY29ubmVjdGlvbi5leGVjdXRlKGBVUERBVEUgcmVzdWx0XzVkIFNFVCBzdGF0dXMgPSAyIFdIRVJFIGpvaW5fYmV0ID0gJ3RvdGFsJyBBTkQgYmV0ID0gJ2wnIGApO1xuICAgICAgICB9O1xuICAgICAgICBpZih0b3RhbCAlIDIgIT0gMCkge1xuICAgICAgICAgICAgYXdhaXQgY29ubmVjdGlvbi5leGVjdXRlKGBVUERBVEUgcmVzdWx0XzVkIFNFVCBzdGF0dXMgPSAyIFdIRVJFIGpvaW5fYmV0ID0gJ3RvdGFsJyBBTkQgYmV0ID0gJ2MnIGApO1xuICAgICAgICB9O1xuICAgIH1cbn1cblxuY29uc3QgaGFuZGxpbmc1RCA9IGFzeW5jKHR5cGVpZCkgPT4ge1xuXG4gICAgbGV0IGdhbWUgPSBOdW1iZXIodHlwZWlkKTtcblxuICAgIGF3YWl0IGZ1bkhhbmRpbmcoZ2FtZSk7XG5cbiAgICBjb25zdCBbb3JkZXJdID0gYXdhaXQgY29ubmVjdGlvbi5leGVjdXRlKGBTRUxFQ1QgaWQsIHBob25lLCBiZXQsIHByaWNlLCBtb25leSwgZmVlLCBhbW91bnQgRlJPTSByZXN1bHRfNWQgV0hFUkUgc3RhdHVzID0gMCBBTkQgZ2FtZSA9ICR7Z2FtZX0gYCk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBvcmRlci5sZW5ndGg7IGkrKykge1xuICAgICAgICBsZXQgb3JkZXJzID0gb3JkZXJbaV07XG4gICAgICAgIGxldCBpZCA9IG9yZGVycy5pZDtcbiAgICAgICAgbGV0IHBob25lID0gb3JkZXJzLnBob25lO1xuICAgICAgICBsZXQgbmhhbl9kdW9jID0gMDtcbiAgICAgICAgbGV0IGNoZWNrID0gaXNOdW1iZXIob3JkZXJzLmJldCk7IFxuICAgICAgICBpZiAoY2hlY2spIHtcbiAgICAgICAgICAgIGxldCBhcnIgPSBvcmRlcnMuYmV0LnNwbGl0KCcnKTtcbiAgICAgICAgICAgIGxldCB0b3RhbCA9IChvcmRlcnMubW9uZXkgLyBhcnIubGVuZ3RoIC8gb3JkZXJzLmFtb3VudCk7XG4gICAgICAgICAgICBsZXQgZmVlID0gdG90YWwgKiAwLjAyO1xuICAgICAgICAgICAgbGV0IHByaWNlID0gdG90YWwgLSBmZWU7XG4gICAgICAgICAgICBuaGFuX2R1b2MgKz0gcHJpY2UgKiA5O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbmhhbl9kdW9jICs9IG9yZGVycy5wcmljZSAqIDI7XG4gICAgICAgIH1cblxuICAgICAgICBhd2FpdCBjb25uZWN0aW9uLmV4ZWN1dGUoJ1VQREFURSBgcmVzdWx0XzVkYCBTRVQgYGdldGAgPSA/LCBgc3RhdHVzYCA9IDEgV0hFUkUgYGlkYCA9ID8gJywgW25oYW5fZHVvYywgaWRdKTtcbiAgICAgICAgY29uc3Qgc3FsID0gJ1VQREFURSBgdXNlcnNgIFNFVCBgbW9uZXlgID0gYG1vbmV5YCArID8gV0hFUkUgYHBob25lYCA9ID8gJztcbiAgICAgICAgYXdhaXQgY29ubmVjdGlvbi5leGVjdXRlKHNxbCwgW25oYW5fZHVvYywgcGhvbmVdKTtcbiAgICB9XG59XG5cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgSzVEUGFnZSxcbiAgICBLNURQYWdlMyxcbiAgICBLNURQYWdlNSxcbiAgICBLNURQYWdlMTAsXG4gICAgYmV0SzVELFxuICAgIGxpc3RPcmRlck9sZCxcbiAgICBHZXRNeUVtZXJkTGlzdCxcbiAgICBhZGQ1RCxcbiAgICBoYW5kbGluZzVEXG59Il0sIm1hcHBpbmdzIjoiOzs7QUFBQSxJQUFBQSxRQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxVQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFBNkMsSUFBQUUsU0FBQTtBQUFBLFNBQUFILHVCQUFBSSxHQUFBLFdBQUFBLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBLEdBQUFELEdBQUEsZ0JBQUFBLEdBQUE7QUFBQSxTQUFBRSx5QkFBQUMsTUFBQSxFQUFBQyxRQUFBLFFBQUFELE1BQUEseUJBQUFFLE1BQUEsR0FBQUMsNkJBQUEsQ0FBQUgsTUFBQSxFQUFBQyxRQUFBLE9BQUFHLEdBQUEsRUFBQUMsQ0FBQSxNQUFBQyxNQUFBLENBQUFDLHFCQUFBLFFBQUFDLGdCQUFBLEdBQUFGLE1BQUEsQ0FBQUMscUJBQUEsQ0FBQVAsTUFBQSxRQUFBSyxDQUFBLE1BQUFBLENBQUEsR0FBQUcsZ0JBQUEsQ0FBQUMsTUFBQSxFQUFBSixDQUFBLE1BQUFELEdBQUEsR0FBQUksZ0JBQUEsQ0FBQUgsQ0FBQSxPQUFBSixRQUFBLENBQUFTLE9BQUEsQ0FBQU4sR0FBQSx1QkFBQUUsTUFBQSxD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","map":{"version":3,"names":["_express","_interopRequireDefault","require","_connectDB","_excluded","obj","__esModule","_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","key","i","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","sourceKeys","keys","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","Array","from","test","len","arr2","r","l","t","Symbol","iterator","e","u","a","f","next","done","push","value","isArray","_regeneratorRuntime","hasOwnProperty","defineProperty","c","asyncIterator","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","async","Promise","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","config","K5DPage","_ref","_callee","req","res","_callee$","_context","render","_x","_x2","K5DPage3","_ref2","_callee2","_callee2$","_context2","_x3","_x4","K5DPage5","_ref3","_callee3","_callee3$","_context3","_x5","_x6","K5DPage10","_ref4","_callee4","_callee4$","_context4","_x7","_x8","isNumber","params","pattern","formateT","result","timerJoin","addHours","date","Date","Number","setHours","getHours","years","getFullYear","months","getMonth","days","getDate","hours","ampm","minutes","getMinutes","seconds","getSeconds","rosesPlus","_ref5","_callee5","auth","money","_yield$connection$que","_yield$connection$que2","level","level0","_yield$connection$que3","_yield$connection$que4","user","userInfo","_yield$connection$que5","_yield$connection$que6","f1","infoF1","rosesF1","_yield$connection$que7","_yield$connection$que8","f2","infoF2","rosesF2","_yield$connection$que9","_yield$connection$que10","f3","infoF3","rosesF3","_yield$connection$que11","_yield$connection$que12","f4","infoF4","rosesF4","_callee5$","_context5","connection","query","invite","phone","_x9","_x10","validateBet","_ref6","_callee6","join","list_join","x","game","checkJoin","checkX","checks","checkGame","checkMoney","joinNum","_arr","_length","_i","joinStr","_callee6$","_context6","includes","String","split","_x11","_x12","_x13","_x14","_x15","betK5D","_ref7","_callee7","_req$body","validate","_yield$connection$que13","_yield$connection$que14","k5DNow","_yield$connection$que15","_yield$connection$que16","period","id_product","total","fee","price","check","timeNow","sql","_yield$connection$que17","_yield$connection$que18","users","_yield$connection$que19","_yield$connection$que20","sql2","total_m","_callee7$","_context7","body","cookies","status","json","message","concat","Math","floor","random","now","execute","code","change","t0","console","log","_x16","_x17","listOrderOld","_ref8","_callee8","_req$body2","gameJoin","pageno","pageto","_yield$connection$que21","_yield$connection$que22","_yield$connection$que23","_yield$connection$que24","k5d","_yield$connection$que25","_yield$connection$que26","k5dAll","_yield$connection$que27","_yield$connection$que28","page","_callee8$","_context8","msg","data","gameslist","ceil","_x18","_x19","GetMyEmerdList","_ref9","_callee9","_req$body3","_yield$connection$que29","_yield$connection$que30","_yield$connection$que31","_yield$connection$que32","result_5d","_yield$connection$que33","_yield$connection$que34","result_5dAll","datas","_callee9$","_context9","map","id","others","_x20","_x21","makeid","characters","charactersLength","add5D","_ref10","_callee10","result2","_yield$connection$que35","_yield$connection$que36","k5D","_yield$connection$que37","_yield$connection$que38","setting","nextResult","newArr","_callee10$","_context10","k5d3","k5d5","k5d10","_x22","funHanding","_x23","_funHanding","_callee12","_yield$connection$que39","_yield$connection$que40","k5dInfo","b","_yield$connection$exe3","_yield$connection$exe4","joinA","lengthA","_i2","sult","_yield$connection$exe5","_yield$connection$exe6","joinB","lengthB","_i3","_info","_sult","_check","_joinNum","_yield$connection$exe7","_yield$connection$exe8","joinC","lengthC","_i4","_info2","_sult2","_check2","_joinNum2","_yield$connection$exe9","_yield$connection$exe10","joinD","lengthD","_i5","_info3","_sult3","_check3","_joinNum3","_yield$connection$exe11","_yield$connection$exe12","joinE","lengthE","_i6","_info4","_sult4","_check4","_joinNum4","_yield$connection$exe13","_yield$connection$exe14","joinTotal","_callee12$","_context12","bet","handling5D","_ref11","_callee11","typeid","_yield$connection$exe","_yield$connection$exe2","order","orders","nhan_duoc","_callee11$","_context11","amount","_x24","module","exports"],"sourceRoot":"/www/wwwroot/21india/src/controllers/","sources":["k5Controller.js"],"sourcesContent":["import e from \"express\";\nimport connection from \"../config/connectDB\";\nrequire('dotenv').config();\n\n\nconst K5DPage = async (req, res) => {\n    return res.render(\"bet/5d/5d.ejs\"); \n}\n\nconst K5DPage3 = async (req, res) => {\n    return res.render(\"bet/wingo/win3.ejs\");\n}\n\nconst K5DPage5 = async (req, res) => {\n    return res.render(\"bet/wingo/win5.ejs\");\n}\n\nconst K5DPage10 = async (req, res) => {\n    return res.render(\"bet/wingo/win10.ejs\");\n}\n\n\nconst isNumber = (params) => {\n    let pattern = /^[0-9]*\\d$/;\n    return pattern.test(params);\n}\n\nfunction formateT(params) {\n    let result = (params < 10) ? \"0\" + params : params;\n    return result;\n    }\n    \nfunction timerJoin(params = '', addHours = 0) {\n        let date = '';\n        if (params) {\n            date = new Date(Number(params));\n        } else {\n            date = new Date();\n        }\n    \n        date.setHours(date.getHours() + addHours);\n    \n        let years = formateT(date.getFullYear());\n        let months = formateT(date.getMonth() + 1);\n        let days = formateT(date.getDate());\n    \n        let hours = date.getHours() % 12;\n        hours = hours === 0 ? 12 : hours;\n        let ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n    \n        let minutes = formateT(date.getMinutes());\n        let seconds = formateT(date.getSeconds());\n    \n        return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;\n    }\n\nconst rosesPlus = async (auth, money) => {\n    const [level] = await connection.query('SELECT * FROM level ');\n    let level0 = level[0];\n\n    const [user] = await connection.query('SELECT `phone`, `code`, `invite` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n    let userInfo = user[0];\n    const [f1] = await connection.query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [userInfo.invite]);\n    if (money >= 10000) {\n        if (f1.length > 0) {\n            let infoF1 = f1[0];\n            let rosesF1 = (money / 100) * level0.f1;\n            await connection.query('UPDATE users SET money = money + ?, roses_f1 = roses_f1 + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF1, rosesF1, rosesF1, rosesF1, infoF1.phone]);\n            const [f2] = await connection.query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [infoF1.invite]);\n            if (f2.length > 0) {\n                let infoF2 = f2[0];\n                let rosesF2 = (money / 100) * level0.f2;\n                await connection.query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF2, rosesF2, rosesF2, infoF2.phone]);\n                const [f3] = await connection.query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [infoF2.invite]);\n                if (f3.length > 0) {\n                    let infoF3 = f3[0];\n                    let rosesF3 = (money / 100) * level0.f3;\n                    await connection.query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF3, rosesF3, rosesF3, infoF3.phone]);\n                    const [f4] = await connection.query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [infoF3.invite]);\n                    if (f4.length > 0) {\n                        let infoF4 = f4[0];\n                        let rosesF4 = (money / 100) * level0.f4;\n                        await connection.query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF4, rosesF4, rosesF4, infoF4.phone]);\n                    }\n                }\n            }\n\n        }\n    }\n}\n\nconst validateBet = async (join, list_join, x, money, game) => {\n    let checkJoin = isNumber(list_join);\n    let checkX = isNumber(x);\n    const checks = ['a', 'b', 'c', 'd', 'e', 'total'].includes(join);\n    const checkGame = ['1', '3', '5', '10'].includes(String(game));\n    const checkMoney = ['1', '10', '100', '1000'].includes(money);\n\n    if (!checks || list_join.length > 10 || !checkX || !checkMoney || !checkGame) {\n        return false;\n    }\n\n    if (checkJoin) {\n        let arr = list_join.split('');\n        let length = arr.length;\n        for (let i = 0; i < length; i++) {\n            const joinNum = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'].includes(arr[i]);\n            if (!joinNum) {\n                return false;\n            }\n        }\n    } else {\n        let arr = list_join.split('');\n        let length = arr.length;\n        for (let i = 0; i < length; i++) {\n            const joinStr = [\"c\", \"l\", \"b\", \"s\"].includes(arr[i]);\n            if (!joinStr) {\n                return false;\n            }\n        }\n\n    }\n\n    return true;\n}\n\nconst betK5D = async (req, res) => {\n    try {\n        let { join, list_join, x, money, game } = req.body;\n        let auth = req.cookies.auth;\n\n        let validate = await validateBet(join, list_join, x, money, game);\n\n        if (!validate) {\n            return res.status(200).json({\n                message: 'Invalid bet',\n                status: false\n            });\n        }\n\n        const [k5DNow] = await connection.query(`SELECT period FROM 5d WHERE status = 0 AND game = ${game} ORDER BY id DESC LIMIT 1 `);\n        const [user] = await connection.query('SELECT `phone`, `code`, `invite`, `level`, `money` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n        if (k5DNow.length < 1 || user.length < 1) {\n            return res.status(200).json({\n                message: 'Error!',\n                status: false\n            });\n        }\n        let userInfo = user[0];\n        let period = k5DNow[0];\n\n        let date = new Date();\n        let years = formateT(date.getFullYear());\n        let months = formateT(date.getMonth() + 1);\n        let days = formateT(date.getDate());\n        let id_product = years + months + days + Math.floor(Math.random() * 1000000000000000);\n\n        let total = money * x * (String(list_join).split('').length);\n        let fee = total * 0.02;\n        let price = total - fee;\n\n        let check = userInfo.money - total;\n        if (check >= 0) {\n            let timeNow = Date.now();\n            const sql = `INSERT INTO result_5d SET id_product = ?,phone = ?,code = ?,invite = ?,stage = ?,level = ?,money = ?,price = ?,amount = ?,fee = ?,game = ?,join_bet = ?,bet = ?,status = ?,time = ?`;\n            await connection.execute(sql, [id_product, userInfo.phone, userInfo.code, userInfo.invite, period.period, userInfo.level, total, price, x, fee, game, join, list_join, 0, timeNow]);\n            await connection.execute('UPDATE `users` SET `money` = `money` - ? WHERE `token` = ? ', [total, auth]);\n            const [users] = await connection.query('SELECT `money`, `level` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n            await rosesPlus(auth, money * x);\n            const [level] = await connection.query('SELECT * FROM level ');\n            let level0 = level[0];\n            const sql2 = `INSERT INTO roses SET phone = ?,code = ?,invite = ?,f1 = ?,f2 = ?,f3 = ?,f4 = ?,time = ?`;\n            let total_m = total;\n            let f1 = (total_m / 100) * level0.f1;\n            let f2 = (total_m / 100) * level0.f2;\n            let f3 = (total_m / 100) * level0.f3;\n            let f4 = (total_m / 100) * level0.f4;\n            await connection.execute(sql2, [userInfo.phone, userInfo.code, userInfo.invite, f1, f2, f3, f4, timeNow]);\n            return res.status(200).json({\n                message: 'Successful bet',\n                status: true,\n                // data: result,\n                change: users[0].level,\n                money: users[0].money,\n            });\n        } else {\n            return res.status(200).json({\n                message: 'The amount is not enough',\n                status: false\n            });\n        }\n    } catch (error) {\n        if (error) console.log(error);\n    }\n}\n\nconst listOrderOld = async (req, res) => {\n    let { gameJoin, pageno, pageto } = req.body;\n    let auth = req.cookies.auth;\n\n    let checkGame = ['1', '3', '5', '10'].includes(String(gameJoin));\n    if (!checkGame || pageno < 0 || pageto < 0) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n    const [user] = await connection.query('SELECT `phone`, `code`, `invite`, `level`, `money` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n\n    let game = Number(gameJoin);\n\n    const [k5d] = await connection.query(`SELECT * FROM 5d WHERE status != 0 AND game = '${game}' ORDER BY id DESC LIMIT ${pageno}, ${pageto} `);\n    const [k5dAll] = await connection.query(`SELECT * FROM 5d WHERE status != 0 AND game = '${game}' `);\n    const [period] = await connection.query(`SELECT period FROM 5d WHERE status = 0 AND game = '${game}' ORDER BY id DESC LIMIT 1 `);\n    if (k5d.length == 0) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            page: 1,\n            status: false\n        });\n    }\n    if (!pageno || !pageto || !user[0] || !k5d[0] || !period[0]) {\n        return res.status(200).json({\n            message: 'Error!',\n            status: false\n        });\n    }\n    let page = Math.ceil(k5dAll.length / 10);\n    return res.status(200).json({\n        code: 0,\n        msg: \"Get success\",\n        data: {\n            gameslist: k5d,\n        },\n        period: period[0].period,\n        page: page,\n        status: true\n    });\n}\n\nconst GetMyEmerdList = async (req, res) => {\n    let { gameJoin, pageno, pageto } = req.body;\n    let auth = req.cookies.auth;\n\n    let checkGame = ['1', '3', '5', '10'].includes(String(gameJoin));\n    if (!checkGame || pageno < 0 || pageto < 0) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n\n    let game = Number(gameJoin);\n\n    const [user] = await connection.query('SELECT `phone`, `code`, `invite`, `level`, `money` FROM users WHERE token = ? AND veri = 1 LIMIT 1 ', [auth]);\n    const [result_5d] = await connection.query(`SELECT * FROM result_5d WHERE phone = ? AND game = '${game}' ORDER BY id DESC LIMIT ${Number(pageno) + ',' + Number(pageto)}`, [user[0].phone]);\n    const [result_5dAll] = await connection.query(`SELECT * FROM result_5d WHERE phone = ? AND game = '${game}' ORDER BY id DESC `, [user[0].phone]);\n\n    if (!result_5d[0]) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            page: 1,\n            status: false\n        });\n    }\n    if (!pageno || !pageto || !user[0] || !result_5d[0]) {\n        return res.status(200).json({\n            message: 'Error!',\n            status: true\n        });\n    }\n    let page = Math.ceil(result_5dAll.length / 10);\n\n    let datas = result_5d.map((data) => {\n        let { id, phone, code, invite, level, game, ...others } = data;\n        return others;\n    });\n\n    return res.status(200).json({\n        code: 0,\n        msg: \"Get Success\",\n        data: {\n            gameslist: datas,\n        },\n        page: page,\n        status: true\n    });\n}\n\nfunction makeid(length) {\n    var result = '';\n    var characters = '0123456789';\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}\n\nconst add5D = async(game) => {\n    try {\n        let join = '';\n        if (game == 1) join = 'k5d'; \n        if (game == 3) join = 'k5d3';\n        if (game == 5) join = 'k5d5';\n        if (game == 10) join = 'k5d10';\n\n        let result2 = makeid(5);\n        let timeNow = Date.now();\n        let [k5D] = await connection.query(`SELECT period FROM 5d WHERE status = 0 AND game = ${game} ORDER BY id DESC LIMIT 1 `);\n        const [setting] = await connection.query('SELECT * FROM `admin` ');\n        let period = k5D[0].period;\n\n        let nextResult = '';\n        if (game == 1) nextResult = setting[0].k5d;\n        if (game == 3) nextResult = setting[0].k5d3;\n        if (game == 5) nextResult = setting[0].k5d5;\n        if (game == 10) nextResult = setting[0].k5d10;\n\n        let newArr = '';\n        if (nextResult == '-1') {\n            await connection.execute(`UPDATE 5d SET result = ?,status = ? WHERE period = ? AND game = \"${game}\"`, [result2, 1, period]);\n            newArr = '-1';\n        } else {\n            let result = '';\n            let arr = nextResult.split('|');\n            let check = arr.length;\n            if (check == 1) {\n                newArr = '-1';\n            } else {\n                for (let i = 1; i < arr.length; i++) {\n                    newArr += arr[i] + '|';\n                }\n                newArr = newArr.slice(0, -1);\n            }\n            result = arr[0];\n            await connection.execute(`UPDATE 5d SET result = ?,status = ? WHERE period = ? AND game = ${game}`, [result, 1, period]);\n        }\n        const sql = `INSERT INTO 5d SET period = ?, result = ?, game = ?, status = ?, time = ?`;\n        await connection.execute(sql, [Number(period) + 1, 0, game, 0, timeNow]);\n\n        if (game == 1) join = 'k5d';\n        if (game == 3) join = 'k5d3';\n        if (game == 5) join = 'k5d5';\n        if (game == 10) join = 'k5d10'; \n\n        await connection.execute(`UPDATE admin SET ${join} = ?`, [newArr]);\n    } catch (error) {\n        if (error) {\n            console.log(error);\n        }\n    }\n}\n\nasync function funHanding(game) {\n    const [k5d] = await connection.query(`SELECT * FROM 5d WHERE status != 0 AND game = ${game} ORDER BY id DESC LIMIT 1 `);\n    let k5dInfo = k5d[0];\n \n    // update ket qua\n    await connection.execute(`UPDATE result_5d SET result = ? WHERE status = 0 AND game = ${game}`, [k5dInfo.result]);\n    let result = String(k5dInfo.result).split('');\n    let a = result[0];\n    let b = result[1];\n    let c = result[2];\n    let d = result[3];\n    let e = result[4];\n    let total = 0;\n    for (let i = 0; i < result.length; i++) {\n        total += Number(result[i]);\n    }\n\n    // xử lý game a\n    const [joinA] = await connection.execute(`SELECT id, bet FROM result_5d WHERE status = 0 AND game = ${game} AND join_bet = 'a' `);\n    let lengthA = joinA.length;\n    for (let i = 0; i < lengthA; i++) {\n        let info = joinA[i];\n        let sult = info.bet.split('');\n        let check = isNumber(info.bet);\n        if (check) {\n            const joinNum = sult.includes(a);\n            if (!joinNum) {\n                await connection.execute(`UPDATE result_5d SET status = 2 WHERE id = ? `, [info.id]);\n            }\n        }\n        \n    }\n    if (lengthA > 0) {\n        if(a == '0' || a == '1' || a == '2' || a == '3' || a == '4') {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'a' AND bet = 'b' `)\n        };\n        if(a == '5' || a == '6' || a == '7' || a == '8' || a == '9') {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'a' AND bet = 's' `)\n        };\n        if(Number(a) % 2 == 0) {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'a' AND bet = 'l' `)\n        };\n        if(Number(a) % 2 != 0) {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'a' AND bet = 'c' `)\n        };\n    }\n\n    // xử lý game b\n    const [joinB] = await connection.execute(`SELECT id, bet FROM result_5d WHERE status = 0 AND game = ${game} AND join_bet = 'b' `);\n    let lengthB = joinB.length;\n    for (let i = 0; i < lengthB; i++) {\n        let info = joinB[i];\n        let sult = info.bet.split('');\n        let check = isNumber(info.bet);\n        if (check) {\n            const joinNum = sult.includes(b);\n            if (!joinNum) {\n                await connection.execute(`UPDATE result_5d SET status = 2 WHERE id = ? `, [info.id]);\n            }\n        }\n        \n    }\n    if (lengthB > 0) {\n        if(b == '0' || b == '1' || b == '2' || b == '3' || b == '4') {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'b' AND bet = 'b' `);\n        };\n        if(b == '5' || b == '6' || b == '7' || b == '8' || b == '9') {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'b' AND bet = 's' `);\n        };\n        if(Number(b) % 2 == 0) {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'b' AND bet = 'l' `);\n        };\n        if(Number(b) % 2 != 0) {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'b' AND bet = 'c' `);\n        };\n    }\n\n    // xử lý game c\n    const [joinC] = await connection.execute(`SELECT id, bet FROM result_5d WHERE status = 0 AND game = ${game} AND join_bet = 'c' `);\n    let lengthC = joinC.length;\n    for (let i = 0; i < lengthC; i++) {\n        let info = joinC[i];\n        let sult = info.bet.split('');\n        let check = isNumber(info.bet);\n        if (check) {\n            const joinNum = sult.includes(c);\n            if (!joinNum) {\n                await connection.execute(`UPDATE result_5d SET status = 2 WHERE id = ? `, [info.id]);\n            }\n        }\n        \n    }\n    if (lengthC > 0) {\n        if(c == '0' || c == '1' || c == '2' || c == '3' || c == '4') {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'c' AND bet = 'b' `);\n        };\n        if(c == '5' || c == '6' || c == '7' || c == '8' || c == '9') {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'c' AND bet = 's' `);\n        };\n        if(Number(c) % 2 == 0) {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'c' AND bet = 'l' `);\n        };\n        if(Number(c) % 2 != 0) {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'c' AND bet = 'c' `);\n        };\n    }\n    \n    // xử lý game d\n    const [joinD] = await connection.execute(`SELECT id, bet FROM result_5d WHERE status = 0 AND game = ${game} AND join_bet = 'd' `);\n    let lengthD = joinD.length;\n    for (let i = 0; i < lengthD; i++) {\n        let info = joinD[i];\n        let sult = info.bet.split('');\n        let check = isNumber(info.bet);\n        if (check) {\n            const joinNum = sult.includes(d);\n            if (!joinNum) {\n                await connection.execute(`UPDATE result_5d SET status = 2 WHERE id = ? `, [info.id]);\n            }\n        }\n        \n    }\n    if (lengthD > 0) {\n        if(d == '0' || d == '1' || d == '2' || d == '3' || d == '4') {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'd' AND bet = 'b' `);\n        };\n        if(d == '5' || d == '6' || d == '7' || d == '8' || d == '9') {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'd' AND bet = 's' `);\n        };\n        if(Number(d) % 2 == 0) {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'd' AND bet = 'l' `);\n        };\n        if(Number(d) % 2 != 0) {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'd' AND bet = 'c' `);\n        };\n    }\n\n    // xử lý game e\n    const [joinE] = await connection.execute(`SELECT id, bet FROM result_5d WHERE status = 0 AND game = ${game} AND join_bet = 'e' `);\n    let lengthE = joinE.length;\n    for (let i = 0; i < lengthE; i++) {\n        let info = joinE[i];\n        let sult = info.bet.split('');\n        let check = isNumber(info.bet);\n        if (check) {\n            const joinNum = sult.includes(e);\n            if (!joinNum) {\n                await connection.execute(`UPDATE result_5d SET status = 2 WHERE id = ? `, [info.id]);\n            }\n        }\n        \n    }\n    if (lengthE > 0) {\n        if(e == '0' || e == '1' || e == '2' || e == '3' || e == '4') {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'e' AND bet = 'b' `);\n        };\n        if(e == '5' || e == '6' || e == '7' || e == '8' || e == '9') {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'e' AND bet = 's' `);\n        };\n        if(Number(e) % 2 == 0) {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'e' AND bet = 'l' `);\n        };\n        if(Number(e) % 2 != 0) {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'e' AND bet = 'c' `);\n        };\n    }\n\n    // xử lý game e\n    const [joinTotal] = await connection.execute(`SELECT id, bet FROM result_5d WHERE status = 0 AND game = ${game} AND join_bet = 'total' `);\n    if (joinTotal.length > 0) {\n        if(total <= 22) {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'total' AND bet = 'b' `);\n        };\n        if(total > 22) {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'total' AND bet = 's' `);\n        };\n        if(total % 2 == 0) {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'total' AND bet = 'l' `);\n        };\n        if(total % 2 != 0) {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'total' AND bet = 'c' `);\n        };\n    }\n}\n\nconst handling5D = async(typeid) => {\n\n    let game = Number(typeid);\n\n    await funHanding(game);\n\n    const [order] = await connection.execute(`SELECT id, phone, bet, price, money, fee, amount FROM result_5d WHERE status = 0 AND game = ${game} `);\n    for (let i = 0; i < order.length; i++) {\n        let orders = order[i];\n        let id = orders.id;\n        let phone = orders.phone;\n        let nhan_duoc = 0;\n        let check = isNumber(orders.bet); \n        if (check) {\n            let arr = orders.bet.split('');\n            let total = (orders.money / arr.length / orders.amount);\n            let fee = total * 0.02;\n            let price = total - fee;\n            nhan_duoc += price * 9;\n        } else {\n            nhan_duoc += orders.price * 2;\n        }\n\n        await connection.execute('UPDATE `result_5d` SET `get` = ?, `status` = 1 WHERE `id` = ? ', [nhan_duoc, id]);\n        const sql = 'UPDATE `users` SET `money` = `money` + ? WHERE `phone` = ? ';\n        await connection.execute(sql, [nhan_duoc, phone]);\n    }\n}\n\n\nmodule.exports = {\n    K5DPage,\n    K5DPage3,\n    K5DPage5,\n    K5DPage10,\n    betK5D,\n    listOrderOld,\n    GetMyEmerdList,\n    add5D,\n    handling5D\n}"],"mappings":"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","ignoreList":[]}},"mtime":1722459116000},"{\"assumptions\":{},\"sourceRoot\":\"/www/wwwroot/21india/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/www/wwwroot/21india\",\"filename\":\"/www/wwwroot/21india/src/controllers/k3Controller.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/www/wwwroot/21india\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.5:development":{"value":{"code":"\"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _connectDB = _interopRequireDefault(require(\"../config/connectDB\"));\nvar _excluded = [\"id\", \"phone\", \"code\", \"invite\", \"level\", \"game\"];\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nrequire('dotenv').config();\nvar K3Page = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(req, res) {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", res.render(\"bet/k3/k3.ejs\"));\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function K3Page(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar isNumber = function isNumber(params) {\n  var pattern = /^[0-9]*\\d$/;\n  return pattern.test(params);\n};\nfunction formateT(params) {\n  var result = params < 10 ? \"0\" + params : params;\n  return result;\n}\nfunction timerJoin() {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var addHours = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var date = '';\n  if (params) {\n    date = new Date(Number(params));\n  } else {\n    date = new Date();\n  }\n  date.setHours(date.getHours() + addHours);\n  var years = formateT(date.getFullYear());\n  var months = formateT(date.getMonth() + 1);\n  var days = formateT(date.getDate());\n  var hours = date.getHours() % 12;\n  hours = hours === 0 ? 12 : hours;\n  var ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n  var minutes = formateT(date.getMinutes());\n  var seconds = formateT(date.getSeconds());\n  return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;\n}\nvar rosesPlus = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(auth, money) {\n    var _yield$connection$que, _yield$connection$que2, level, level0, _yield$connection$que3, _yield$connection$que4, user, userInfo, _yield$connection$que5, _yield$connection$que6, f1, infoF1, rosesF1, _yield$connection$que7, _yield$connection$que8, f2, infoF2, rosesF2, _yield$connection$que9, _yield$connection$que10, f3, infoF3, rosesF3, _yield$connection$que11, _yield$connection$que12, f4, infoF4, rosesF4;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _connectDB[\"default\"].query('SELECT * FROM level ');\n        case 2:\n          _yield$connection$que = _context2.sent;\n          _yield$connection$que2 = _slicedToArray(_yield$connection$que, 1);\n          level = _yield$connection$que2[0];\n          level0 = level[0];\n          _context2.next = 8;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`, `invite` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n        case 8:\n          _yield$connection$que3 = _context2.sent;\n          _yield$connection$que4 = _slicedToArray(_yield$connection$que3, 1);\n          user = _yield$connection$que4[0];\n          userInfo = user[0];\n          _context2.next = 14;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [userInfo.invite]);\n        case 14:\n          _yield$connection$que5 = _context2.sent;\n          _yield$connection$que6 = _slicedToArray(_yield$connection$que5, 1);\n          f1 = _yield$connection$que6[0];\n          if (!(money >= 10000)) {\n            _context2.next = 53;\n            break;\n          }\n          if (!(f1.length > 0)) {\n            _context2.next = 53;\n            break;\n          }\n          infoF1 = f1[0];\n          rosesF1 = money / 100 * level0.f1;\n          _context2.next = 23;\n          return _connectDB[\"default\"].query('UPDATE users SET money = money + ?, roses_f1 = roses_f1 + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF1, rosesF1, rosesF1, rosesF1, infoF1.phone]);\n        case 23:\n          _context2.next = 25;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [infoF1.invite]);\n        case 25:\n          _yield$connection$que7 = _context2.sent;\n          _yield$connection$que8 = _slicedToArray(_yield$connection$que7, 1);\n          f2 = _yield$connection$que8[0];\n          if (!(f2.length > 0)) {\n            _context2.next = 53;\n            break;\n          }\n          infoF2 = f2[0];\n          rosesF2 = money / 100 * level0.f2;\n          _context2.next = 33;\n          return _connectDB[\"default\"].query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF2, rosesF2, rosesF2, infoF2.phone]);\n        case 33:\n          _context2.next = 35;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [infoF2.invite]);\n        case 35:\n          _yield$connection$que9 = _context2.sent;\n          _yield$connection$que10 = _slicedToArray(_yield$connection$que9, 1);\n          f3 = _yield$connection$que10[0];\n          if (!(f3.length > 0)) {\n            _context2.next = 53;\n            break;\n          }\n          infoF3 = f3[0];\n          rosesF3 = money / 100 * level0.f3;\n          _context2.next = 43;\n          return _connectDB[\"default\"].query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF3, rosesF3, rosesF3, infoF3.phone]);\n        case 43:\n          _context2.next = 45;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [infoF3.invite]);\n        case 45:\n          _yield$connection$que11 = _context2.sent;\n          _yield$connection$que12 = _slicedToArray(_yield$connection$que11, 1);\n          f4 = _yield$connection$que12[0];\n          if (!(f4.length > 0)) {\n            _context2.next = 53;\n            break;\n          }\n          infoF4 = f4[0];\n          rosesF4 = money / 100 * level0.f4;\n          _context2.next = 53;\n          return _connectDB[\"default\"].query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF4, rosesF4, rosesF4, infoF4.phone]);\n        case 53:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function rosesPlus(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar validateBet = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(join, list_join, x, money, game) {\n    var checkJoin, checkX, checks, checkGame, checkMoney, arr, length, i, joinNum, _arr, _length, _i, joinStr;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          checkJoin = isNumber(list_join);\n          checkX = isNumber(x);\n          checks = ['a', 'b', 'c', 'd', 'e', 'total'].includes(join);\n          checkGame = ['1', '3', '5', '10'].includes(String(game));\n          checkMoney = ['1000', '10000', '100000', '1000000'].includes(money);\n          if (!(!checks || list_join.length > 10 || !checkX || !checkMoney || !checkGame)) {\n            _context3.next = 7;\n            break;\n          }\n          return _context3.abrupt(\"return\", false);\n        case 7:\n          if (!checkJoin) {\n            _context3.next = 20;\n            break;\n          }\n          arr = list_join.split('');\n          length = arr.length;\n          i = 0;\n        case 11:\n          if (!(i < length)) {\n            _context3.next = 18;\n            break;\n          }\n          joinNum = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'].includes(arr[i]);\n          if (joinNum) {\n            _context3.next = 15;\n            break;\n          }\n          return _context3.abrupt(\"return\", false);\n        case 15:\n          i++;\n          _context3.next = 11;\n          break;\n        case 18:\n          _context3.next = 30;\n          break;\n        case 20:\n          _arr = list_join.split('');\n          _length = _arr.length;\n          _i = 0;\n        case 23:\n          if (!(_i < _length)) {\n            _context3.next = 30;\n            break;\n          }\n          joinStr = [\"c\", \"l\", \"b\", \"s\"].includes(_arr[_i]);\n          if (joinStr) {\n            _context3.next = 27;\n            break;\n          }\n          return _context3.abrupt(\"return\", false);\n        case 27:\n          _i++;\n          _context3.next = 23;\n          break;\n        case 30:\n          return _context3.abrupt(\"return\", true);\n        case 31:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return function validateBet(_x5, _x6, _x7, _x8, _x9) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nvar betK3 = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(req, res) {\n    var _req$body, listJoin, game, gameJoin, xvalue, money, auth, _yield$connection$que13, _yield$connection$que14, k3Now, _yield$connection$que15, _yield$connection$que16, user, userInfo, period, date, years, months, days, id_product, total, twoSame, motDuyNhat, lengthArr, count, arr, i, baDuyNhat, countBaDuyNhat, threeSame, threeNumberUnlike, twoLienTiep, twoNumberUnlike, threeUn, _arr2, twoUn, _arr3, UnlienTiep, fee, price, typeGame, check, timeNow, sql, _yield$connection$que17, _yield$connection$que18, users, _yield$connection$que19, _yield$connection$que20, level, level0, sql2, total_m, f1, f2, f3, f4;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _req$body = req.body, listJoin = _req$body.listJoin, game = _req$body.game, gameJoin = _req$body.gameJoin, xvalue = _req$body.xvalue, money = _req$body.money;\n          auth = req.cookies.auth; // let validate = await validateBet(join, list_join, x, money, game);\n          // if (!validate) {\n          //     return res.status(200).json({\n          //         message: 'Đặt cược không hợp lệ',\n          //         status: false\n          //     });\n          // }\n          _context4.next = 5;\n          return _connectDB[\"default\"].query(\"SELECT period FROM k3 WHERE status = 0 AND game = \".concat(game, \" ORDER BY id DESC LIMIT 1 \"));\n        case 5:\n          _yield$connection$que13 = _context4.sent;\n          _yield$connection$que14 = _slicedToArray(_yield$connection$que13, 1);\n          k3Now = _yield$connection$que14[0];\n          _context4.next = 10;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`, `invite`, `level`, `money` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n        case 10:\n          _yield$connection$que15 = _context4.sent;\n          _yield$connection$que16 = _slicedToArray(_yield$connection$que15, 1);\n          user = _yield$connection$que16[0];\n          if (!(k3Now.length < 1 || user.length < 1)) {\n            _context4.next = 15;\n            break;\n          }\n          return _context4.abrupt(\"return\", res.status(200).json({\n            message: 'Error!',\n            status: false\n          }));\n        case 15:\n          userInfo = user[0];\n          period = k3Now[0];\n          date = new Date();\n          years = formateT(date.getFullYear());\n          months = formateT(date.getMonth() + 1);\n          days = formateT(date.getDate());\n          id_product = years + months + days + Math.floor(Math.random() * 1000000000000000);\n          total = 0;\n          if (gameJoin == 1) {\n            total = money * xvalue * String(listJoin).split(',').length;\n          } else if (gameJoin == 2) {\n            twoSame = listJoin.split('@')[0]; // Chọn 2 số phù hợp\n            motDuyNhat = listJoin.split('@')[1]; // Chọn một cặp số duy nhất\n            if (twoSame.length > 0) {\n              twoSame = twoSame.split(',').length;\n            }\n            lengthArr = 0;\n            count = 0;\n            if (motDuyNhat.length > 0) {\n              arr = motDuyNhat.split('&');\n              for (i = 0; i < arr.length; i++) {\n                motDuyNhat = arr[i].split('|');\n                count = motDuyNhat[1].split(',').length;\n              }\n              lengthArr = arr.length;\n              count = count;\n            }\n            total = money * xvalue * (lengthArr * count) + twoSame * money * xvalue;\n          } else if (gameJoin == 3) {\n            baDuyNhat = listJoin.split('@')[0]; // Chọn 3 số duy nhất\n            countBaDuyNhat = 0;\n            if (baDuyNhat.length > 0) {\n              countBaDuyNhat = baDuyNhat.split(',').length;\n            }\n            threeSame = listJoin.split('@')[1].length; // Chọn 3 số giống nhau\n            total = money * xvalue * countBaDuyNhat + threeSame * money * xvalue;\n          } else if (gameJoin == 4) {\n            threeNumberUnlike = listJoin.split('@')[0]; // Chọn 3 số duy nhất\n            twoLienTiep = listJoin.split('@')[1]; // Chọn 3 số liên tiếp\n            twoNumberUnlike = listJoin.split('@')[2]; // Chọn 3 số duy nhất\n            threeUn = 0;\n            if (threeNumberUnlike.length > 0) {\n              _arr2 = threeNumberUnlike.split(',').length;\n              if (_arr2 <= 4) {\n                threeUn += xvalue * (money * _arr2);\n              }\n              if (_arr2 == 5) {\n                threeUn += xvalue * (money * _arr2) * 2;\n              }\n              if (_arr2 == 6) {\n                threeUn += xvalue * (money * 5) * 4;\n              }\n            }\n            twoUn = 0;\n            if (twoNumberUnlike.length > 0) {\n              _arr3 = twoNumberUnlike.split(',').length;\n              if (_arr3 <= 3) {\n                twoUn += xvalue * (money * _arr3);\n              }\n              if (_arr3 == 4) {\n                twoUn += xvalue * (money * _arr3) * 1.5;\n              }\n              if (_arr3 == 5) {\n                twoUn += xvalue * (money * _arr3) * 2;\n              }\n              if (_arr3 == 6) {\n                twoUn += xvalue * (money * _arr3 * 2.5);\n              }\n            }\n            UnlienTiep = 0;\n            if (twoLienTiep == 'u') {\n              UnlienTiep += xvalue * money;\n            }\n            total = threeUn + twoUn + UnlienTiep;\n          }\n          fee = total * 0.02;\n          price = total - fee;\n          typeGame = '';\n          if (gameJoin == 1) typeGame = 'total';\n          if (gameJoin == 2) typeGame = 'two-same';\n          if (gameJoin == 3) typeGame = 'three-same';\n          if (gameJoin == 4) typeGame = 'unlike';\n          check = userInfo.money - total;\n          if (!(check >= 0)) {\n            _context4.next = 63;\n            break;\n          }\n          timeNow = Date.now();\n          sql = \"INSERT INTO result_k3 SET id_product = ?,phone = ?,code = ?,invite = ?,stage = ?,level = ?,money = ?,price = ?,amount = ?,fee = ?,game = ?,join_bet = ?, typeGame = ?,bet = ?,status = ?,time = ?\";\n          _context4.next = 37;\n          return _connectDB[\"default\"].execute(sql, [id_product, userInfo.phone, userInfo.code, userInfo.invite, period.period, userInfo.level, total, price, xvalue, fee, game, gameJoin, typeGame, listJoin, 0, timeNow]);\n        case 37:\n          _context4.next = 39;\n          return _connectDB[\"default\"].execute('UPDATE `users` SET `money` = `money` - ? WHERE `token` = ? ', [total, auth]);\n        case 39:\n          _context4.next = 41;\n          return _connectDB[\"default\"].query('SELECT `money`, `level` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n        case 41:\n          _yield$connection$que17 = _context4.sent;\n          _yield$connection$que18 = _slicedToArray(_yield$connection$que17, 1);\n          users = _yield$connection$que18[0];\n          _context4.next = 46;\n          return rosesPlus(auth, total);\n        case 46:\n          _context4.next = 48;\n          return _connectDB[\"default\"].query('SELECT * FROM level ');\n        case 48:\n          _yield$connection$que19 = _context4.sent;\n          _yield$connection$que20 = _slicedToArray(_yield$connection$que19, 1);\n          level = _yield$connection$que20[0];\n          level0 = level[0];\n          sql2 = \"INSERT INTO roses SET phone = ?,code = ?,invite = ?,f1 = ?,f2 = ?,f3 = ?,f4 = ?,time = ?\";\n          total_m = total;\n          f1 = total_m / 100 * level0.f1;\n          f2 = total_m / 100 * level0.f2;\n          f3 = total_m / 100 * level0.f3;\n          f4 = total_m / 100 * level0.f4;\n          _context4.next = 60;\n          return _connectDB[\"default\"].execute(sql2, [userInfo.phone, userInfo.code, userInfo.invite, f1, f2, f3, f4, timeNow]);\n        case 60:\n          return _context4.abrupt(\"return\", res.status(200).json({\n            message: 'Successful bet',\n            status: true,\n            // data: result,\n            change: users[0].level,\n            money: users[0].money\n          }));\n        case 63:\n          return _context4.abrupt(\"return\", res.status(200).json({\n            message: 'The amount is not enough',\n            status: false\n          }));\n        case 64:\n          _context4.next = 68;\n          break;\n        case 66:\n          _context4.prev = 66;\n          _context4.t0 = _context4[\"catch\"](0);\n        case 68:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4, null, [[0, 66]]);\n  }));\n  return function betK3(_x10, _x11) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nfunction makeid(length) {\n  var result = '';\n  var characters = '123456';\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\nvar addK3 = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(game) {\n    var join, result2, timeNow, _yield$connection$que21, _yield$connection$que22, k5D, _yield$connection$que23, _yield$connection$que24, setting, period, nextResult, newArr, result, arr, check, i, sql;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          join = '';\n          if (game == 1) join = 'k3d';\n          if (game == 3) join = 'k3d3';\n          if (game == 5) join = 'k3d5';\n          if (game == 10) join = 'k3d10';\n          result2 = makeid(3);\n          timeNow = Date.now();\n          _context5.next = 10;\n          return _connectDB[\"default\"].query(\"SELECT period FROM k3 WHERE status = 0 AND game = \".concat(game, \" ORDER BY id DESC LIMIT 1 \"));\n        case 10:\n          _yield$connection$que21 = _context5.sent;\n          _yield$connection$que22 = _slicedToArray(_yield$connection$que21, 1);\n          k5D = _yield$connection$que22[0];\n          _context5.next = 15;\n          return _connectDB[\"default\"].query('SELECT * FROM `admin` ');\n        case 15:\n          _yield$connection$que23 = _context5.sent;\n          _yield$connection$que24 = _slicedToArray(_yield$connection$que23, 1);\n          setting = _yield$connection$que24[0];\n          period = k5D[0].period;\n          nextResult = '';\n          if (game == 1) nextResult = setting[0].k3d;\n          if (game == 3) nextResult = setting[0].k3d3;\n          if (game == 5) nextResult = setting[0].k3d5;\n          if (game == 10) nextResult = setting[0].k3d10;\n          newArr = '';\n          if (!(nextResult == '-1')) {\n            _context5.next = 31;\n            break;\n          }\n          _context5.next = 28;\n          return _connectDB[\"default\"].execute(\"UPDATE k3 SET result = ?,status = ? WHERE period = ? AND game = \\\"\".concat(game, \"\\\"\"), [result2, 1, period]);\n        case 28:\n          newArr = '-1';\n          _context5.next = 38;\n          break;\n        case 31:\n          result = '';\n          arr = nextResult.split('|');\n          check = arr.length;\n          if (check == 1) {\n            newArr = '-1';\n          } else {\n            for (i = 1; i < arr.length; i++) {\n              newArr += arr[i] + '|';\n            }\n            newArr = newArr.slice(0, -1);\n          }\n          result = arr[0];\n          _context5.next = 38;\n          return _connectDB[\"default\"].execute(\"UPDATE k3 SET result = ?,status = ? WHERE period = ? AND game = \".concat(game), [result, 1, period]);\n        case 38:\n          sql = \"INSERT INTO k3 SET period = ?, result = ?, game = ?, status = ?, time = ?\";\n          _context5.next = 41;\n          return _connectDB[\"default\"].execute(sql, [Number(period) + 1, 0, game, 0, timeNow]);\n        case 41:\n          if (game == 1) join = 'k3d';\n          if (game == 3) join = 'k3d3';\n          if (game == 5) join = 'k3d5';\n          if (game == 10) join = 'k3d10';\n          _context5.next = 47;\n          return _connectDB[\"default\"].execute(\"UPDATE admin SET \".concat(join, \" = ?\"), [newArr]);\n        case 47:\n          _context5.next = 52;\n          break;\n        case 49:\n          _context5.prev = 49;\n          _context5.t0 = _context5[\"catch\"](0);\n          if (_context5.t0) {}\n        case 52:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5, null, [[0, 49]]);\n  }));\n  return function addK3(_x12) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nfunction funHanding(_x13) {\n  return _funHanding.apply(this, arguments);\n}\nfunction _funHanding() {\n  _funHanding = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(game) {\n    var _yield$connection$que39, _yield$connection$que40, k5d, k5dInfo, result, total, i, _yield$connection$exe, _yield$connection$exe2, totalNumber, totalN, _i2, sult, lengWin, check1, check2, check3, check4, _yield$connection$exe3, _yield$connection$exe4, totaltwoSame, totalTwoSame, _i3, _sult, id, array, kq, kq1, kq2, _check, _check2, array2, _i4, newArr, newArr2, resultA1, resultA2, resultA4, resultA3, result1, result2, _array, _kq, _kq2, _kq3, _result, _result2, _kq4, _kq5, _kq6, kq3, kq4, check, _array2, _i5, _newArr, _newArr2, _resultA, _resultA2, _resultA3, _resultA4, _resultA5, _resultA6, _yield$connection$exe5, _yield$connection$exe6, ThreeSame, ThreeSameL, _i6, _sult2, _id, _array3, _kq7, _check3, _check4, _resultA7, _result3, _array4, _kq8, _result4, _kq9, _result5, _yield$connection$exe7, _yield$connection$exe8, Unlike, Unlikes, _i7, _sult3, _id2, _array5, _array6, _kq10, _check5, _check6, _check7, _i8, _resultA8, _kq11, _kq12, _kq13, _i9, _resultA9, _resultA10, _resultA11, _i10, _resultA12, _array7, _array8, _kq14, _check8, _check9, _i11, _resultA13, _i12, _resultA14, _array9, _array10, _kq15, _check10, _check11, _i13, _resultA15, _kq16, _kq17, _kq18, _i14, _resultA16, _resultA17, _resultA18, _array11, _array12, _kq19, _check12, _check13, _i15, _resultA19, _kq20, _kq21, _kq22, _i16, _resultA20, _resultA21, _resultA22, _array13, _array14, _kq23, _check14, _i17, _resultA23, _array15, _array16, _kq24, _check15, _kq25, _kq26, _kq27, _i18, _resultA24, _resultA25, _resultA26, _array17, _array18, _kq28, _check16, _i19, _resultA27;\n    return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n      while (1) switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return _connectDB[\"default\"].query(\"SELECT * FROM k3 WHERE status != 0 AND game = \".concat(game, \" ORDER BY id DESC LIMIT 1 \"));\n        case 2:\n          _yield$connection$que39 = _context9.sent;\n          _yield$connection$que40 = _slicedToArray(_yield$connection$que39, 1);\n          k5d = _yield$connection$que40[0];\n          k5dInfo = k5d[0]; // update ket qua\n          _context9.next = 8;\n          return _connectDB[\"default\"].execute(\"UPDATE result_k3 SET result = ? WHERE status = 0 AND game = \".concat(game), [k5dInfo.result]);\n        case 8:\n          result = String(k5dInfo.result).split('');\n          total = 0;\n          for (i = 0; i < result.length; i++) {\n            total += Number(result[i]);\n          }\n\n          // xử lý game Tổng số\n          _context9.next = 13;\n          return _connectDB[\"default\"].execute(\"SELECT id, bet FROM result_k3 WHERE status = 0 AND game = \".concat(game, \" AND typeGame = 'total' \"));\n        case 13:\n          _yield$connection$exe = _context9.sent;\n          _yield$connection$exe2 = _slicedToArray(_yield$connection$exe, 1);\n          totalNumber = _yield$connection$exe2[0];\n          totalN = totalNumber.length;\n          _i2 = 0;\n        case 18:\n          if (!(_i2 < totalN)) {\n            _context9.next = 38;\n            break;\n          }\n          sult = totalNumber[_i2].bet.split(','); // let result = sult.includes(String(total));\n          // if (!result) {\n          //     await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [totalNumber[i].id]);\n          // }\n          lengWin = sult.filter(function (age) {\n            return age == total;\n          });\n          check1 = false;\n          check2 = false;\n          check3 = false;\n          check4 = false;\n          if (total >= 3 && total <= 10 && sult.includes('s')) {\n            check1 = true;\n          } else {\n            check1 = false;\n          }\n          if (total >= 11 && total <= 18 && sult.includes('b')) {\n            check2 = true;\n          } else {\n            check2 = false;\n          }\n          if (total % 2 == 0 && sult.includes('c')) {\n            check3 = true;\n          } else {\n            check3 = false;\n          }\n          if (total % 2 != 0 && sult.includes('l')) {\n            check4 = true;\n          } else {\n            check4 = false;\n          }\n          if (!(!check1 && !check2 && !check3 && !check4)) {\n            _context9.next = 32;\n            break;\n          }\n          _context9.next = 32;\n          return _connectDB[\"default\"].execute(\"UPDATE result_k3 SET status = 2 WHERE id = ? \", [totalNumber[_i2].id]);\n        case 32:\n          if (!(lengWin.length >= 1)) {\n            _context9.next = 35;\n            break;\n          }\n          _context9.next = 35;\n          return _connectDB[\"default\"].execute(\"UPDATE result_k3 SET status = 0 WHERE id = ? \", [totalNumber[_i2].id]);\n        case 35:\n          _i2++;\n          _context9.next = 18;\n          break;\n        case 38:\n          _context9.next = 40;\n          return _connectDB[\"default\"].execute(\"SELECT id, bet FROM result_k3 WHERE status = 0 AND game = \".concat(game, \" AND typeGame = 'two-same' \"));\n        case 40:\n          _yield$connection$exe3 = _context9.sent;\n          _yield$connection$exe4 = _slicedToArray(_yield$connection$exe3, 1);\n          totaltwoSame = _yield$connection$exe4[0];\n          totalTwoSame = totaltwoSame.length;\n          _i3 = 0;\n        case 45:\n          if (!(_i3 < totalTwoSame)) {\n            _context9.next = 109;\n            break;\n          }\n          _sult = totaltwoSame[_i3].bet.split('@');\n          id = totaltwoSame[_i3].id;\n          if (!(_sult[0].length > 0 && _sult[1].length > 0)) {\n            _context9.next = 65;\n            break;\n          }\n          array = _sult[0].split(',');\n          kq = String(k5dInfo.result).split('');\n          kq1 = kq[0] + kq[1];\n          kq2 = kq[1] + kq[2];\n          _check = false;\n          _check2 = false;\n          array2 = _sult[1].split('&');\n          for (_i4 = 0; _i4 < array2.length; _i4++) {\n            newArr = array2[_i4].split('|')[0];\n            newArr2 = array2[_i4].split('|')[1].split(',');\n            resultA1 = newArr.includes(String(kq1));\n            resultA2 = newArr.includes(String(kq2));\n            if (!resultA1 && !resultA2) {\n              _check = true;\n            } else if (resultA1 && !resultA2) {\n              resultA4 = newArr2.includes(String(kq[2]));\n              if (!resultA4) {\n                _check = true;\n              }\n            } else if (!resultA1 && resultA2) {\n              resultA3 = newArr2.includes(String(kq[0]));\n              if (!resultA3) {\n                _check = true;\n              }\n            }\n          }\n          result1 = array.includes(String(kq1));\n          result2 = array.includes(String(kq2));\n          if (!result1 && !result2) {\n            _check2 = true;\n          }\n          if (!(_check && _check2)) {\n            _context9.next = 63;\n            break;\n          }\n          _context9.next = 63;\n          return _connectDB[\"default\"].execute(\"UPDATE result_k3 SET status = 2 WHERE id = ? \", [id]);\n        case 63:\n          _context9.next = 106;\n          break;\n        case 65:\n          if (!(_sult[0].length > 0 && _sult[1].length <= 0)) {\n            _context9.next = 77;\n            break;\n          }\n          _array = _sult[0].split(',');\n          _kq = String(k5dInfo.result).split('');\n          _kq2 = _kq[0] + _kq[1];\n          _kq3 = _kq[1] + _kq[2];\n          _result = _array.includes(String(_kq2));\n          _result2 = _array.includes(String(_kq3));\n          if (!(!_result && !_result2)) {\n            _context9.next = 75;\n            break;\n          }\n          _context9.next = 75;\n          return _connectDB[\"default\"].execute(\"UPDATE result_k3 SET status = 2 WHERE id = ? \", [id]);\n        case 75:\n          _context9.next = 106;\n          break;\n        case 77:\n          if (!(_sult[0].length <= 0 && _sult[1].length > 0)) {\n            _context9.next = 106;\n            break;\n          }\n          _kq4 = String(k5dInfo.result).split('');\n          _kq5 = _kq4[0] + _kq4[1];\n          _kq6 = _kq4[1] + _kq4[2];\n          kq3 = _kq4[0];\n          kq4 = _kq4[2];\n          check = false;\n          _array2 = _sult[1].split('&');\n          _i5 = 0;\n        case 86:\n          if (!(_i5 < _array2.length)) {\n            _context9.next = 103;\n            break;\n          }\n          _newArr = _array2[_i5].split('|')[0];\n          _newArr2 = _array2[_i5].split('|')[1].split(',');\n          _resultA = _newArr.includes(String(_kq5));\n          _resultA2 = _newArr.includes(String(_kq6));\n          _resultA3 = _newArr2.includes(String(kq3));\n          _resultA4 = _newArr2.includes(String(kq4));\n          if (!(!_resultA && !_resultA2)) {\n            _context9.next = 99;\n            break;\n          }\n          if (!(!_resultA3 && !_resultA4)) {\n            _context9.next = 97;\n            break;\n          }\n          _context9.next = 97;\n          return _connectDB[\"default\"].execute(\"UPDATE result_k3 SET status = 2 WHERE id = ? \", [id]);\n        case 97:\n          _context9.next = 100;\n          break;\n        case 99:\n          if (_resultA && !_resultA2) {\n            _resultA5 = _newArr2.includes(String(_kq4[2]));\n            if (_resultA5) {\n              check = true;\n            }\n          } else if (!_resultA && _resultA2) {\n            _resultA6 = _newArr2.includes(String(_kq4[0]));\n            if (_resultA6) {\n              check = true;\n            }\n          }\n        case 100:\n          _i5++;\n          _context9.next = 86;\n          break;\n        case 103:\n          if (check) {\n            _context9.next = 106;\n            break;\n          }\n          _context9.next = 106;\n          return _connectDB[\"default\"].execute(\"UPDATE result_k3 SET status = 2 WHERE id = ? \", [id]);\n        case 106:\n          _i3++;\n          _context9.next = 45;\n          break;\n        case 109:\n          _context9.next = 111;\n          return _connectDB[\"default\"].execute(\"SELECT id, bet FROM result_k3 WHERE status = 0 AND game = \".concat(game, \" AND typeGame = 'three-same' \"));\n        case 111:\n          _yield$connection$exe5 = _context9.sent;\n          _yield$connection$exe6 = _slicedToArray(_yield$connection$exe5, 1);\n          ThreeSame = _yield$connection$exe6[0];\n          ThreeSameL = ThreeSame.length;\n          _i6 = 0;\n        case 116:\n          if (!(_i6 < ThreeSameL)) {\n            _context9.next = 151;\n            break;\n          }\n          _sult2 = ThreeSame[_i6].bet.split('@');\n          _id = ThreeSame[_i6].id;\n          if (!(_sult2[0].length > 0 && _sult2[1].length > 0)) {\n            _context9.next = 133;\n            break;\n          }\n          _array3 = _sult2[0].split(',');\n          _kq7 = String(k5dInfo.result);\n          _check3 = false;\n          _check4 = false;\n          _resultA7 = _array3.includes(String(_kq7));\n          if (!_resultA7) {\n            _check3 = true;\n          }\n          _result3 = ['111', '222', '333', '444', '555', '666'].includes(String(_kq7));\n          if (!_result3) {\n            _check4 = true;\n          }\n          if (!(_check3 && _check4)) {\n            _context9.next = 131;\n            break;\n          }\n          _context9.next = 131;\n          return _connectDB[\"default\"].execute(\"UPDATE result_k3 SET status = 2 WHERE id = ? \", [_id]);\n        case 131:\n          _context9.next = 148;\n          break;\n        case 133:\n          if (!(_sult2[0].length > 0 && _sult2[1].length <= 0)) {\n            _context9.next = 142;\n            break;\n          }\n          _array4 = _sult2[0].split(',');\n          _kq8 = String(k5dInfo.result);\n          _result4 = _array4.includes(String(_kq8));\n          if (_result4) {\n            _context9.next = 140;\n            break;\n          }\n          _context9.next = 140;\n          return _connectDB[\"default\"].execute(\"UPDATE result_k3 SET status = 2 WHERE id = ? \", [_id]);\n        case 140:\n          _context9.next = 148;\n          break;\n        case 142:\n          if (!(_sult2[0].length <= 0 && _sult2[1].length > 0)) {\n            _context9.next = 148;\n            break;\n          }\n          _kq9 = String(k5dInfo.result);\n          _result5 = ['111', '222', '333', '444', '555', '666'].includes(String(_kq9));\n          if (_result5) {\n            _context9.next = 148;\n            break;\n          }\n          _context9.next = 148;\n          return _connectDB[\"default\"].execute(\"UPDATE result_k3 SET status = 2 WHERE id = ? \", [_id]);\n        case 148:\n          _i6++;\n          _context9.next = 116;\n          break;\n        case 151:\n          _context9.next = 153;\n          return _connectDB[\"default\"].execute(\"SELECT id, bet FROM result_k3 WHERE status = 0 AND game = \".concat(game, \" AND typeGame = 'unlike' \"));\n        case 153:\n          _yield$connection$exe7 = _context9.sent;\n          _yield$connection$exe8 = _slicedToArray(_yield$connection$exe7, 1);\n          Unlike = _yield$connection$exe8[0];\n          Unlikes = Unlike.length;\n          _i7 = 0;\n        case 158:\n          if (!(_i7 < Unlikes)) {\n            _context9.next = 261;\n            break;\n          }\n          _sult3 = Unlike[_i7].bet.split('@');\n          _id2 = Unlike[_i7].id;\n          if (!(_sult3[0].length > 1 && _sult3[1] == 'u' && _sult3[2].length > 1)) {\n            _context9.next = 179;\n            break;\n          }\n          _array5 = _sult3[0].split(',');\n          _array6 = _sult3[2].split(',');\n          _kq10 = String(k5dInfo.result).split('');\n          _check5 = false;\n          _check6 = false;\n          _check7 = false;\n          for (_i8 = 0; _i8 < _kq10.length; _i8++) {\n            _resultA8 = _array5.includes(String(_kq10[_i8]));\n            if (_resultA8) {\n              _check5 = true;\n            }\n          }\n          _kq11 = _kq10[0] + _kq10[1];\n          _kq12 = _kq10[1] + _kq10[2];\n          _kq13 = _kq10[0] + _kq10[2];\n          for (_i9 = 0; _i9 < _kq10.length; _i9++) {\n            _resultA9 = ['11', '22', '33', '44', '55', '66'].includes(String(_kq11));\n            _resultA10 = ['11', '22', '33', '44', '55', '66'].includes(String(_kq12));\n            _resultA11 = ['11', '22', '33', '44', '55', '66'].includes(String(_kq13));\n            if (_resultA9 || _resultA10 || _resultA11) {\n              _check7 = true;\n            }\n          }\n          for (_i10 = 0; _i10 < _kq10.length; _i10++) {\n            _resultA12 = _array6.includes(String(_kq10[_i10]));\n            if (_resultA12) {\n              _check6 = true;\n            }\n          }\n          if (!(_check5 && _check6 && _check7)) {\n            _context9.next = 177;\n            break;\n          }\n          _context9.next = 177;\n          return _connectDB[\"default\"].execute(\"UPDATE result_k3 SET status = 2 WHERE id = ? \", [_id2]);\n        case 177:\n          _context9.next = 258;\n          break;\n        case 179:\n          if (!(_sult3[0].length > 1 && _sult3[1] == 'y' && _sult3[2].length > 1)) {\n            _context9.next = 192;\n            break;\n          }\n          _array7 = _sult3[0].split(',');\n          _array8 = _sult3[2].split(',');\n          _kq14 = String(k5dInfo.result).split('');\n          _check8 = false;\n          _check9 = false;\n          for (_i11 = 0; _i11 < _kq14.length; _i11++) {\n            _resultA13 = _array7.includes(String(_kq14[_i11]));\n            if (_resultA13) {\n              _check8 = true;\n            }\n          }\n          for (_i12 = 0; _i12 < _kq14.length; _i12++) {\n            _resultA14 = _array8.includes(String(_kq14[_i12]));\n            if (_resultA14) {\n              _check9 = true;\n            }\n          }\n          if (!(_check8 && _check9)) {\n            _context9.next = 190;\n            break;\n          }\n          _context9.next = 190;\n          return _connectDB[\"default\"].execute(\"UPDATE result_k3 SET status = 2 WHERE id = ? \", [_id2]);\n        case 190:\n          _context9.next = 258;\n          break;\n        case 192:\n          if (!(_sult3[0].length > 1 && _sult3[1] == 'u' && _sult3[2].length <= 1)) {\n            _context9.next = 208;\n            break;\n          }\n          _array9 = _sult3[0].split(',');\n          _array10 = _sult3[2].split(',');\n          _kq15 = String(k5dInfo.result).split('');\n          _check10 = false;\n          _check11 = false;\n          for (_i13 = 0; _i13 < _kq15.length; _i13++) {\n            _resultA15 = _array9.includes(String(_kq15[_i13]));\n            if (_resultA15) {\n              _check10 = true;\n            }\n          }\n          _kq16 = _kq15[0] + _kq15[1];\n          _kq17 = _kq15[1] + _kq15[2];\n          _kq18 = _kq15[0] + _kq15[2];\n          for (_i14 = 0; _i14 < _kq15.length; _i14++) {\n            _resultA16 = ['11', '22', '33', '44', '55', '66'].includes(String(_kq16));\n            _resultA17 = ['11', '22', '33', '44', '55', '66'].includes(String(_kq17));\n            _resultA18 = ['11', '22', '33', '44', '55', '66'].includes(String(_kq18));\n            if (_resultA16 || _resultA17 || _resultA18) {\n              _check11 = true;\n            }\n          }\n          if (!(_check10 && _check11)) {\n            _context9.next = 206;\n            break;\n          }\n          _context9.next = 206;\n          return _connectDB[\"default\"].execute(\"UPDATE result_k3 SET status = 2 WHERE id = ? \", [_id2]);\n        case 206:\n          _context9.next = 258;\n          break;\n        case 208:\n          if (!(_sult3[0].length <= 1 && _sult3[1] == 'u' && _sult3[2].length > 1)) {\n            _context9.next = 224;\n            break;\n          }\n          _array11 = _sult3[0].split(',');\n          _array12 = _sult3[2].split(',');\n          _kq19 = String(k5dInfo.result).split('');\n          _check12 = false;\n          _check13 = false;\n          for (_i15 = 0; _i15 < _kq19.length; _i15++) {\n            _resultA19 = _array12.includes(String(_kq19[_i15]));\n            if (_resultA19) {\n              _check12 = true;\n            }\n          }\n          _kq20 = _kq19[0] + _kq19[1];\n          _kq21 = _kq19[1] + _kq19[2];\n          _kq22 = _kq19[0] + _kq19[2];\n          for (_i16 = 0; _i16 < _kq19.length; _i16++) {\n            _resultA20 = ['11', '22', '33', '44', '55', '66'].includes(String(_kq20));\n            _resultA21 = ['11', '22', '33', '44', '55', '66'].includes(String(_kq21));\n            _resultA22 = ['11', '22', '33', '44', '55', '66'].includes(String(_kq22));\n            if (_resultA20 || _resultA21 || _resultA22) {\n              _check13 = true;\n            }\n          }\n          if (!(_check12 && _check13)) {\n            _context9.next = 222;\n            break;\n          }\n          _context9.next = 222;\n          return _connectDB[\"default\"].execute(\"UPDATE result_k3 SET status = 2 WHERE id = ? \", [_id2]);\n        case 222:\n          _context9.next = 258;\n          break;\n        case 224:\n          if (!(_sult3[0].length > 1 && _sult3[1] == 'y' && _sult3[2].length <= 1)) {\n            _context9.next = 235;\n            break;\n          }\n          _array13 = _sult3[0].split(',');\n          _array14 = _sult3[2].split(',');\n          _kq23 = String(k5dInfo.result).split('');\n          _check14 = false;\n          for (_i17 = 0; _i17 < _kq23.length; _i17++) {\n            _resultA23 = _array13.includes(String(_kq23[_i17]));\n            if (_resultA23) {\n              _check14 = true;\n            }\n          }\n          if (!_check14) {\n            _context9.next = 233;\n            break;\n          }\n          _context9.next = 233;\n          return _connectDB[\"default\"].execute(\"UPDATE result_k3 SET status = 2 WHERE id = ? \", [_id2]);\n        case 233:\n          _context9.next = 258;\n          break;\n        case 235:\n          if (!(_sult3[0].length <= 1 && _sult3[1] == 'u' && _sult3[2].length <= 1)) {\n            _context9.next = 249;\n            break;\n          }\n          _array15 = _sult3[0].split(',');\n          _array16 = _sult3[2].split(',');\n          _kq24 = String(k5dInfo.result).split('');\n          _check15 = false;\n          _kq25 = _kq24[0] + _kq24[1];\n          _kq26 = _kq24[1] + _kq24[2];\n          _kq27 = _kq24[0] + _kq24[2];\n          for (_i18 = 0; _i18 < _kq24.length; _i18++) {\n            _resultA24 = ['11', '22', '33', '44', '55', '66'].includes(String(_kq25));\n            _resultA25 = ['11', '22', '33', '44', '55', '66'].includes(String(_kq26));\n            _resultA26 = ['11', '22', '33', '44', '55', '66'].includes(String(_kq27));\n            if (_resultA24 || _resultA25 || _resultA26) {\n              _check15 = true;\n            }\n          }\n          if (!_check15) {\n            _context9.next = 247;\n            break;\n          }\n          _context9.next = 247;\n          return _connectDB[\"default\"].execute(\"UPDATE result_k3 SET status = 2 WHERE id = ? \", [_id2]);\n        case 247:\n          _context9.next = 258;\n          break;\n        case 249:\n          if (!(_sult3[0].length <= 1 && _sult3[1] == 'y' && _sult3[2].length > 1)) {\n            _context9.next = 258;\n            break;\n          }\n          _array17 = _sult3[0].split(',');\n          _array18 = _sult3[2].split(',');\n          _kq28 = String(k5dInfo.result).split('');\n          _check16 = false;\n          for (_i19 = 0; _i19 < _kq28.length; _i19++) {\n            _resultA27 = _array18.includes(String(_kq28[_i19]));\n            if (_resultA27) {\n              _check16 = true;\n            }\n          }\n          if (!_check16) {\n            _context9.next = 258;\n            break;\n          }\n          _context9.next = 258;\n          return _connectDB[\"default\"].execute(\"UPDATE result_k3 SET status = 2 WHERE id = ? \", [_id2]);\n        case 258:\n          _i7++;\n          _context9.next = 158;\n          break;\n        case 261:\n        case \"end\":\n          return _context9.stop();\n      }\n    }, _callee9);\n  }));\n  return _funHanding.apply(this, arguments);\n}\nvar priceGet = {\n  total: {\n    't3': 207.36,\n    't4': 69.12,\n    't5': 34.56,\n    't6': 20.74,\n    't7': 13.83,\n    't8': 9.88,\n    't9': 8.3,\n    't10': 7.68,\n    't11': 7.68,\n    't12': 8.3,\n    't13': 9.88,\n    't14': 13.83,\n    't15': 20.74,\n    't16': 34.56,\n    't17': 69.12,\n    't18': 207.36,\n    'b': 1.92,\n    's': 1.92,\n    'l': 1.92,\n    'c': 1.92\n  },\n  two: {\n    twoSame: 13.83,\n    twoD: 69.12\n  },\n  three: {\n    threeD: 207.36,\n    threeSame: 34.56\n  },\n  unlike: {\n    unlikeThree: 34.56,\n    threeL: 8.64,\n    unlikeTwo: 6.91\n  }\n};\nfunction plusMoney(_x14) {\n  return _plusMoney.apply(this, arguments);\n}\nfunction _plusMoney() {\n  _plusMoney = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(game) {\n    var _yield$connection$exe9, _yield$connection$exe10, order, _loop, i;\n    return _regeneratorRuntime().wrap(function _callee10$(_context11) {\n      while (1) switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return _connectDB[\"default\"].execute(\"SELECT id, phone, bet, price, money, fee, amount, result, typeGame FROM result_k3 WHERE status = 0 AND game = \".concat(game, \" \"));\n        case 2:\n          _yield$connection$exe9 = _context11.sent;\n          _yield$connection$exe10 = _slicedToArray(_yield$connection$exe9, 1);\n          order = _yield$connection$exe10[0];\n          _loop = /*#__PURE__*/_regeneratorRuntime().mark(function _loop() {\n            var orders, phone, id, nhan_duoc, result, arr, totalResult, totalResult2, _i20, total, fee, price, lengWin, lengWin2, get, sql, kq, kq1, kq2, array, arr1, arr2, arr3, _i21, check1, check2, lengthArr, count, _arr4, _i22, _total, _i23, files, _check17, _check18, _lengthArr, _count, _arr5, _i24, bale, _i25, _total2, _sql, _kq29, _array19, _arr6, _arr7, _i26, _check19, bala, _total3, _bala, _i27, _total4, _sql2, _kq30, _array20, _arr8, _arr9, _arr10, _i28, _check20, _bala2, bala2, _i29, _total5, _total6, _bala3, _bala4, _i30, _i31, _total7, _i32, _check21, _bala5, _i33, _total8, _sql3;\n            return _regeneratorRuntime().wrap(function _loop$(_context10) {\n              while (1) switch (_context10.prev = _context10.next) {\n                case 0:\n                  orders = order[i];\n                  phone = orders.phone;\n                  id = orders.id;\n                  nhan_duoc = 0;\n                  result = orders.result;\n                  if (!(orders.typeGame == \"total\")) {\n                    _context10.next = 61;\n                    break;\n                  }\n                  arr = orders.bet.split(',');\n                  totalResult = orders.result.split('');\n                  totalResult2 = 0;\n                  for (_i20 = 0; _i20 < 3; _i20++) {\n                    totalResult2 += Number(totalResult[_i20]);\n                  }\n                  total = orders.money / arr.length / orders.amount;\n                  fee = total * 0.02;\n                  price = total - fee;\n                  lengWin = arr.filter(function (age) {\n                    return age == totalResult2;\n                  });\n                  lengWin2 = arr.filter(function (age) {\n                    return !isNumber(age);\n                  });\n                  if (totalResult2 % 2 == 0 && lengWin2.includes('c')) {\n                    nhan_duoc += price * 1.92;\n                  }\n                  if (totalResult2 % 2 != 0 && lengWin2.includes('l')) {\n                    nhan_duoc += price * 1.92;\n                  }\n                  if (totalResult2 >= 11 && totalResult2 <= 18 && lengWin2.includes('b')) {\n                    nhan_duoc += price * 1.92;\n                  }\n                  if (totalResult2 >= 3 && totalResult2 <= 11 && lengWin2.includes('s')) {\n                    nhan_duoc += price * 1.92;\n                  }\n                  get = 0;\n                  _context10.t0 = lengWin[0];\n                  _context10.next = _context10.t0 === '3' ? 23 : _context10.t0 === '3' ? 25 : _context10.t0 === '5' ? 27 : _context10.t0 === '6' ? 29 : _context10.t0 === '7' ? 31 : _context10.t0 === '8' ? 33 : _context10.t0 === '9' ? 35 : _context10.t0 === '10' ? 37 : _context10.t0 === '11' ? 39 : _context10.t0 === '12' ? 41 : _context10.t0 === '13' ? 43 : _context10.t0 === '14' ? 45 : _context10.t0 === '15' ? 47 : _context10.t0 === '16' ? 49 : _context10.t0 === '17' ? 51 : _context10.t0 === '18' ? 53 : 55;\n                  break;\n                case 23:\n                  get = 207.36;\n                  return _context10.abrupt(\"break\", 55);\n                case 25:\n                  get = 69.12;\n                  return _context10.abrupt(\"break\", 55);\n                case 27:\n                  get = 34.56;\n                  return _context10.abrupt(\"break\", 55);\n                case 29:\n                  get = 20.74;\n                  return _context10.abrupt(\"break\", 55);\n                case 31:\n                  get = 13.83;\n                  return _context10.abrupt(\"break\", 55);\n                case 33:\n                  get = 9.88;\n                  return _context10.abrupt(\"break\", 55);\n                case 35:\n                  get = 8.3;\n                  return _context10.abrupt(\"break\", 55);\n                case 37:\n                  get = 7.68;\n                  return _context10.abrupt(\"break\", 55);\n                case 39:\n                  get = 7.68;\n                  return _context10.abrupt(\"break\", 55);\n                case 41:\n                  get = 8.3;\n                  return _context10.abrupt(\"break\", 55);\n                case 43:\n                  get = 9.88;\n                  return _context10.abrupt(\"break\", 55);\n                case 45:\n                  get = 13.83;\n                  return _context10.abrupt(\"break\", 55);\n                case 47:\n                  get = 20.74;\n                  return _context10.abrupt(\"break\", 55);\n                case 49:\n                  get = 34.56;\n                  return _context10.abrupt(\"break\", 55);\n                case 51:\n                  get = 69.12;\n                  return _context10.abrupt(\"break\", 55);\n                case 53:\n                  get = 207.36;\n                  return _context10.abrupt(\"break\", 55);\n                case 55:\n                  nhan_duoc += price * get;\n                  _context10.next = 58;\n                  return _connectDB[\"default\"].execute('UPDATE `result_k3` SET `get` = ?, `status` = 1 WHERE `id` = ? ', [nhan_duoc, id]);\n                case 58:\n                  sql = 'UPDATE `users` SET `money` = `money` + ? WHERE `phone` = ? ';\n                  _context10.next = 61;\n                  return _connectDB[\"default\"].execute(sql, [nhan_duoc, phone]);\n                case 61:\n                  nhan_duoc = 0;\n                  if (!(orders.typeGame == \"two-same\")) {\n                    _context10.next = 79;\n                    break;\n                  }\n                  kq = result.split('');\n                  kq1 = kq[0] + kq[1];\n                  kq2 = kq[1] + kq[2];\n                  array = orders.bet.split('@');\n                  arr1 = array[0].split(',');\n                  arr2 = array[1];\n                  arr3 = array[1].split('&');\n                  for (_i21 = 0; _i21 < arr1.length; _i21++) {\n                    if (arr1[_i21] != \"\") {\n                      check1 = arr1[_i21].includes(kq1);\n                      check2 = arr1[_i21].includes(kq2);\n                      if (check1 || check2) {\n                        lengthArr = 0;\n                        count = 0;\n                        if (arr2.length > 0) {\n                          _arr4 = arr2.split('&');\n                          for (_i22 = 0; _i22 < _arr4.length; _i22++) {\n                            arr2 = _arr4[_i22].split('|');\n                            count = arr2[1].split(',').length;\n                          }\n                          lengthArr = _arr4.length;\n                          count = count;\n                        }\n                        _total = orders.money / orders.amount / (lengthArr + arr1.length);\n                        nhan_duoc += _total * 12.83;\n                      }\n                    }\n                  }\n                  arr2 = array[1];\n                  for (_i23 = 0; _i23 < arr3.length; _i23++) {\n                    if (arr3[_i23] != \"\") {\n                      files = arr3[_i23].split('|');\n                      _check17 = files[0].includes(kq1);\n                      _check18 = files[0].includes(kq2);\n                      if (_check17 || _check18) {\n                        _lengthArr = 0;\n                        _count = 0;\n                        if (arr2.length > 0) {\n                          _arr5 = arr2.split('&');\n                          for (_i24 = 0; _i24 < _arr5.length; _i24++) {\n                            arr2 = _arr5[_i24].split('|');\n                            _count = arr2[1].split(',').length;\n                          }\n                          _lengthArr = _arr5.length;\n                          _count = _count;\n                        }\n                        bale = 0;\n                        for (_i25 = 0; _i25 < arr1.length; _i25++) {\n                          if (arr1[_i25] != \"\") {\n                            bale = arr1.length;\n                          }\n                        }\n                        _total2 = orders.money / orders.amount / (_lengthArr + bale);\n                        nhan_duoc += _total2 * 69.12;\n                      }\n                    }\n                  }\n                  nhan_duoc -= orders.fee;\n                  _context10.next = 76;\n                  return _connectDB[\"default\"].execute('UPDATE `result_k3` SET `get` = ?, `status` = 1 WHERE `id` = ? ', [nhan_duoc, id]);\n                case 76:\n                  _sql = 'UPDATE `users` SET `money` = `money` + ? WHERE `phone` = ? ';\n                  _context10.next = 79;\n                  return _connectDB[\"default\"].execute(_sql, [nhan_duoc, phone]);\n                case 79:\n                  nhan_duoc = 0;\n                  if (!(orders.typeGame == \"three-same\")) {\n                    _context10.next = 92;\n                    break;\n                  }\n                  _kq29 = result;\n                  _array19 = orders.bet.split('@');\n                  _arr6 = _array19[0].split(',');\n                  _arr7 = _array19[1];\n                  for (_i26 = 0; _i26 < _arr6.length; _i26++) {\n                    if (_arr6[_i26] != \"\") {\n                      _check19 = _arr6[_i26].includes(_kq29);\n                      bala = 0;\n                      if (_arr7 != \"\") {\n                        bala = 1;\n                      }\n                      if (_check19) {\n                        _total3 = orders.money / (_arr6.length + bala) / orders.amount;\n                        nhan_duoc += _total3 * 207.36 - orders.fee;\n                      }\n                    }\n                  }\n                  if (_arr7 != \"\") {\n                    _bala = 0;\n                    for (_i27 = 0; _i27 < _arr6.length; _i27++) {\n                      if (_arr6[_i27] != \"\") {\n                        _bala = _arr6.length;\n                      }\n                    }\n                    _total4 = orders.money / (1 + _bala) / orders.amount;\n                    nhan_duoc += _total4 * 34.56 - orders.fee;\n                  }\n                  _context10.next = 89;\n                  return _connectDB[\"default\"].execute('UPDATE `result_k3` SET `get` = ?, `status` = 1 WHERE `id` = ? ', [nhan_duoc, id]);\n                case 89:\n                  _sql2 = 'UPDATE `users` SET `money` = `money` + ? WHERE `phone` = ? ';\n                  _context10.next = 92;\n                  return _connectDB[\"default\"].execute(_sql2, [nhan_duoc, phone]);\n                case 92:\n                  nhan_duoc = 0;\n                  if (!(orders.typeGame == \"unlike\")) {\n                    _context10.next = 107;\n                    break;\n                  }\n                  _kq30 = result.split('');\n                  _array20 = orders.bet.split('@');\n                  _arr8 = _array20[0].split(',');\n                  _arr9 = _array20[1];\n                  _arr10 = _array20[2].split(',');\n                  for (_i28 = 0; _i28 < _arr8.length; _i28++) {\n                    if (_arr8[_i28] != \"\") {\n                      _check20 = _kq30.includes(_arr8[_i28]);\n                      _bala2 = 0;\n                      bala2 = 0;\n                      for (_i29 = 0; _i29 < _arr10.length; _i29++) {\n                        if (_arr10[_i29].length != \"\") {\n                          _bala2 = _arr10.length;\n                        }\n                      }\n                      if (_arr9 == \"u\") {\n                        bala2 = 1;\n                      }\n                      if (!_check20) {\n                        _total5 = orders.money / (_arr8.length + _bala2 + bala2) / orders.amount;\n                        nhan_duoc += _total5 * 34.56 - orders.fee;\n                        if (_arr9 == \"u\") {\n                          _total6 = orders.money / (1 + _bala2 + bala2) / orders.amount;\n                          nhan_duoc += (_total6 - orders.fee) * 8.64;\n                        }\n                      }\n                    }\n                  }\n                  if (_arr9 == \"u\") {\n                    _bala3 = 0;\n                    _bala4 = 0;\n                    for (_i30 = 0; _i30 < _arr8.length; _i30++) {\n                      if (_arr8[_i30] != \"\") {\n                        _bala3 = _arr8.length;\n                      }\n                    }\n                    for (_i31 = 0; _i31 < _arr10.length; _i31++) {\n                      if (_arr10[_i31].length != \"\") {\n                        _bala4 = _arr10.length;\n                      }\n                    }\n                    _total7 = orders.money / (1 + _bala3 + _bala4) / orders.amount;\n                    nhan_duoc += (_total7 - orders.fee) * 8.64;\n                  }\n                  for (_i32 = 0; _i32 < _arr10.length; _i32++) {\n                    if (_arr8[_i32] != \"\") {\n                      _check21 = _kq30.includes(_arr10[_i32]);\n                      _bala5 = 0;\n                      for (_i33 = 0; _i33 < _arr8.length; _i33++) {\n                        if (_arr8[_i33].length != \"\") {\n                          _bala5 = _arr8.length;\n                        }\n                      }\n                      if (!_check21) {\n                        _total8 = orders.money / (_arr10.length + _bala5) / orders.amount;\n                        nhan_duoc += _total8 * 6.91 - orders.fee;\n                      }\n                    }\n                  }\n                  _context10.next = 104;\n                  return _connectDB[\"default\"].execute('UPDATE `result_k3` SET `get` = ?, `status` = 1 WHERE `id` = ? ', [nhan_duoc, id]);\n                case 104:\n                  _sql3 = 'UPDATE `users` SET `money` = `money` + ? WHERE `phone` = ? ';\n                  _context10.next = 107;\n                  return _connectDB[\"default\"].execute(_sql3, [nhan_duoc, phone]);\n                case 107:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }, _loop);\n          });\n          i = 0;\n        case 7:\n          if (!(i < order.length)) {\n            _context11.next = 12;\n            break;\n          }\n          return _context11.delegateYield(_loop(), \"t0\", 9);\n        case 9:\n          i++;\n          _context11.next = 7;\n          break;\n        case 12:\n        case \"end\":\n          return _context11.stop();\n      }\n    }, _callee10);\n  }));\n  return _plusMoney.apply(this, arguments);\n}\nvar handlingK3 = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(typeid) {\n    var game;\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          game = Number(typeid);\n          _context6.next = 3;\n          return funHanding(game);\n        case 3:\n          _context6.next = 5;\n          return plusMoney(game);\n        case 5:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6);\n  }));\n  return function handlingK3(_x15) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nvar listOrderOld = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(req, res) {\n    var _req$body2, gameJoin, pageno, pageto, auth, checkGame, _yield$connection$que25, _yield$connection$que26, user, game, _yield$connection$que27, _yield$connection$que28, k5d, _yield$connection$que29, _yield$connection$que30, k5dAll, _yield$connection$que31, _yield$connection$que32, period, page;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          _req$body2 = req.body, gameJoin = _req$body2.gameJoin, pageno = _req$body2.pageno, pageto = _req$body2.pageto;\n          auth = req.cookies.auth;\n          checkGame = ['1', '3', '5', '10'].includes(String(gameJoin));\n          if (!(!checkGame || pageno < 0 || pageto < 0)) {\n            _context7.next = 5;\n            break;\n          }\n          return _context7.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"Không còn dữ liệu\",\n            data: {\n              gameslist: []\n            },\n            status: false\n          }));\n        case 5:\n          _context7.next = 7;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`, `invite`, `level`, `money` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n        case 7:\n          _yield$connection$que25 = _context7.sent;\n          _yield$connection$que26 = _slicedToArray(_yield$connection$que25, 1);\n          user = _yield$connection$que26[0];\n          game = Number(gameJoin);\n          _context7.next = 13;\n          return _connectDB[\"default\"].query(\"SELECT * FROM k3 WHERE status != 0 AND game = '\".concat(game, \"' ORDER BY id DESC LIMIT \").concat(pageno, \", \").concat(pageto, \" \"));\n        case 13:\n          _yield$connection$que27 = _context7.sent;\n          _yield$connection$que28 = _slicedToArray(_yield$connection$que27, 1);\n          k5d = _yield$connection$que28[0];\n          _context7.next = 18;\n          return _connectDB[\"default\"].query(\"SELECT * FROM k3 WHERE status != 0 AND game = '\".concat(game, \"' \"));\n        case 18:\n          _yield$connection$que29 = _context7.sent;\n          _yield$connection$que30 = _slicedToArray(_yield$connection$que29, 1);\n          k5dAll = _yield$connection$que30[0];\n          _context7.next = 23;\n          return _connectDB[\"default\"].query(\"SELECT period FROM k3 WHERE status = 0 AND game = '\".concat(game, \"' ORDER BY id DESC LIMIT 1 \"));\n        case 23:\n          _yield$connection$que31 = _context7.sent;\n          _yield$connection$que32 = _slicedToArray(_yield$connection$que31, 1);\n          period = _yield$connection$que32[0];\n          if (!(k5d.length == 0)) {\n            _context7.next = 28;\n            break;\n          }\n          return _context7.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            page: 1,\n            status: false\n          }));\n        case 28:\n          if (!(!pageno || !pageto || !user[0] || !k5d[0] || !period[0])) {\n            _context7.next = 30;\n            break;\n          }\n          return _context7.abrupt(\"return\", res.status(200).json({\n            message: 'Error!',\n            status: false\n          }));\n        case 30:\n          page = Math.ceil(k5dAll.length / 10);\n          return _context7.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"Get success\",\n            data: {\n              gameslist: k5d\n            },\n            period: period[0].period,\n            page: page,\n            status: true\n          }));\n        case 32:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7);\n  }));\n  return function listOrderOld(_x16, _x17) {\n    return _ref7.apply(this, arguments);\n  };\n}();\nvar GetMyEmerdList = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(req, res) {\n    var _req$body3, gameJoin, pageno, pageto, auth, checkGame, game, _yield$connection$que33, _yield$connection$que34, user, _yield$connection$que35, _yield$connection$que36, result_5d, _yield$connection$que37, _yield$connection$que38, result_5dAll, page, datas;\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          _req$body3 = req.body, gameJoin = _req$body3.gameJoin, pageno = _req$body3.pageno, pageto = _req$body3.pageto;\n          auth = req.cookies.auth;\n          checkGame = ['1', '3', '5', '10'].includes(String(gameJoin));\n          if (!(!checkGame || pageno < 0 || pageto < 0)) {\n            _context8.next = 5;\n            break;\n          }\n          return _context8.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            status: false\n          }));\n        case 5:\n          game = Number(gameJoin);\n          _context8.next = 8;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`, `invite`, `level`, `money` FROM users WHERE token = ? AND veri = 1 LIMIT 1 ', [auth]);\n        case 8:\n          _yield$connection$que33 = _context8.sent;\n          _yield$connection$que34 = _slicedToArray(_yield$connection$que33, 1);\n          user = _yield$connection$que34[0];\n          _context8.next = 13;\n          return _connectDB[\"default\"].query(\"SELECT * FROM result_k3 WHERE phone = ? AND game = '\".concat(game, \"' ORDER BY id DESC LIMIT \").concat(Number(pageno) + ',' + Number(pageto)), [user[0].phone]);\n        case 13:\n          _yield$connection$que35 = _context8.sent;\n          _yield$connection$que36 = _slicedToArray(_yield$connection$que35, 1);\n          result_5d = _yield$connection$que36[0];\n          _context8.next = 18;\n          return _connectDB[\"default\"].query(\"SELECT * FROM result_k3 WHERE phone = ? AND game = '\".concat(game, \"' ORDER BY id DESC \"), [user[0].phone]);\n        case 18:\n          _yield$connection$que37 = _context8.sent;\n          _yield$connection$que38 = _slicedToArray(_yield$connection$que37, 1);\n          result_5dAll = _yield$connection$que38[0];\n          if (result_5d[0]) {\n            _context8.next = 23;\n            break;\n          }\n          return _context8.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n              gameslist: []\n            },\n            page: 1,\n            status: false\n          }));\n        case 23:\n          if (!(!pageno || !pageto || !user[0] || !result_5d[0])) {\n            _context8.next = 25;\n            break;\n          }\n          return _context8.abrupt(\"return\", res.status(200).json({\n            message: 'Error!',\n            status: true\n          }));\n        case 25:\n          page = Math.ceil(result_5dAll.length / 10);\n          datas = result_5d.map(function (data) {\n            var id = data.id,\n              phone = data.phone,\n              code = data.code,\n              invite = data.invite,\n              level = data.level,\n              game = data.game,\n              others = _objectWithoutProperties(data, _excluded);\n            return others;\n          });\n          return _context8.abrupt(\"return\", res.status(200).json({\n            code: 0,\n            msg: \"Get success\",\n            data: {\n              gameslist: datas\n            },\n            page: page,\n            status: true\n          }));\n        case 28:\n        case \"end\":\n          return _context8.stop();\n      }\n    }, _callee8);\n  }));\n  return function GetMyEmerdList(_x18, _x19) {\n    return _ref8.apply(this, arguments);\n  };\n}();\nmodule.exports = {\n  K3Page: K3Page,\n  betK3: betK3,\n  addK3: addK3,\n  handlingK3: handlingK3,\n  listOrderOld: listOrderOld,\n  GetMyEmerdList: GetMyEmerdList\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_connectDB","_interopRequireDefault","require","_excluded","obj","__esModule","_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","key","i","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","sourceKeys","keys","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","Array","from","test","len","arr2","r","l","t","Symbol","iterator","e","u","a","f","next","done","push","value","isArray","_regeneratorRuntime","hasOwnProperty","defineProperty","c","asyncIterator","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","async","Promise","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","config","K3Page","_ref","_callee","req","res","_callee$","_context","render","_x","_x2","isNumber","params","pattern","formateT","result","timerJoin","addHours","date","Date","Number","setHours","getHours","years","getFullYear","months","getMonth","days","getDate","hours","ampm","minutes","getMinutes","seconds","getSeconds","rosesPlus","_ref2","_callee2","auth","money","_yield$connection$que","_yield$connection$que2","level","level0","_yield$connection$que3","_yield$connection$que4","user","userInfo","_yield$connection$que5","_yield$connection$que6","f1","infoF1","rosesF1","_yield$connection$que7","_yield$connection$que8","f2","infoF2","rosesF2","_yield$connection$que9","_yield$connection$que10","f3","infoF3","rosesF3","_yield$connection$que11","_yield$connection$que12","f4","infoF4","rosesF4","_callee2$","_context2","connection","query","invite","phone","_x3","_x4","validateBet","_ref3","_callee3","join","list_join","x","game","checkJoin","checkX","checks","checkGame","checkMoney","joinNum","_arr","_length","_i","joinStr","_callee3$","_context3","includes","String","split","_x5","_x6","_x7","_x8","_x9","betK3","_ref4","_callee4","_req$body","listJoin","gameJoin","xvalue","_yield$connection$que13","_yield$connection$que14","k3Now","_yield$connection$que15","_yield$connection$que16","period","id_product","total","twoSame","motDuyNhat","lengthArr","count","baDuyNhat","countBaDuyNhat","threeSame","threeNumberUnlike","twoLienTiep","twoNumberUnlike","threeUn","_arr2","twoUn","_arr3","UnlienTiep","fee","price","typeGame","check","timeNow","sql","_yield$connection$que17","_yield$connection$que18","users","_yield$connection$que19","_yield$connection$que20","sql2","total_m","_callee4$","_context4","body","cookies","concat","status","json","message","Math","floor","random","now","execute","code","change","t0","_x10","_x11","makeid","characters","charactersLength","addK3","_ref5","_callee5","result2","_yield$connection$que21","_yield$connection$que22","k5D","_yield$connection$que23","_yield$connection$que24","setting","nextResult","newArr","_callee5$","_context5","k3d","k3d3","k3d5","k3d10","_x12","funHanding","_x13","_funHanding","_callee9","_yield$connection$que39","_yield$connection$que40","k5d","k5dInfo","_yield$connection$exe","_yield$connection$exe2","totalNumber","totalN","_i2","sult","lengWin","check1","check2","check3","check4","_yield$connection$exe3","_yield$connection$exe4","totaltwoSame","totalTwoSame","_i3","_sult","id","array","kq","kq1","kq2","_check","_check2","array2","_i4","newArr2","resultA1","resultA2","resultA4","resultA3","result1","_array","_kq","_kq2","_kq3","_result","_result2","_kq4","_kq5","_kq6","kq3","kq4","_array2","_i5","_newArr","_newArr2","_resultA","_resultA2","_resultA3","_resultA4","_resultA5","_resultA6","_yield$connection$exe5","_yield$connection$exe6","ThreeSame","ThreeSameL","_i6","_sult2","_id","_array3","_kq7","_check3","_check4","_resultA7","_result3","_array4","_kq8","_result4","_kq9","_result5","_yield$connection$exe7","_yield$connection$exe8","Unlike","Unlikes","_i7","_sult3","_id2","_array5","_array6","_kq10","_check5","_check6","_check7","_i8","_resultA8","_kq11","_kq12","_kq13","_i9","_resultA9","_resultA10","_resultA11","_i10","_resultA12","_array7","_array8","_kq14","_check8","_check9","_i11","_resultA13","_i12","_resultA14","_array9","_array10","_kq15","_check10","_check11","_i13","_resultA15","_kq16","_kq17","_kq18","_i14","_resultA16","_resultA17","_resultA18","_array11","_array12","_kq19","_check12","_check13","_i15","_resultA19","_kq20","_kq21","_kq22","_i16","_resultA20","_resultA21","_resultA22","_array13","_array14","_kq23","_check14","_i17","_resultA23","_array15","_array16","_kq24","_check15","_kq25","_kq26","_kq27","_i18","_resultA24","_resultA25","_resultA26","_array17","_array18","_kq28","_check16","_i19","_resultA27","_callee9$","_context9","bet","filter","age","priceGet","two","twoD","three","threeD","unlike","unlikeThree","threeL","unlikeTwo","plusMoney","_x14","_plusMoney","_callee10","_yield$connection$exe9","_yield$connection$exe10","order","_loop","_callee10$","_context11","orders","nhan_duoc","totalResult","totalResult2","_i20","lengWin2","get","arr1","arr3","_i21","_arr4","_i22","_total","_i23","files","_check17","_check18","_lengthArr","_count","_arr5","_i24","bale","_i25","_total2","_sql","_kq29","_array19","_arr6","_arr7","_i26","_check19","bala","_total3","_bala","_i27","_total4","_sql2","_kq30","_array20","_arr8","_arr9","_arr10","_i28","_check20","_bala2","bala2","_i29","_total5","_total6","_bala3","_bala4","_i30","_i31","_total7","_i32","_check21","_bala5","_i33","_total8","_sql3","_loop$","_context10","amount","handlingK3","_ref6","_callee6","typeid","_callee6$","_context6","_x15","listOrderOld","_ref7","_callee7","_req$body2","pageno","pageto","_yield$connection$que25","_yield$connection$que26","_yield$connection$que27","_yield$connection$que28","_yield$connection$que29","_yield$connection$que30","k5dAll","_yield$connection$que31","_yield$connection$que32","page","_callee7$","_context7","msg","data","gameslist","ceil","_x16","_x17","GetMyEmerdList","_ref8","_callee8","_req$body3","_yield$connection$que33","_yield$connection$que34","_yield$connection$que35","_yield$connection$que36","result_5d","_yield$connection$que37","_yield$connection$que38","result_5dAll","datas","_callee8$","_context8","map","others","_x18","_x19","module","exports"],"sourceRoot":"/www/wwwroot/21india/src/controllers/","sources":["k3Controller.js"],"sourcesContent":["import connection from \"../config/connectDB\";\nrequire('dotenv').config();\n\nconst K3Page = async (req, res) => {\n    return res.render(\"bet/k3/k3.ejs\");\n}\n\nconst isNumber = (params) => {\n    let pattern = /^[0-9]*\\d$/;\n    return pattern.test(params);\n}\n\nfunction formateT(params) {\n    let result = (params < 10) ? \"0\" + params : params;\n    return result;\n}\n\nfunction timerJoin(params = '', addHours = 0) {\n    let date = '';\n        if (params) {\n            date = new Date(Number(params));\n        } else {\n            date = new Date();\n        }\n    \n        date.setHours(date.getHours() + addHours);\n    \n        let years = formateT(date.getFullYear());\n        let months = formateT(date.getMonth() + 1);\n        let days = formateT(date.getDate());\n    \n        let hours = date.getHours() % 12;\n        hours = hours === 0 ? 12 : hours;\n        let ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n    \n        let minutes = formateT(date.getMinutes());\n        let seconds = formateT(date.getSeconds());\n    \n        return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;\n    }\n\nconst rosesPlus = async (auth, money) => {\n    const [level] = await connection.query('SELECT * FROM level ');\n    let level0 = level[0];\n\n    const [user] = await connection.query('SELECT `phone`, `code`, `invite` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n    let userInfo = user[0];\n    const [f1] = await connection.query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [userInfo.invite]);\n    if (money >= 10000) {\n        if (f1.length > 0) {\n            let infoF1 = f1[0];\n            let rosesF1 = (money / 100) * level0.f1;\n            await connection.query('UPDATE users SET money = money + ?, roses_f1 = roses_f1 + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF1, rosesF1, rosesF1, rosesF1, infoF1.phone]);\n            const [f2] = await connection.query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [infoF1.invite]);\n            if (f2.length > 0) {\n                let infoF2 = f2[0];\n                let rosesF2 = (money / 100) * level0.f2;\n                await connection.query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF2, rosesF2, rosesF2, infoF2.phone]);\n                const [f3] = await connection.query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [infoF2.invite]);\n                if (f3.length > 0) {\n                    let infoF3 = f3[0];\n                    let rosesF3 = (money / 100) * level0.f3;\n                    await connection.query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF3, rosesF3, rosesF3, infoF3.phone]);\n                    const [f4] = await connection.query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [infoF3.invite]);\n                    if (f4.length > 0) {\n                        let infoF4 = f4[0];\n                        let rosesF4 = (money / 100) * level0.f4;\n                        await connection.query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF4, rosesF4, rosesF4, infoF4.phone]);\n                    }\n                }\n            }\n\n        }\n    }\n}\n\nconst validateBet = async (join, list_join, x, money, game) => {\n    let checkJoin = isNumber(list_join);\n    let checkX = isNumber(x);\n    const checks = ['a', 'b', 'c', 'd', 'e', 'total'].includes(join);\n    const checkGame = ['1', '3', '5', '10'].includes(String(game));\n    const checkMoney = ['1000', '10000', '100000', '1000000'].includes(money);\n\n    if (!checks || list_join.length > 10 || !checkX || !checkMoney || !checkGame) {\n        return false;\n    }\n\n    if (checkJoin) {\n        let arr = list_join.split('');\n        let length = arr.length;\n        for (let i = 0; i < length; i++) {\n            const joinNum = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'].includes(arr[i]);\n            if (!joinNum) {\n                return false;\n            }\n        }\n    } else {\n        let arr = list_join.split('');\n        let length = arr.length;\n        for (let i = 0; i < length; i++) {\n            const joinStr = [\"c\", \"l\", \"b\", \"s\"].includes(arr[i]);\n            if (!joinStr) {\n                return false;\n            }\n        }\n\n    }\n\n    return true;\n}\n\nconst betK3 = async (req, res) => {\n    try {\n        let { listJoin, game, gameJoin, xvalue, money } = req.body;\n        let auth = req.cookies.auth;\n\n        // let validate = await validateBet(join, list_join, x, money, game);\n\n        // if (!validate) {\n        //     return res.status(200).json({\n        //         message: 'Đặt cược không hợp lệ',\n        //         status: false\n        //     });\n        // }\n\n        const [k3Now] = await connection.query(`SELECT period FROM k3 WHERE status = 0 AND game = ${game} ORDER BY id DESC LIMIT 1 `);\n        const [user] = await connection.query('SELECT `phone`, `code`, `invite`, `level`, `money` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n        if (k3Now.length < 1 || user.length < 1) {\n            return res.status(200).json({\n                message: 'Error!',\n                status: false\n            });\n        }\n        let userInfo = user[0];\n        let period = k3Now[0];\n\n        let date = new Date();\n        let years = formateT(date.getFullYear());\n        let months = formateT(date.getMonth() + 1);\n        let days = formateT(date.getDate());\n        let id_product = years + months + days + Math.floor(Math.random() * 1000000000000000);\n\n        let total = 0;\n        if (gameJoin == 1) {\n            total = money * xvalue * (String(listJoin).split(',').length);\n        } else if (gameJoin == 2) {\n            let twoSame = listJoin.split('@')[0]; // Chọn 2 số phù hợp\n            let motDuyNhat = listJoin.split('@')[1]; // Chọn một cặp số duy nhất\n            if (twoSame.length > 0) {\n                twoSame = twoSame.split(',').length;\n            }\n            let lengthArr = 0;\n            let count = 0;\n            if (motDuyNhat.length > 0) {\n                let arr = motDuyNhat.split('&');\n                for (let i = 0; i < arr.length; i++) {\n                    motDuyNhat = arr[i].split('|');\n                    count = motDuyNhat[1].split(',').length;\n                }\n                lengthArr = arr.length;\n                count = count;\n            }\n            total = money * xvalue * (lengthArr * count) + (twoSame * money * xvalue);\n        } else if (gameJoin == 3) {\n            let baDuyNhat = listJoin.split('@')[0]; // Chọn 3 số duy nhất\n            let countBaDuyNhat = 0;\n            if (baDuyNhat.length > 0) {\n                countBaDuyNhat = baDuyNhat.split(',').length;\n            }\n            let threeSame = listJoin.split('@')[1].length; // Chọn 3 số giống nhau\n            total = money * xvalue * countBaDuyNhat + (threeSame * money * xvalue);\n        } else if (gameJoin == 4) {\n            let threeNumberUnlike = listJoin.split('@')[0]; // Chọn 3 số duy nhất\n            let twoLienTiep = listJoin.split('@')[1]; // Chọn 3 số liên tiếp\n            let twoNumberUnlike = listJoin.split('@')[2]; // Chọn 3 số duy nhất\n\n            let threeUn = 0;\n            if (threeNumberUnlike.length > 0) {\n                let arr = threeNumberUnlike.split(',').length;\n                if (arr <= 4) {\n                    threeUn += xvalue * (money * arr);\n                }\n                if (arr == 5) {\n                    threeUn += xvalue * (money * arr) * 2;\n                }\n                if (arr == 6) {\n                    threeUn += xvalue * (money * 5) * 4;\n                }\n            }\n            let twoUn = 0;\n            if (twoNumberUnlike.length > 0) {\n                let arr = twoNumberUnlike.split(',').length;\n                if (arr <= 3) {\n                    twoUn += xvalue * (money * arr);\n                }\n                if (arr == 4) {\n                    twoUn += xvalue * (money * arr) * 1.5;\n                }\n                if (arr == 5) {\n                    twoUn += xvalue * (money * arr) * 2;\n                }\n                if (arr == 6) {\n                    twoUn += xvalue * (money * arr * 2.5);\n                }\n            }\n            let UnlienTiep = 0;\n            if (twoLienTiep == 'u') {\n                UnlienTiep += xvalue * money;\n            }\n            total = threeUn + twoUn + UnlienTiep;\n        }\n        let fee = total * 0.02;\n        let price = total - fee;\n\n        let typeGame = '';\n        if (gameJoin == 1) typeGame = 'total';\n        if (gameJoin == 2) typeGame = 'two-same';\n        if (gameJoin == 3) typeGame = 'three-same';\n        if (gameJoin == 4) typeGame = 'unlike';\n\n\n        let check = userInfo.money - total;\n        if (check >= 0) {\n            let timeNow = Date.now();\n            const sql = `INSERT INTO result_k3 SET id_product = ?,phone = ?,code = ?,invite = ?,stage = ?,level = ?,money = ?,price = ?,amount = ?,fee = ?,game = ?,join_bet = ?, typeGame = ?,bet = ?,status = ?,time = ?`;\n            await connection.execute(sql, [id_product, userInfo.phone, userInfo.code, userInfo.invite, period.period, userInfo.level, total, price, xvalue, fee, game, gameJoin, typeGame, listJoin, 0, timeNow]);\n            await connection.execute('UPDATE `users` SET `money` = `money` - ? WHERE `token` = ? ', [total, auth]);\n            const [users] = await connection.query('SELECT `money`, `level` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n            await rosesPlus(auth, total);\n            const [level] = await connection.query('SELECT * FROM level ');\n            let level0 = level[0];\n            const sql2 = `INSERT INTO roses SET phone = ?,code = ?,invite = ?,f1 = ?,f2 = ?,f3 = ?,f4 = ?,time = ?`;\n            let total_m = total;\n            let f1 = (total_m / 100) * level0.f1;\n            let f2 = (total_m / 100) * level0.f2;\n            let f3 = (total_m / 100) * level0.f3;\n            let f4 = (total_m / 100) * level0.f4;\n            await connection.execute(sql2, [userInfo.phone, userInfo.code, userInfo.invite, f1, f2, f3, f4, timeNow]);\n            return res.status(200).json({\n                message: 'Successful bet',\n                status: true,\n                // data: result,\n                change: users[0].level,\n                money: users[0].money,\n            });\n        } else {\n            return res.status(200).json({\n                message: 'The amount is not enough',\n                status: false\n            });\n        }\n    } catch (error) {\n    }\n}\n\nfunction makeid(length) {\n    var result = '';\n    var characters = '123456';\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}\n\nconst addK3 = async (game) => {\n    try {\n        let join = '';\n        if (game == 1) join = 'k3d';\n        if (game == 3) join = 'k3d3';\n        if (game == 5) join = 'k3d5';\n        if (game == 10) join = 'k3d10';\n\n        let result2 = makeid(3);\n        let timeNow = Date.now();\n        let [k5D] = await connection.query(`SELECT period FROM k3 WHERE status = 0 AND game = ${game} ORDER BY id DESC LIMIT 1 `);\n        const [setting] = await connection.query('SELECT * FROM `admin` ');\n        let period = k5D[0].period;\n\n        let nextResult = '';\n        if (game == 1) nextResult = setting[0].k3d;\n        if (game == 3) nextResult = setting[0].k3d3;\n        if (game == 5) nextResult = setting[0].k3d5;\n        if (game == 10) nextResult = setting[0].k3d10;\n\n        let newArr = '';\n        if (nextResult == '-1') {\n            await connection.execute(`UPDATE k3 SET result = ?,status = ? WHERE period = ? AND game = \"${game}\"`, [result2, 1, period]);\n            newArr = '-1';\n        } else {\n            let result = '';\n            let arr = nextResult.split('|');\n            let check = arr.length;\n            if (check == 1) {\n                newArr = '-1';\n            } else {\n                for (let i = 1; i < arr.length; i++) {\n                    newArr += arr[i] + '|';\n                }\n                newArr = newArr.slice(0, -1);\n            }\n            result = arr[0];\n            await connection.execute(`UPDATE k3 SET result = ?,status = ? WHERE period = ? AND game = ${game}`, [result, 1, period]);\n        }\n        const sql = `INSERT INTO k3 SET period = ?, result = ?, game = ?, status = ?, time = ?`;\n        await connection.execute(sql, [Number(period) + 1, 0, game, 0, timeNow]);\n\n        if (game == 1) join = 'k3d';\n        if (game == 3) join = 'k3d3';\n        if (game == 5) join = 'k3d5';\n        if (game == 10) join = 'k3d10';\n\n        await connection.execute(`UPDATE admin SET ${join} = ?`, [newArr]);\n    } catch (error) {\n        if (error) {\n        }\n    }\n}\n\nasync function funHanding(game) {\n    const [k5d] = await connection.query(`SELECT * FROM k3 WHERE status != 0 AND game = ${game} ORDER BY id DESC LIMIT 1 `);\n    let k5dInfo = k5d[0];\n\n    // update ket qua\n    await connection.execute(`UPDATE result_k3 SET result = ? WHERE status = 0 AND game = ${game}`, [k5dInfo.result]);\n    let result = String(k5dInfo.result).split('');\n    let total = 0;\n    for (let i = 0; i < result.length; i++) {\n        total += Number(result[i]);\n    }\n\n    // xử lý game Tổng số\n    const [totalNumber] = await connection.execute(`SELECT id, bet FROM result_k3 WHERE status = 0 AND game = ${game} AND typeGame = 'total' `);\n    let totalN = totalNumber.length;\n    for (let i = 0; i < totalN; i++) {\n        let sult = totalNumber[i].bet.split(',');\n        // let result = sult.includes(String(total));\n        // if (!result) {\n        //     await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [totalNumber[i].id]);\n        // }\n        let lengWin = sult.filter(function(age) {\n            return age == total;\n        });\n\n        let check1 = false;\n        let check2 = false;\n        let check3 = false;\n        let check4 = false;\n        if (total >= 3 && total <= 10 && sult.includes('s')) {\n            check1 = true;\n        } else {\n            check1 = false;\n        }\n        if (total >= 11 && total <= 18 && sult.includes('b')) {\n            check2 = true;\n        } else {\n            check2 = false;\n        }\n        if (total % 2 == 0 && sult.includes('c')) {\n            check3 = true;\n        } else {\n            check3 = false;\n        }\n        if (total % 2 != 0 && sult.includes('l')) {\n            check4 = true;\n        } else {\n            check4 = false;\n        }\n        if (!check1 && !check2 && !check3 && !check4) {\n            await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [totalNumber[i].id]);\n        }\n        if (lengWin.length >= 1) {\n            await connection.execute(`UPDATE result_k3 SET status = 0 WHERE id = ? `, [totalNumber[i].id]);\n        }\n    }\n\n    // xử lý game 2 số trùng nhau\n    const [totaltwoSame] = await connection.execute(`SELECT id, bet FROM result_k3 WHERE status = 0 AND game = ${game} AND typeGame = 'two-same' `);\n    let totalTwoSame = totaltwoSame.length;\n    for (let i = 0; i < totalTwoSame; i++) {\n        let sult = totaltwoSame[i].bet.split('@');\n        let id = totaltwoSame[i].id;\n        if (sult[0].length > 0 && sult[1].length > 0) {\n            let array = sult[0].split(',');\n            let kq = String(k5dInfo.result).split('');\n            let kq1 = kq[0] + kq[1];\n            let kq2 = kq[1] + kq[2];\n\n            let check1 = false;\n            let check2 = false;\n\n            let array2 = sult[1].split('&');\n            for (let i = 0; i < array2.length; i++) {\n                let newArr = array2[i].split('|')[0];\n                let newArr2 = array2[i].split('|')[1].split(',');\n                let resultA1 = newArr.includes(String(kq1));\n                let resultA2 = newArr.includes(String(kq2));\n                if (!resultA1 && !resultA2) {\n                    check1 = true;\n                } else if (resultA1 && !resultA2) {\n                    let resultA4 = newArr2.includes(String(kq[2]));\n                    if (!resultA4) {\n                        check1 = true;\n                    }\n                } else if (!resultA1 && resultA2) {\n                    let resultA3 = newArr2.includes(String(kq[0]));\n                    if (!resultA3) {\n                        check1 = true;\n                    }\n                }\n            }\n\n            let result1 = array.includes(String(kq1));\n            let result2 = array.includes(String(kq2));\n            if (!result1 && !result2) {\n                check2 = true;\n            }\n            if (check1 && check2) {\n                await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n            }\n        } else if (sult[0].length > 0 && sult[1].length <= 0) {\n            let array = sult[0].split(',');\n            let kq = String(k5dInfo.result).split('');\n            let kq1 = kq[0] + kq[1];\n            let kq2 = kq[1] + kq[2];\n            let result1 = array.includes(String(kq1));\n            let result2 = array.includes(String(kq2));\n            if (!result1 && !result2) {\n                await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n            }\n        } else if (sult[0].length <= 0 && sult[1].length > 0) {\n            let kq = String(k5dInfo.result).split('');\n            let kq1 = kq[0] + kq[1];\n            let kq2 = kq[1] + kq[2];\n            let kq3 = kq[0];\n            let kq4 = kq[2];\n            let check = false;\n\n            let array2 = sult[1].split('&');\n            for (let i = 0; i < array2.length; i++) {\n                let newArr = array2[i].split('|')[0];\n                let newArr2 = array2[i].split('|')[1].split(',');\n                let resultA1 = newArr.includes(String(kq1));\n                let resultA2 = newArr.includes(String(kq2));\n                let resultA3 = newArr2.includes(String(kq3));\n                let resultA4 = newArr2.includes(String(kq4));\n                if (!resultA1 && !resultA2) {\n                    if (!resultA3 && !resultA4) {\n                        await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n                    }\n                } else if (resultA1 && !resultA2) {\n                    let resultA4 = newArr2.includes(String(kq[2]));\n                    if (resultA4) {\n                        check = true;\n                    }\n                } else if (!resultA1 && resultA2) {\n                    let resultA3 = newArr2.includes(String(kq[0]));\n                    if (resultA3) {\n                        check = true;\n                    }\n                }\n            }\n            if (!check) {\n                await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n            }\n        }\n\n    }\n\n    // xử lý game 3 số trùng nhau\n    const [ThreeSame] = await connection.execute(`SELECT id, bet FROM result_k3 WHERE status = 0 AND game = ${game} AND typeGame = 'three-same' `);\n    let ThreeSameL = ThreeSame.length;\n    for (let i = 0; i < ThreeSameL; i++) {\n        let sult = ThreeSame[i].bet.split('@');\n        let id = ThreeSame[i].id;\n        if (sult[0].length > 0 && sult[1].length > 0) {\n            let array = sult[0].split(',');\n            let kq = String(k5dInfo.result);\n\n            let check1 = false;\n            let check2 = false;\n\n            let resultA1 = array.includes(String(kq));\n            if (!resultA1) {\n                check1 = true;\n            }\n            let result = ['111', '222', '333', '444', '555', '666'].includes(String(kq));\n            if (!result) {\n                check2 = true;\n            }\n            if (check1 && check2) {\n                await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n            }\n        } else if (sult[0].length > 0 && sult[1].length <= 0) {\n            let array = sult[0].split(',');\n            let kq = String(k5dInfo.result);\n            let result = array.includes(String(kq));\n            if (!result) {\n                await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n            }\n        } else if (sult[0].length <= 0 && sult[1].length > 0) {\n            let kq = String(k5dInfo.result);\n            let result = ['111', '222', '333', '444', '555', '666'].includes(String(kq));\n            if (!result) {\n                await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n            }\n        }\n\n    }\n\n    // xử lý game 3 số khác nhau\n    const [Unlike] = await connection.execute(`SELECT id, bet FROM result_k3 WHERE status = 0 AND game = ${game} AND typeGame = 'unlike' `);\n    let Unlikes = Unlike.length;\n    for (let i = 0; i < Unlikes; i++) {\n        let sult = Unlike[i].bet.split('@');\n        let id = Unlike[i].id;\n\n        if (sult[0].length > 1 && sult[1] == 'u' && sult[2].length > 1) {\n            let array = sult[0].split(',');\n            let array2 = sult[2].split(',');\n            let kq = String(k5dInfo.result).split('');\n            let check1 = false;\n            let check2 = false;\n            let check3 = false;\n\n            for (let i = 0; i < kq.length; i++) {\n                let resultA1 = array.includes(String(kq[i]));\n                if (resultA1) {\n                    check1 = true;\n                }\n            }\n\n            let kq1 = kq[0] + kq[1];\n            let kq2 = kq[1] + kq[2];\n            let kq3 = kq[0] + kq[2];\n            for (let i = 0; i < kq.length; i++) {\n                let resultA1 = ['11', '22', '33', '44', '55', '66'].includes(String(kq1));\n                let resultA2 = ['11', '22', '33', '44', '55', '66'].includes(String(kq2));\n                let resultA3 = ['11', '22', '33', '44', '55', '66'].includes(String(kq3));\n                if (resultA1 || resultA2 || resultA3) {\n                    check3 = true;\n                }\n            }\n\n            for (let i = 0; i < kq.length; i++) {\n                let resultA1 = array2.includes(String(kq[i]));\n                if (resultA1) {\n                    check2 = true;\n                }\n            }\n\n            if (check1 && check2 && check3) {\n                await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n            }\n\n        } else if (sult[0].length > 1 && sult[1] == 'y' && sult[2].length > 1) {\n            let array = sult[0].split(',');\n            let array2 = sult[2].split(',');\n            let kq = String(k5dInfo.result).split('');\n            let check1 = false;\n            let check2 = false;\n\n            for (let i = 0; i < kq.length; i++) {\n                let resultA1 = array.includes(String(kq[i]));\n                if (resultA1) {\n                    check1 = true;\n                }\n            }\n\n            for (let i = 0; i < kq.length; i++) {\n                let resultA1 = array2.includes(String(kq[i]));\n                if (resultA1) {\n                    check2 = true;\n                }\n            }\n\n            if (check1 && check2) {\n                await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n            }\n        } else if (sult[0].length > 1 && sult[1] == 'u' && sult[2].length <= 1) {\n            let array = sult[0].split(',');\n            let array2 = sult[2].split(',');\n            let kq = String(k5dInfo.result).split('');\n            let check1 = false;\n            let check2 = false;\n\n            for (let i = 0; i < kq.length; i++) {\n                let resultA1 = array.includes(String(kq[i]));\n                if (resultA1) {\n                    check1 = true;\n                }\n            }\n\n            let kq1 = kq[0] + kq[1];\n            let kq2 = kq[1] + kq[2];\n            let kq3 = kq[0] + kq[2];\n            for (let i = 0; i < kq.length; i++) {\n                let resultA1 = ['11', '22', '33', '44', '55', '66'].includes(String(kq1));\n                let resultA2 = ['11', '22', '33', '44', '55', '66'].includes(String(kq2));\n                let resultA3 = ['11', '22', '33', '44', '55', '66'].includes(String(kq3));\n                if (resultA1 || resultA2 || resultA3) {\n                    check2 = true;\n                }\n            }\n\n            if (check1 && check2) {\n                await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n            }\n        } else if (sult[0].length <= 1 && sult[1] == 'u' && sult[2].length > 1) {\n            let array = sult[0].split(',');\n            let array2 = sult[2].split(',');\n            let kq = String(k5dInfo.result).split('');\n            let check1 = false;\n            let check2 = false;\n\n            for (let i = 0; i < kq.length; i++) {\n                let resultA1 = array2.includes(String(kq[i]));\n                if (resultA1) {\n                    check1 = true;\n                }\n            }\n\n            let kq1 = kq[0] + kq[1];\n            let kq2 = kq[1] + kq[2];\n            let kq3 = kq[0] + kq[2];\n            for (let i = 0; i < kq.length; i++) {\n                let resultA1 = ['11', '22', '33', '44', '55', '66'].includes(String(kq1));\n                let resultA2 = ['11', '22', '33', '44', '55', '66'].includes(String(kq2));\n                let resultA3 = ['11', '22', '33', '44', '55', '66'].includes(String(kq3));\n                if (resultA1 || resultA2 || resultA3) {\n                    check2 = true;\n                }\n            }\n\n            if (check1 && check2) {\n                await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n            }\n        } else if (sult[0].length > 1 && sult[1] == 'y' && sult[2].length <= 1) {\n            let array = sult[0].split(',');\n            let array2 = sult[2].split(',');\n            let kq = String(k5dInfo.result).split('');\n            let check1 = false;\n\n            for (let i = 0; i < kq.length; i++) {\n                let resultA1 = array.includes(String(kq[i]));\n                if (resultA1) {\n                    check1 = true;\n                }\n            }\n\n            if (check1) {\n                await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n            }\n        } else if (sult[0].length <= 1 && sult[1] == 'u' && sult[2].length <= 1) {\n            let array = sult[0].split(',');\n            let array2 = sult[2].split(',');\n            let kq = String(k5dInfo.result).split('');\n            let check1 = false;\n\n            let kq1 = kq[0] + kq[1];\n            let kq2 = kq[1] + kq[2];\n            let kq3 = kq[0] + kq[2];\n            for (let i = 0; i < kq.length; i++) {\n                let resultA1 = ['11', '22', '33', '44', '55', '66'].includes(String(kq1));\n                let resultA2 = ['11', '22', '33', '44', '55', '66'].includes(String(kq2));\n                let resultA3 = ['11', '22', '33', '44', '55', '66'].includes(String(kq3));\n                if (resultA1 || resultA2 || resultA3) {\n                    check1 = true;\n                }\n            }\n            if (check1) {\n                await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n            }\n        } else if (sult[0].length <= 1 && sult[1] == 'y' && sult[2].length > 1) {\n            let array = sult[0].split(',');\n            let array2 = sult[2].split(',');\n            let kq = String(k5dInfo.result).split('');\n            let check1 = false;\n\n            for (let i = 0; i < kq.length; i++) {\n                let resultA1 = array2.includes(String(kq[i]));\n                if (resultA1) {\n                    check1 = true;\n                }\n            }\n\n            if (check1) {\n                await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n            }\n        }   \n    }\n}\n\nconst priceGet = {\n    total: {\n        't3': 207.36,\n        't4': 69.12,\n        't5': 34.56,\n        't6': 20.74,\n        't7': 13.83,\n        't8': 9.88,\n        't9': 8.3,\n        't10': 7.68,\n        't11': 7.68,\n        't12': 8.3,\n        't13': 9.88,\n        't14': 13.83,\n        't15': 20.74,\n        't16': 34.56,\n        't17': 69.12,\n        't18': 207.36,\n        'b': 1.92,\n        's': 1.92,\n        'l': 1.92,\n        'c': 1.92,\n    },\n    two: {\n        twoSame: 13.83,\n        twoD: 69.12\n    },\n    three: {\n        threeD: 207.36,\n        threeSame: 34.56\n    },\n    unlike: {\n        unlikeThree: 34.56,\n        threeL: 8.64,\n        unlikeTwo: 6.91\n    }\n}\n\nasync function plusMoney(game) {\n    const [order] = await connection.execute(`SELECT id, phone, bet, price, money, fee, amount, result, typeGame FROM result_k3 WHERE status = 0 AND game = ${game} `);\n    for (let i = 0; i < order.length; i++) {\n        let orders = order[i];\n        let phone = orders.phone;\n        let id = orders.id;\n        let nhan_duoc = 0;\n        let result = orders.result;\n        if (orders.typeGame == \"total\") {\n            let arr = orders.bet.split(',');\n            let totalResult = orders.result.split('');\n            let totalResult2 = 0;\n            for (let i = 0; i < 3; i++) {\n                totalResult2 += Number(totalResult[i]);\n            }\n            let total = (orders.money / arr.length / orders.amount);\n            let fee = total * 0.02;\n            let price = total - fee;\n            \n            let lengWin = arr.filter(function(age) {\n                return age == totalResult2;\n            });\n\n            let lengWin2 = arr.filter(function(age) {\n                return !isNumber(age);\n            });\n\n            if (totalResult2 % 2 == 0 && lengWin2.includes('c')) {\n                nhan_duoc += price * 1.92;\n            }\n\n            if (totalResult2 % 2 != 0 && lengWin2.includes('l')) {\n                nhan_duoc += price * 1.92;\n            }\n\n            if (totalResult2 >= 11 && totalResult2 <= 18 && lengWin2.includes('b')) {\n                nhan_duoc += price * 1.92;\n            }\n\n            if (totalResult2 >= 3 && totalResult2 <= 11 && lengWin2.includes('s')) {\n                nhan_duoc += price * 1.92;\n            }\n            \n            let get = 0;\n            switch (lengWin[0]) {\n                case '3':\n                    get = 207.36;\n                    break;\n                case '3':\n                    get = 69.12;\n                    break;\n                case '5':\n                    get = 34.56;\n                    break;\n                case '6':\n                    get = 20.74;\n                    break;\n                case '7':\n                    get = 13.83;\n                    break;\n                case '8':\n                    get = 9.88;\n                    break;\n                case '9':\n                    get = 8.3;\n                    break;\n                case '10':\n                    get = 7.68;\n                    break;\n                case '11':\n                    get = 7.68;\n                    break;\n                case '12':\n                    get = 8.3;\n                    break;\n                case '13':\n                    get = 9.88;\n                    break;\n                case '14':\n                    get = 13.83;\n                    break;\n                case '15':\n                    get = 20.74;\n                    break;\n                case '16':\n                    get = 34.56;\n                    break;\n                case '17':\n                    get = 69.12;\n                    break;\n                case '18':\n                    get = 207.36;\n                    break;\n            }\n            nhan_duoc += price * get;\n            await connection.execute('UPDATE `result_k3` SET `get` = ?, `status` = 1 WHERE `id` = ? ', [nhan_duoc, id]);\n            const sql = 'UPDATE `users` SET `money` = `money` + ? WHERE `phone` = ? ';\n            await connection.execute(sql, [nhan_duoc, phone]);\n        }\n        nhan_duoc = 0;\n        if (orders.typeGame == \"two-same\") {\n            let kq = result.split('');\n            let kq1 = kq[0] + kq[1];\n            let kq2 = kq[1] + kq[2];\n            let array = orders.bet.split('@');\n            let arr1 = array[0].split(',');\n            let arr2 = array[1];\n            let arr3 = array[1].split('&');\n            for (let i = 0; i < arr1.length; i++) {\n                if(arr1[i] != \"\") {\n                    let check1 = arr1[i].includes(kq1);\n                    let check2 = arr1[i].includes(kq2);\n                    if (check1 || check2) {\n                        let lengthArr = 0;\n                        let count = 0;\n                        if (arr2.length > 0) {\n                            let arr = arr2.split('&');\n                            for (let i = 0; i < arr.length; i++) {\n                                arr2 = arr[i].split('|');\n                                count = arr2[1].split(',').length;\n                            }\n                            lengthArr = arr.length;\n                            count = count;\n                        }\n                        let total = orders.money / orders.amount / (lengthArr + arr1.length);\n                        nhan_duoc += total * 12.83;\n                    }\n                }\n            }\n            arr2 = array[1];\n            for (let i = 0; i < arr3.length; i++) {\n                if(arr3[i] != \"\") {\n                    let files = arr3[i].split('|');\n                    let check1 = files[0].includes(kq1);\n                    let check2 = files[0].includes(kq2);\n                    if (check1 || check2) {\n                        let lengthArr = 0;\n                        let count = 0;\n                        if (arr2.length > 0) {\n                            let arr = arr2.split('&');\n                            for (let i = 0; i < arr.length; i++) {\n                                arr2 = arr[i].split('|');\n                                count = arr2[1].split(',').length;\n                            }\n                            lengthArr = arr.length;\n                            count = count;\n                        }\n                        let bale = 0;\n                        for (let i = 0; i < arr1.length; i++) {\n                            if (arr1[i] != \"\") {\n                                bale = arr1.length;\n                            }\n                        }\n                        let total = orders.money / orders.amount / (lengthArr + bale);\n                        nhan_duoc += total * 69.12;\n                    }\n                }\n            }\n            nhan_duoc -= orders.fee;\n\n            await connection.execute('UPDATE `result_k3` SET `get` = ?, `status` = 1 WHERE `id` = ? ', [nhan_duoc, id]);\n            const sql = 'UPDATE `users` SET `money` = `money` + ? WHERE `phone` = ? ';\n            await connection.execute(sql, [nhan_duoc, phone]);\n        }\n\n        nhan_duoc = 0;\n        if (orders.typeGame == \"three-same\") {\n            let kq = result;\n            let array = orders.bet.split('@');\n            let arr1 = array[0].split(',');\n            let arr2 = array[1];\n            \n            for (let i = 0; i < arr1.length; i++) {\n                if (arr1[i] != \"\") {\n                    let check1 = arr1[i].includes(kq);\n                    let bala = 0;\n                    if (arr2 != \"\") {\n                        bala = 1;\n                    }\n                    if (check1) {\n                        let total = (orders.money / (arr1.length + bala) / orders.amount);\n                        nhan_duoc += total * 207.36 - orders.fee;\n                    }\n                }\n            }\n            if (arr2 != \"\") {\n                let bala = 0;\n                for (let i = 0; i < arr1.length; i++) {\n                    if (arr1[i] != \"\") {\n                        bala = arr1.length;\n                    }\n                }\n                let total = (orders.money / (1 + bala) / orders.amount);\n                nhan_duoc += total * 34.56 - orders.fee;\n            }\n            await connection.execute('UPDATE `result_k3` SET `get` = ?, `status` = 1 WHERE `id` = ? ', [nhan_duoc, id]);\n            const sql = 'UPDATE `users` SET `money` = `money` + ? WHERE `phone` = ? ';\n            await connection.execute(sql, [nhan_duoc, phone]);\n        }\n\n        nhan_duoc = 0;\n        if (orders.typeGame == \"unlike\") {\n            let kq = result.split('');\n            let array = orders.bet.split('@');\n            let arr1 = array[0].split(',');\n            let arr2 = array[1];\n            let arr3 = array[2].split(',');\n            \n            for (let i = 0; i < arr1.length; i++) {\n                if (arr1[i] != \"\") {\n                    let check1 = kq.includes(arr1[i]);\n                    let bala = 0;\n                    let bala2 = 0;\n                    for (let i = 0; i < arr3.length; i++) {\n                        if (arr3[i].length != \"\") {\n                            bala = arr3.length;\n                        }\n                    }\n                    if (arr2 == \"u\") {\n                        bala2 = 1;\n                    }\n                    if (!check1) {\n                        let total = (orders.money / (arr1.length + bala + bala2) / orders.amount);\n                        nhan_duoc += total * 34.56 - orders.fee;\n                        if (arr2 == \"u\") {\n                            let total = (orders.money / (1 + bala + bala2) / orders.amount);\n                            nhan_duoc += (total - orders.fee) * 8.64;\n                        }\n                    }\n                }\n            }\n            if (arr2 == \"u\") {\n                let bala = 0;\n                let bala2 = 0;\n                for (let i = 0; i < arr1.length; i++) {\n                    if (arr1[i] != \"\") {\n                        bala = arr1.length;\n                    }\n                }\n                for (let i = 0; i < arr3.length; i++) {\n                    if (arr3[i].length != \"\") {\n                        bala2 = arr3.length;\n                    }\n                }\n                let total = (orders.money / (1 + bala + bala2) / orders.amount);\n                nhan_duoc += (total - orders.fee) * 8.64;\n            }\n            for (let i = 0; i < arr3.length; i++) {\n                if (arr1[i] != \"\") {\n                    let check1 = kq.includes(arr3[i]);\n                    let bala = 0;\n                    for (let i = 0; i < arr1.length; i++) {\n                        if (arr1[i].length != \"\") {\n                            bala = arr1.length;\n                        }\n                    }\n                    if (!check1) {\n                        let total = (orders.money / (arr3.length + bala) / orders.amount);\n                        nhan_duoc += total * 6.91 - orders.fee;\n                    }\n                }\n            }\n            await connection.execute('UPDATE `result_k3` SET `get` = ?, `status` = 1 WHERE `id` = ? ', [nhan_duoc, id]);\n            const sql = 'UPDATE `users` SET `money` = `money` + ? WHERE `phone` = ? ';\n            await connection.execute(sql, [nhan_duoc, phone]);\n        }\n    }\n}\n\nconst handlingK3 = async (typeid) => {\n\n    let game = Number(typeid);\n\n    await funHanding(game);\n\n    await plusMoney(game);\n}\n\nconst listOrderOld = async (req, res) => {\n    let { gameJoin, pageno, pageto } = req.body;\n    let auth = req.cookies.auth;\n\n    let checkGame = ['1', '3', '5', '10'].includes(String(gameJoin));\n    if (!checkGame || pageno < 0 || pageto < 0) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"Không còn dữ liệu\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n    const [user] = await connection.query('SELECT `phone`, `code`, `invite`, `level`, `money` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n\n    let game = Number(gameJoin);\n\n    const [k5d] = await connection.query(`SELECT * FROM k3 WHERE status != 0 AND game = '${game}' ORDER BY id DESC LIMIT ${pageno}, ${pageto} `);\n    const [k5dAll] = await connection.query(`SELECT * FROM k3 WHERE status != 0 AND game = '${game}' `);\n    const [period] = await connection.query(`SELECT period FROM k3 WHERE status = 0 AND game = '${game}' ORDER BY id DESC LIMIT 1 `);\n    if (k5d.length == 0) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            page: 1,\n            status: false\n        });\n    }\n    if (!pageno || !pageto || !user[0] || !k5d[0] || !period[0]) {\n        return res.status(200).json({\n            message: 'Error!',\n            status: false\n        });\n    }\n    let page = Math.ceil(k5dAll.length / 10);\n    return res.status(200).json({\n        code: 0,\n        msg: \"Get success\",\n        data: {\n            gameslist: k5d,\n        },\n        period: period[0].period,\n        page: page,\n        status: true\n    });\n}\n\nconst GetMyEmerdList = async (req, res) => {\n    let { gameJoin, pageno, pageto } = req.body;\n    let auth = req.cookies.auth;\n\n    let checkGame = ['1', '3', '5', '10'].includes(String(gameJoin));\n    if (!checkGame || pageno < 0 || pageto < 0) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n\n    let game = Number(gameJoin);\n\n    const [user] = await connection.query('SELECT `phone`, `code`, `invite`, `level`, `money` FROM users WHERE token = ? AND veri = 1 LIMIT 1 ', [auth]);\n    const [result_5d] = await connection.query(`SELECT * FROM result_k3 WHERE phone = ? AND game = '${game}' ORDER BY id DESC LIMIT ${Number(pageno) + ',' + Number(pageto)}`, [user[0].phone]);\n    const [result_5dAll] = await connection.query(`SELECT * FROM result_k3 WHERE phone = ? AND game = '${game}' ORDER BY id DESC `, [user[0].phone]);\n\n    if (!result_5d[0]) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            page: 1,\n            status: false\n        });\n    }\n    if (!pageno || !pageto || !user[0] || !result_5d[0]) {\n        return res.status(200).json({\n            message: 'Error!',\n            status: true\n        });\n    }\n    let page = Math.ceil(result_5dAll.length / 10);\n\n    let datas = result_5d.map((data) => {\n        let { id, phone, code, invite, level, game, ...others } = data;\n        return others;\n    });\n\n    return res.status(200).json({\n        code: 0,\n        msg: \"Get success\",\n        data: {\n            gameslist: datas,\n        },\n        page: page,\n        status: true\n    });\n}\n\n\nmodule.exports = {\n    K3Page,\n    betK3,\n    addK3,\n    handlingK3,\n    listOrderOld,\n    GetMyEmerdList\n}"],"mappings":";;;AAAA,IAAAA,UAAA,GAAAC,sBAAA,CAAAC,OAAA;AAA6C,IAAAC,SAAA;AAAA,SAAAF,uBAAAG,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,gBAAAA,GAAA;AAAA,SAAAE,yBAAAC,MAAA,EAAAC,QAAA,QAAAD,MAAA,yBAAAE,MAAA,GAAAC,6BAAA,CAAAH,MAAA,EAAAC,QAAA,OAAAG,GAAA,EAAAC,CAAA,MAAAC,MAAA,CAAAC,qBAAA,QAAAC,gBAAA,GAAAF,MAAA,CAAAC,qBAAA,CAAAP,MAAA,QAAAK,CAAA,MAAAA,CAAA,GAAAG,gBAAA,CAAAC,MAAA,EAAAJ,CAAA,MAAAD,GAAA,GAAAI,gBAAA,CAAAH,CAAA,OAAAJ,QAAA,CAAAS,OAAA,CAAAN,GAAA,uBAAAE,MAAA,CAAAK,SAAA,CAAAC,oBAAA,CAAAC,IAAA,CAAAb,MAAA,EAAAI,GAAA,aAAAF,MAAA,CAAAE,GAAA,IAAAJ,MAAA,CAAAI,GAAA,cAAAF,MAAA;AAAA,SAAAC,8BAAAH,MAAA,EAAAC,QAAA,QAAAD,MAAA,yBAAAE,MAAA,WAAAY,UAAA,GAAAR,MAAA,CAAAS,IAAA,CAAAf,MAAA,OAAAI,GAAA,EAAAC,CAAA,OAAAA,CAAA,MAAAA,CAAA,GAAAS,UAAA,CAAAL,MAAA,EAAAJ,CAAA,MAAAD,GAAA,GAAAU,UAAA,CAAAT,CAAA,OAAAJ,QAAA,CAAAS,OAAA,CAAAN,GAAA,kBAAAF,MAAA,CAAAE,GAAA,IAAAJ,MAAA,CAAAI,GAAA,YAAAF,MAAA;AAAA,SAAAc,eAAAC,GAAA,EAAAZ,CAAA,WAAAa,eAAA,CAAAD,GAAA,KAAAE,qBAAA,CAAAF,GAAA,EAAAZ,CAAA,KAAAe,2BAAA,CAAAH,GAAA,EAAAZ,CAAA,KAAAgB,gBAAA;AAAA,SAAAA,iBAAA,cAAAC,SAAA;AAAA,SAAAF,4BAAAG,CAAA,EAAAC,MAAA,SAAAD,CAAA,qBAAAA,CAAA,sBAAAE,iBAAA,CAAAF,CAAA,EAAAC,MAAA,OAAAE,CAAA,GAAApB,MAAA,CAAAK,SAAA,CAAAgB,QAAA,CAAAd,IAAA,CAAAU,CAAA,EAAAK,KAAA,aAAAF,CAAA,iBAAAH,CAAA,CAAAM,WAAA,EAAAH,CAAA,GAAAH,CAAA,CAAAM,WAAA,CAAAC,IAAA,MAAAJ,CAAA,cAAAA,CAAA,mBAAAK,KAAA,CAAAC,IAAA,CAAAT,CAAA,OAAAG,CAAA,+DAAAO,IAAA,CAAAP,CAAA,UAAAD,iBAAA,CAAAF,CAAA,EAAAC,MAAA;AAAA,SAAAC,kBAAAR,GAAA,EAAAiB,GAAA,QAAAA,GAAA,YAAAA,GAAA,GAAAjB,GAAA,CAAAR,MAAA,EAAAyB,GAAA,GAAAjB,GAAA,CAAAR,MAAA,WAAAJ,CAAA,MAAA8B,IAAA,OAAAJ,KAAA,CAAAG,GAAA,GAAA7B,CAAA,GAAA6B,GAAA,EAAA7B,CAAA,IAAA8B,IAAA,CAAA9B,CAAA,IAAAY,GAAA,CAAAZ,CAAA,UAAA8B,IAAA;AAAA,SAAAhB,sBAAAiB,CAAA,EAAAC,CAAA,QAAAC,CAAA,WAAAF,CAAA,gCAAAG,MAAA,IAAAH,CAAA,CAAAG,MAAA,CAAAC,QAAA,KAAAJ,CAAA,4BAAAE,CAAA,QAAAG,CAAA,EAAAf,CAAA,EAAArB,CAAA,EAAAqC,CAAA,EAAAC,CAAA,OAAAC,CAAA,OAAArB,CAAA,iBAAAlB,CAAA,IAAAiC,CAAA,GAAAA,CAAA,CAAAzB,IAAA,CAAAuB,CAAA,GAAAS,IAAA,QAAAR,CAAA,QAAA/B,MAAA,CAAAgC,CAAA,MAAAA,CAAA,UAAAM,CAAA,uBAAAA,CAAA,IAAAH,CAAA,GAAApC,CAAA,CAAAQ,IAAA,CAAAyB,CAAA,GAAAQ,IAAA,MAAAH,CAAA,CAAAI,IAAA,CAAAN,CAAA,CAAAO,KAAA,GAAAL,CAAA,CAAAlC,MAAA,KAAA4B,CAAA,GAAAO,CAAA,iBAAAR,CAAA,IAAAb,CAAA,OAAAG,CAAA,GAAAU,CAAA,yBAAAQ,CAAA,YAAAN,CAAA,eAAAI,CAAA,GAAAJ,CAAA,cAAAhC,MAAA,CAAAoC,CAAA,MAAAA,CAAA,2BAAAnB,CAAA,QAAAG,CAAA,aAAAiB,CAAA;AAAA,SAAAzB,gBAAAD,GAAA,QAAAc,KAAA,CAAAkB,OAAA,CAAAhC,GAAA,UAAAA,GAAA;AAAA,SAAAiC,oBAAA,kBAC7C,qJAAAA,mBAAA,YAAAA,oBAAA,WAAAT,CAAA,SAAAH,CAAA,EAAAG,CAAA,OAAAL,CAAA,GAAA9B,MAAA,CAAAK,SAAA,EAAAe,CAAA,GAAAU,CAAA,CAAAe,cAAA,EAAA5B,CAAA,GAAAjB,MAAA,CAAA8C,cAAA,cAAAd,CAAA,EAAAG,CAAA,EAAAL,CAAA,IAAAE,CAAA,CAAAG,CAAA,IAAAL,CAAA,CAAAY,KAAA,KAAA3C,CAAA,wBAAAkC,MAAA,GAAAA,MAAA,OAAAI,CAAA,GAAAtC,CAAA,CAAAmC,QAAA,kBAAAa,CAAA,GAAAhD,CAAA,CAAAiD,aAAA,uBAAAZ,CAAA,GAAArC,CAAA,CAAAkD,WAAA,8BAAAC,OAAAlB,CAAA,EAAAG,CAAA,EAAAL,CAAA,WAAA9B,MAAA,CAAA8C,cAAA,CAAAd,CAAA,EAAAG,CAAA,IAAAO,KAAA,EAAAZ,CAAA,EAAAqB,UAAA,MAAAC,YAAA,MAAAC,QAAA,SAAArB,CAAA,CAAAG,CAAA,WAAAe,MAAA,mBAAAlB,CAAA,IAAAkB,MAAA,YAAAA,OAAAlB,CAAA,EAAAG,CAAA,EAAAL,CAAA,WAAAE,CAAA,CAAAG,CAAA,IAAAL,CAAA,gBAAAwB,KAAAtB,CAAA,EAAAG,CAAA,EAAAL,CAAA,EAAAV,CAAA,QAAArB,CAAA,GAAAoC,CAAA,IAAAA,CAAA,CAAA9B,SAAA,YAAAkD,SAAA,GAAApB,CAAA,GAAAoB,SAAA,EAAAlB,CAAA,GAAArC,MAAA,CAAAwD,MAAA,CAAAzD,CAAA,CAAAM,SAAA,GAAA0C,CAAA,OAAAU,OAAA,CAAArC,CAAA,gBAAAH,CAAA,CAAAoB,CAAA,eAAAK,KAAA,EAAAgB,gBAAA,CAAA1B,CAAA,EAAAF,CAAA,EAAAiB,CAAA,MAAAV,CAAA,aAAAsB,SAAA3B,CAAA,EAAAG,CAAA,EAAAL,CAAA,mBAAA8B,IAAA,YAAAC,GAAA,EAAA7B,CAAA,CAAAzB,IAAA,CAAA4B,CAAA,EAAAL,CAAA,cAAAE,CAAA,aAAA4B,IAAA,WAAAC,GAAA,EAAA7B,CAAA,QAAAG,CAAA,CAAAmB,IAAA,GAAAA,IAAA,MAAAQ,CAAA,qBAAA/B,CAAA,qBAAAO,CAAA,gBAAAyB,CAAA,gBAAAC,CAAA,gBAAAT,UAAA,cAAAU,kBAAA,cAAAC,2BAAA,SAAAC,CAAA,OAAAjB,MAAA,CAAAiB,CAAA,EAAA9B,CAAA,qCAAA+B,CAAA,GAAApE,MAAA,CAAAqE,cAAA,EAAAC,CAAA,GAAAF,CAAA,IAAAA,CAAA,CAAAA,CAAA,CAAAG,MAAA,QAAAD,CAAA,IAAAA,CAAA,KAAAxC,CAAA,IAAAV,CAAA,CAAAb,IAAA,CAAA+D,CAAA,EAAAjC,CAAA,MAAA8B,CAAA,GAAAG,CAAA,OAAAE,CAAA,GAAAN,0BAAA,CAAA7D,SAAA,GAAAkD,SAAA,CAAAlD,SAAA,GAAAL,MAAA,CAAAwD,MAAA,CAAAW,CAAA,YAAAM,sBAAAzC,CAAA,gCAAA0C,OAAA,WAAAvC,CAAA,IAAAe,MAAA,CAAAlB,CAAA,EAAAG,CAAA,YAAAH,CAAA,gBAAA2C,OAAA,CAAAxC,CAAA,EAAAH,CAAA,sBAAA4C,cAAA5C,CAAA,EAAAG,CAAA,aAAA0C,OAAA/C,CAAA,EAAAb,CAAA,EAAAlB,CAAA,EAAAsC,CAAA,QAAAU,CAAA,GAAAY,QAAA,CAAA3B,CAAA,CAAAF,CAAA,GAAAE,CAAA,EAAAf,CAAA,mBAAA8B,CAAA,CAAAa,IAAA,QAAAxB,CAAA,GAAAW,CAAA,CAAAc,GAAA,EAAAC,CAAA,GAAA1B,CAAA,CAAAM,KAAA,SAAAoB,CAAA,gBAAAgB,OAAA,CAAAhB,CAAA,KAAA1C,CAAA,CAAAb,IAAA,CAAAuD,CAAA,eAAA3B,CAAA,CAAA4C,OAAA,CAAAjB,CAAA,CAAAkB,OAAA,EAAAC,IAAA,WAAAjD,CAAA,IAAA6C,MAAA,SAAA7C,CAAA,EAAAjC,CAAA,EAAAsC,CAAA,gBAAAL,CAAA,IAAA6C,MAAA,UAAA7C,CAAA,EAAAjC,CAAA,EAAAsC,CAAA,QAAAF,CAAA,CAAA4C,OAAA,CAAAjB,CAAA,EAAAmB,IAAA,WAAAjD,CAAA,IAAAI,CAAA,CAAAM,KAAA,GAAAV,CAAA,EAAAjC,CAAA,CAAAqC,CAAA,gBAAAJ,CAAA,WAAA6C,MAAA,UAAA7C,CAAA,EAAAjC,CAAA,EAAAsC,CAAA,SAAAA,CAAA,CAAAU,CAAA,CAAAc,GAAA,SAAA/B,CAAA,EAAAb,CAAA,oBAAAyB,KAAA,WAAAA,MAAAV,CAAA,EAAAZ,CAAA,aAAA8D,2BAAA,eAAA/C,CAAA,WAAAA,CAAA,EAAAL,CAAA,IAAA+C,MAAA,CAAA7C,CAAA,EAAAZ,CAAA,EAAAe,CAAA,EAAAL,CAAA,gBAAAA,CAAA,GAAAA,CAAA,GAAAA,CAAA,CAAAmD,IAAA,CAAAC,0BAAA,EAAAA,0BAAA,IAAAA,0BAAA,qBAAAxB,iBAAAvB,CAAA,EAAAL,CAAA,EAAAV,CAAA,QAAAH,CAAA,GAAA6C,CAAA,mBAAA/D,CAAA,EAAAsC,CAAA,QAAApB,CAAA,KAAAqB,CAAA,YAAA6C,KAAA,sCAAAlE,CAAA,KAAA8C,CAAA,oBAAAhE,CAAA,QAAAsC,CAAA,WAAAK,KAAA,EAAAV,CAAA,EAAAQ,IAAA,eAAApB,CAAA,CAAAgE,MAAA,GAAArF,CAAA,EAAAqB,CAAA,CAAAyC,GAAA,GAAAxB,CAAA,UAAAU,CAAA,GAAA3B,CAAA,CAAAiE,QAAA,MAAAtC,CAAA,QAAAX,CAAA,GAAAkD,mBAAA,CAAAvC,CAAA,EAAA3B,CAAA,OAAAgB,CAAA,QAAAA,CAAA,KAAA4B,CAAA,mBAAA5B,CAAA,qBAAAhB,CAAA,CAAAgE,MAAA,EAAAhE,CAAA,CAAAmE,IAAA,GAAAnE,CAAA,CAAAoE,KAAA,GAAApE,CAAA,CAAAyC,GAAA,sBAAAzC,CAAA,CAAAgE,MAAA,QAAAnE,CAAA,KAAA6C,CAAA,QAAA7C,CAAA,GAAA8C,CAAA,EAAA3C,CAAA,CAAAyC,GAAA,EAAAzC,CAAA,CAAAqE,iBAAA,CAAArE,CAAA,CAAAyC,GAAA,uBAAAzC,CAAA,CAAAgE,MAAA,IAAAhE,CAAA,CAAAsE,MAAA,WAAAtE,CAAA,CAAAyC,GAAA,GAAA5C,CAAA,GAAAqB,CAAA,MAAA6B,CAAA,GAAAR,QAAA,CAAAxB,CAAA,EAAAL,CAAA,EAAAV,CAAA,oBAAA+C,CAAA,CAAAP,IAAA,QAAA3C,CAAA,GAAAG,CAAA,CAAAoB,IAAA,GAAAuB,CAAA,GAAAhC,CAAA,EAAAoC,CAAA,CAAAN,GAAA,KAAAG,CAAA,qBAAAtB,KAAA,EAAAyB,CAAA,CAAAN,GAAA,EAAArB,IAAA,EAAApB,CAAA,CAAAoB,IAAA,kBAAA2B,CAAA,CAAAP,IAAA,KAAA3C,CAAA,GAAA8C,CAAA,EAAA3C,CAAA,CAAAgE,MAAA,YAAAhE,CAAA,CAAAyC,GAAA,GAAAM,CAAA,CAAAN,GAAA,mBAAAyB,oBAAAnD,CAAA,EAAAL,CAAA,QAAAV,CAAA,GAAAU,CAAA,CAAAsD,MAAA,EAAAnE,CAAA,GAAAkB,CAAA,CAAAD,QAAA,CAAAd,CAAA,OAAAH,CAAA,KAAAe,CAAA,SAAAF,CAAA,CAAAuD,QAAA,qBAAAjE,CAAA,IAAAe,CAAA,CAAAD,QAAA,eAAAJ,CAAA,CAAAsD,MAAA,aAAAtD,CAAA,CAAA+B,GAAA,GAAA7B,CAAA,EAAAsD,mBAAA,CAAAnD,CAAA,EAAAL,CAAA,eAAAA,CAAA,CAAAsD,MAAA,kBAAAhE,CAAA,KAAAU,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA+B,GAAA,OAAA7C,SAAA,uCAAAI,CAAA,iBAAA4C,CAAA,MAAAjE,CAAA,GAAA4D,QAAA,CAAA1C,CAAA,EAAAkB,CAAA,CAAAD,QAAA,EAAAJ,CAAA,CAAA+B,GAAA,mBAAA9D,CAAA,CAAA6D,IAAA,SAAA9B,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA+B,GAAA,GAAA9D,CAAA,CAAA8D,GAAA,EAAA/B,CAAA,CAAAuD,QAAA,SAAArB,CAAA,MAAA3B,CAAA,GAAAtC,CAAA,CAAA8D,GAAA,SAAAxB,CAAA,GAAAA,CAAA,CAAAG,IAAA,IAAAV,CAAA,CAAAK,CAAA,CAAAwD,UAAA,IAAAtD,CAAA,CAAAK,KAAA,EAAAZ,CAAA,CAAAS,IAAA,GAAAJ,CAAA,CAAAyD,OAAA,eAAA9D,CAAA,CAAAsD,MAAA,KAAAtD,CAAA,CAAAsD,MAAA,WAAAtD,CAAA,CAAA+B,GAAA,GAAA7B,CAAA,GAAAF,CAAA,CAAAuD,QAAA,SAAArB,CAAA,IAAA3B,CAAA,IAAAP,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA+B,GAAA,OAAA7C,SAAA,sCAAAc,CAAA,CAAAuD,QAAA,SAAArB,CAAA,cAAA6B,aAAA7D,CAAA,QAAAG,CAAA,KAAA2D,MAAA,EAAA9D,CAAA,YAAAA,CAAA,KAAAG,CAAA,CAAA4D,QAAA,GAAA/D,CAAA,WAAAA,CAAA,KAAAG,CAAA,CAAA6D,UAAA,GAAAhE,CAAA,KAAAG,CAAA,CAAA8D,QAAA,GAAAjE,CAAA,WAAAkE,UAAA,CAAAzD,IAAA,CAAAN,CAAA,cAAAgE,cAAAnE,CAAA,QAAAG,CAAA,GAAAH,CAAA,CAAAoE,UAAA,QAAAjE,CAAA,CAAAyB,IAAA,oBAAAzB,CAAA,CAAA0B,GAAA,EAAA7B,CAAA,CAAAoE,UAAA,GAAAjE,CAAA,aAAAsB,QAAAzB,CAAA,SAAAkE,UAAA,MAAAJ,MAAA,aAAA9D,CAAA,CAAA0C,OAAA,CAAAmB,YAAA,cAAAQ,KAAA,iBAAA9B,OAAApC,CAAA,QAAAA,CAAA,WAAAA,CAAA,QAAAL,CAAA,GAAAK,CAAA,CAAAE,CAAA,OAAAP,CAAA,SAAAA,CAAA,CAAAvB,IAAA,CAAA4B,CAAA,4BAAAA,CAAA,CAAAI,IAAA,SAAAJ,CAAA,OAAAmE,KAAA,CAAAnE,CAAA,CAAAhC,MAAA,SAAAc,CAAA,OAAAlB,CAAA,YAAAwC,KAAA,aAAAtB,CAAA,GAAAkB,CAAA,CAAAhC,MAAA,OAAAiB,CAAA,CAAAb,IAAA,CAAA4B,CAAA,EAAAlB,CAAA,UAAAsB,IAAA,CAAAG,KAAA,GAAAP,CAAA,CAAAlB,CAAA,GAAAsB,IAAA,CAAAC,IAAA,OAAAD,IAAA,SAAAA,IAAA,CAAAG,KAAA,GAAAV,CAAA,EAAAO,IAAA,CAAAC,IAAA,OAAAD,IAAA,YAAAxC,CAAA,CAAAwC,IAAA,GAAAxC,CAAA,gBAAAiB,SAAA,CAAA8D,OAAA,CAAA3C,CAAA,kCAAA8B,iBAAA,CAAA5D,SAAA,GAAA6D,0BAAA,EAAAjD,CAAA,CAAAuD,CAAA,mBAAA9B,KAAA,EAAAwB,0BAAA,EAAAd,YAAA,SAAAnC,CAAA,CAAAiD,0BAAA,mBAAAxB,KAAA,EAAAuB,iBAAA,EAAAb,YAAA,SAAAa,iBAAA,CAAAsC,WAAA,GAAArD,MAAA,CAAAgB,0BAAA,EAAA9B,CAAA,wBAAAD,CAAA,CAAAqE,mBAAA,aAAAxE,CAAA,QAAAG,CAAA,wBAAAH,CAAA,IAAAA,CAAA,CAAAT,WAAA,WAAAY,CAAA,KAAAA,CAAA,KAAA8B,iBAAA,6BAAA9B,CAAA,CAAAoE,WAAA,IAAApE,CAAA,CAAAX,IAAA,OAAAW,CAAA,CAAAsE,IAAA,aAAAzE,CAAA,WAAAhC,MAAA,CAAA0G,cAAA,GAAA1G,MAAA,CAAA0G,cAAA,CAAA1E,CAAA,EAAAkC,0BAAA,KAAAlC,CAAA,CAAA2E,SAAA,GAAAzC,0BAAA,EAAAhB,MAAA,CAAAlB,CAAA,EAAAI,CAAA,yBAAAJ,CAAA,CAAA3B,SAAA,GAAAL,MAAA,CAAAwD,MAAA,CAAAgB,CAAA,GAAAxC,CAAA,KAAAG,CAAA,CAAAyE,KAAA,aAAA5E,CAAA,aAAAgD,OAAA,EAAAhD,CAAA,OAAAyC,qBAAA,CAAAG,aAAA,CAAAvE,SAAA,GAAA6C,MAAA,CAAA0B,aAAA,CAAAvE,SAAA,EAAA0C,CAAA,iCAAAZ,CAAA,CAAAyC,aAAA,GAAAA,aAAA,EAAAzC,CAAA,CAAA0E,KAAA,aAAA7E,CAAA,EAAAF,CAAA,EAAAV,CAAA,EAAAH,CAAA,EAAAlB,CAAA,eAAAA,CAAA,KAAAA,CAAA,GAAA+G,OAAA,OAAAzE,CAAA,OAAAuC,aAAA,CAAAtB,IAAA,CAAAtB,CAAA,EAAAF,CAAA,EAAAV,CAAA,EAAAH,CAAA,GAAAlB,CAAA,UAAAoC,CAAA,CAAAqE,mBAAA,CAAA1E,CAAA,IAAAO,CAAA,GAAAA,CAAA,CAAAE,IAAA,GAAA0C,IAAA,WAAAjD,CAAA,WAAAA,CAAA,CAAAQ,IAAA,GAAAR,CAAA,CAAAU,KAAA,GAAAL,CAAA,CAAAE,IAAA,WAAAkC,qBAAA,CAAAD,CAAA,GAAAtB,MAAA,CAAAsB,CAAA,EAAApC,CAAA,gBAAAc,MAAA,CAAAsB,CAAA,EAAAnC,CAAA,iCAAAa,MAAA,CAAAsB,CAAA,6DAAArC,CAAA,CAAA1B,IAAA,aAAAuB,CAAA,QAAAG,CAAA,GAAAnC,MAAA,CAAAgC,CAAA,GAAAF,CAAA,gBAAAV,CAAA,IAAAe,CAAA,EAAAL,CAAA,CAAAW,IAAA,CAAArB,CAAA,UAAAU,CAAA,CAAAiF,OAAA,aAAAxE,KAAA,WAAAT,CAAA,CAAA3B,MAAA,SAAA6B,CAAA,GAAAF,CAAA,CAAAkF,GAAA,QAAAhF,CAAA,IAAAG,CAAA,SAAAI,IAAA,CAAAG,KAAA,GAAAV,CAAA,EAAAO,IAAA,CAAAC,IAAA,OAAAD,IAAA,WAAAA,IAAA,CAAAC,IAAA,OAAAD,IAAA,QAAAJ,CAAA,CAAAoC,MAAA,GAAAA,MAAA,EAAAd,OAAA,CAAApD,SAAA,KAAAkB,WAAA,EAAAkC,OAAA,EAAA4C,KAAA,WAAAA,MAAAlE,CAAA,aAAA8E,IAAA,WAAA1E,IAAA,WAAAgD,IAAA,QAAAC,KAAA,GAAAxD,CAAA,OAAAQ,IAAA,YAAA6C,QAAA,cAAAD,MAAA,gBAAAvB,GAAA,GAAA7B,CAAA,OAAAkE,UAAA,CAAAxB,OAAA,CAAAyB,aAAA,IAAAhE,CAAA,WAAAL,CAAA,kBAAAA,CAAA,CAAAoF,MAAA,OAAA9F,CAAA,CAAAb,IAAA,OAAAuB,CAAA,MAAAwE,KAAA,EAAAxE,CAAA,CAAAR,KAAA,cAAAQ,CAAA,IAAAE,CAAA,MAAAmF,IAAA,WAAAA,KAAA,SAAA3E,IAAA,WAAAR,CAAA,QAAAkE,UAAA,IAAAE,UAAA,kBAAApE,CAAA,CAAA4B,IAAA,QAAA5B,CAAA,CAAA6B,GAAA,cAAAuD,IAAA,KAAA3B,iBAAA,WAAAA,kBAAAtD,CAAA,aAAAK,IAAA,QAAAL,CAAA,MAAAL,CAAA,kBAAAuF,OAAAjG,CAAA,EAAAH,CAAA,WAAAoB,CAAA,CAAAuB,IAAA,YAAAvB,CAAA,CAAAwB,GAAA,GAAA1B,CAAA,EAAAL,CAAA,CAAAS,IAAA,GAAAnB,CAAA,EAAAH,CAAA,KAAAa,CAAA,CAAAsD,MAAA,WAAAtD,CAAA,CAAA+B,GAAA,GAAA7B,CAAA,KAAAf,CAAA,aAAAA,CAAA,QAAAiF,UAAA,CAAA/F,MAAA,MAAAc,CAAA,SAAAA,CAAA,QAAAlB,CAAA,QAAAmG,UAAA,CAAAjF,CAAA,GAAAoB,CAAA,GAAAtC,CAAA,CAAAqG,UAAA,iBAAArG,CAAA,CAAA+F,MAAA,SAAAuB,MAAA,aAAAtH,CAAA,CAAA+F,MAAA,SAAAmB,IAAA,QAAAlE,CAAA,GAAA3B,CAAA,CAAAb,IAAA,CAAAR,CAAA,eAAAqC,CAAA,GAAAhB,CAAA,CAAAb,IAAA,CAAAR,CAAA,qBAAAgD,CAAA,IAAAX,CAAA,aAAA6E,IAAA,GAAAlH,CAAA,CAAAgG,QAAA,SAAAsB,MAAA,CAAAtH,CAAA,CAAAgG,QAAA,gBAAAkB,IAAA,GAAAlH,CAAA,CAAAiG,UAAA,SAAAqB,MAAA,CAAAtH,CAAA,CAAAiG,UAAA,cAAAjD,CAAA,aAAAkE,IAAA,GAAAlH,CAAA,CAAAgG,QAAA,SAAAsB,MAAA,CAAAtH,CAAA,CAAAgG,QAAA,qBAAA3D,CAAA,YAAA+C,KAAA,qDAAA8B,IAAA,GAAAlH,CAAA,CAAAiG,UAAA,SAAAqB,MAAA,CAAAtH,CAAA,CAAAiG,UAAA,YAAAN,MAAA,WAAAA,OAAA1D,CAAA,EAAAG,CAAA,aAAAL,CAAA,QAAAoE,UAAA,CAAA/F,MAAA,MAAA2B,CAAA,SAAAA,CAAA,QAAAb,CAAA,QAAAiF,UAAA,CAAApE,CAAA,OAAAb,CAAA,CAAA6E,MAAA,SAAAmB,IAAA,IAAA7F,CAAA,CAAAb,IAAA,CAAAU,CAAA,wBAAAgG,IAAA,GAAAhG,CAAA,CAAA+E,UAAA,QAAAjG,CAAA,GAAAkB,CAAA,aAAAlB,CAAA,iBAAAiC,CAAA,mBAAAA,CAAA,KAAAjC,CAAA,CAAA+F,MAAA,IAAA3D,CAAA,IAAAA,CAAA,IAAApC,CAAA,CAAAiG,UAAA,KAAAjG,CAAA,cAAAsC,CAAA,GAAAtC,CAAA,GAAAA,CAAA,CAAAqG,UAAA,cAAA/D,CAAA,CAAAuB,IAAA,GAAA5B,CAAA,EAAAK,CAAA,CAAAwB,GAAA,GAAA1B,CAAA,EAAApC,CAAA,SAAAqF,MAAA,gBAAA7C,IAAA,GAAAxC,CAAA,CAAAiG,UAAA,EAAAhC,CAAA,SAAAsD,QAAA,CAAAjF,CAAA,MAAAiF,QAAA,WAAAA,SAAAtF,CAAA,EAAAG,CAAA,oBAAAH,CAAA,CAAA4B,IAAA,QAAA5B,CAAA,CAAA6B,GAAA,qBAAA7B,CAAA,CAAA4B,IAAA,mBAAA5B,CAAA,CAAA4B,IAAA,QAAArB,IAAA,GAAAP,CAAA,CAAA6B,GAAA,gBAAA7B,CAAA,CAAA4B,IAAA,SAAAwD,IAAA,QAAAvD,GAAA,GAAA7B,CAAA,CAAA6B,GAAA,OAAAuB,MAAA,kBAAA7C,IAAA,yBAAAP,CAAA,CAAA4B,IAAA,IAAAzB,CAAA,UAAAI,IAAA,GAAAJ,CAAA,GAAA6B,CAAA,KAAAuD,MAAA,WAAAA,OAAAvF,CAAA,aAAAG,CAAA,QAAA+D,UAAA,CAAA/F,MAAA,MAAAgC,CAAA,SAAAA,CAAA,QAAAL,CAAA,QAAAoE,UAAA,CAAA/D,CAAA,OAAAL,CAAA,CAAAkE,UAAA,KAAAhE,CAAA,cAAAsF,QAAA,CAAAxF,CAAA,CAAAsE,UAAA,EAAAtE,CAAA,CAAAmE,QAAA,GAAAE,aAAA,CAAArE,CAAA,GAAAkC,CAAA,yBAAAwD,OAAAxF,CAAA,aAAAG,CAAA,QAAA+D,UAAA,CAAA/F,MAAA,MAAAgC,CAAA,SAAAA,CAAA,QAAAL,CAAA,QAAAoE,UAAA,CAAA/D,CAAA,OAAAL,CAAA,CAAAgE,MAAA,KAAA9D,CAAA,QAAAZ,CAAA,GAAAU,CAAA,CAAAsE,UAAA,kBAAAhF,CAAA,CAAAwC,IAAA,QAAA3C,CAAA,GAAAG,CAAA,CAAAyC,GAAA,EAAAsC,aAAA,CAAArE,CAAA,YAAAb,CAAA,gBAAAkE,KAAA,8BAAAsC,aAAA,WAAAA,cAAAtF,CAAA,EAAAL,CAAA,EAAAV,CAAA,gBAAAiE,QAAA,KAAAnD,QAAA,EAAAqC,MAAA,CAAApC,CAAA,GAAAwD,UAAA,EAAA7D,CAAA,EAAA8D,OAAA,EAAAxE,CAAA,oBAAAgE,MAAA,UAAAvB,GAAA,GAAA7B,CAAA,GAAAgC,CAAA,OAAA7B,CAAA;AAAA,SAAAuF,mBAAAC,GAAA,EAAA5C,OAAA,EAAA6C,MAAA,EAAAC,KAAA,EAAAC,MAAA,EAAAhI,GAAA,EAAA+D,GAAA,cAAAkE,IAAA,GAAAJ,GAAA,CAAA7H,GAAA,EAAA+D,GAAA,OAAAnB,KAAA,GAAAqF,IAAA,CAAArF,KAAA,WAAAsF,KAAA,IAAAJ,MAAA,CAAAI,KAAA,iBAAAD,IAAA,CAAAvF,IAAA,IAAAuC,OAAA,CAAArC,KAAA,YAAAoE,OAAA,CAAA/B,OAAA,CAAArC,KAAA,EAAAuC,IAAA,CAAA4C,KAAA,EAAAC,MAAA;AAAA,SAAAG,kBAAAC,EAAA,6BAAAC,IAAA,SAAAC,IAAA,GAAAC,SAAA,aAAAvB,OAAA,WAAA/B,OAAA,EAAA6C,MAAA,QAAAD,GAAA,GAAAO,EAAA,CAAAI,KAAA,CAAAH,IAAA,EAAAC,IAAA,YAAAP,MAAAnF,KAAA,IAAAgF,kBAAA,CAAAC,GAAA,EAAA5C,OAAA,EAAA6C,MAAA,EAAAC,KAAA,EAAAC,MAAA,UAAApF,KAAA,cAAAoF,OAAAS,GAAA,IAAAb,kBAAA,CAAAC,GAAA,EAAA5C,OAAA,EAAA6C,MAAA,EAAAC,KAAA,EAAAC,MAAA,WAAAS,GAAA,KAAAV,KAAA,CAAAW,SAAA;AAAAnJ,OAAO,CAAC,QAAQ,CAAC,CAACoJ,MAAM,CAAC,CAAC;AAE1B,IAAMC,MAAM;EAAA,IAAAC,IAAA,GAAAV,iBAAA,eAAArF,mBAAA,GAAA6D,IAAA,CAAG,SAAAmC,QAAOC,GAAG,EAAEC,GAAG;IAAA,OAAAlG,mBAAA,GAAAU,IAAA,UAAAyF,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAA/B,IAAA,GAAA+B,QAAA,CAAAzG,IAAA;QAAA;UAAA,OAAAyG,QAAA,CAAAtD,MAAA,WACnBoD,GAAG,CAACG,MAAM,CAAC,eAAe,CAAC;QAAA;QAAA;UAAA,OAAAD,QAAA,CAAA7B,IAAA;MAAA;IAAA,GAAAyB,OAAA;EAAA,CACrC;EAAA,gBAFKF,MAAMA,CAAAQ,EAAA,EAAAC,GAAA;IAAA,OAAAR,IAAA,CAAAL,KAAA,OAAAD,SAAA;EAAA;AAAA,GAEX;AAED,IAAMe,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,MAAM,EAAK;EACzB,IAAIC,OAAO,GAAG,YAAY;EAC1B,OAAOA,OAAO,CAAC3H,IAAI,CAAC0H,MAAM,CAAC;AAC/B,CAAC;AAED,SAASE,QAAQA,CAACF,MAAM,EAAE;EACtB,IAAIG,MAAM,GAAIH,MAAM,GAAG,EAAE,GAAI,GAAG,GAAGA,MAAM,GAAGA,MAAM;EAClD,OAAOG,MAAM;AACjB;AAEA,SAASC,SAASA,CAAA,EAA4B;EAAA,IAA3BJ,MAAM,GAAAhB,SAAA,CAAAlI,MAAA,QAAAkI,SAAA,QAAAG,SAAA,GAAAH,SAAA,MAAG,EAAE;EAAA,IAAEqB,QAAQ,GAAArB,SAAA,CAAAlI,MAAA,QAAAkI,SAAA,QAAAG,SAAA,GAAAH,SAAA,MAAG,CAAC;EACxC,IAAIsB,IAAI,GAAG,EAAE;EACT,IAAIN,MAAM,EAAE;IACRM,IAAI,GAAG,IAAIC,IAAI,CAACC,MAAM,CAACR,MAAM,CAAC,CAAC;EACnC,CAAC,MAAM;IACHM,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;EACrB;EAEAD,IAAI,CAACG,QAAQ,CAACH,IAAI,CAACI,QAAQ,CAAC,CAAC,GAAGL,QAAQ,CAAC;EAEzC,IAAIM,KAAK,GAAGT,QAAQ,CAACI,IAAI,CAACM,WAAW,CAAC,CAAC,CAAC;EACxC,IAAIC,MAAM,GAAGX,QAAQ,CAACI,IAAI,CAACQ,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1C,IAAIC,IAAI,GAAGb,QAAQ,CAACI,IAAI,CAACU,OAAO,CAAC,CAAC,CAAC;EAEnC,IAAIC,KAAK,GAAGX,IAAI,CAACI,QAAQ,CAAC,CAAC,GAAG,EAAE;EAChCO,KAAK,GAAGA,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,KAAK;EAChC,IAAIC,IAAI,GAAGZ,IAAI,CAACI,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI;EAE7C,IAAIS,OAAO,GAAGjB,QAAQ,CAACI,IAAI,CAACc,UAAU,CAAC,CAAC,CAAC;EACzC,IAAIC,OAAO,GAAGnB,QAAQ,CAACI,IAAI,CAACgB,UAAU,CAAC,CAAC,CAAC;EAEzC,OAAOX,KAAK,GAAG,GAAG,GAAGE,MAAM,GAAG,GAAG,GAAGE,IAAI,GAAG,GAAG,GAAGE,KAAK,GAAG,GAAG,GAAGE,OAAO,GAAG,GAAG,GAAGE,OAAO,GAAG,GAAG,GAAGH,IAAI;AACvG;AAEJ,IAAMK,SAAS;EAAA,IAAAC,KAAA,GAAA5C,iBAAA,eAAArF,mBAAA,GAAA6D,IAAA,CAAG,SAAAqE,SAAOC,IAAI,EAAEC,KAAK;IAAA,IAAAC,qBAAA,EAAAC,sBAAA,EAAAC,KAAA,EAAAC,MAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,IAAA,EAAAC,QAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,EAAA,EAAAC,MAAA,EAAAC,OAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,EAAA,EAAAC,MAAA,EAAAC,OAAA,EAAAC,sBAAA,EAAAC,uBAAA,EAAAC,EAAA,EAAAC,MAAA,EAAAC,OAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,EAAA,EAAAC,MAAA,EAAAC,OAAA;IAAA,OAAAhK,mBAAA,GAAAU,IAAA,UAAAuJ,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAA7F,IAAA,GAAA6F,SAAA,CAAAvK,IAAA;QAAA;UAAAuK,SAAA,CAAAvK,IAAA;UAAA,OACVwK,qBAAU,CAACC,KAAK,CAAC,sBAAsB,CAAC;QAAA;UAAA/B,qBAAA,GAAA6B,SAAA,CAAAvH,IAAA;UAAA2F,sBAAA,GAAAxK,cAAA,CAAAuK,qBAAA;UAAvDE,KAAK,GAAAD,sBAAA;UACRE,MAAM,GAAGD,KAAK,CAAC,CAAC,CAAC;UAAA2B,SAAA,CAAAvK,IAAA;UAAA,OAEAwK,qBAAU,CAACC,KAAK,CAAC,oFAAoF,EAAE,CAACjC,IAAI,CAAC,CAAC;QAAA;UAAAM,sBAAA,GAAAyB,SAAA,CAAAvH,IAAA;UAAA+F,sBAAA,GAAA5K,cAAA,CAAA2K,sBAAA;UAA5HE,IAAI,GAAAD,sBAAA;UACPE,QAAQ,GAAGD,IAAI,CAAC,CAAC,CAAC;UAAAuB,SAAA,CAAAvK,IAAA;UAAA,OACHwK,qBAAU,CAACC,KAAK,CAAC,2FAA2F,EAAE,CAACxB,QAAQ,CAACyB,MAAM,CAAC,CAAC;QAAA;UAAAxB,sBAAA,GAAAqB,SAAA,CAAAvH,IAAA;UAAAmG,sBAAA,GAAAhL,cAAA,CAAA+K,sBAAA;UAA5IE,EAAE,GAAAD,sBAAA;UAAA,MACLV,KAAK,IAAI,KAAK;YAAA8B,SAAA,CAAAvK,IAAA;YAAA;UAAA;UAAA,MACVoJ,EAAE,CAACxL,MAAM,GAAG,CAAC;YAAA2M,SAAA,CAAAvK,IAAA;YAAA;UAAA;UACTqJ,MAAM,GAAGD,EAAE,CAAC,CAAC,CAAC;UACdE,OAAO,GAAIb,KAAK,GAAG,GAAG,GAAII,MAAM,CAACO,EAAE;UAAAmB,SAAA,CAAAvK,IAAA;UAAA,OACjCwK,qBAAU,CAACC,KAAK,CAAC,oIAAoI,EAAE,CAACnB,OAAO,EAAEA,OAAO,EAAEA,OAAO,EAAEA,OAAO,EAAED,MAAM,CAACsB,KAAK,CAAC,CAAC;QAAA;UAAAJ,SAAA,CAAAvK,IAAA;UAAA,OAC7LwK,qBAAU,CAACC,KAAK,CAAC,2FAA2F,EAAE,CAACpB,MAAM,CAACqB,MAAM,CAAC,CAAC;QAAA;UAAAnB,sBAAA,GAAAgB,SAAA,CAAAvH,IAAA;UAAAwG,sBAAA,GAAArL,cAAA,CAAAoL,sBAAA;UAA1IE,EAAE,GAAAD,sBAAA;UAAA,MACLC,EAAE,CAAC7L,MAAM,GAAG,CAAC;YAAA2M,SAAA,CAAAvK,IAAA;YAAA;UAAA;UACT0J,MAAM,GAAGD,EAAE,CAAC,CAAC,CAAC;UACdE,OAAO,GAAIlB,KAAK,GAAG,GAAG,GAAII,MAAM,CAACY,EAAE;UAAAc,SAAA,CAAAvK,IAAA;UAAA,OACjCwK,qBAAU,CAACC,KAAK,CAAC,2GAA2G,EAAE,CAACd,OAAO,EAAEA,OAAO,EAAEA,OAAO,EAAED,MAAM,CAACiB,KAAK,CAAC,CAAC;QAAA;UAAAJ,SAAA,CAAAvK,IAAA;UAAA,OAC3JwK,qBAAU,CAACC,KAAK,CAAC,2FAA2F,EAAE,CAACf,MAAM,CAACgB,MAAM,CAAC,CAAC;QAAA;UAAAd,sBAAA,GAAAW,SAAA,CAAAvH,IAAA;UAAA6G,uBAAA,GAAA1L,cAAA,CAAAyL,sBAAA;UAA1IE,EAAE,GAAAD,uBAAA;UAAA,MACLC,EAAE,CAAClM,MAAM,GAAG,CAAC;YAAA2M,SAAA,CAAAvK,IAAA;YAAA;UAAA;UACT+J,MAAM,GAAGD,EAAE,CAAC,CAAC,CAAC;UACdE,OAAO,GAAIvB,KAAK,GAAG,GAAG,GAAII,MAAM,CAACiB,EAAE;UAAAS,SAAA,CAAAvK,IAAA;UAAA,OACjCwK,qBAAU,CAACC,KAAK,CAAC,2GAA2G,EAAE,CAACT,OAAO,EAAEA,OAAO,EAAEA,OAAO,EAAED,MAAM,CAACY,KAAK,CAAC,CAAC;QAAA;UAAAJ,SAAA,CAAAvK,IAAA;UAAA,OAC3JwK,qBAAU,CAACC,KAAK,CAAC,2FAA2F,EAAE,CAACV,MAAM,CAACW,MAAM,CAAC,CAAC;QAAA;UAAAT,uBAAA,GAAAM,SAAA,CAAAvH,IAAA;UAAAkH,uBAAA,GAAA/L,cAAA,CAAA8L,uBAAA;UAA1IE,EAAE,GAAAD,uBAAA;UAAA,MACLC,EAAE,CAACvM,MAAM,GAAG,CAAC;YAAA2M,SAAA,CAAAvK,IAAA;YAAA;UAAA;UACToK,MAAM,GAAGD,EAAE,CAAC,CAAC,CAAC;UACdE,OAAO,GAAI5B,KAAK,GAAG,GAAG,GAAII,MAAM,CAACsB,EAAE;UAAAI,SAAA,CAAAvK,IAAA;UAAA,OACjCwK,qBAAU,CAACC,KAAK,CAAC,2GAA2G,EAAE,CAACJ,OAAO,EAAEA,OAAO,EAAEA,OAAO,EAAED,MAAM,CAACO,KAAK,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAJ,SAAA,CAAA3F,IAAA;MAAA;IAAA,GAAA2D,QAAA;EAAA,CAOrM;EAAA,gBAjCKF,SAASA,CAAAuC,GAAA,EAAAC,GAAA;IAAA,OAAAvC,KAAA,CAAAvC,KAAA,OAAAD,SAAA;EAAA;AAAA,GAiCd;AAED,IAAMgF,WAAW;EAAA,IAAAC,KAAA,GAAArF,iBAAA,eAAArF,mBAAA,GAAA6D,IAAA,CAAG,SAAA8G,SAAOC,IAAI,EAAEC,SAAS,EAAEC,CAAC,EAAE1C,KAAK,EAAE2C,IAAI;IAAA,IAAAC,SAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,SAAA,EAAAC,UAAA,EAAArN,GAAA,EAAAR,MAAA,EAAAJ,CAAA,EAAAkO,OAAA,EAAAC,IAAA,EAAAC,OAAA,EAAAC,EAAA,EAAAC,OAAA;IAAA,OAAAzL,mBAAA,GAAAU,IAAA,UAAAgL,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAtH,IAAA,GAAAsH,SAAA,CAAAhM,IAAA;QAAA;UAClDqL,SAAS,GAAGxE,QAAQ,CAACqE,SAAS,CAAC;UAC/BI,MAAM,GAAGzE,QAAQ,CAACsE,CAAC,CAAC;UAClBI,MAAM,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,CAAC,CAACU,QAAQ,CAAChB,IAAI,CAAC;UAC1DO,SAAS,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAACS,QAAQ,CAACC,MAAM,CAACd,IAAI,CAAC,CAAC;UACxDK,UAAU,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAC,CAACQ,QAAQ,CAACxD,KAAK,CAAC;UAAA,MAErE,CAAC8C,MAAM,IAAIL,SAAS,CAACtN,MAAM,GAAG,EAAE,IAAI,CAAC0N,MAAM,IAAI,CAACG,UAAU,IAAI,CAACD,SAAS;YAAAQ,SAAA,CAAAhM,IAAA;YAAA;UAAA;UAAA,OAAAgM,SAAA,CAAA7I,MAAA,WACjE,KAAK;QAAA;UAAA,KAGZkI,SAAS;YAAAW,SAAA,CAAAhM,IAAA;YAAA;UAAA;UACL5B,GAAG,GAAG8M,SAAS,CAACiB,KAAK,CAAC,EAAE,CAAC;UACzBvO,MAAM,GAAGQ,GAAG,CAACR,MAAM;UACdJ,CAAC,GAAG,CAAC;QAAA;UAAA,MAAEA,CAAC,GAAGI,MAAM;YAAAoO,SAAA,CAAAhM,IAAA;YAAA;UAAA;UAChB0L,OAAO,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAACO,QAAQ,CAAC7N,GAAG,CAACZ,CAAC,CAAC,CAAC;UAAA,IAC9EkO,OAAO;YAAAM,SAAA,CAAAhM,IAAA;YAAA;UAAA;UAAA,OAAAgM,SAAA,CAAA7I,MAAA,WACD,KAAK;QAAA;UAHQ3F,CAAC,EAAE;UAAAwO,SAAA,CAAAhM,IAAA;UAAA;QAAA;UAAAgM,SAAA,CAAAhM,IAAA;UAAA;QAAA;UAO3B5B,IAAG,GAAG8M,SAAS,CAACiB,KAAK,CAAC,EAAE,CAAC;UACzBvO,OAAM,GAAGQ,IAAG,CAACR,MAAM;UACdJ,EAAC,GAAG,CAAC;QAAA;UAAA,MAAEA,EAAC,GAAGI,OAAM;YAAAoO,SAAA,CAAAhM,IAAA;YAAA;UAAA;UAChB8L,OAAO,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAACG,QAAQ,CAAC7N,IAAG,CAACZ,EAAC,CAAC,CAAC;UAAA,IAChDsO,OAAO;YAAAE,SAAA,CAAAhM,IAAA;YAAA;UAAA;UAAA,OAAAgM,SAAA,CAAA7I,MAAA,WACD,KAAK;QAAA;UAHQ3F,EAAC,EAAE;UAAAwO,SAAA,CAAAhM,IAAA;UAAA;QAAA;UAAA,OAAAgM,SAAA,CAAA7I,MAAA,WAS5B,IAAI;QAAA;QAAA;UAAA,OAAA6I,SAAA,CAAApH,IAAA;MAAA;IAAA,GAAAoG,QAAA;EAAA,CACd;EAAA,gBAjCKF,WAAWA,CAAAsB,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA;IAAA,OAAAzB,KAAA,CAAAhF,KAAA,OAAAD,SAAA;EAAA;AAAA,GAiChB;AAED,IAAM2G,KAAK;EAAA,IAAAC,KAAA,GAAAhH,iBAAA,eAAArF,mBAAA,GAAA6D,IAAA,CAAG,SAAAyI,SAAOrG,GAAG,EAAEC,GAAG;IAAA,IAAAqG,SAAA,EAAAC,QAAA,EAAAzB,IAAA,EAAA0B,QAAA,EAAAC,MAAA,EAAAtE,KAAA,EAAAD,IAAA,EAAAwE,uBAAA,EAAAC,uBAAA,EAAAC,KAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAApE,IAAA,EAAAC,QAAA,EAAAoE,MAAA,EAAAjG,IAAA,EAAAK,KAAA,EAAAE,MAAA,EAAAE,IAAA,EAAAyF,UAAA,EAAAC,KAAA,EAAAC,OAAA,EAAAC,UAAA,EAAAC,SAAA,EAAAC,KAAA,EAAAvP,GAAA,EAAAZ,CAAA,EAAAoQ,SAAA,EAAAC,cAAA,EAAAC,SAAA,EAAAC,iBAAA,EAAAC,WAAA,EAAAC,eAAA,EAAAC,OAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,UAAA,EAAAC,GAAA,EAAAC,KAAA,EAAAC,QAAA,EAAAC,KAAA,EAAAC,OAAA,EAAAC,GAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,KAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAArG,KAAA,EAAAC,MAAA,EAAAqG,IAAA,EAAAC,OAAA,EAAA/F,EAAA,EAAAK,EAAA,EAAAK,EAAA,EAAAK,EAAA;IAAA,OAAA9J,mBAAA,GAAAU,IAAA,UAAAqO,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAA3K,IAAA,GAAA2K,SAAA,CAAArP,IAAA;QAAA;UAAAqP,SAAA,CAAA3K,IAAA;UAAAkI,SAAA,GAE6BtG,GAAG,CAACgJ,IAAI,EAApDzC,QAAQ,GAAAD,SAAA,CAARC,QAAQ,EAAEzB,IAAI,GAAAwB,SAAA,CAAJxB,IAAI,EAAE0B,QAAQ,GAAAF,SAAA,CAARE,QAAQ,EAAEC,MAAM,GAAAH,SAAA,CAANG,MAAM,EAAEtE,KAAK,GAAAmE,SAAA,CAALnE,KAAK;UACzCD,IAAI,GAAGlC,GAAG,CAACiJ,OAAO,CAAC/G,IAAI,EAE3B;UAEA;UACA;UACA;UACA;UACA;UACA;UAAA6G,SAAA,CAAArP,IAAA;UAAA,OAEsBwK,qBAAU,CAACC,KAAK,sDAAA+E,MAAA,CAAsDpE,IAAI,+BAA4B,CAAC;QAAA;UAAA4B,uBAAA,GAAAqC,SAAA,CAAArM,IAAA;UAAAiK,uBAAA,GAAA9O,cAAA,CAAA6O,uBAAA;UAAtHE,KAAK,GAAAD,uBAAA;UAAAoC,SAAA,CAAArP,IAAA;UAAA,OACSwK,qBAAU,CAACC,KAAK,CAAC,sGAAsG,EAAE,CAACjC,IAAI,CAAC,CAAC;QAAA;UAAA2E,uBAAA,GAAAkC,SAAA,CAAArM,IAAA;UAAAoK,uBAAA,GAAAjP,cAAA,CAAAgP,uBAAA;UAA9InE,IAAI,GAAAoE,uBAAA;UAAA,MACPF,KAAK,CAACtP,MAAM,GAAG,CAAC,IAAIoL,IAAI,CAACpL,MAAM,GAAG,CAAC;YAAAyR,SAAA,CAAArP,IAAA;YAAA;UAAA;UAAA,OAAAqP,SAAA,CAAAlM,MAAA,WAC5BoD,GAAG,CAACkJ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE;UACZ,CAAC,CAAC;QAAA;UAEFxG,QAAQ,GAAGD,IAAI,CAAC,CAAC,CAAC;UAClBqE,MAAM,GAAGH,KAAK,CAAC,CAAC,CAAC;UAEjB9F,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;UACjBI,KAAK,GAAGT,QAAQ,CAACI,IAAI,CAACM,WAAW,CAAC,CAAC,CAAC;UACpCC,MAAM,GAAGX,QAAQ,CAACI,IAAI,CAACQ,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;UACtCC,IAAI,GAAGb,QAAQ,CAACI,IAAI,CAACU,OAAO,CAAC,CAAC,CAAC;UAC/BwF,UAAU,GAAG7F,KAAK,GAAGE,MAAM,GAAGE,IAAI,GAAG+H,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,gBAAgB,CAAC;UAEjFvC,KAAK,GAAG,CAAC;UACb,IAAIT,QAAQ,IAAI,CAAC,EAAE;YACfS,KAAK,GAAG9E,KAAK,GAAGsE,MAAM,GAAIb,MAAM,CAACW,QAAQ,CAAC,CAACV,KAAK,CAAC,GAAG,CAAC,CAACvO,MAAO;UACjE,CAAC,MAAM,IAAIkP,QAAQ,IAAI,CAAC,EAAE;YAClBU,OAAO,GAAGX,QAAQ,CAACV,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;YAClCsB,UAAU,GAAGZ,QAAQ,CAACV,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;YACzC,IAAIqB,OAAO,CAAC5P,MAAM,GAAG,CAAC,EAAE;cACpB4P,OAAO,GAAGA,OAAO,CAACrB,KAAK,CAAC,GAAG,CAAC,CAACvO,MAAM;YACvC;YACI8P,SAAS,GAAG,CAAC;YACbC,KAAK,GAAG,CAAC;YACb,IAAIF,UAAU,CAAC7P,MAAM,GAAG,CAAC,EAAE;cACnBQ,GAAG,GAAGqP,UAAU,CAACtB,KAAK,CAAC,GAAG,CAAC;cAC/B,KAAS3O,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGY,GAAG,CAACR,MAAM,EAAEJ,CAAC,EAAE,EAAE;gBACjCiQ,UAAU,GAAGrP,GAAG,CAACZ,CAAC,CAAC,CAAC2O,KAAK,CAAC,GAAG,CAAC;gBAC9BwB,KAAK,GAAGF,UAAU,CAAC,CAAC,CAAC,CAACtB,KAAK,CAAC,GAAG,CAAC,CAACvO,MAAM;cAC3C;cACA8P,SAAS,GAAGtP,GAAG,CAACR,MAAM;cACtB+P,KAAK,GAAGA,KAAK;YACjB;YACAJ,KAAK,GAAG9E,KAAK,GAAGsE,MAAM,IAAIW,SAAS,GAAGC,KAAK,CAAC,GAAIH,OAAO,GAAG/E,KAAK,GAAGsE,MAAO;UAC7E,CAAC,MAAM,IAAID,QAAQ,IAAI,CAAC,EAAE;YAClBc,SAAS,GAAGf,QAAQ,CAACV,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;YACpC0B,cAAc,GAAG,CAAC;YACtB,IAAID,SAAS,CAAChQ,MAAM,GAAG,CAAC,EAAE;cACtBiQ,cAAc,GAAGD,SAAS,CAACzB,KAAK,CAAC,GAAG,CAAC,CAACvO,MAAM;YAChD;YACIkQ,SAAS,GAAGjB,QAAQ,CAACV,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACvO,MAAM,EAAE;YAC/C2P,KAAK,GAAG9E,KAAK,GAAGsE,MAAM,GAAGc,cAAc,GAAIC,SAAS,GAAGrF,KAAK,GAAGsE,MAAO;UAC1E,CAAC,MAAM,IAAID,QAAQ,IAAI,CAAC,EAAE;YAClBiB,iBAAiB,GAAGlB,QAAQ,CAACV,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;YAC5C6B,WAAW,GAAGnB,QAAQ,CAACV,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;YACtC8B,eAAe,GAAGpB,QAAQ,CAACV,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;YAE1C+B,OAAO,GAAG,CAAC;YACf,IAAIH,iBAAiB,CAACnQ,MAAM,GAAG,CAAC,EAAE;cAC1BQ,KAAG,GAAG2P,iBAAiB,CAAC5B,KAAK,CAAC,GAAG,CAAC,CAACvO,MAAM;cAC7C,IAAIQ,KAAG,IAAI,CAAC,EAAE;gBACV8P,OAAO,IAAInB,MAAM,IAAItE,KAAK,GAAGrK,KAAG,CAAC;cACrC;cACA,IAAIA,KAAG,IAAI,CAAC,EAAE;gBACV8P,OAAO,IAAInB,MAAM,IAAItE,KAAK,GAAGrK,KAAG,CAAC,GAAG,CAAC;cACzC;cACA,IAAIA,KAAG,IAAI,CAAC,EAAE;gBACV8P,OAAO,IAAInB,MAAM,IAAItE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC;cACvC;YACJ;YACI2F,KAAK,GAAG,CAAC;YACb,IAAIH,eAAe,CAACrQ,MAAM,GAAG,CAAC,EAAE;cACxBQ,KAAG,GAAG6P,eAAe,CAAC9B,KAAK,CAAC,GAAG,CAAC,CAACvO,MAAM;cAC3C,IAAIQ,KAAG,IAAI,CAAC,EAAE;gBACVgQ,KAAK,IAAIrB,MAAM,IAAItE,KAAK,GAAGrK,KAAG,CAAC;cACnC;cACA,IAAIA,KAAG,IAAI,CAAC,EAAE;gBACVgQ,KAAK,IAAIrB,MAAM,IAAItE,KAAK,GAAGrK,KAAG,CAAC,GAAG,GAAG;cACzC;cACA,IAAIA,KAAG,IAAI,CAAC,EAAE;gBACVgQ,KAAK,IAAIrB,MAAM,IAAItE,KAAK,GAAGrK,KAAG,CAAC,GAAG,CAAC;cACvC;cACA,IAAIA,KAAG,IAAI,CAAC,EAAE;gBACVgQ,KAAK,IAAIrB,MAAM,IAAItE,KAAK,GAAGrK,KAAG,GAAG,GAAG,CAAC;cACzC;YACJ;YACIkQ,UAAU,GAAG,CAAC;YAClB,IAAIN,WAAW,IAAI,GAAG,EAAE;cACpBM,UAAU,IAAIvB,MAAM,GAAGtE,KAAK;YAChC;YACA8E,KAAK,GAAGW,OAAO,GAAGE,KAAK,GAAGE,UAAU;UACxC;UACIC,GAAG,GAAGhB,KAAK,GAAG,IAAI;UAClBiB,KAAK,GAAGjB,KAAK,GAAGgB,GAAG;UAEnBE,QAAQ,GAAG,EAAE;UACjB,IAAI3B,QAAQ,IAAI,CAAC,EAAE2B,QAAQ,GAAG,OAAO;UACrC,IAAI3B,QAAQ,IAAI,CAAC,EAAE2B,QAAQ,GAAG,UAAU;UACxC,IAAI3B,QAAQ,IAAI,CAAC,EAAE2B,QAAQ,GAAG,YAAY;UAC1C,IAAI3B,QAAQ,IAAI,CAAC,EAAE2B,QAAQ,GAAG,QAAQ;UAGlCC,KAAK,GAAGzF,QAAQ,CAACR,KAAK,GAAG8E,KAAK;UAAA,MAC9BmB,KAAK,IAAI,CAAC;YAAAW,SAAA,CAAArP,IAAA;YAAA;UAAA;UACN2O,OAAO,GAAGtH,IAAI,CAAC0I,GAAG,CAAC,CAAC;UAClBnB,GAAG;UAAAS,SAAA,CAAArP,IAAA;UAAA,OACHwK,qBAAU,CAACwF,OAAO,CAACpB,GAAG,EAAE,CAACtB,UAAU,EAAErE,QAAQ,CAAC0B,KAAK,EAAE1B,QAAQ,CAACgH,IAAI,EAAEhH,QAAQ,CAACyB,MAAM,EAAE2C,MAAM,CAACA,MAAM,EAAEpE,QAAQ,CAACL,KAAK,EAAE2E,KAAK,EAAEiB,KAAK,EAAEzB,MAAM,EAAEwB,GAAG,EAAEnD,IAAI,EAAE0B,QAAQ,EAAE2B,QAAQ,EAAE5B,QAAQ,EAAE,CAAC,EAAE8B,OAAO,CAAC,CAAC;QAAA;UAAAU,SAAA,CAAArP,IAAA;UAAA,OAC/LwK,qBAAU,CAACwF,OAAO,CAAC,6DAA6D,EAAE,CAACzC,KAAK,EAAE/E,IAAI,CAAC,CAAC;QAAA;UAAA6G,SAAA,CAAArP,IAAA;UAAA,OAChFwK,qBAAU,CAACC,KAAK,CAAC,2EAA2E,EAAE,CAACjC,IAAI,CAAC,CAAC;QAAA;UAAAqG,uBAAA,GAAAQ,SAAA,CAAArM,IAAA;UAAA8L,uBAAA,GAAA3Q,cAAA,CAAA0Q,uBAAA;UAApHE,KAAK,GAAAD,uBAAA;UAAAO,SAAA,CAAArP,IAAA;UAAA,OACNqI,SAAS,CAACG,IAAI,EAAE+E,KAAK,CAAC;QAAA;UAAA8B,SAAA,CAAArP,IAAA;UAAA,OACNwK,qBAAU,CAACC,KAAK,CAAC,sBAAsB,CAAC;QAAA;UAAAuE,uBAAA,GAAAK,SAAA,CAAArM,IAAA;UAAAiM,uBAAA,GAAA9Q,cAAA,CAAA6Q,uBAAA;UAAvDpG,KAAK,GAAAqG,uBAAA;UACRpG,MAAM,GAAGD,KAAK,CAAC,CAAC,CAAC;UACfsG,IAAI;UACNC,OAAO,GAAG5B,KAAK;UACfnE,EAAE,GAAI+F,OAAO,GAAG,GAAG,GAAItG,MAAM,CAACO,EAAE;UAChCK,EAAE,GAAI0F,OAAO,GAAG,GAAG,GAAItG,MAAM,CAACY,EAAE;UAChCK,EAAE,GAAIqF,OAAO,GAAG,GAAG,GAAItG,MAAM,CAACiB,EAAE;UAChCK,EAAE,GAAIgF,OAAO,GAAG,GAAG,GAAItG,MAAM,CAACsB,EAAE;UAAAkF,SAAA,CAAArP,IAAA;UAAA,OAC9BwK,qBAAU,CAACwF,OAAO,CAACd,IAAI,EAAE,CAACjG,QAAQ,CAAC0B,KAAK,EAAE1B,QAAQ,CAACgH,IAAI,EAAEhH,QAAQ,CAACyB,MAAM,EAAEtB,EAAE,EAAEK,EAAE,EAAEK,EAAE,EAAEK,EAAE,EAAEwE,OAAO,CAAC,CAAC;QAAA;UAAA,OAAAU,SAAA,CAAAlM,MAAA,WAClGoD,GAAG,CAACkJ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,gBAAgB;YACzBF,MAAM,EAAE,IAAI;YACZ;YACAS,MAAM,EAAEnB,KAAK,CAAC,CAAC,CAAC,CAACnG,KAAK;YACtBH,KAAK,EAAEsG,KAAK,CAAC,CAAC,CAAC,CAACtG;UACpB,CAAC,CAAC;QAAA;UAAA,OAAA4G,SAAA,CAAAlM,MAAA,WAEKoD,GAAG,CAACkJ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,0BAA0B;YACnCF,MAAM,EAAE;UACZ,CAAC,CAAC;QAAA;UAAAJ,SAAA,CAAArP,IAAA;UAAA;QAAA;UAAAqP,SAAA,CAAA3K,IAAA;UAAA2K,SAAA,CAAAc,EAAA,GAAAd,SAAA;QAAA;QAAA;UAAA,OAAAA,SAAA,CAAAzK,IAAA;MAAA;IAAA,GAAA+H,QAAA;EAAA,CAIb;EAAA,gBA9IKF,KAAKA,CAAA2D,IAAA,EAAAC,IAAA;IAAA,OAAA3D,KAAA,CAAA3G,KAAA,OAAAD,SAAA;EAAA;AAAA,GA8IV;AAED,SAASwK,MAAMA,CAAC1S,MAAM,EAAE;EACpB,IAAIqJ,MAAM,GAAG,EAAE;EACf,IAAIsJ,UAAU,GAAG,QAAQ;EACzB,IAAIC,gBAAgB,GAAGD,UAAU,CAAC3S,MAAM;EACxC,KAAK,IAAIJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGI,MAAM,EAAEJ,CAAC,EAAE,EAAE;IAC7ByJ,MAAM,IAAIsJ,UAAU,CAAC5L,MAAM,CAACiL,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGU,gBAAgB,CAAC,CAAC;EAC7E;EACA,OAAOvJ,MAAM;AACjB;AAEA,IAAMwJ,KAAK;EAAA,IAAAC,KAAA,GAAAhL,iBAAA,eAAArF,mBAAA,GAAA6D,IAAA,CAAG,SAAAyM,SAAOvF,IAAI;IAAA,IAAAH,IAAA,EAAA2F,OAAA,EAAAjC,OAAA,EAAAkC,uBAAA,EAAAC,uBAAA,EAAAC,GAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,OAAA,EAAA7D,MAAA,EAAA8D,UAAA,EAAAC,MAAA,EAAAnK,MAAA,EAAA7I,GAAA,EAAAsQ,KAAA,EAAAlR,CAAA,EAAAoR,GAAA;IAAA,OAAAvO,mBAAA,GAAAU,IAAA,UAAAsQ,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAA5M,IAAA,GAAA4M,SAAA,CAAAtR,IAAA;QAAA;UAAAsR,SAAA,CAAA5M,IAAA;UAEbuG,IAAI,GAAG,EAAE;UACb,IAAIG,IAAI,IAAI,CAAC,EAAEH,IAAI,GAAG,KAAK;UAC3B,IAAIG,IAAI,IAAI,CAAC,EAAEH,IAAI,GAAG,MAAM;UAC5B,IAAIG,IAAI,IAAI,CAAC,EAAEH,IAAI,GAAG,MAAM;UAC5B,IAAIG,IAAI,IAAI,EAAE,EAAEH,IAAI,GAAG,OAAO;UAE1B2F,OAAO,GAAGN,MAAM,CAAC,CAAC,CAAC;UACnB3B,OAAO,GAAGtH,IAAI,CAAC0I,GAAG,CAAC,CAAC;UAAAuB,SAAA,CAAAtR,IAAA;UAAA,OACNwK,qBAAU,CAACC,KAAK,sDAAA+E,MAAA,CAAsDpE,IAAI,+BAA4B,CAAC;QAAA;UAAAyF,uBAAA,GAAAS,SAAA,CAAAtO,IAAA;UAAA8N,uBAAA,GAAA3S,cAAA,CAAA0S,uBAAA;UAApHE,GAAG,GAAAD,uBAAA;UAAAQ,SAAA,CAAAtR,IAAA;UAAA,OACgBwK,qBAAU,CAACC,KAAK,CAAC,wBAAwB,CAAC;QAAA;UAAAuG,uBAAA,GAAAM,SAAA,CAAAtO,IAAA;UAAAiO,uBAAA,GAAA9S,cAAA,CAAA6S,uBAAA;UAA3DE,OAAO,GAAAD,uBAAA;UACV5D,MAAM,GAAG0D,GAAG,CAAC,CAAC,CAAC,CAAC1D,MAAM;UAEtB8D,UAAU,GAAG,EAAE;UACnB,IAAI/F,IAAI,IAAI,CAAC,EAAE+F,UAAU,GAAGD,OAAO,CAAC,CAAC,CAAC,CAACK,GAAG;UAC1C,IAAInG,IAAI,IAAI,CAAC,EAAE+F,UAAU,GAAGD,OAAO,CAAC,CAAC,CAAC,CAACM,IAAI;UAC3C,IAAIpG,IAAI,IAAI,CAAC,EAAE+F,UAAU,GAAGD,OAAO,CAAC,CAAC,CAAC,CAACO,IAAI;UAC3C,IAAIrG,IAAI,IAAI,EAAE,EAAE+F,UAAU,GAAGD,OAAO,CAAC,CAAC,CAAC,CAACQ,KAAK;UAEzCN,MAAM,GAAG,EAAE;UAAA,MACXD,UAAU,IAAI,IAAI;YAAAG,SAAA,CAAAtR,IAAA;YAAA;UAAA;UAAAsR,SAAA,CAAAtR,IAAA;UAAA,OACZwK,qBAAU,CAACwF,OAAO,sEAAAR,MAAA,CAAqEpE,IAAI,SAAK,CAACwF,OAAO,EAAE,CAAC,EAAEvD,MAAM,CAAC,CAAC;QAAA;UAC3H+D,MAAM,GAAG,IAAI;UAACE,SAAA,CAAAtR,IAAA;UAAA;QAAA;UAEViH,MAAM,GAAG,EAAE;UACX7I,GAAG,GAAG+S,UAAU,CAAChF,KAAK,CAAC,GAAG,CAAC;UAC3BuC,KAAK,GAAGtQ,GAAG,CAACR,MAAM;UACtB,IAAI8Q,KAAK,IAAI,CAAC,EAAE;YACZ0C,MAAM,GAAG,IAAI;UACjB,CAAC,MAAM;YACH,KAAS5T,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGY,GAAG,CAACR,MAAM,EAAEJ,CAAC,EAAE,EAAE;cACjC4T,MAAM,IAAIhT,GAAG,CAACZ,CAAC,CAAC,GAAG,GAAG;YAC1B;YACA4T,MAAM,GAAGA,MAAM,CAACrS,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;UAChC;UACAkI,MAAM,GAAG7I,GAAG,CAAC,CAAC,CAAC;UAACkT,SAAA,CAAAtR,IAAA;UAAA,OACVwK,qBAAU,CAACwF,OAAO,oEAAAR,MAAA,CAAoEpE,IAAI,GAAI,CAACnE,MAAM,EAAE,CAAC,EAAEoG,MAAM,CAAC,CAAC;QAAA;UAEtHuB,GAAG;UAAA0C,SAAA,CAAAtR,IAAA;UAAA,OACHwK,qBAAU,CAACwF,OAAO,CAACpB,GAAG,EAAE,CAACtH,MAAM,CAAC+F,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,EAAEjC,IAAI,EAAE,CAAC,EAAEuD,OAAO,CAAC,CAAC;QAAA;UAExE,IAAIvD,IAAI,IAAI,CAAC,EAAEH,IAAI,GAAG,KAAK;UAC3B,IAAIG,IAAI,IAAI,CAAC,EAAEH,IAAI,GAAG,MAAM;UAC5B,IAAIG,IAAI,IAAI,CAAC,EAAEH,IAAI,GAAG,MAAM;UAC5B,IAAIG,IAAI,IAAI,EAAE,EAAEH,IAAI,GAAG,OAAO;UAACqG,SAAA,CAAAtR,IAAA;UAAA,OAEzBwK,qBAAU,CAACwF,OAAO,qBAAAR,MAAA,CAAqBvE,IAAI,WAAQ,CAACmG,MAAM,CAAC,CAAC;QAAA;UAAAE,SAAA,CAAAtR,IAAA;UAAA;QAAA;UAAAsR,SAAA,CAAA5M,IAAA;UAAA4M,SAAA,CAAAnB,EAAA,GAAAmB,SAAA;UAElE,IAAAA,SAAA,CAAAnB,EAAA,EAAW,CACX;QAAC;QAAA;UAAA,OAAAmB,SAAA,CAAA1M,IAAA;MAAA;IAAA,GAAA+L,QAAA;EAAA,CAER;EAAA,gBApDKF,KAAKA,CAAAkB,IAAA;IAAA,OAAAjB,KAAA,CAAA3K,KAAA,OAAAD,SAAA;EAAA;AAAA,GAoDV;AAAA,SAEc8L,UAAUA,CAAAC,IAAA;EAAA,OAAAC,WAAA,CAAA/L,KAAA,OAAAD,SAAA;AAAA;AAAA,SAAAgM,YAAA;EAAAA,WAAA,GAAApM,iBAAA,eAAArF,mBAAA,GAAA6D,IAAA,CAAzB,SAAA6N,SAA0B3G,IAAI;IAAA,IAAA4G,uBAAA,EAAAC,uBAAA,EAAAC,GAAA,EAAAC,OAAA,EAAAlL,MAAA,EAAAsG,KAAA,EAAA/P,CAAA,EAAA4U,qBAAA,EAAAC,sBAAA,EAAAC,WAAA,EAAAC,MAAA,EAAAC,GAAA,EAAAC,IAAA,EAAAC,OAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,YAAA,EAAAC,YAAA,EAAAC,GAAA,EAAAC,KAAA,EAAAC,EAAA,EAAAC,KAAA,EAAAC,EAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,MAAA,EAAAC,OAAA,EAAAC,MAAA,EAAAC,GAAA,EAAAzC,MAAA,EAAA0C,OAAA,EAAAC,QAAA,EAAAC,QAAA,EAAAC,QAAA,EAAAC,QAAA,EAAAC,OAAA,EAAAvD,OAAA,EAAAwD,MAAA,EAAAC,GAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,OAAA,EAAAC,QAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,GAAA,EAAAC,GAAA,EAAApG,KAAA,EAAAqG,OAAA,EAAAC,GAAA,EAAAC,OAAA,EAAAC,QAAA,EAAAC,QAAA,EAAAC,SAAA,EAAAC,SAAA,EAAAC,SAAA,EAAAC,SAAA,EAAAC,SAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,SAAA,EAAAC,UAAA,EAAAC,GAAA,EAAAC,MAAA,EAAAC,GAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,OAAA,EAAAC,OAAA,EAAAC,SAAA,EAAAC,QAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,QAAA,EAAAC,IAAA,EAAAC,QAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,MAAA,EAAAC,OAAA,EAAAC,GAAA,EAAAC,MAAA,EAAAC,IAAA,EAAAC,OAAA,EAAAC,OAAA,EAAAC,KAAA,EAAAC,OAAA,EAAAC,OAAA,EAAAC,OAAA,EAAAC,GAAA,EAAAC,SAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,GAAA,EAAAC,SAAA,EAAAC,UAAA,EAAAC,UAAA,EAAAC,IAAA,EAAAC,UAAA,EAAAC,OAAA,EAAAC,OAAA,EAAAC,KAAA,EAAAC,OAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,UAAA,EAAAC,IAAA,EAAAC,UAAA,EAAAC,OAAA,EAAAC,QAAA,EAAAC,KAAA,EAAAC,QAAA,EAAAC,QAAA,EAAAC,IAAA,EAAAC,UAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,IAAA,EAAAC,UAAA,EAAAC,UAAA,EAAAC,UAAA,EAAAC,QAAA,EAAAC,QAAA,EAAAC,KAAA,EAAAC,QAAA,EAAAC,QAAA,EAAAC,IAAA,EAAAC,UAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,IAAA,EAAAC,UAAA,EAAAC,UAAA,EAAAC,UAAA,EAAAC,QAAA,EAAAC,QAAA,EAAAC,KAAA,EAAAC,QAAA,EAAAC,IAAA,EAAAC,UAAA,EAAAC,QAAA,EAAAC,QAAA,EAAAC,KAAA,EAAAC,QAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,IAAA,EAAAC,UAAA,EAAAC,UAAA,EAAAC,UAAA,EAAAC,QAAA,EAAAC,QAAA,EAAAC,KAAA,EAAAC,QAAA,EAAAC,IAAA,EAAAC,UAAA;IAAA,OAAAzb,mBAAA,GAAAU,IAAA,UAAAgb,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAtX,IAAA,GAAAsX,SAAA,CAAAhc,IAAA;QAAA;UAAAgc,SAAA,CAAAhc,IAAA;UAAA,OACNwK,qBAAU,CAACC,KAAK,kDAAA+E,MAAA,CAAkDpE,IAAI,+BAA4B,CAAC;QAAA;UAAA4G,uBAAA,GAAAgK,SAAA,CAAAhZ,IAAA;UAAAiP,uBAAA,GAAA9T,cAAA,CAAA6T,uBAAA;UAAhHE,GAAG,GAAAD,uBAAA;UACNE,OAAO,GAAGD,GAAG,CAAC,CAAC,CAAC,EAEpB;UAAA8J,SAAA,CAAAhc,IAAA;UAAA,OACMwK,qBAAU,CAACwF,OAAO,gEAAAR,MAAA,CAAgEpE,IAAI,GAAI,CAAC+G,OAAO,CAAClL,MAAM,CAAC,CAAC;QAAA;UAC7GA,MAAM,GAAGiF,MAAM,CAACiG,OAAO,CAAClL,MAAM,CAAC,CAACkF,KAAK,CAAC,EAAE,CAAC;UACzCoB,KAAK,GAAG,CAAC;UACb,KAAS/P,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyJ,MAAM,CAACrJ,MAAM,EAAEJ,CAAC,EAAE,EAAE;YACpC+P,KAAK,IAAIjG,MAAM,CAACL,MAAM,CAACzJ,CAAC,CAAC,CAAC;UAC9B;;UAEA;UAAAwe,SAAA,CAAAhc,IAAA;UAAA,OAC4BwK,qBAAU,CAACwF,OAAO,8DAAAR,MAAA,CAA8DpE,IAAI,6BAA0B,CAAC;QAAA;UAAAgH,qBAAA,GAAA4J,SAAA,CAAAhZ,IAAA;UAAAqP,sBAAA,GAAAlU,cAAA,CAAAiU,qBAAA;UAApIE,WAAW,GAAAD,sBAAA;UACdE,MAAM,GAAGD,WAAW,CAAC1U,MAAM;UACtBJ,GAAC,GAAG,CAAC;QAAA;UAAA,MAAEA,GAAC,GAAG+U,MAAM;YAAAyJ,SAAA,CAAAhc,IAAA;YAAA;UAAA;UAClByS,IAAI,GAAGH,WAAW,CAAC9U,GAAC,CAAC,CAACye,GAAG,CAAC9P,KAAK,CAAC,GAAG,CAAC,EACxC;UACA;UACA;UACA;UACIuG,OAAO,GAAGD,IAAI,CAACyJ,MAAM,CAAC,UAASC,GAAG,EAAE;YACpC,OAAOA,GAAG,IAAI5O,KAAK;UACvB,CAAC,CAAC;UAEEoF,MAAM,GAAG,KAAK;UACdC,MAAM,GAAG,KAAK;UACdC,MAAM,GAAG,KAAK;UACdC,MAAM,GAAG,KAAK;UAClB,IAAIvF,KAAK,IAAI,CAAC,IAAIA,KAAK,IAAI,EAAE,IAAIkF,IAAI,CAACxG,QAAQ,CAAC,GAAG,CAAC,EAAE;YACjD0G,MAAM,GAAG,IAAI;UACjB,CAAC,MAAM;YACHA,MAAM,GAAG,KAAK;UAClB;UACA,IAAIpF,KAAK,IAAI,EAAE,IAAIA,KAAK,IAAI,EAAE,IAAIkF,IAAI,CAACxG,QAAQ,CAAC,GAAG,CAAC,EAAE;YAClD2G,MAAM,GAAG,IAAI;UACjB,CAAC,MAAM;YACHA,MAAM,GAAG,KAAK;UAClB;UACA,IAAIrF,KAAK,GAAG,CAAC,IAAI,CAAC,IAAIkF,IAAI,CAACxG,QAAQ,CAAC,GAAG,CAAC,EAAE;YACtC4G,MAAM,GAAG,IAAI;UACjB,CAAC,MAAM;YACHA,MAAM,GAAG,KAAK;UAClB;UACA,IAAItF,KAAK,GAAG,CAAC,IAAI,CAAC,IAAIkF,IAAI,CAACxG,QAAQ,CAAC,GAAG,CAAC,EAAE;YACtC6G,MAAM,GAAG,IAAI;UACjB,CAAC,MAAM;YACHA,MAAM,GAAG,KAAK;UAClB;UAAC,MACG,CAACH,MAAM,IAAI,CAACC,MAAM,IAAI,CAACC,MAAM,IAAI,CAACC,MAAM;YAAAkJ,SAAA,CAAAhc,IAAA;YAAA;UAAA;UAAAgc,SAAA,CAAAhc,IAAA;UAAA,OAClCwK,qBAAU,CAACwF,OAAO,kDAAkD,CAACsC,WAAW,CAAC9U,GAAC,CAAC,CAAC6V,EAAE,CAAC,CAAC;QAAA;UAAA,MAE9FX,OAAO,CAAC9U,MAAM,IAAI,CAAC;YAAAoe,SAAA,CAAAhc,IAAA;YAAA;UAAA;UAAAgc,SAAA,CAAAhc,IAAA;UAAA,OACbwK,qBAAU,CAACwF,OAAO,kDAAkD,CAACsC,WAAW,CAAC9U,GAAC,CAAC,CAAC6V,EAAE,CAAC,CAAC;QAAA;UAtC1E7V,GAAC,EAAE;UAAAwe,SAAA,CAAAhc,IAAA;UAAA;QAAA;UAAAgc,SAAA,CAAAhc,IAAA;UAAA,OA2CFwK,qBAAU,CAACwF,OAAO,8DAAAR,MAAA,CAA8DpE,IAAI,gCAA6B,CAAC;QAAA;UAAA2H,sBAAA,GAAAiJ,SAAA,CAAAhZ,IAAA;UAAAgQ,sBAAA,GAAA7U,cAAA,CAAA4U,sBAAA;UAAxIE,YAAY,GAAAD,sBAAA;UACfE,YAAY,GAAGD,YAAY,CAACrV,MAAM;UAC7BJ,GAAC,GAAG,CAAC;QAAA;UAAA,MAAEA,GAAC,GAAG0V,YAAY;YAAA8I,SAAA,CAAAhc,IAAA;YAAA;UAAA;UACxByS,KAAI,GAAGQ,YAAY,CAACzV,GAAC,CAAC,CAACye,GAAG,CAAC9P,KAAK,CAAC,GAAG,CAAC;UACrCkH,EAAE,GAAGJ,YAAY,CAACzV,GAAC,CAAC,CAAC6V,EAAE;UAAA,MACvBZ,KAAI,CAAC,CAAC,CAAC,CAAC7U,MAAM,GAAG,CAAC,IAAI6U,KAAI,CAAC,CAAC,CAAC,CAAC7U,MAAM,GAAG,CAAC;YAAAoe,SAAA,CAAAhc,IAAA;YAAA;UAAA;UACpCsT,KAAK,GAAGb,KAAI,CAAC,CAAC,CAAC,CAACtG,KAAK,CAAC,GAAG,CAAC;UAC1BoH,EAAE,GAAGrH,MAAM,CAACiG,OAAO,CAAClL,MAAM,CAAC,CAACkF,KAAK,CAAC,EAAE,CAAC;UACrCqH,GAAG,GAAGD,EAAE,CAAC,CAAC,CAAC,GAAGA,EAAE,CAAC,CAAC,CAAC;UACnBE,GAAG,GAAGF,EAAE,CAAC,CAAC,CAAC,GAAGA,EAAE,CAAC,CAAC,CAAC;UAEnBZ,MAAM,GAAG,KAAK;UACdC,OAAM,GAAG,KAAK;UAEdgB,MAAM,GAAGnB,KAAI,CAAC,CAAC,CAAC,CAACtG,KAAK,CAAC,GAAG,CAAC;UAC/B,KAAS3O,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGoW,MAAM,CAAChW,MAAM,EAAEJ,GAAC,EAAE,EAAE;YAChC4T,MAAM,GAAGwC,MAAM,CAACpW,GAAC,CAAC,CAAC2O,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAChC2H,OAAO,GAAGF,MAAM,CAACpW,GAAC,CAAC,CAAC2O,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,GAAG,CAAC;YAC5C4H,QAAQ,GAAG3C,MAAM,CAACnF,QAAQ,CAACC,MAAM,CAACsH,GAAG,CAAC,CAAC;YACvCQ,QAAQ,GAAG5C,MAAM,CAACnF,QAAQ,CAACC,MAAM,CAACuH,GAAG,CAAC,CAAC;YAC3C,IAAI,CAACM,QAAQ,IAAI,CAACC,QAAQ,EAAE;cACxBrB,MAAM,GAAG,IAAI;YACjB,CAAC,MAAM,IAAIoB,QAAQ,IAAI,CAACC,QAAQ,EAAE;cAC1BC,QAAQ,GAAGH,OAAO,CAAC7H,QAAQ,CAACC,MAAM,CAACqH,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;cAC9C,IAAI,CAACU,QAAQ,EAAE;gBACXtB,MAAM,GAAG,IAAI;cACjB;YACJ,CAAC,MAAM,IAAI,CAACoB,QAAQ,IAAIC,QAAQ,EAAE;cAC1BE,QAAQ,GAAGJ,OAAO,CAAC7H,QAAQ,CAACC,MAAM,CAACqH,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;cAC9C,IAAI,CAACW,QAAQ,EAAE;gBACXvB,MAAM,GAAG,IAAI;cACjB;YACJ;UACJ;UAEIwB,OAAO,GAAGb,KAAK,CAACrH,QAAQ,CAACC,MAAM,CAACsH,GAAG,CAAC,CAAC;UACrC5C,OAAO,GAAG0C,KAAK,CAACrH,QAAQ,CAACC,MAAM,CAACuH,GAAG,CAAC,CAAC;UACzC,IAAI,CAACU,OAAO,IAAI,CAACvD,OAAO,EAAE;YACtBgC,OAAM,GAAG,IAAI;UACjB;UAAC,MACGD,MAAM,IAAIC,OAAM;YAAAoJ,SAAA,CAAAhc,IAAA;YAAA;UAAA;UAAAgc,SAAA,CAAAhc,IAAA;UAAA,OACVwK,qBAAU,CAACwF,OAAO,kDAAkD,CAACqD,EAAE,CAAC,CAAC;QAAA;UAAA2I,SAAA,CAAAhc,IAAA;UAAA;QAAA;UAAA,MAE5EyS,KAAI,CAAC,CAAC,CAAC,CAAC7U,MAAM,GAAG,CAAC,IAAI6U,KAAI,CAAC,CAAC,CAAC,CAAC7U,MAAM,IAAI,CAAC;YAAAoe,SAAA,CAAAhc,IAAA;YAAA;UAAA;UAC5CsT,MAAK,GAAGb,KAAI,CAAC,CAAC,CAAC,CAACtG,KAAK,CAAC,GAAG,CAAC;UAC1BoH,GAAE,GAAGrH,MAAM,CAACiG,OAAO,CAAClL,MAAM,CAAC,CAACkF,KAAK,CAAC,EAAE,CAAC;UACrCqH,IAAG,GAAGD,GAAE,CAAC,CAAC,CAAC,GAAGA,GAAE,CAAC,CAAC,CAAC;UACnBE,IAAG,GAAGF,GAAE,CAAC,CAAC,CAAC,GAAGA,GAAE,CAAC,CAAC,CAAC;UACnBY,OAAO,GAAGb,MAAK,CAACrH,QAAQ,CAACC,MAAM,CAACsH,IAAG,CAAC,CAAC;UACrC5C,QAAO,GAAG0C,MAAK,CAACrH,QAAQ,CAACC,MAAM,CAACuH,IAAG,CAAC,CAAC;UAAA,MACrC,CAACU,OAAO,IAAI,CAACvD,QAAO;YAAAoL,SAAA,CAAAhc,IAAA;YAAA;UAAA;UAAAgc,SAAA,CAAAhc,IAAA;UAAA,OACdwK,qBAAU,CAACwF,OAAO,kDAAkD,CAACqD,EAAE,CAAC,CAAC;QAAA;UAAA2I,SAAA,CAAAhc,IAAA;UAAA;QAAA;UAAA,MAE5EyS,KAAI,CAAC,CAAC,CAAC,CAAC7U,MAAM,IAAI,CAAC,IAAI6U,KAAI,CAAC,CAAC,CAAC,CAAC7U,MAAM,GAAG,CAAC;YAAAoe,SAAA,CAAAhc,IAAA;YAAA;UAAA;UAC5CuT,IAAE,GAAGrH,MAAM,CAACiG,OAAO,CAAClL,MAAM,CAAC,CAACkF,KAAK,CAAC,EAAE,CAAC;UACrCqH,IAAG,GAAGD,IAAE,CAAC,CAAC,CAAC,GAAGA,IAAE,CAAC,CAAC,CAAC;UACnBE,IAAG,GAAGF,IAAE,CAAC,CAAC,CAAC,GAAGA,IAAE,CAAC,CAAC,CAAC;UACnBsB,GAAG,GAAGtB,IAAE,CAAC,CAAC,CAAC;UACXuB,GAAG,GAAGvB,IAAE,CAAC,CAAC,CAAC;UACX7E,KAAK,GAAG,KAAK;UAEbkF,OAAM,GAAGnB,KAAI,CAAC,CAAC,CAAC,CAACtG,KAAK,CAAC,GAAG,CAAC;UACtB3O,GAAC,GAAG,CAAC;QAAA;UAAA,MAAEA,GAAC,GAAGoW,OAAM,CAAChW,MAAM;YAAAoe,SAAA,CAAAhc,IAAA;YAAA;UAAA;UACzBoR,OAAM,GAAGwC,OAAM,CAACpW,GAAC,CAAC,CAAC2O,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UAChC2H,QAAO,GAAGF,OAAM,CAACpW,GAAC,CAAC,CAAC2O,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,GAAG,CAAC;UAC5C4H,QAAQ,GAAG3C,OAAM,CAACnF,QAAQ,CAACC,MAAM,CAACsH,IAAG,CAAC,CAAC;UACvCQ,SAAQ,GAAG5C,OAAM,CAACnF,QAAQ,CAACC,MAAM,CAACuH,IAAG,CAAC,CAAC;UACvCS,SAAQ,GAAGJ,QAAO,CAAC7H,QAAQ,CAACC,MAAM,CAAC2I,GAAG,CAAC,CAAC;UACxCZ,SAAQ,GAAGH,QAAO,CAAC7H,QAAQ,CAACC,MAAM,CAAC4I,GAAG,CAAC,CAAC;UAAA,MACxC,CAACf,QAAQ,IAAI,CAACC,SAAQ;YAAAgI,SAAA,CAAAhc,IAAA;YAAA;UAAA;UAAA,MAClB,CAACkU,SAAQ,IAAI,CAACD,SAAQ;YAAA+H,SAAA,CAAAhc,IAAA;YAAA;UAAA;UAAAgc,SAAA,CAAAhc,IAAA;UAAA,OAChBwK,qBAAU,CAACwF,OAAO,kDAAkD,CAACqD,EAAE,CAAC,CAAC;QAAA;UAAA2I,SAAA,CAAAhc,IAAA;UAAA;QAAA;UAEhF,IAAI+T,QAAQ,IAAI,CAACC,SAAQ,EAAE;YAC1BC,SAAQ,GAAGH,QAAO,CAAC7H,QAAQ,CAACC,MAAM,CAACqH,IAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9C,IAAIU,SAAQ,EAAE;cACVvF,KAAK,GAAG,IAAI;YAChB;UACJ,CAAC,MAAM,IAAI,CAACqF,QAAQ,IAAIC,SAAQ,EAAE;YAC1BE,SAAQ,GAAGJ,QAAO,CAAC7H,QAAQ,CAACC,MAAM,CAACqH,IAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9C,IAAIW,SAAQ,EAAE;cACVxF,KAAK,GAAG,IAAI;YAChB;UACJ;QAAC;UArB8BlR,GAAC,EAAE;UAAAwe,SAAA,CAAAhc,IAAA;UAAA;QAAA;UAAA,IAuBjC0O,KAAK;YAAAsN,SAAA,CAAAhc,IAAA;YAAA;UAAA;UAAAgc,SAAA,CAAAhc,IAAA;UAAA,OACAwK,qBAAU,CAACwF,OAAO,kDAAkD,CAACqD,EAAE,CAAC,CAAC;QAAA;UApFzD7V,GAAC,EAAE;UAAAwe,SAAA,CAAAhc,IAAA;UAAA;QAAA;UAAAgc,SAAA,CAAAhc,IAAA;UAAA,OA2FXwK,qBAAU,CAACwF,OAAO,8DAAAR,MAAA,CAA8DpE,IAAI,kCAA+B,CAAC;QAAA;UAAAqK,sBAAA,GAAAuG,SAAA,CAAAhZ,IAAA;UAAA0S,sBAAA,GAAAvX,cAAA,CAAAsX,sBAAA;UAAvIE,SAAS,GAAAD,sBAAA;UACZE,UAAU,GAAGD,SAAS,CAAC/X,MAAM;UACxBJ,GAAC,GAAG,CAAC;QAAA;UAAA,MAAEA,GAAC,GAAGoY,UAAU;YAAAoG,SAAA,CAAAhc,IAAA;YAAA;UAAA;UACtByS,MAAI,GAAGkD,SAAS,CAACnY,GAAC,CAAC,CAACye,GAAG,CAAC9P,KAAK,CAAC,GAAG,CAAC;UAClCkH,GAAE,GAAGsC,SAAS,CAACnY,GAAC,CAAC,CAAC6V,EAAE;UAAA,MACpBZ,MAAI,CAAC,CAAC,CAAC,CAAC7U,MAAM,GAAG,CAAC,IAAI6U,MAAI,CAAC,CAAC,CAAC,CAAC7U,MAAM,GAAG,CAAC;YAAAoe,SAAA,CAAAhc,IAAA;YAAA;UAAA;UACpCsT,OAAK,GAAGb,MAAI,CAAC,CAAC,CAAC,CAACtG,KAAK,CAAC,GAAG,CAAC;UAC1BoH,IAAE,GAAGrH,MAAM,CAACiG,OAAO,CAAClL,MAAM,CAAC;UAE3B0L,OAAM,GAAG,KAAK;UACdC,OAAM,GAAG,KAAK;UAEdmB,SAAQ,GAAGT,OAAK,CAACrH,QAAQ,CAACC,MAAM,CAACqH,IAAE,CAAC,CAAC;UACzC,IAAI,CAACQ,SAAQ,EAAE;YACXpB,OAAM,GAAG,IAAI;UACjB;UACI1L,QAAM,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAACgF,QAAQ,CAACC,MAAM,CAACqH,IAAE,CAAC,CAAC;UAC5E,IAAI,CAACtM,QAAM,EAAE;YACT2L,OAAM,GAAG,IAAI;UACjB;UAAC,MACGD,OAAM,IAAIC,OAAM;YAAAoJ,SAAA,CAAAhc,IAAA;YAAA;UAAA;UAAAgc,SAAA,CAAAhc,IAAA;UAAA,OACVwK,qBAAU,CAACwF,OAAO,kDAAkD,CAACqD,GAAE,CAAC,CAAC;QAAA;UAAA2I,SAAA,CAAAhc,IAAA;UAAA;QAAA;UAAA,MAE5EyS,MAAI,CAAC,CAAC,CAAC,CAAC7U,MAAM,GAAG,CAAC,IAAI6U,MAAI,CAAC,CAAC,CAAC,CAAC7U,MAAM,IAAI,CAAC;YAAAoe,SAAA,CAAAhc,IAAA;YAAA;UAAA;UAC5CsT,OAAK,GAAGb,MAAI,CAAC,CAAC,CAAC,CAACtG,KAAK,CAAC,GAAG,CAAC;UAC1BoH,IAAE,GAAGrH,MAAM,CAACiG,OAAO,CAAClL,MAAM,CAAC;UAC3BA,QAAM,GAAGqM,OAAK,CAACrH,QAAQ,CAACC,MAAM,CAACqH,IAAE,CAAC,CAAC;UAAA,IAClCtM,QAAM;YAAA+U,SAAA,CAAAhc,IAAA;YAAA;UAAA;UAAAgc,SAAA,CAAAhc,IAAA;UAAA,OACDwK,qBAAU,CAACwF,OAAO,kDAAkD,CAACqD,GAAE,CAAC,CAAC;QAAA;UAAA2I,SAAA,CAAAhc,IAAA;UAAA;QAAA;UAAA,MAE5EyS,MAAI,CAAC,CAAC,CAAC,CAAC7U,MAAM,IAAI,CAAC,IAAI6U,MAAI,CAAC,CAAC,CAAC,CAAC7U,MAAM,GAAG,CAAC;YAAAoe,SAAA,CAAAhc,IAAA;YAAA;UAAA;UAC5CuT,IAAE,GAAGrH,MAAM,CAACiG,OAAO,CAAClL,MAAM,CAAC;UAC3BA,QAAM,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAACgF,QAAQ,CAACC,MAAM,CAACqH,IAAE,CAAC,CAAC;UAAA,IACvEtM,QAAM;YAAA+U,SAAA,CAAAhc,IAAA;YAAA;UAAA;UAAAgc,SAAA,CAAAhc,IAAA;UAAA,OACDwK,qBAAU,CAACwF,OAAO,kDAAkD,CAACqD,GAAE,CAAC,CAAC;QAAA;UAhC3D7V,GAAC,EAAE;UAAAwe,SAAA,CAAAhc,IAAA;UAAA;QAAA;UAAAgc,SAAA,CAAAhc,IAAA;UAAA,OAuCZwK,qBAAU,CAACwF,OAAO,8DAAAR,MAAA,CAA8DpE,IAAI,8BAA2B,CAAC;QAAA;UAAAuL,sBAAA,GAAAqF,SAAA,CAAAhZ,IAAA;UAAA4T,sBAAA,GAAAzY,cAAA,CAAAwY,sBAAA;UAAhIE,MAAM,GAAAD,sBAAA;UACTE,OAAO,GAAGD,MAAM,CAACjZ,MAAM;UAClBJ,GAAC,GAAG,CAAC;QAAA;UAAA,MAAEA,GAAC,GAAGsZ,OAAO;YAAAkF,SAAA,CAAAhc,IAAA;YAAA;UAAA;UACnByS,MAAI,GAAGoE,MAAM,CAACrZ,GAAC,CAAC,CAACye,GAAG,CAAC9P,KAAK,CAAC,GAAG,CAAC;UAC/BkH,IAAE,GAAGwD,MAAM,CAACrZ,GAAC,CAAC,CAAC6V,EAAE;UAAA,MAEjBZ,MAAI,CAAC,CAAC,CAAC,CAAC7U,MAAM,GAAG,CAAC,IAAI6U,MAAI,CAAC,CAAC,CAAC,IAAI,GAAG,IAAIA,MAAI,CAAC,CAAC,CAAC,CAAC7U,MAAM,GAAG,CAAC;YAAAoe,SAAA,CAAAhc,IAAA;YAAA;UAAA;UACtDsT,OAAK,GAAGb,MAAI,CAAC,CAAC,CAAC,CAACtG,KAAK,CAAC,GAAG,CAAC;UAC1ByH,OAAM,GAAGnB,MAAI,CAAC,CAAC,CAAC,CAACtG,KAAK,CAAC,GAAG,CAAC;UAC3BoH,KAAE,GAAGrH,MAAM,CAACiG,OAAO,CAAClL,MAAM,CAAC,CAACkF,KAAK,CAAC,EAAE,CAAC;UACrCwG,OAAM,GAAG,KAAK;UACdC,OAAM,GAAG,KAAK;UACdC,OAAM,GAAG,KAAK;UAElB,KAASrV,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG+V,KAAE,CAAC3V,MAAM,EAAEJ,GAAC,EAAE,EAAE;YAC5BuW,SAAQ,GAAGT,OAAK,CAACrH,QAAQ,CAACC,MAAM,CAACqH,KAAE,CAAC/V,GAAC,CAAC,CAAC,CAAC;YAC5C,IAAIuW,SAAQ,EAAE;cACVpB,OAAM,GAAG,IAAI;YACjB;UACJ;UAEIa,KAAG,GAAGD,KAAE,CAAC,CAAC,CAAC,GAAGA,KAAE,CAAC,CAAC,CAAC;UACnBE,KAAG,GAAGF,KAAE,CAAC,CAAC,CAAC,GAAGA,KAAE,CAAC,CAAC,CAAC;UACnBsB,KAAG,GAAGtB,KAAE,CAAC,CAAC,CAAC,GAAGA,KAAE,CAAC,CAAC,CAAC;UACvB,KAAS/V,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG+V,KAAE,CAAC3V,MAAM,EAAEJ,GAAC,EAAE,EAAE;YAC5BuW,SAAQ,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC9H,QAAQ,CAACC,MAAM,CAACsH,KAAG,CAAC,CAAC;YACrEQ,UAAQ,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC/H,QAAQ,CAACC,MAAM,CAACuH,KAAG,CAAC,CAAC;YACrES,UAAQ,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAACjI,QAAQ,CAACC,MAAM,CAAC2I,KAAG,CAAC,CAAC;YACzE,IAAId,SAAQ,IAAIC,UAAQ,IAAIE,UAAQ,EAAE;cAClCrB,OAAM,GAAG,IAAI;YACjB;UACJ;UAEA,KAASrV,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG+V,KAAE,CAAC3V,MAAM,EAAEJ,IAAC,EAAE,EAAE;YAC5BuW,UAAQ,GAAGH,OAAM,CAAC3H,QAAQ,CAACC,MAAM,CAACqH,KAAE,CAAC/V,IAAC,CAAC,CAAC,CAAC;YAC7C,IAAIuW,UAAQ,EAAE;cACVnB,OAAM,GAAG,IAAI;YACjB;UACJ;UAAC,MAEGD,OAAM,IAAIC,OAAM,IAAIC,OAAM;YAAAmJ,SAAA,CAAAhc,IAAA;YAAA;UAAA;UAAAgc,SAAA,CAAAhc,IAAA;UAAA,OACpBwK,qBAAU,CAACwF,OAAO,kDAAkD,CAACqD,IAAE,CAAC,CAAC;QAAA;UAAA2I,SAAA,CAAAhc,IAAA;UAAA;QAAA;UAAA,MAG5EyS,MAAI,CAAC,CAAC,CAAC,CAAC7U,MAAM,GAAG,CAAC,IAAI6U,MAAI,CAAC,CAAC,CAAC,IAAI,GAAG,IAAIA,MAAI,CAAC,CAAC,CAAC,CAAC7U,MAAM,GAAG,CAAC;YAAAoe,SAAA,CAAAhc,IAAA;YAAA;UAAA;UAC7DsT,OAAK,GAAGb,MAAI,CAAC,CAAC,CAAC,CAACtG,KAAK,CAAC,GAAG,CAAC;UAC1ByH,OAAM,GAAGnB,MAAI,CAAC,CAAC,CAAC,CAACtG,KAAK,CAAC,GAAG,CAAC;UAC3BoH,KAAE,GAAGrH,MAAM,CAACiG,OAAO,CAAClL,MAAM,CAAC,CAACkF,KAAK,CAAC,EAAE,CAAC;UACrCwG,OAAM,GAAG,KAAK;UACdC,OAAM,GAAG,KAAK;UAElB,KAASpV,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG+V,KAAE,CAAC3V,MAAM,EAAEJ,IAAC,EAAE,EAAE;YAC5BuW,UAAQ,GAAGT,OAAK,CAACrH,QAAQ,CAACC,MAAM,CAACqH,KAAE,CAAC/V,IAAC,CAAC,CAAC,CAAC;YAC5C,IAAIuW,UAAQ,EAAE;cACVpB,OAAM,GAAG,IAAI;YACjB;UACJ;UAEA,KAASnV,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG+V,KAAE,CAAC3V,MAAM,EAAEJ,IAAC,EAAE,EAAE;YAC5BuW,UAAQ,GAAGH,OAAM,CAAC3H,QAAQ,CAACC,MAAM,CAACqH,KAAE,CAAC/V,IAAC,CAAC,CAAC,CAAC;YAC7C,IAAIuW,UAAQ,EAAE;cACVnB,OAAM,GAAG,IAAI;YACjB;UACJ;UAAC,MAEGD,OAAM,IAAIC,OAAM;YAAAoJ,SAAA,CAAAhc,IAAA;YAAA;UAAA;UAAAgc,SAAA,CAAAhc,IAAA;UAAA,OACVwK,qBAAU,CAACwF,OAAO,kDAAkD,CAACqD,IAAE,CAAC,CAAC;QAAA;UAAA2I,SAAA,CAAAhc,IAAA;UAAA;QAAA;UAAA,MAE5EyS,MAAI,CAAC,CAAC,CAAC,CAAC7U,MAAM,GAAG,CAAC,IAAI6U,MAAI,CAAC,CAAC,CAAC,IAAI,GAAG,IAAIA,MAAI,CAAC,CAAC,CAAC,CAAC7U,MAAM,IAAI,CAAC;YAAAoe,SAAA,CAAAhc,IAAA;YAAA;UAAA;UAC9DsT,OAAK,GAAGb,MAAI,CAAC,CAAC,CAAC,CAACtG,KAAK,CAAC,GAAG,CAAC;UAC1ByH,QAAM,GAAGnB,MAAI,CAAC,CAAC,CAAC,CAACtG,KAAK,CAAC,GAAG,CAAC;UAC3BoH,KAAE,GAAGrH,MAAM,CAACiG,OAAO,CAAClL,MAAM,CAAC,CAACkF,KAAK,CAAC,EAAE,CAAC;UACrCwG,QAAM,GAAG,KAAK;UACdC,QAAM,GAAG,KAAK;UAElB,KAASpV,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG+V,KAAE,CAAC3V,MAAM,EAAEJ,IAAC,EAAE,EAAE;YAC5BuW,UAAQ,GAAGT,OAAK,CAACrH,QAAQ,CAACC,MAAM,CAACqH,KAAE,CAAC/V,IAAC,CAAC,CAAC,CAAC;YAC5C,IAAIuW,UAAQ,EAAE;cACVpB,QAAM,GAAG,IAAI;YACjB;UACJ;UAEIa,KAAG,GAAGD,KAAE,CAAC,CAAC,CAAC,GAAGA,KAAE,CAAC,CAAC,CAAC;UACnBE,KAAG,GAAGF,KAAE,CAAC,CAAC,CAAC,GAAGA,KAAE,CAAC,CAAC,CAAC;UACnBsB,KAAG,GAAGtB,KAAE,CAAC,CAAC,CAAC,GAAGA,KAAE,CAAC,CAAC,CAAC;UACvB,KAAS/V,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG+V,KAAE,CAAC3V,MAAM,EAAEJ,IAAC,EAAE,EAAE;YAC5BuW,UAAQ,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC9H,QAAQ,CAACC,MAAM,CAACsH,KAAG,CAAC,CAAC;YACrEQ,UAAQ,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC/H,QAAQ,CAACC,MAAM,CAACuH,KAAG,CAAC,CAAC;YACrES,UAAQ,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAACjI,QAAQ,CAACC,MAAM,CAAC2I,KAAG,CAAC,CAAC;YACzE,IAAId,UAAQ,IAAIC,UAAQ,IAAIE,UAAQ,EAAE;cAClCtB,QAAM,GAAG,IAAI;YACjB;UACJ;UAAC,MAEGD,QAAM,IAAIC,QAAM;YAAAoJ,SAAA,CAAAhc,IAAA;YAAA;UAAA;UAAAgc,SAAA,CAAAhc,IAAA;UAAA,OACVwK,qBAAU,CAACwF,OAAO,kDAAkD,CAACqD,IAAE,CAAC,CAAC;QAAA;UAAA2I,SAAA,CAAAhc,IAAA;UAAA;QAAA;UAAA,MAE5EyS,MAAI,CAAC,CAAC,CAAC,CAAC7U,MAAM,IAAI,CAAC,IAAI6U,MAAI,CAAC,CAAC,CAAC,IAAI,GAAG,IAAIA,MAAI,CAAC,CAAC,CAAC,CAAC7U,MAAM,GAAG,CAAC;YAAAoe,SAAA,CAAAhc,IAAA;YAAA;UAAA;UAC9DsT,QAAK,GAAGb,MAAI,CAAC,CAAC,CAAC,CAACtG,KAAK,CAAC,GAAG,CAAC;UAC1ByH,QAAM,GAAGnB,MAAI,CAAC,CAAC,CAAC,CAACtG,KAAK,CAAC,GAAG,CAAC;UAC3BoH,KAAE,GAAGrH,MAAM,CAACiG,OAAO,CAAClL,MAAM,CAAC,CAACkF,KAAK,CAAC,EAAE,CAAC;UACrCwG,QAAM,GAAG,KAAK;UACdC,QAAM,GAAG,KAAK;UAElB,KAASpV,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG+V,KAAE,CAAC3V,MAAM,EAAEJ,IAAC,EAAE,EAAE;YAC5BuW,UAAQ,GAAGH,QAAM,CAAC3H,QAAQ,CAACC,MAAM,CAACqH,KAAE,CAAC/V,IAAC,CAAC,CAAC,CAAC;YAC7C,IAAIuW,UAAQ,EAAE;cACVpB,QAAM,GAAG,IAAI;YACjB;UACJ;UAEIa,KAAG,GAAGD,KAAE,CAAC,CAAC,CAAC,GAAGA,KAAE,CAAC,CAAC,CAAC;UACnBE,KAAG,GAAGF,KAAE,CAAC,CAAC,CAAC,GAAGA,KAAE,CAAC,CAAC,CAAC;UACnBsB,KAAG,GAAGtB,KAAE,CAAC,CAAC,CAAC,GAAGA,KAAE,CAAC,CAAC,CAAC;UACvB,KAAS/V,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG+V,KAAE,CAAC3V,MAAM,EAAEJ,IAAC,EAAE,EAAE;YAC5BuW,UAAQ,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC9H,QAAQ,CAACC,MAAM,CAACsH,KAAG,CAAC,CAAC;YACrEQ,UAAQ,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC/H,QAAQ,CAACC,MAAM,CAACuH,KAAG,CAAC,CAAC;YACrES,UAAQ,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAACjI,QAAQ,CAACC,MAAM,CAAC2I,KAAG,CAAC,CAAC;YACzE,IAAId,UAAQ,IAAIC,UAAQ,IAAIE,UAAQ,EAAE;cAClCtB,QAAM,GAAG,IAAI;YACjB;UACJ;UAAC,MAEGD,QAAM,IAAIC,QAAM;YAAAoJ,SAAA,CAAAhc,IAAA;YAAA;UAAA;UAAAgc,SAAA,CAAAhc,IAAA;UAAA,OACVwK,qBAAU,CAACwF,OAAO,kDAAkD,CAACqD,IAAE,CAAC,CAAC;QAAA;UAAA2I,SAAA,CAAAhc,IAAA;UAAA;QAAA;UAAA,MAE5EyS,MAAI,CAAC,CAAC,CAAC,CAAC7U,MAAM,GAAG,CAAC,IAAI6U,MAAI,CAAC,CAAC,CAAC,IAAI,GAAG,IAAIA,MAAI,CAAC,CAAC,CAAC,CAAC7U,MAAM,IAAI,CAAC;YAAAoe,SAAA,CAAAhc,IAAA;YAAA;UAAA;UAC9DsT,QAAK,GAAGb,MAAI,CAAC,CAAC,CAAC,CAACtG,KAAK,CAAC,GAAG,CAAC;UAC1ByH,QAAM,GAAGnB,MAAI,CAAC,CAAC,CAAC,CAACtG,KAAK,CAAC,GAAG,CAAC;UAC3BoH,KAAE,GAAGrH,MAAM,CAACiG,OAAO,CAAClL,MAAM,CAAC,CAACkF,KAAK,CAAC,EAAE,CAAC;UACrCwG,QAAM,GAAG,KAAK;UAElB,KAASnV,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG+V,KAAE,CAAC3V,MAAM,EAAEJ,IAAC,EAAE,EAAE;YAC5BuW,UAAQ,GAAGT,QAAK,CAACrH,QAAQ,CAACC,MAAM,CAACqH,KAAE,CAAC/V,IAAC,CAAC,CAAC,CAAC;YAC5C,IAAIuW,UAAQ,EAAE;cACVpB,QAAM,GAAG,IAAI;YACjB;UACJ;UAAC,KAEGA,QAAM;YAAAqJ,SAAA,CAAAhc,IAAA;YAAA;UAAA;UAAAgc,SAAA,CAAAhc,IAAA;UAAA,OACAwK,qBAAU,CAACwF,OAAO,kDAAkD,CAACqD,IAAE,CAAC,CAAC;QAAA;UAAA2I,SAAA,CAAAhc,IAAA;UAAA;QAAA;UAAA,MAE5EyS,MAAI,CAAC,CAAC,CAAC,CAAC7U,MAAM,IAAI,CAAC,IAAI6U,MAAI,CAAC,CAAC,CAAC,IAAI,GAAG,IAAIA,MAAI,CAAC,CAAC,CAAC,CAAC7U,MAAM,IAAI,CAAC;YAAAoe,SAAA,CAAAhc,IAAA;YAAA;UAAA;UAC/DsT,QAAK,GAAGb,MAAI,CAAC,CAAC,CAAC,CAACtG,KAAK,CAAC,GAAG,CAAC;UAC1ByH,QAAM,GAAGnB,MAAI,CAAC,CAAC,CAAC,CAACtG,KAAK,CAAC,GAAG,CAAC;UAC3BoH,KAAE,GAAGrH,MAAM,CAACiG,OAAO,CAAClL,MAAM,CAAC,CAACkF,KAAK,CAAC,EAAE,CAAC;UACrCwG,QAAM,GAAG,KAAK;UAEda,KAAG,GAAGD,KAAE,CAAC,CAAC,CAAC,GAAGA,KAAE,CAAC,CAAC,CAAC;UACnBE,KAAG,GAAGF,KAAE,CAAC,CAAC,CAAC,GAAGA,KAAE,CAAC,CAAC,CAAC;UACnBsB,KAAG,GAAGtB,KAAE,CAAC,CAAC,CAAC,GAAGA,KAAE,CAAC,CAAC,CAAC;UACvB,KAAS/V,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG+V,KAAE,CAAC3V,MAAM,EAAEJ,IAAC,EAAE,EAAE;YAC5BuW,UAAQ,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC9H,QAAQ,CAACC,MAAM,CAACsH,KAAG,CAAC,CAAC;YACrEQ,UAAQ,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC/H,QAAQ,CAACC,MAAM,CAACuH,KAAG,CAAC,CAAC;YACrES,UAAQ,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAACjI,QAAQ,CAACC,MAAM,CAAC2I,KAAG,CAAC,CAAC;YACzE,IAAId,UAAQ,IAAIC,UAAQ,IAAIE,UAAQ,EAAE;cAClCvB,QAAM,GAAG,IAAI;YACjB;UACJ;UAAC,KACGA,QAAM;YAAAqJ,SAAA,CAAAhc,IAAA;YAAA;UAAA;UAAAgc,SAAA,CAAAhc,IAAA;UAAA,OACAwK,qBAAU,CAACwF,OAAO,kDAAkD,CAACqD,IAAE,CAAC,CAAC;QAAA;UAAA2I,SAAA,CAAAhc,IAAA;UAAA;QAAA;UAAA,MAE5EyS,MAAI,CAAC,CAAC,CAAC,CAAC7U,MAAM,IAAI,CAAC,IAAI6U,MAAI,CAAC,CAAC,CAAC,IAAI,GAAG,IAAIA,MAAI,CAAC,CAAC,CAAC,CAAC7U,MAAM,GAAG,CAAC;YAAAoe,SAAA,CAAAhc,IAAA;YAAA;UAAA;UAC9DsT,QAAK,GAAGb,MAAI,CAAC,CAAC,CAAC,CAACtG,KAAK,CAAC,GAAG,CAAC;UAC1ByH,QAAM,GAAGnB,MAAI,CAAC,CAAC,CAAC,CAACtG,KAAK,CAAC,GAAG,CAAC;UAC3BoH,KAAE,GAAGrH,MAAM,CAACiG,OAAO,CAAClL,MAAM,CAAC,CAACkF,KAAK,CAAC,EAAE,CAAC;UACrCwG,QAAM,GAAG,KAAK;UAElB,KAASnV,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG+V,KAAE,CAAC3V,MAAM,EAAEJ,IAAC,EAAE,EAAE;YAC5BuW,UAAQ,GAAGH,QAAM,CAAC3H,QAAQ,CAACC,MAAM,CAACqH,KAAE,CAAC/V,IAAC,CAAC,CAAC,CAAC;YAC7C,IAAIuW,UAAQ,EAAE;cACVpB,QAAM,GAAG,IAAI;YACjB;UACJ;UAAC,KAEGA,QAAM;YAAAqJ,SAAA,CAAAhc,IAAA;YAAA;UAAA;UAAAgc,SAAA,CAAAhc,IAAA;UAAA,OACAwK,qBAAU,CAACwF,OAAO,kDAAkD,CAACqD,IAAE,CAAC,CAAC;QAAA;UA9K9D7V,GAAC,EAAE;UAAAwe,SAAA,CAAAhc,IAAA;UAAA;QAAA;QAAA;UAAA,OAAAgc,SAAA,CAAApX,IAAA;MAAA;IAAA,GAAAmN,QAAA;EAAA,CAkLnC;EAAA,OAAAD,WAAA,CAAA/L,KAAA,OAAAD,SAAA;AAAA;AAED,IAAMsW,QAAQ,GAAG;EACb7O,KAAK,EAAE;IACH,IAAI,EAAE,MAAM;IACZ,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,GAAG;IACT,KAAK,EAAE,IAAI;IACX,KAAK,EAAE,IAAI;IACX,KAAK,EAAE,GAAG;IACV,KAAK,EAAE,IAAI;IACX,KAAK,EAAE,KAAK;IACZ,KAAK,EAAE,KAAK;IACZ,KAAK,EAAE,KAAK;IACZ,KAAK,EAAE,KAAK;IACZ,KAAK,EAAE,MAAM;IACb,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE;EACT,CAAC;EACD8O,GAAG,EAAE;IACD7O,OAAO,EAAE,KAAK;IACd8O,IAAI,EAAE;EACV,CAAC;EACDC,KAAK,EAAE;IACHC,MAAM,EAAE,MAAM;IACd1O,SAAS,EAAE;EACf,CAAC;EACD2O,MAAM,EAAE;IACJC,WAAW,EAAE,KAAK;IAClBC,MAAM,EAAE,IAAI;IACZC,SAAS,EAAE;EACf;AACJ,CAAC;AAAA,SAEcC,SAASA,CAAAC,IAAA;EAAA,OAAAC,UAAA,CAAAhX,KAAA,OAAAD,SAAA;AAAA;AAAA,SAAAiX,WAAA;EAAAA,UAAA,GAAArX,iBAAA,eAAArF,mBAAA,GAAA6D,IAAA,CAAxB,SAAA8Y,UAAyB5R,IAAI;IAAA,IAAA6R,sBAAA,EAAAC,uBAAA,EAAAC,KAAA,EAAAC,KAAA,EAAA5f,CAAA;IAAA,OAAA6C,mBAAA,GAAAU,IAAA,UAAAsc,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAA5Y,IAAA,GAAA4Y,UAAA,CAAAtd,IAAA;QAAA;UAAAsd,UAAA,CAAAtd,IAAA;UAAA,OACHwK,qBAAU,CAACwF,OAAO,kHAAAR,MAAA,CAAkHpE,IAAI,MAAG,CAAC;QAAA;UAAA6R,sBAAA,GAAAK,UAAA,CAAAta,IAAA;UAAAka,uBAAA,GAAA/e,cAAA,CAAA8e,sBAAA;UAA3JE,KAAK,GAAAD,uBAAA;UAAAE,KAAA,gBAAA/c,mBAAA,GAAA6D,IAAA,UAAAkZ,MAAA;YAAA,IAAAG,MAAA,EAAA5S,KAAA,EAAA0I,EAAA,EAAAmK,SAAA,EAAAvW,MAAA,EAAA7I,GAAA,EAAAqf,WAAA,EAAAC,YAAA,EAAAC,IAAA,EAAApQ,KAAA,EAAAgB,GAAA,EAAAC,KAAA,EAAAkE,OAAA,EAAAkL,QAAA,EAAAC,GAAA,EAAAjP,GAAA,EAAA2E,EAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAH,KAAA,EAAAwK,IAAA,EAAAxe,IAAA,EAAAye,IAAA,EAAAC,IAAA,EAAArL,MAAA,EAAAC,MAAA,EAAAlF,SAAA,EAAAC,KAAA,EAAAsQ,KAAA,EAAAC,IAAA,EAAAC,MAAA,EAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA,EAAAC,QAAA,EAAAC,UAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,IAAA,EAAAC,QAAA,EAAAC,IAAA,EAAAC,OAAA,EAAAC,KAAA,EAAAC,IAAA,EAAAC,OAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,QAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,MAAA,EAAAC,IAAA,EAAAC,QAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,IAAA,EAAAC,OAAA,EAAAC,OAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,QAAA,EAAAC,MAAA,EAAAC,IAAA,EAAAC,OAAA,EAAAC,KAAA;YAAA,OAAA7gB,mBAAA,GAAAU,IAAA,UAAAogB,OAAAC,UAAA;cAAA,kBAAAA,UAAA,CAAA1c,IAAA,GAAA0c,UAAA,CAAAphB,IAAA;gBAAA;kBAEJud,MAAM,GAAGJ,KAAK,CAAC3f,CAAC,CAAC;kBACjBmN,KAAK,GAAG4S,MAAM,CAAC5S,KAAK;kBACpB0I,EAAE,GAAGkK,MAAM,CAAClK,EAAE;kBACdmK,SAAS,GAAG,CAAC;kBACbvW,MAAM,GAAGsW,MAAM,CAACtW,MAAM;kBAAA,MACtBsW,MAAM,CAAC9O,QAAQ,IAAI,OAAO;oBAAA2S,UAAA,CAAAphB,IAAA;oBAAA;kBAAA;kBACtB5B,GAAG,GAAGmf,MAAM,CAACtB,GAAG,CAAC9P,KAAK,CAAC,GAAG,CAAC;kBAC3BsR,WAAW,GAAGF,MAAM,CAACtW,MAAM,CAACkF,KAAK,CAAC,EAAE,CAAC;kBACrCuR,YAAY,GAAG,CAAC;kBACpB,KAASlgB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,CAAC,EAAEA,IAAC,EAAE,EAAE;oBACxBkgB,YAAY,IAAIpW,MAAM,CAACmW,WAAW,CAACjgB,IAAC,CAAC,CAAC;kBAC1C;kBACI+P,KAAK,GAAIgQ,MAAM,CAAC9U,KAAK,GAAGrK,GAAG,CAACR,MAAM,GAAG2f,MAAM,CAAC8D,MAAM;kBAClD9S,GAAG,GAAGhB,KAAK,GAAG,IAAI;kBAClBiB,KAAK,GAAGjB,KAAK,GAAGgB,GAAG;kBAEnBmE,OAAO,GAAGtU,GAAG,CAAC8d,MAAM,CAAC,UAASC,GAAG,EAAE;oBACnC,OAAOA,GAAG,IAAIuB,YAAY;kBAC9B,CAAC,CAAC;kBAEEE,QAAQ,GAAGxf,GAAG,CAAC8d,MAAM,CAAC,UAASC,GAAG,EAAE;oBACpC,OAAO,CAACtV,QAAQ,CAACsV,GAAG,CAAC;kBACzB,CAAC,CAAC;kBAEF,IAAIuB,YAAY,GAAG,CAAC,IAAI,CAAC,IAAIE,QAAQ,CAAC3R,QAAQ,CAAC,GAAG,CAAC,EAAE;oBACjDuR,SAAS,IAAIhP,KAAK,GAAG,IAAI;kBAC7B;kBAEA,IAAIkP,YAAY,GAAG,CAAC,IAAI,CAAC,IAAIE,QAAQ,CAAC3R,QAAQ,CAAC,GAAG,CAAC,EAAE;oBACjDuR,SAAS,IAAIhP,KAAK,GAAG,IAAI;kBAC7B;kBAEA,IAAIkP,YAAY,IAAI,EAAE,IAAIA,YAAY,IAAI,EAAE,IAAIE,QAAQ,CAAC3R,QAAQ,CAAC,GAAG,CAAC,EAAE;oBACpEuR,SAAS,IAAIhP,KAAK,GAAG,IAAI;kBAC7B;kBAEA,IAAIkP,YAAY,IAAI,CAAC,IAAIA,YAAY,IAAI,EAAE,IAAIE,QAAQ,CAAC3R,QAAQ,CAAC,GAAG,CAAC,EAAE;oBACnEuR,SAAS,IAAIhP,KAAK,GAAG,IAAI;kBAC7B;kBAEIqP,GAAG,GAAG,CAAC;kBAAAuD,UAAA,CAAAjR,EAAA,GACHuC,OAAO,CAAC,CAAC,CAAC;kBAAA0O,UAAA,CAAAphB,IAAA,GAAAohB,UAAA,CAAAjR,EAAA,KACT,GAAG,QAAAiR,UAAA,CAAAjR,EAAA,KAGH,GAAG,QAAAiR,UAAA,CAAAjR,EAAA,KAGH,GAAG,QAAAiR,UAAA,CAAAjR,EAAA,KAGH,GAAG,QAAAiR,UAAA,CAAAjR,EAAA,KAGH,GAAG,QAAAiR,UAAA,CAAAjR,EAAA,KAGH,GAAG,QAAAiR,UAAA,CAAAjR,EAAA,KAGH,GAAG,QAAAiR,UAAA,CAAAjR,EAAA,KAGH,IAAI,QAAAiR,UAAA,CAAAjR,EAAA,KAGJ,IAAI,QAAAiR,UAAA,CAAAjR,EAAA,KAGJ,IAAI,QAAAiR,UAAA,CAAAjR,EAAA,KAGJ,IAAI,QAAAiR,UAAA,CAAAjR,EAAA,KAGJ,IAAI,QAAAiR,UAAA,CAAAjR,EAAA,KAGJ,IAAI,QAAAiR,UAAA,CAAAjR,EAAA,KAGJ,IAAI,QAAAiR,UAAA,CAAAjR,EAAA,KAGJ,IAAI,QAAAiR,UAAA,CAAAjR,EAAA,KAGJ,IAAI;kBAAA;gBAAA;kBA5CL0N,GAAG,GAAG,MAAM;kBAAC,OAAAuD,UAAA,CAAAje,MAAA;gBAAA;kBAGb0a,GAAG,GAAG,KAAK;kBAAC,OAAAuD,UAAA,CAAAje,MAAA;gBAAA;kBAGZ0a,GAAG,GAAG,KAAK;kBAAC,OAAAuD,UAAA,CAAAje,MAAA;gBAAA;kBAGZ0a,GAAG,GAAG,KAAK;kBAAC,OAAAuD,UAAA,CAAAje,MAAA;gBAAA;kBAGZ0a,GAAG,GAAG,KAAK;kBAAC,OAAAuD,UAAA,CAAAje,MAAA;gBAAA;kBAGZ0a,GAAG,GAAG,IAAI;kBAAC,OAAAuD,UAAA,CAAAje,MAAA;gBAAA;kBAGX0a,GAAG,GAAG,GAAG;kBAAC,OAAAuD,UAAA,CAAAje,MAAA;gBAAA;kBAGV0a,GAAG,GAAG,IAAI;kBAAC,OAAAuD,UAAA,CAAAje,MAAA;gBAAA;kBAGX0a,GAAG,GAAG,IAAI;kBAAC,OAAAuD,UAAA,CAAAje,MAAA;gBAAA;kBAGX0a,GAAG,GAAG,GAAG;kBAAC,OAAAuD,UAAA,CAAAje,MAAA;gBAAA;kBAGV0a,GAAG,GAAG,IAAI;kBAAC,OAAAuD,UAAA,CAAAje,MAAA;gBAAA;kBAGX0a,GAAG,GAAG,KAAK;kBAAC,OAAAuD,UAAA,CAAAje,MAAA;gBAAA;kBAGZ0a,GAAG,GAAG,KAAK;kBAAC,OAAAuD,UAAA,CAAAje,MAAA;gBAAA;kBAGZ0a,GAAG,GAAG,KAAK;kBAAC,OAAAuD,UAAA,CAAAje,MAAA;gBAAA;kBAGZ0a,GAAG,GAAG,KAAK;kBAAC,OAAAuD,UAAA,CAAAje,MAAA;gBAAA;kBAGZ0a,GAAG,GAAG,MAAM;kBAAC,OAAAuD,UAAA,CAAAje,MAAA;gBAAA;kBAGrBqa,SAAS,IAAIhP,KAAK,GAAGqP,GAAG;kBAACuD,UAAA,CAAAphB,IAAA;kBAAA,OACnBwK,qBAAU,CAACwF,OAAO,CAAC,gEAAgE,EAAE,CAACwN,SAAS,EAAEnK,EAAE,CAAC,CAAC;gBAAA;kBACrGzE,GAAG,GAAG,6DAA6D;kBAAAwS,UAAA,CAAAphB,IAAA;kBAAA,OACnEwK,qBAAU,CAACwF,OAAO,CAACpB,GAAG,EAAE,CAAC4O,SAAS,EAAE7S,KAAK,CAAC,CAAC;gBAAA;kBAErD6S,SAAS,GAAG,CAAC;kBAAC,MACVD,MAAM,CAAC9O,QAAQ,IAAI,UAAU;oBAAA2S,UAAA,CAAAphB,IAAA;oBAAA;kBAAA;kBACzBuT,EAAE,GAAGtM,MAAM,CAACkF,KAAK,CAAC,EAAE,CAAC;kBACrBqH,GAAG,GAAGD,EAAE,CAAC,CAAC,CAAC,GAAGA,EAAE,CAAC,CAAC,CAAC;kBACnBE,GAAG,GAAGF,EAAE,CAAC,CAAC,CAAC,GAAGA,EAAE,CAAC,CAAC,CAAC;kBACnBD,KAAK,GAAGiK,MAAM,CAACtB,GAAG,CAAC9P,KAAK,CAAC,GAAG,CAAC;kBAC7B2R,IAAI,GAAGxK,KAAK,CAAC,CAAC,CAAC,CAACnH,KAAK,CAAC,GAAG,CAAC;kBAC1B7M,IAAI,GAAGgU,KAAK,CAAC,CAAC,CAAC;kBACfyK,IAAI,GAAGzK,KAAK,CAAC,CAAC,CAAC,CAACnH,KAAK,CAAC,GAAG,CAAC;kBAC9B,KAAS3O,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGsgB,IAAI,CAAClgB,MAAM,EAAEJ,IAAC,EAAE,EAAE;oBAClC,IAAGsgB,IAAI,CAACtgB,IAAC,CAAC,IAAI,EAAE,EAAE;sBACVmV,MAAM,GAAGmL,IAAI,CAACtgB,IAAC,CAAC,CAACyO,QAAQ,CAACuH,GAAG,CAAC;sBAC9BZ,MAAM,GAAGkL,IAAI,CAACtgB,IAAC,CAAC,CAACyO,QAAQ,CAACwH,GAAG,CAAC;sBAClC,IAAId,MAAM,IAAIC,MAAM,EAAE;wBACdlF,SAAS,GAAG,CAAC;wBACbC,KAAK,GAAG,CAAC;wBACb,IAAIrO,IAAI,CAAC1B,MAAM,GAAG,CAAC,EAAE;0BACbQ,KAAG,GAAGkB,IAAI,CAAC6M,KAAK,CAAC,GAAG,CAAC;0BACzB,KAAS3O,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGY,KAAG,CAACR,MAAM,EAAEJ,IAAC,EAAE,EAAE;4BACjC8B,IAAI,GAAGlB,KAAG,CAACZ,IAAC,CAAC,CAAC2O,KAAK,CAAC,GAAG,CAAC;4BACxBwB,KAAK,GAAGrO,IAAI,CAAC,CAAC,CAAC,CAAC6M,KAAK,CAAC,GAAG,CAAC,CAACvO,MAAM;0BACrC;0BACA8P,SAAS,GAAGtP,KAAG,CAACR,MAAM;0BACtB+P,KAAK,GAAGA,KAAK;wBACjB;wBACIJ,MAAK,GAAGgQ,MAAM,CAAC9U,KAAK,GAAG8U,MAAM,CAAC8D,MAAM,IAAI3T,SAAS,GAAGoQ,IAAI,CAAClgB,MAAM,CAAC;wBACpE4f,SAAS,IAAIjQ,MAAK,GAAG,KAAK;sBAC9B;oBACJ;kBACJ;kBACAjO,IAAI,GAAGgU,KAAK,CAAC,CAAC,CAAC;kBACf,KAAS9V,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGugB,IAAI,CAACngB,MAAM,EAAEJ,IAAC,EAAE,EAAE;oBAClC,IAAGugB,IAAI,CAACvgB,IAAC,CAAC,IAAI,EAAE,EAAE;sBACV6gB,KAAK,GAAGN,IAAI,CAACvgB,IAAC,CAAC,CAAC2O,KAAK,CAAC,GAAG,CAAC;sBAC1BwG,QAAM,GAAG0L,KAAK,CAAC,CAAC,CAAC,CAACpS,QAAQ,CAACuH,GAAG,CAAC;sBAC/BZ,QAAM,GAAGyL,KAAK,CAAC,CAAC,CAAC,CAACpS,QAAQ,CAACwH,GAAG,CAAC;sBACnC,IAAId,QAAM,IAAIC,QAAM,EAAE;wBACdlF,UAAS,GAAG,CAAC;wBACbC,MAAK,GAAG,CAAC;wBACb,IAAIrO,IAAI,CAAC1B,MAAM,GAAG,CAAC,EAAE;0BACbQ,KAAG,GAAGkB,IAAI,CAAC6M,KAAK,CAAC,GAAG,CAAC;0BACzB,KAAS3O,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGY,KAAG,CAACR,MAAM,EAAEJ,IAAC,EAAE,EAAE;4BACjC8B,IAAI,GAAGlB,KAAG,CAACZ,IAAC,CAAC,CAAC2O,KAAK,CAAC,GAAG,CAAC;4BACxBwB,MAAK,GAAGrO,IAAI,CAAC,CAAC,CAAC,CAAC6M,KAAK,CAAC,GAAG,CAAC,CAACvO,MAAM;0BACrC;0BACA8P,UAAS,GAAGtP,KAAG,CAACR,MAAM;0BACtB+P,MAAK,GAAGA,MAAK;wBACjB;wBACIiR,IAAI,GAAG,CAAC;wBACZ,KAASphB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGsgB,IAAI,CAAClgB,MAAM,EAAEJ,IAAC,EAAE,EAAE;0BAClC,IAAIsgB,IAAI,CAACtgB,IAAC,CAAC,IAAI,EAAE,EAAE;4BACfohB,IAAI,GAAGd,IAAI,CAAClgB,MAAM;0BACtB;wBACJ;wBACI2P,OAAK,GAAGgQ,MAAM,CAAC9U,KAAK,GAAG8U,MAAM,CAAC8D,MAAM,IAAI3T,UAAS,GAAGkR,IAAI,CAAC;wBAC7DpB,SAAS,IAAIjQ,OAAK,GAAG,KAAK;sBAC9B;oBACJ;kBACJ;kBACAiQ,SAAS,IAAID,MAAM,CAAChP,GAAG;kBAAC6S,UAAA,CAAAphB,IAAA;kBAAA,OAElBwK,qBAAU,CAACwF,OAAO,CAAC,gEAAgE,EAAE,CAACwN,SAAS,EAAEnK,EAAE,CAAC,CAAC;gBAAA;kBACrGzE,IAAG,GAAG,6DAA6D;kBAAAwS,UAAA,CAAAphB,IAAA;kBAAA,OACnEwK,qBAAU,CAACwF,OAAO,CAACpB,IAAG,EAAE,CAAC4O,SAAS,EAAE7S,KAAK,CAAC,CAAC;gBAAA;kBAGrD6S,SAAS,GAAG,CAAC;kBAAC,MACVD,MAAM,CAAC9O,QAAQ,IAAI,YAAY;oBAAA2S,UAAA,CAAAphB,IAAA;oBAAA;kBAAA;kBAC3BuT,KAAE,GAAGtM,MAAM;kBACXqM,QAAK,GAAGiK,MAAM,CAACtB,GAAG,CAAC9P,KAAK,CAAC,GAAG,CAAC;kBAC7B2R,KAAI,GAAGxK,QAAK,CAAC,CAAC,CAAC,CAACnH,KAAK,CAAC,GAAG,CAAC;kBAC1B7M,KAAI,GAAGgU,QAAK,CAAC,CAAC,CAAC;kBAEnB,KAAS9V,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGsgB,KAAI,CAAClgB,MAAM,EAAEJ,IAAC,EAAE,EAAE;oBAClC,IAAIsgB,KAAI,CAACtgB,IAAC,CAAC,IAAI,EAAE,EAAE;sBACXmV,QAAM,GAAGmL,KAAI,CAACtgB,IAAC,CAAC,CAACyO,QAAQ,CAACsH,KAAE,CAAC;sBAC7B+L,IAAI,GAAG,CAAC;sBACZ,IAAIhgB,KAAI,IAAI,EAAE,EAAE;wBACZggB,IAAI,GAAG,CAAC;sBACZ;sBACA,IAAI3M,QAAM,EAAE;wBACJpF,OAAK,GAAIgQ,MAAM,CAAC9U,KAAK,IAAIqV,KAAI,CAAClgB,MAAM,GAAG0hB,IAAI,CAAC,GAAG/B,MAAM,CAAC8D,MAAM;wBAChE7D,SAAS,IAAIjQ,OAAK,GAAG,MAAM,GAAGgQ,MAAM,CAAChP,GAAG;sBAC5C;oBACJ;kBACJ;kBACA,IAAIjP,KAAI,IAAI,EAAE,EAAE;oBACRggB,KAAI,GAAG,CAAC;oBACZ,KAAS9hB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGsgB,KAAI,CAAClgB,MAAM,EAAEJ,IAAC,EAAE,EAAE;sBAClC,IAAIsgB,KAAI,CAACtgB,IAAC,CAAC,IAAI,EAAE,EAAE;wBACf8hB,KAAI,GAAGxB,KAAI,CAAClgB,MAAM;sBACtB;oBACJ;oBACI2P,OAAK,GAAIgQ,MAAM,CAAC9U,KAAK,IAAI,CAAC,GAAG6W,KAAI,CAAC,GAAG/B,MAAM,CAAC8D,MAAM;oBACtD7D,SAAS,IAAIjQ,OAAK,GAAG,KAAK,GAAGgQ,MAAM,CAAChP,GAAG;kBAC3C;kBAAC6S,UAAA,CAAAphB,IAAA;kBAAA,OACKwK,qBAAU,CAACwF,OAAO,CAAC,gEAAgE,EAAE,CAACwN,SAAS,EAAEnK,EAAE,CAAC,CAAC;gBAAA;kBACrGzE,KAAG,GAAG,6DAA6D;kBAAAwS,UAAA,CAAAphB,IAAA;kBAAA,OACnEwK,qBAAU,CAACwF,OAAO,CAACpB,KAAG,EAAE,CAAC4O,SAAS,EAAE7S,KAAK,CAAC,CAAC;gBAAA;kBAGrD6S,SAAS,GAAG,CAAC;kBAAC,MACVD,MAAM,CAAC9O,QAAQ,IAAI,QAAQ;oBAAA2S,UAAA,CAAAphB,IAAA;oBAAA;kBAAA;kBACvBuT,KAAE,GAAGtM,MAAM,CAACkF,KAAK,CAAC,EAAE,CAAC;kBACrBmH,QAAK,GAAGiK,MAAM,CAACtB,GAAG,CAAC9P,KAAK,CAAC,GAAG,CAAC;kBAC7B2R,KAAI,GAAGxK,QAAK,CAAC,CAAC,CAAC,CAACnH,KAAK,CAAC,GAAG,CAAC;kBAC1B7M,KAAI,GAAGgU,QAAK,CAAC,CAAC,CAAC;kBACfyK,MAAI,GAAGzK,QAAK,CAAC,CAAC,CAAC,CAACnH,KAAK,CAAC,GAAG,CAAC;kBAE9B,KAAS3O,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGsgB,KAAI,CAAClgB,MAAM,EAAEJ,IAAC,EAAE,EAAE;oBAClC,IAAIsgB,KAAI,CAACtgB,IAAC,CAAC,IAAI,EAAE,EAAE;sBACXmV,QAAM,GAAGY,KAAE,CAACtH,QAAQ,CAAC6R,KAAI,CAACtgB,IAAC,CAAC,CAAC;sBAC7B8hB,MAAI,GAAG,CAAC;sBACRc,KAAK,GAAG,CAAC;sBACb,KAAS5iB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGugB,MAAI,CAACngB,MAAM,EAAEJ,IAAC,EAAE,EAAE;wBAClC,IAAIugB,MAAI,CAACvgB,IAAC,CAAC,CAACI,MAAM,IAAI,EAAE,EAAE;0BACtB0hB,MAAI,GAAGvB,MAAI,CAACngB,MAAM;wBACtB;sBACJ;sBACA,IAAI0B,KAAI,IAAI,GAAG,EAAE;wBACb8gB,KAAK,GAAG,CAAC;sBACb;sBACA,IAAI,CAACzN,QAAM,EAAE;wBACLpF,OAAK,GAAIgQ,MAAM,CAAC9U,KAAK,IAAIqV,KAAI,CAAClgB,MAAM,GAAG0hB,MAAI,GAAGc,KAAK,CAAC,GAAG7C,MAAM,CAAC8D,MAAM;wBACxE7D,SAAS,IAAIjQ,OAAK,GAAG,KAAK,GAAGgQ,MAAM,CAAChP,GAAG;wBACvC,IAAIjP,KAAI,IAAI,GAAG,EAAE;0BACTiO,OAAK,GAAIgQ,MAAM,CAAC9U,KAAK,IAAI,CAAC,GAAG6W,MAAI,GAAGc,KAAK,CAAC,GAAG7C,MAAM,CAAC8D,MAAM;0BAC9D7D,SAAS,IAAI,CAACjQ,OAAK,GAAGgQ,MAAM,CAAChP,GAAG,IAAI,IAAI;wBAC5C;sBACJ;oBACJ;kBACJ;kBACA,IAAIjP,KAAI,IAAI,GAAG,EAAE;oBACTggB,MAAI,GAAG,CAAC;oBACRc,MAAK,GAAG,CAAC;oBACb,KAAS5iB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGsgB,KAAI,CAAClgB,MAAM,EAAEJ,IAAC,EAAE,EAAE;sBAClC,IAAIsgB,KAAI,CAACtgB,IAAC,CAAC,IAAI,EAAE,EAAE;wBACf8hB,MAAI,GAAGxB,KAAI,CAAClgB,MAAM;sBACtB;oBACJ;oBACA,KAASJ,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGugB,MAAI,CAACngB,MAAM,EAAEJ,IAAC,EAAE,EAAE;sBAClC,IAAIugB,MAAI,CAACvgB,IAAC,CAAC,CAACI,MAAM,IAAI,EAAE,EAAE;wBACtBwiB,MAAK,GAAGrC,MAAI,CAACngB,MAAM;sBACvB;oBACJ;oBACI2P,OAAK,GAAIgQ,MAAM,CAAC9U,KAAK,IAAI,CAAC,GAAG6W,MAAI,GAAGc,MAAK,CAAC,GAAG7C,MAAM,CAAC8D,MAAM;oBAC9D7D,SAAS,IAAI,CAACjQ,OAAK,GAAGgQ,MAAM,CAAChP,GAAG,IAAI,IAAI;kBAC5C;kBACA,KAAS/Q,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGugB,MAAI,CAACngB,MAAM,EAAEJ,IAAC,EAAE,EAAE;oBAClC,IAAIsgB,KAAI,CAACtgB,IAAC,CAAC,IAAI,EAAE,EAAE;sBACXmV,QAAM,GAAGY,KAAE,CAACtH,QAAQ,CAAC8R,MAAI,CAACvgB,IAAC,CAAC,CAAC;sBAC7B8hB,MAAI,GAAG,CAAC;sBACZ,KAAS9hB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGsgB,KAAI,CAAClgB,MAAM,EAAEJ,IAAC,EAAE,EAAE;wBAClC,IAAIsgB,KAAI,CAACtgB,IAAC,CAAC,CAACI,MAAM,IAAI,EAAE,EAAE;0BACtB0hB,MAAI,GAAGxB,KAAI,CAAClgB,MAAM;wBACtB;sBACJ;sBACA,IAAI,CAAC+U,QAAM,EAAE;wBACLpF,OAAK,GAAIgQ,MAAM,CAAC9U,KAAK,IAAIsV,MAAI,CAACngB,MAAM,GAAG0hB,MAAI,CAAC,GAAG/B,MAAM,CAAC8D,MAAM;wBAChE7D,SAAS,IAAIjQ,OAAK,GAAG,IAAI,GAAGgQ,MAAM,CAAChP,GAAG;sBAC1C;oBACJ;kBACJ;kBAAC6S,UAAA,CAAAphB,IAAA;kBAAA,OACKwK,qBAAU,CAACwF,OAAO,CAAC,gEAAgE,EAAE,CAACwN,SAAS,EAAEnK,EAAE,CAAC,CAAC;gBAAA;kBACrGzE,KAAG,GAAG,6DAA6D;kBAAAwS,UAAA,CAAAphB,IAAA;kBAAA,OACnEwK,qBAAU,CAACwF,OAAO,CAACpB,KAAG,EAAE,CAAC4O,SAAS,EAAE7S,KAAK,CAAC,CAAC;gBAAA;gBAAA;kBAAA,OAAAyW,UAAA,CAAAxc,IAAA;cAAA;YAAA,GAAAwY,KAAA;UAAA;UAtQhD5f,CAAC,GAAG,CAAC;QAAA;UAAA,MAAEA,CAAC,GAAG2f,KAAK,CAACvf,MAAM;YAAA0f,UAAA,CAAAtd,IAAA;YAAA;UAAA;UAAA,OAAAsd,UAAA,CAAApY,aAAA,CAAAkY,KAAA;QAAA;UAAE5f,CAAC,EAAE;UAAA8f,UAAA,CAAAtd,IAAA;UAAA;QAAA;QAAA;UAAA,OAAAsd,UAAA,CAAA1Y,IAAA;MAAA;IAAA,GAAAoY,SAAA;EAAA,CAyQxC;EAAA,OAAAD,UAAA,CAAAhX,KAAA,OAAAD,SAAA;AAAA;AAED,IAAMwb,UAAU;EAAA,IAAAC,KAAA,GAAA7b,iBAAA,eAAArF,mBAAA,GAAA6D,IAAA,CAAG,SAAAsd,SAAOC,MAAM;IAAA,IAAArW,IAAA;IAAA,OAAA/K,mBAAA,GAAAU,IAAA,UAAA2gB,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAjd,IAAA,GAAAid,SAAA,CAAA3hB,IAAA;QAAA;UAExBoL,IAAI,GAAG9D,MAAM,CAACma,MAAM,CAAC;UAAAE,SAAA,CAAA3hB,IAAA;UAAA,OAEnB4R,UAAU,CAACxG,IAAI,CAAC;QAAA;UAAAuW,SAAA,CAAA3hB,IAAA;UAAA,OAEhB6c,SAAS,CAACzR,IAAI,CAAC;QAAA;QAAA;UAAA,OAAAuW,SAAA,CAAA/c,IAAA;MAAA;IAAA,GAAA4c,QAAA;EAAA,CACxB;EAAA,gBAPKF,UAAUA,CAAAM,IAAA;IAAA,OAAAL,KAAA,CAAAxb,KAAA,OAAAD,SAAA;EAAA;AAAA,GAOf;AAED,IAAM+b,YAAY;EAAA,IAAAC,KAAA,GAAApc,iBAAA,eAAArF,mBAAA,GAAA6D,IAAA,CAAG,SAAA6d,SAAOzb,GAAG,EAAEC,GAAG;IAAA,IAAAyb,UAAA,EAAAlV,QAAA,EAAAmV,MAAA,EAAAC,MAAA,EAAA1Z,IAAA,EAAAgD,SAAA,EAAA2W,uBAAA,EAAAC,uBAAA,EAAApZ,IAAA,EAAAoC,IAAA,EAAAiX,uBAAA,EAAAC,uBAAA,EAAApQ,GAAA,EAAAqQ,uBAAA,EAAAC,uBAAA,EAAAC,MAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAtV,MAAA,EAAAuV,IAAA;IAAA,OAAAviB,mBAAA,GAAAU,IAAA,UAAA8hB,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAApe,IAAA,GAAAoe,SAAA,CAAA9iB,IAAA;QAAA;UAAAgiB,UAAA,GACG1b,GAAG,CAACgJ,IAAI,EAArCxC,QAAQ,GAAAkV,UAAA,CAARlV,QAAQ,EAAEmV,MAAM,GAAAD,UAAA,CAANC,MAAM,EAAEC,MAAM,GAAAF,UAAA,CAANE,MAAM;UAC1B1Z,IAAI,GAAGlC,GAAG,CAACiJ,OAAO,CAAC/G,IAAI;UAEvBgD,SAAS,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAACS,QAAQ,CAACC,MAAM,CAACY,QAAQ,CAAC,CAAC;UAAA,MAC5D,CAACtB,SAAS,IAAIyW,MAAM,GAAG,CAAC,IAAIC,MAAM,GAAG,CAAC;YAAAY,SAAA,CAAA9iB,IAAA;YAAA;UAAA;UAAA,OAAA8iB,SAAA,CAAA3f,MAAA,WAC/BoD,GAAG,CAACkJ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBO,IAAI,EAAE,CAAC;YACP8S,GAAG,EAAE,mBAAmB;YACxBC,IAAI,EAAE;cACFC,SAAS,EAAE;YACf,CAAC;YACDxT,MAAM,EAAE;UACZ,CAAC,CAAC;QAAA;UAAAqT,SAAA,CAAA9iB,IAAA;UAAA,OAEewK,qBAAU,CAACC,KAAK,CAAC,sGAAsG,EAAE,CAACjC,IAAI,CAAC,CAAC;QAAA;UAAA2Z,uBAAA,GAAAW,SAAA,CAAA9f,IAAA;UAAAof,uBAAA,GAAAjkB,cAAA,CAAAgkB,uBAAA;UAA9InZ,IAAI,GAAAoZ,uBAAA;UAEPhX,IAAI,GAAG9D,MAAM,CAACwF,QAAQ,CAAC;UAAAgW,SAAA,CAAA9iB,IAAA;UAAA,OAEPwK,qBAAU,CAACC,KAAK,mDAAA+E,MAAA,CAAmDpE,IAAI,+BAAAoE,MAAA,CAA4ByS,MAAM,QAAAzS,MAAA,CAAK0S,MAAM,MAAG,CAAC;QAAA;UAAAG,uBAAA,GAAAS,SAAA,CAAA9f,IAAA;UAAAsf,uBAAA,GAAAnkB,cAAA,CAAAkkB,uBAAA;UAArInQ,GAAG,GAAAoQ,uBAAA;UAAAQ,SAAA,CAAA9iB,IAAA;UAAA,OACawK,qBAAU,CAACC,KAAK,mDAAA+E,MAAA,CAAmDpE,IAAI,OAAI,CAAC;QAAA;UAAAmX,uBAAA,GAAAO,SAAA,CAAA9f,IAAA;UAAAwf,uBAAA,GAAArkB,cAAA,CAAAokB,uBAAA;UAA5FE,MAAM,GAAAD,uBAAA;UAAAM,SAAA,CAAA9iB,IAAA;UAAA,OACUwK,qBAAU,CAACC,KAAK,uDAAA+E,MAAA,CAAuDpE,IAAI,gCAA6B,CAAC;QAAA;UAAAsX,uBAAA,GAAAI,SAAA,CAAA9f,IAAA;UAAA2f,uBAAA,GAAAxkB,cAAA,CAAAukB,uBAAA;UAAzHrV,MAAM,GAAAsV,uBAAA;UAAA,MACTzQ,GAAG,CAACtU,MAAM,IAAI,CAAC;YAAAklB,SAAA,CAAA9iB,IAAA;YAAA;UAAA;UAAA,OAAA8iB,SAAA,CAAA3f,MAAA,WACRoD,GAAG,CAACkJ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBO,IAAI,EAAE,CAAC;YACP8S,GAAG,EAAE,cAAc;YACnBC,IAAI,EAAE;cACFC,SAAS,EAAE;YACf,CAAC;YACDL,IAAI,EAAE,CAAC;YACPnT,MAAM,EAAE;UACZ,CAAC,CAAC;QAAA;UAAA,MAEF,CAACwS,MAAM,IAAI,CAACC,MAAM,IAAI,CAAClZ,IAAI,CAAC,CAAC,CAAC,IAAI,CAACkJ,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC7E,MAAM,CAAC,CAAC,CAAC;YAAAyV,SAAA,CAAA9iB,IAAA;YAAA;UAAA;UAAA,OAAA8iB,SAAA,CAAA3f,MAAA,WAChDoD,GAAG,CAACkJ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE;UACZ,CAAC,CAAC;QAAA;UAEFmT,IAAI,GAAGhT,IAAI,CAACsT,IAAI,CAACT,MAAM,CAAC7kB,MAAM,GAAG,EAAE,CAAC;UAAA,OAAAklB,SAAA,CAAA3f,MAAA,WACjCoD,GAAG,CAACkJ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBO,IAAI,EAAE,CAAC;YACP8S,GAAG,EAAE,aAAa;YAClBC,IAAI,EAAE;cACFC,SAAS,EAAE/Q;YACf,CAAC;YACD7E,MAAM,EAAEA,MAAM,CAAC,CAAC,CAAC,CAACA,MAAM;YACxBuV,IAAI,EAAEA,IAAI;YACVnT,MAAM,EAAE;UACZ,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAqT,SAAA,CAAAle,IAAA;MAAA;IAAA,GAAAmd,QAAA;EAAA,CACL;EAAA,gBAlDKF,YAAYA,CAAAsB,IAAA,EAAAC,IAAA;IAAA,OAAAtB,KAAA,CAAA/b,KAAA,OAAAD,SAAA;EAAA;AAAA,GAkDjB;AAED,IAAMud,cAAc;EAAA,IAAAC,KAAA,GAAA5d,iBAAA,eAAArF,mBAAA,GAAA6D,IAAA,CAAG,SAAAqf,SAAOjd,GAAG,EAAEC,GAAG;IAAA,IAAAid,UAAA,EAAA1W,QAAA,EAAAmV,MAAA,EAAAC,MAAA,EAAA1Z,IAAA,EAAAgD,SAAA,EAAAJ,IAAA,EAAAqY,uBAAA,EAAAC,uBAAA,EAAA1a,IAAA,EAAA2a,uBAAA,EAAAC,uBAAA,EAAAC,SAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,YAAA,EAAApB,IAAA,EAAAqB,KAAA;IAAA,OAAA5jB,mBAAA,GAAAU,IAAA,UAAAmjB,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAzf,IAAA,GAAAyf,SAAA,CAAAnkB,IAAA;QAAA;UAAAwjB,UAAA,GACCld,GAAG,CAACgJ,IAAI,EAArCxC,QAAQ,GAAA0W,UAAA,CAAR1W,QAAQ,EAAEmV,MAAM,GAAAuB,UAAA,CAANvB,MAAM,EAAEC,MAAM,GAAAsB,UAAA,CAANtB,MAAM;UAC1B1Z,IAAI,GAAGlC,GAAG,CAACiJ,OAAO,CAAC/G,IAAI;UAEvBgD,SAAS,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAACS,QAAQ,CAACC,MAAM,CAACY,QAAQ,CAAC,CAAC;UAAA,MAC5D,CAACtB,SAAS,IAAIyW,MAAM,GAAG,CAAC,IAAIC,MAAM,GAAG,CAAC;YAAAiC,SAAA,CAAAnkB,IAAA;YAAA;UAAA;UAAA,OAAAmkB,SAAA,CAAAhhB,MAAA,WAC/BoD,GAAG,CAACkJ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBO,IAAI,EAAE,CAAC;YACP8S,GAAG,EAAE,cAAc;YACnBC,IAAI,EAAE;cACFC,SAAS,EAAE;YACf,CAAC;YACDxT,MAAM,EAAE;UACZ,CAAC,CAAC;QAAA;UAGFrE,IAAI,GAAG9D,MAAM,CAACwF,QAAQ,CAAC;UAAAqX,SAAA,CAAAnkB,IAAA;UAAA,OAENwK,qBAAU,CAACC,KAAK,CAAC,qGAAqG,EAAE,CAACjC,IAAI,CAAC,CAAC;QAAA;UAAAib,uBAAA,GAAAU,SAAA,CAAAnhB,IAAA;UAAA0gB,uBAAA,GAAAvlB,cAAA,CAAAslB,uBAAA;UAA7Iza,IAAI,GAAA0a,uBAAA;UAAAS,SAAA,CAAAnkB,IAAA;UAAA,OACewK,qBAAU,CAACC,KAAK,wDAAA+E,MAAA,CAAwDpE,IAAI,+BAAAoE,MAAA,CAA4BlI,MAAM,CAAC2a,MAAM,CAAC,GAAG,GAAG,GAAG3a,MAAM,CAAC4a,MAAM,CAAC,GAAI,CAAClZ,IAAI,CAAC,CAAC,CAAC,CAAC2B,KAAK,CAAC,CAAC;QAAA;UAAAgZ,uBAAA,GAAAQ,SAAA,CAAAnhB,IAAA;UAAA4gB,uBAAA,GAAAzlB,cAAA,CAAAwlB,uBAAA;UAApLE,SAAS,GAAAD,uBAAA;UAAAO,SAAA,CAAAnkB,IAAA;UAAA,OACawK,qBAAU,CAACC,KAAK,wDAAA+E,MAAA,CAAwDpE,IAAI,0BAAuB,CAACpC,IAAI,CAAC,CAAC,CAAC,CAAC2B,KAAK,CAAC,CAAC;QAAA;UAAAmZ,uBAAA,GAAAK,SAAA,CAAAnhB,IAAA;UAAA+gB,uBAAA,GAAA5lB,cAAA,CAAA2lB,uBAAA;UAAzIE,YAAY,GAAAD,uBAAA;UAAA,IAEdF,SAAS,CAAC,CAAC,CAAC;YAAAM,SAAA,CAAAnkB,IAAA;YAAA;UAAA;UAAA,OAAAmkB,SAAA,CAAAhhB,MAAA,WACNoD,GAAG,CAACkJ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBO,IAAI,EAAE,CAAC;YACP8S,GAAG,EAAE,cAAc;YACnBC,IAAI,EAAE;cACFC,SAAS,EAAE;YACf,CAAC;YACDL,IAAI,EAAE,CAAC;YACPnT,MAAM,EAAE;UACZ,CAAC,CAAC;QAAA;UAAA,MAEF,CAACwS,MAAM,IAAI,CAACC,MAAM,IAAI,CAAClZ,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC6a,SAAS,CAAC,CAAC,CAAC;YAAAM,SAAA,CAAAnkB,IAAA;YAAA;UAAA;UAAA,OAAAmkB,SAAA,CAAAhhB,MAAA,WACxCoD,GAAG,CAACkJ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,QAAQ;YACjBF,MAAM,EAAE;UACZ,CAAC,CAAC;QAAA;UAEFmT,IAAI,GAAGhT,IAAI,CAACsT,IAAI,CAACc,YAAY,CAACpmB,MAAM,GAAG,EAAE,CAAC;UAE1CqmB,KAAK,GAAGJ,SAAS,CAACO,GAAG,CAAC,UAACpB,IAAI,EAAK;YAChC,IAAM3P,EAAE,GAAkD2P,IAAI,CAAxD3P,EAAE;cAAE1I,KAAK,GAA2CqY,IAAI,CAApDrY,KAAK;cAAEsF,IAAI,GAAqC+S,IAAI,CAA7C/S,IAAI;cAAEvF,MAAM,GAA6BsY,IAAI,CAAvCtY,MAAM;cAAE9B,KAAK,GAAsBoa,IAAI,CAA/Bpa,KAAK;cAAEwC,IAAI,GAAgB4X,IAAI,CAAxB5X,IAAI;cAAKiZ,MAAM,GAAAnnB,wBAAA,CAAK8lB,IAAI,EAAAjmB,SAAA;YAC9D,OAAOsnB,MAAM;UACjB,CAAC,CAAC;UAAA,OAAAF,SAAA,CAAAhhB,MAAA,WAEKoD,GAAG,CAACkJ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBO,IAAI,EAAE,CAAC;YACP8S,GAAG,EAAE,aAAa;YAClBC,IAAI,EAAE;cACFC,SAAS,EAAEgB;YACf,CAAC;YACDrB,IAAI,EAAEA,IAAI;YACVnT,MAAM,EAAE;UACZ,CAAC,CAAC;QAAA;QAAA;UAAA,OAAA0U,SAAA,CAAAvf,IAAA;MAAA;IAAA,GAAA2e,QAAA;EAAA,CACL;EAAA,gBAvDKF,cAAcA,CAAAiB,IAAA,EAAAC,IAAA;IAAA,OAAAjB,KAAA,CAAAvd,KAAA,OAAAD,SAAA;EAAA;AAAA,GAuDnB;AAGD0e,MAAM,CAACC,OAAO,GAAG;EACbte,MAAM,EAANA,MAAM;EACNsG,KAAK,EAALA,KAAK;EACLgE,KAAK,EAALA,KAAK;EACL6Q,UAAU,EAAVA,UAAU;EACVO,YAAY,EAAZA,YAAY;EACZwB,cAAc,EAAdA;AACJ,CAAC","ignoreList":[]}},"mtime":1722459116000},"{\"assumptions\":{},\"sourceRoot\":\"/www/wwwroot/21india/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/www/wwwroot/21india\",\"filename\":\"/www/wwwroot/21india/src/controllers/paymentController.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/www/wwwroot/21india\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.5:development":{"value":{"code":"\"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _connectDB = _interopRequireDefault(require(\"../config/connectDB\"));\nvar _axios = _interopRequireDefault(require(\"axios\"));\nvar _moment = _interopRequireDefault(require(\"moment\"));\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\nvar _querystring = _interopRequireDefault(require(\"querystring\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nvar timeNow = Date.now();\nvar PaymentStatusMap = {\n  PENDING: 0,\n  SUCCESS: 1,\n  CANCELLED: 2\n};\nvar PaymentMethodsMap = {\n  UPI_GATEWAY: \"upi_gateway\",\n  UPI_MANUAL: \"upi_manual\",\n  USDT_MANUAL: \"usdt_manual\",\n  WOW_PAY: \"wow_pay\",\n  USDT: \"usdt\"\n};\nvar initiateManualUPIPayment = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(req, res) {\n    var _bank_recharge_momo_d, _bank_recharge_momo_d2, _bank_recharge_momo_d3, _bank_recharge_momo_d4;\n    var query, _yield$connection$que, _yield$connection$que2, bank_recharge_momo, bank_recharge_momo_data, momo;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          query = req.query;\n          _context.next = 3;\n          return _connectDB[\"default\"].query(\"SELECT * FROM bank_recharge WHERE type = 'momo'\");\n        case 3:\n          _yield$connection$que = _context.sent;\n          _yield$connection$que2 = _slicedToArray(_yield$connection$que, 1);\n          bank_recharge_momo = _yield$connection$que2[0];\n          if (bank_recharge_momo.length) {\n            bank_recharge_momo_data = bank_recharge_momo[0];\n          }\n          momo = {\n            bank_name: ((_bank_recharge_momo_d = bank_recharge_momo_data) === null || _bank_recharge_momo_d === void 0 ? void 0 : _bank_recharge_momo_d.name_bank) || \"\",\n            username: ((_bank_recharge_momo_d2 = bank_recharge_momo_data) === null || _bank_recharge_momo_d2 === void 0 ? void 0 : _bank_recharge_momo_d2.name_user) || \"\",\n            upi_id: ((_bank_recharge_momo_d3 = bank_recharge_momo_data) === null || _bank_recharge_momo_d3 === void 0 ? void 0 : _bank_recharge_momo_d3.stk) || \"\",\n            usdt_wallet_address: ((_bank_recharge_momo_d4 = bank_recharge_momo_data) === null || _bank_recharge_momo_d4 === void 0 ? void 0 : _bank_recharge_momo_d4.qr_code_image) || \"\"\n          };\n          return _context.abrupt(\"return\", res.render(\"wallet/manual_payment.ejs\", {\n            Amount: query === null || query === void 0 ? void 0 : query.am,\n            UpiId: momo.upi_id\n          }));\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function initiateManualUPIPayment(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar initiateManualUSDTPayment = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(req, res) {\n    var _bank_recharge_momo_d5, _bank_recharge_momo_d6, _bank_recharge_momo_d7, _bank_recharge_momo_d8;\n    var query, _yield$connection$que3, _yield$connection$que4, bank_recharge_momo, bank_recharge_momo_data, momo;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          query = req.query;\n          _context2.next = 3;\n          return _connectDB[\"default\"].query(\"SELECT * FROM bank_recharge WHERE type = 'momo'\");\n        case 3:\n          _yield$connection$que3 = _context2.sent;\n          _yield$connection$que4 = _slicedToArray(_yield$connection$que3, 1);\n          bank_recharge_momo = _yield$connection$que4[0];\n          if (bank_recharge_momo.length) {\n            bank_recharge_momo_data = bank_recharge_momo[0];\n          }\n          momo = {\n            bank_name: ((_bank_recharge_momo_d5 = bank_recharge_momo_data) === null || _bank_recharge_momo_d5 === void 0 ? void 0 : _bank_recharge_momo_d5.name_bank) || \"\",\n            username: ((_bank_recharge_momo_d6 = bank_recharge_momo_data) === null || _bank_recharge_momo_d6 === void 0 ? void 0 : _bank_recharge_momo_d6.name_user) || \"\",\n            upi_id: ((_bank_recharge_momo_d7 = bank_recharge_momo_data) === null || _bank_recharge_momo_d7 === void 0 ? void 0 : _bank_recharge_momo_d7.stk) || \"\",\n            usdt_wallet_address: ((_bank_recharge_momo_d8 = bank_recharge_momo_data) === null || _bank_recharge_momo_d8 === void 0 ? void 0 : _bank_recharge_momo_d8.qr_code_image) || \"\"\n          };\n          return _context2.abrupt(\"return\", res.render(\"wallet/usdt_manual_payment.ejs\", {\n            Amount: query === null || query === void 0 ? void 0 : query.am,\n            UsdtWalletAddress: momo.usdt_wallet_address\n          }));\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function initiateManualUSDTPayment(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar addManualUPIPaymentRequest = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(req, res) {\n    var data, auth, money, utr, minimumMoneyAllowed, user, pendingRechargeList, deleteRechargeQueries, orderId, newRecharge, recharge;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          data = req.body;\n          auth = req.cookies.auth;\n          money = parseInt(data.money);\n          utr = parseInt(data.utr);\n          minimumMoneyAllowed = parseInt(process.env.MINIMUM_MONEY);\n          if (!(!money || !(money >= minimumMoneyAllowed))) {\n            _context3.next = 8;\n            break;\n          }\n          return _context3.abrupt(\"return\", res.status(400).json({\n            message: \"Money is Required and it should be \\u20B9\".concat(minimumMoneyAllowed, \" or above!\"),\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 8:\n          if (!(!utr && (utr === null || utr === void 0 ? void 0 : utr.length) != 12)) {\n            _context3.next = 10;\n            break;\n          }\n          return _context3.abrupt(\"return\", res.status(400).json({\n            message: \"UPI Ref No. or UTR is Required And it should be 12 digit long\",\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 10:\n          _context3.next = 12;\n          return getUserDataByAuthToken(auth);\n        case 12:\n          user = _context3.sent;\n          _context3.next = 15;\n          return rechargeTable.getRecordByPhoneAndStatus({\n            phone: user.phone,\n            status: PaymentStatusMap.PENDING,\n            type: PaymentMethodsMap.UPI_GATEWAY\n          });\n        case 15:\n          pendingRechargeList = _context3.sent;\n          if (!(pendingRechargeList.length !== 0)) {\n            _context3.next = 20;\n            break;\n          }\n          deleteRechargeQueries = pendingRechargeList.map(function (recharge) {\n            return rechargeTable.cancelById(recharge.id);\n          });\n          _context3.next = 20;\n          return Promise.all(deleteRechargeQueries);\n        case 20:\n          orderId = getRechargeOrderId();\n          newRecharge = {\n            orderId: orderId,\n            transactionId: 'NULL',\n            utr: utr,\n            phone: user.phone,\n            money: money,\n            type: PaymentMethodsMap.UPI_MANUAL,\n            status: 0,\n            today: rechargeTable.getCurrentTimeForTodayField(),\n            url: \"NULL\",\n            time: timeNow\n          };\n          _context3.next = 24;\n          return rechargeTable.create(newRecharge);\n        case 24:\n          recharge = _context3.sent;\n          return _context3.abrupt(\"return\", res.status(200).json({\n            message: 'Payment Requested successfully Your Balance will update shortly!',\n            recharge: recharge,\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 28:\n          _context3.prev = 28;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n          res.status(500).json({\n            status: false,\n            message: \"Something went wrong!\",\n            timestamp: timeNow\n          });\n        case 32:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3, null, [[0, 28]]);\n  }));\n  return function addManualUPIPaymentRequest(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nvar addManualUSDTPaymentRequest = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(req, res) {\n    var data, auth, money_usdt, money, utr, minimumMoneyAllowed, user, pendingRechargeList, deleteRechargeQueries, orderId, newRecharge, recharge;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          data = req.body;\n          auth = req.cookies.auth;\n          money_usdt = parseInt(data.money);\n          money = money_usdt * 82;\n          utr = parseInt(data.utr);\n          minimumMoneyAllowed = parseInt(process.env.MINIMUM_MONEY);\n          if (!(!money || !(money >= minimumMoneyAllowed))) {\n            _context4.next = 9;\n            break;\n          }\n          return _context4.abrupt(\"return\", res.status(400).json({\n            message: \"Money is Required and it should be \\u20B9\".concat(minimumMoneyAllowed, \" or \").concat((minimumMoneyAllowed / 82).toFixed(2), \" or above!\"),\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 9:\n          if (utr) {\n            _context4.next = 11;\n            break;\n          }\n          return _context4.abrupt(\"return\", res.status(400).json({\n            message: \"Ref No. or UTR is Required\",\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 11:\n          _context4.next = 13;\n          return getUserDataByAuthToken(auth);\n        case 13:\n          user = _context4.sent;\n          _context4.next = 16;\n          return rechargeTable.getRecordByPhoneAndStatus({\n            phone: user.phone,\n            status: PaymentStatusMap.PENDING,\n            type: PaymentMethodsMap.UPI_GATEWAY\n          });\n        case 16:\n          pendingRechargeList = _context4.sent;\n          if (!(pendingRechargeList.length !== 0)) {\n            _context4.next = 21;\n            break;\n          }\n          deleteRechargeQueries = pendingRechargeList.map(function (recharge) {\n            return rechargeTable.cancelById(recharge.id);\n          });\n          _context4.next = 21;\n          return Promise.all(deleteRechargeQueries);\n        case 21:\n          orderId = getRechargeOrderId();\n          newRecharge = {\n            orderId: orderId,\n            transactionId: 'NULL',\n            utr: utr,\n            phone: user.phone,\n            money: money,\n            type: PaymentMethodsMap.USDT_MANUAL,\n            status: 0,\n            today: rechargeTable.getCurrentTimeForTodayField(),\n            url: \"NULL\",\n            time: timeNow\n          };\n          _context4.next = 25;\n          return rechargeTable.create(newRecharge);\n        case 25:\n          recharge = _context4.sent;\n          return _context4.abrupt(\"return\", res.status(200).json({\n            message: 'Payment Requested successfully Your Balance will update shortly!',\n            recharge: recharge,\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 29:\n          _context4.prev = 29;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n          res.status(500).json({\n            status: false,\n            message: \"Something went wrong!\",\n            timestamp: timeNow\n          });\n        case 33:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4, null, [[0, 29]]);\n  }));\n  return function addManualUSDTPaymentRequest(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nvar initiateUPIPayment = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(req, res) {\n    var type, auth, money, minimumMoneyAllowed, user, pendingRechargeList, deleteRechargeQueries, orderId, moneyString, apiUrl, secretKey, mchid, params, sortedKeys, signatureString, signature, response, responseData, newRecharge, recharge;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          type = PaymentMethodsMap.UPI_GATEWAY;\n          auth = req.cookies.auth;\n          money = parseInt(req.body.money);\n          minimumMoneyAllowed = parseInt(process.env.MINIMUM_MONEY);\n          if (!(!money || money < minimumMoneyAllowed)) {\n            _context5.next = 6;\n            break;\n          }\n          return _context5.abrupt(\"return\", res.status(400).json({\n            message: \"Money is required and should be \\u20B9\".concat(minimumMoneyAllowed, \" or above!\"),\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 6:\n          _context5.prev = 6;\n          _context5.next = 9;\n          return getUserDataByAuthToken(auth);\n        case 9:\n          user = _context5.sent;\n          _context5.next = 12;\n          return rechargeTable.getRecordByPhoneAndStatus({\n            phone: user.phone,\n            status: PaymentStatusMap.PENDING,\n            type: PaymentMethodsMap.UPI_GATEWAY\n          });\n        case 12:\n          pendingRechargeList = _context5.sent;\n          if (!(pendingRechargeList.length !== 0)) {\n            _context5.next = 17;\n            break;\n          }\n          deleteRechargeQueries = pendingRechargeList.map(function (recharge) {\n            return rechargeTable.cancelById(recharge.id);\n          });\n          _context5.next = 17;\n          return Promise.all(deleteRechargeQueries);\n        case 17:\n          orderId = getRechargeOrderId();\n          moneyString = String(money); // Define API URL and secret key\n          apiUrl = 'https://initpay.dragon1942.net/api/pay/neworder';\n          secretKey = process.env.dragonAPI_KEY;\n          mchid = process.env.dragonMCHID; // Prepare request parameters\n          params = {\n            mchId: mchid,\n            subject: 'web pay',\n            notifyUrl: 'https://21india.in/webhook',\n            amount: money * 100,\n            currency: 'INR',\n            body: '21india',\n            mchOrderNo: orderId,\n            productId: '8044',\n            returnUrl: \"\".concat(process.env.APP_BASE_URL, \"/wallet/rechargerecord\")\n          }; // Generate signature\n          sortedKeys = Object.keys(params).sort();\n          signatureString = '';\n          sortedKeys.forEach(function (key) {\n            signatureString += \"\".concat(key, \"=\").concat(params[key], \"&\");\n          });\n          signatureString += \"key=\".concat(secretKey);\n          signature = _crypto[\"default\"].createHash('md5').update(signatureString).digest('hex').toUpperCase(); // Add the signature to request parameters\n          params.sign = signature;\n\n          // Log the request parameters\n          //   console.log(\"Data object with signature:\", params);\n\n          // Send payment request\n          _context5.next = 31;\n          return _axios[\"default\"].post(apiUrl, new URLSearchParams(params).toString(), {\n            headers: {\n              'Content-Type': 'application/x-www-form-urlencoded'\n            }\n          });\n        case 31:\n          response = _context5.sent;\n          responseData = response.data; // Log the response data\n          console.log(\"Response Data:\", responseData);\n          if (!(!responseData || responseData.retCode !== \"SUCCESS\")) {\n            _context5.next = 36;\n            break;\n          }\n          throw new Error(\"Gateway error from Bharatpe!\");\n        case 36:\n          newRecharge = {\n            orderId: orderId,\n            transactionId: responseData.payOrderId || 'NULL',\n            utr: 1,\n            phone: user.phone,\n            money: parseFloat(moneyString),\n            type: 'Dpay',\n            status: 0,\n            today: rechargeTable.getCurrentTimeForTodayField(),\n            url: responseData.payParams.payUrl || null,\n            // Update payment_url from response\n            time: timeNow\n          };\n          _context5.next = 39;\n          return rechargeTable.create(newRecharge);\n        case 39:\n          recharge = _context5.sent;\n          return _context5.abrupt(\"return\", res.status(200).json({\n            message: 'Payment Initiated successfully',\n            recharge: recharge,\n            urls: {\n              web_url: responseData.payParams.payUrl || null // Update payment_url in response\n            },\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 43:\n          _context5.prev = 43;\n          _context5.t0 = _context5[\"catch\"](6);\n          console.log(_context5.t0);\n          res.status(200).json({\n            status: false,\n            message: \"Something went wrong!\",\n            timestamp: timeNow\n          });\n        case 47:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5, null, [[6, 43]]);\n  }));\n  return function initiateUPIPayment(_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nvar verifyUPIPayment = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(req, res) {\n    var type, auth, orderId, user, recharge, ekqrResponse, ekqrData;\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          type = PaymentMethodsMap.UPI_GATEWAY;\n          auth = req.cookies.auth;\n          orderId = req.query.client_txn_id;\n          if (!(!auth || !orderId)) {\n            _context6.next = 5;\n            break;\n          }\n          return _context6.abrupt(\"return\", res.status(400).json({\n            message: \"orderId is Required!\",\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 5:\n          _context6.prev = 5;\n          _context6.next = 8;\n          return getUserDataByAuthToken(auth);\n        case 8:\n          user = _context6.sent;\n          _context6.next = 11;\n          return rechargeTable.getRechargeByOrderId({\n            orderId: orderId\n          });\n        case 11:\n          recharge = _context6.sent;\n          if (recharge) {\n            _context6.next = 14;\n            break;\n          }\n          return _context6.abrupt(\"return\", res.status(400).json({\n            message: \"Unable to find recharge with this order id!\",\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 14:\n          _context6.next = 16;\n          return _axios[\"default\"].post('https://api.ekqr.in/api/check_order_status', {\n            key: process.env.UPI_GATEWAY_PAYMENT_KEY,\n            client_txn_id: orderId,\n            txn_date: rechargeTable.getDMYDateOfTodayFiled(recharge.today)\n          });\n        case 16:\n          ekqrResponse = _context6.sent;\n          ekqrData = ekqrResponse === null || ekqrResponse === void 0 ? void 0 : ekqrResponse.data;\n          if (!(ekqrData === undefined || ekqrData.status === false)) {\n            _context6.next = 20;\n            break;\n          }\n          throw Error(\"Gateway error from ekqr!\");\n        case 20:\n          if (!(ekqrData.data.status === \"created\")) {\n            _context6.next = 22;\n            break;\n          }\n          return _context6.abrupt(\"return\", res.status(200).json({\n            message: 'Your payment request is just created',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 22:\n          if (!(ekqrData.data.status === \"scanning\")) {\n            _context6.next = 24;\n            break;\n          }\n          return _context6.abrupt(\"return\", res.status(200).json({\n            message: 'Waiting for confirmation',\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 24:\n          if (!(ekqrData.data.status === 'success')) {\n            _context6.next = 31;\n            break;\n          }\n          if (!(recharge.status === PaymentStatusMap.PENDING || recharge.status === PaymentStatusMap.CANCELLED)) {\n            _context6.next = 30;\n            break;\n          }\n          _context6.next = 28;\n          return rechargeTable.setStatusToSuccessByIdAndOrderId({\n            id: recharge.id,\n            orderId: recharge.orderId\n          });\n        case 28:\n          _context6.next = 30;\n          return addUserAccountBalance({\n            phone: user.phone,\n            money: recharge.money + recharge.money / 100 * 5\n          });\n        case 30:\n          return _context6.abrupt(\"return\", res.redirect(\"/wallet/rechargerecord\"));\n        case 31:\n          _context6.next = 37;\n          break;\n        case 33:\n          _context6.prev = 33;\n          _context6.t0 = _context6[\"catch\"](5);\n          console.log(_context6.t0);\n          res.status(500).json({\n            status: false,\n            message: \"Something went wrong!\",\n            timestamp: timeNow,\n            error: _context6.t0\n          });\n        case 37:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6, null, [[5, 33]]);\n  }));\n  return function verifyUPIPayment(_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nvar initiateWowPayPayment = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(req, res) {\n    var type, auth, money, minimumMoneyAllowed, user, pendingRechargeList, deleteRechargeQueries, orderId, date, params, response;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          type = PaymentMethodsMap.WOW_PAY;\n          auth = req.cookies.auth;\n          money = parseInt(req.query.money);\n          minimumMoneyAllowed = parseInt(process.env.MINIMUM_MONEY);\n          if (!(!money || !(money >= minimumMoneyAllowed))) {\n            _context7.next = 6;\n            break;\n          }\n          return _context7.abrupt(\"return\", res.status(400).json({\n            message: \"Money is Required and it should be \\u20B9\".concat(minimumMoneyAllowed, \" or above!\"),\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 6:\n          _context7.prev = 6;\n          _context7.next = 9;\n          return getUserDataByAuthToken(auth);\n        case 9:\n          user = _context7.sent;\n          _context7.next = 12;\n          return rechargeTable.getRecordByPhoneAndStatus({\n            phone: user.phone,\n            status: PaymentStatusMap.PENDING,\n            type: PaymentMethodsMap.UPI_GATEWAY\n          });\n        case 12:\n          pendingRechargeList = _context7.sent;\n          if (!(pendingRechargeList.length !== 0)) {\n            _context7.next = 17;\n            break;\n          }\n          deleteRechargeQueries = pendingRechargeList.map(function (recharge) {\n            return rechargeTable.cancelById(recharge.id);\n          });\n          _context7.next = 17;\n          return Promise.all(deleteRechargeQueries);\n        case 17:\n          orderId = getRechargeOrderId();\n          date = wowpay.getCurrentDate();\n          params = {\n            version: '1.0',\n            // mch_id: 222887002,\n            mch_id: process.env.WOWPAY_MERCHANT_ID,\n            mch_order_no: orderId,\n            // pay_type: '151',\n            pay_type: '102',\n            trade_amount: money,\n            order_date: date,\n            goods_name: user.phone,\n            // notify_url: `${process.env.APP_BASE_URL}/wallet/verify/wowpay`,\n            notify_url: \"https://winup.in/wallet/verify/wowpay\",\n            mch_return_msg: user.phone\n            // payment_key: 'TZLMQ1QWJCUSFLH02LAYRZBJ1WK7IHSG',\n          };\n          params.page_url = 'https:///winup.in/verify/wowpay';\n          params.sign = wowpay.generateSign(params, process.env.WOWPAY_MERCHANT_KEY);\n          // params.sign = wowpay.generateSign(params, 'TZLMQ1QWJCUSFLH02LAYRZBJ1WK7IHSG');\n          // params.sign = wowpay.generateSign(params, 'MZBG89MDIBEDWJOJQYEZVSNP8EEVMSPM');\n          params.sign_type = \"MD5\";\n          console.log(params);\n          _context7.next = 26;\n          return (0, _axios[\"default\"])({\n            method: \"post\",\n            url: 'https://pay.123Club.net/pay/web',\n            data: _querystring[\"default\"].stringify(params)\n          });\n        case 26:\n          response = _context7.sent;\n          console.log(response.data);\n          if (!(response.data.respCode === \"SUCCESS\" && response.data.payInfo)) {\n            _context7.next = 30;\n            break;\n          }\n          return _context7.abrupt(\"return\", res.status(200).json({\n            message: \"Payment requested Successfully\",\n            payment_url: response.data.payInfo,\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 30:\n          return _context7.abrupt(\"return\", res.status(400).json({\n            message: \"Payment request failed. Please try again Or Wrong Details.\",\n            status: false,\n            timeStamp: timeNow\n          }));\n        case 33:\n          _context7.prev = 33;\n          _context7.t0 = _context7[\"catch\"](6);\n          console.log(_context7.t0);\n          return _context7.abrupt(\"return\", res.status(500).json({\n            status: false,\n            message: \"Something went wrong!\",\n            timestamp: timeNow\n          }));\n        case 37:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7, null, [[6, 33]]);\n  }));\n  return function initiateWowPayPayment(_x13, _x14) {\n    return _ref7.apply(this, arguments);\n  };\n}();\nvar verifyWowPayPayment = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(req, res) {\n    var type, data, merchant_key, params, signStr, flag, newRechargeParams, recharge, newRecharge;\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          type = PaymentMethodsMap.WOW_PAY;\n          data = req.body;\n          if (!req.body) {\n            data = req.query;\n          }\n          console.log(data);\n          merchant_key = process.env.WOWPAY_MERCHANT_KEY;\n          params = {\n            mchId: process.env.WOWPAY_MERCHANT_ID,\n            amount: data.amount || '',\n            mchOrderNo: data.mchOrderNo || '',\n            merRetMsg: data.merRetMsg || '',\n            orderDate: data.orderDate || '',\n            orderNo: data.orderNo || '',\n            oriAmount: data.oriAmount || '',\n            tradeResult: data.tradeResult || '',\n            signType: data.signType || '',\n            sign: data.sign || ''\n          };\n          signStr = \"\";\n          signStr += \"amount=\" + params.amount + \"&\";\n          signStr += \"mchId=\" + params.mchId + \"&\";\n          signStr += \"mchOrderNo=\" + params.mchOrderNo + \"&\";\n          signStr += \"merRetMsg=\" + params.merRetMsg + \"&\";\n          signStr += \"orderDate=\" + params.orderDate + \"&\";\n          signStr += \"orderNo=\" + params.orderNo + \"&\";\n          signStr += \"oriAmount=\" + params.oriAmount + \"&\";\n          signStr += \"tradeResult=\" + params.tradeResult;\n          flag = wowpay.validateSignByKey(signStr, merchant_key, params.sign);\n          if (flag) {\n            _context8.next = 20;\n            break;\n          }\n          console.log({\n            status: false,\n            message: \"Something went wrong!\",\n            flag: flag,\n            timestamp: timeNow\n          });\n          return _context8.abrupt(\"return\", res.status(400).json({\n            status: false,\n            message: \"Something went wrong!\",\n            flag: flag,\n            timestamp: timeNow\n          }));\n        case 20:\n          newRechargeParams = {\n            orderId: params.mchOrderNo,\n            transactionId: 'NULL',\n            utr: null,\n            phone: params.merRetMsg,\n            money: params.amount,\n            type: type,\n            status: PaymentStatusMap.SUCCESS,\n            today: rechargeTable.getCurrentTimeForTodayField(),\n            url: 'NULL',\n            time: timeNow\n          };\n          _context8.next = 23;\n          return rechargeTable.getRechargeByOrderId({\n            orderId: newRechargeParams.orderId\n          });\n        case 23:\n          recharge = _context8.sent;\n          if (!recharge) {\n            _context8.next = 27;\n            break;\n          }\n          console.log({\n            message: \"Recharge already verified!\",\n            status: true,\n            timeStamp: timeNow\n          });\n          return _context8.abrupt(\"return\", res.status(400).json({\n            message: \"Recharge already verified!\",\n            status: true,\n            timeStamp: timeNow\n          }));\n        case 27:\n          _context8.next = 29;\n          return rechargeTable.create(newRechargeParams);\n        case 29:\n          newRecharge = _context8.sent;\n          _context8.next = 32;\n          return addUserAccountBalance({\n            phone: newRechargeParams.phone,\n            money: newRecharge.money + recharge.money / 100 * 5\n          });\n        case 32:\n          return _context8.abrupt(\"return\", res.redirect(\"/wallet/rechargerecord\"));\n        case 35:\n          _context8.prev = 35;\n          _context8.t0 = _context8[\"catch\"](0);\n          console.log({\n            status: false,\n            message: \"Something went wrong!\",\n            timestamp: timeNow\n          });\n          return _context8.abrupt(\"return\", res.status(500).json({\n            status: false,\n            message: \"Something went wrong!\",\n            timestamp: timeNow\n          }));\n        case 39:\n        case \"end\":\n          return _context8.stop();\n      }\n    }, _callee8, null, [[0, 35]]);\n  }));\n  return function verifyWowPayPayment(_x15, _x16) {\n    return _ref8.apply(this, arguments);\n  };\n}();\n\n// helpers ---------------\nvar getUserDataByAuthToken = /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(authToken) {\n    var _yield$connection$que5, _yield$connection$que6, users, user;\n    return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n      while (1) switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return _connectDB[\"default\"].query('SELECT `phone`, `code`,`name_user`,`invite` FROM users WHERE `token` = ? ', [authToken]);\n        case 2:\n          _yield$connection$que5 = _context9.sent;\n          _yield$connection$que6 = _slicedToArray(_yield$connection$que5, 1);\n          users = _yield$connection$que6[0];\n          user = users === null || users === void 0 ? void 0 : users[0];\n          if (!(user === undefined || user === null)) {\n            _context9.next = 8;\n            break;\n          }\n          throw Error(\"Unable to get user data!\");\n        case 8:\n          return _context9.abrupt(\"return\", {\n            phone: user.phone,\n            code: user.code,\n            username: user.name_user,\n            invite: user.invite\n          });\n        case 9:\n        case \"end\":\n          return _context9.stop();\n      }\n    }, _callee9);\n  }));\n  return function getUserDataByAuthToken(_x17) {\n    return _ref9.apply(this, arguments);\n  };\n}();\nvar addUserAccountBalance = /*#__PURE__*/function () {\n  var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(_ref10) {\n    var money, phone;\n    return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n      while (1) switch (_context10.prev = _context10.next) {\n        case 0:\n          money = _ref10.money, phone = _ref10.phone;\n          _context10.next = 3;\n          return _connectDB[\"default\"].query('UPDATE users SET money = money + ?, total_money = total_money + ? WHERE phone = ? ', [money, money, phone]);\n        case 3:\n        case \"end\":\n          return _context10.stop();\n      }\n    }, _callee10);\n  }));\n  return function addUserAccountBalance(_x18) {\n    return _ref11.apply(this, arguments);\n  };\n}();\nvar getRechargeOrderId = function getRechargeOrderId() {\n  var date = new Date();\n  var id_time = date.getUTCFullYear() + '' + date.getUTCMonth() + 1 + '' + date.getUTCDate();\n  var id_order = Math.floor(Math.random() * (99999999999999 - 10000000000000 + 1)) + 10000000000000;\n  return id_time + id_order;\n};\nvar rechargeTable = {\n  getRecordByPhoneAndStatus: function () {\n    var _getRecordByPhoneAndStatus = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(_ref12) {\n      var phone, status, type, recharge, _yield$connection$que7, _yield$connection$que8, _yield$connection$que9, _yield$connection$que10;\n      return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n        while (1) switch (_context11.prev = _context11.next) {\n          case 0:\n            phone = _ref12.phone, status = _ref12.status, type = _ref12.type;\n            if ([PaymentStatusMap.SUCCESS, PaymentStatusMap.CANCELLED, PaymentStatusMap.PENDING].includes(status)) {\n              _context11.next = 3;\n              break;\n            }\n            throw Error(\"Invalid Payment Status!\");\n          case 3:\n            if (!type) {\n              _context11.next = 11;\n              break;\n            }\n            _context11.next = 6;\n            return _connectDB[\"default\"].query('SELECT * FROM recharge WHERE phone = ? AND status = ? AND type = ?', [phone, status, type]);\n          case 6:\n            _yield$connection$que7 = _context11.sent;\n            _yield$connection$que8 = _slicedToArray(_yield$connection$que7, 1);\n            recharge = _yield$connection$que8[0];\n            _context11.next = 16;\n            break;\n          case 11:\n            _context11.next = 13;\n            return _connectDB[\"default\"].query('SELECT * FROM recharge WHERE phone = ? AND status = ?', [phone, status]);\n          case 13:\n            _yield$connection$que9 = _context11.sent;\n            _yield$connection$que10 = _slicedToArray(_yield$connection$que9, 1);\n            recharge = _yield$connection$que10[0];\n          case 16:\n            return _context11.abrupt(\"return\", recharge.map(function (item) {\n              return {\n                id: item.id,\n                orderId: item.id_order,\n                transactionId: item.transaction_id,\n                utr: item.utr,\n                phone: item.phone,\n                money: item.money,\n                type: item.type,\n                status: item.status,\n                today: item.today,\n                url: item.url,\n                time: item.time\n              };\n            }));\n          case 17:\n          case \"end\":\n            return _context11.stop();\n        }\n      }, _callee11);\n    }));\n    function getRecordByPhoneAndStatus(_x19) {\n      return _getRecordByPhoneAndStatus.apply(this, arguments);\n    }\n    return getRecordByPhoneAndStatus;\n  }(),\n  getRechargeByOrderId: function () {\n    var _getRechargeByOrderId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(_ref13) {\n      var _recharge$map;\n      var orderId, _yield$connection$que11, _yield$connection$que12, recharge;\n      return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n        while (1) switch (_context12.prev = _context12.next) {\n          case 0:\n            orderId = _ref13.orderId;\n            _context12.next = 3;\n            return _connectDB[\"default\"].query('SELECT * FROM recharge WHERE id_order = ?', [orderId]);\n          case 3:\n            _yield$connection$que11 = _context12.sent;\n            _yield$connection$que12 = _slicedToArray(_yield$connection$que11, 1);\n            recharge = _yield$connection$que12[0];\n            if (!(recharge.length === 0)) {\n              _context12.next = 8;\n              break;\n            }\n            return _context12.abrupt(\"return\", null);\n          case 8:\n            return _context12.abrupt(\"return\", (_recharge$map = recharge.map(function (item) {\n              return {\n                id: item.id,\n                orderId: item.id_order,\n                transactionId: item.transaction_id,\n                utr: item.utr,\n                phone: item.phone,\n                money: item.money,\n                type: item.type,\n                status: item.status,\n                today: item.today,\n                url: item.url,\n                time: item.time\n              };\n            })) === null || _recharge$map === void 0 ? void 0 : _recharge$map[0]);\n          case 9:\n          case \"end\":\n            return _context12.stop();\n        }\n      }, _callee12);\n    }));\n    function getRechargeByOrderId(_x20) {\n      return _getRechargeByOrderId.apply(this, arguments);\n    }\n    return getRechargeByOrderId;\n  }(),\n  cancelById: function () {\n    var _cancelById = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(id) {\n      return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n        while (1) switch (_context13.prev = _context13.next) {\n          case 0:\n            if (!(typeof id !== \"number\")) {\n              _context13.next = 2;\n              break;\n            }\n            throw Error(\"Invalid Recharge 'id' expected a number!\");\n          case 2:\n            _context13.next = 4;\n            return _connectDB[\"default\"].query('UPDATE recharge SET status = 2 WHERE id = ?', [id]);\n          case 4:\n          case \"end\":\n            return _context13.stop();\n        }\n      }, _callee13);\n    }));\n    function cancelById(_x21) {\n      return _cancelById.apply(this, arguments);\n    }\n    return cancelById;\n  }(),\n  setStatusToSuccessByIdAndOrderId: function () {\n    var _setStatusToSuccessByIdAndOrderId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(_ref14) {\n      var id, orderId, _yield$connection$que13, _yield$connection$que14, re;\n      return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n        while (1) switch (_context14.prev = _context14.next) {\n          case 0:\n            id = _ref14.id, orderId = _ref14.orderId;\n            if (!(typeof id !== \"number\")) {\n              _context14.next = 3;\n              break;\n            }\n            throw Error(\"Invalid Recharge 'id' expected a number!\");\n          case 3:\n            console.log(id, orderId);\n            _context14.next = 6;\n            return _connectDB[\"default\"].query('UPDATE recharge SET status = 1 WHERE id = ? AND id_order = ?', [id, orderId]);\n          case 6:\n            _yield$connection$que13 = _context14.sent;\n            _yield$connection$que14 = _slicedToArray(_yield$connection$que13, 1);\n            re = _yield$connection$que14[0];\n            console.log(re);\n          case 10:\n          case \"end\":\n            return _context14.stop();\n        }\n      }, _callee14);\n    }));\n    function setStatusToSuccessByIdAndOrderId(_x22) {\n      return _setStatusToSuccessByIdAndOrderId.apply(this, arguments);\n    }\n    return setStatusToSuccessByIdAndOrderId;\n  }(),\n  getCurrentTimeForTodayField: function getCurrentTimeForTodayField() {\n    return (0, _moment[\"default\"])().format(\"YYYY-DD-MM h:mm:ss A\");\n  },\n  getDMYDateOfTodayFiled: function getDMYDateOfTodayFiled(today) {\n    return (0, _moment[\"default\"])(today, \"YYYY-DD-MM h:mm:ss A\").format(\"DD-MM-YYYY\");\n  },\n  create: function () {\n    var _create = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(newRecharge) {\n      var _yield$connection$que15, _yield$connection$que16, recharge;\n      return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n        while (1) switch (_context15.prev = _context15.next) {\n          case 0:\n            if (newRecharge.url === undefined || newRecharge.url === null) {\n              newRecharge.url = \"0\";\n            }\n            _context15.next = 3;\n            return _connectDB[\"default\"].query(\"INSERT INTO recharge SET id_order = ?, transaction_id = ?, phone = ?, money = ?, type = ?, status = ?, today = ?, url = ?, time = ?, utr = ?\", [newRecharge.orderId, newRecharge.transactionId, newRecharge.phone, newRecharge.money, newRecharge.type, newRecharge.status, newRecharge.today, newRecharge.url, newRecharge.time, (newRecharge === null || newRecharge === void 0 ? void 0 : newRecharge.utr) || \"NULL\"]);\n          case 3:\n            _context15.next = 5;\n            return _connectDB[\"default\"].query('SELECT * FROM recharge WHERE id_order = ?', [newRecharge.orderId]);\n          case 5:\n            _yield$connection$que15 = _context15.sent;\n            _yield$connection$que16 = _slicedToArray(_yield$connection$que15, 1);\n            recharge = _yield$connection$que16[0];\n            if (!(recharge.length === 0)) {\n              _context15.next = 10;\n              break;\n            }\n            throw Error(\"Unable to create recharge!\");\n          case 10:\n            return _context15.abrupt(\"return\", recharge[0]);\n          case 11:\n          case \"end\":\n            return _context15.stop();\n        }\n      }, _callee15);\n    }));\n    function create(_x23) {\n      return _create.apply(this, arguments);\n    }\n    return create;\n  }()\n};\nvar wowpay = {\n  generateSign: function generateSign(params, secretKey) {\n    var keys = Object.keys(params).sort();\n    var string = [];\n    var _iterator = _createForOfIteratorHelper(keys),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var key = _step.value;\n        if (key === 'sign') continue;\n        string.push(key + '=' + params[key]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    var signStr = string.join('&') + '&key=' + secretKey;\n    return _crypto[\"default\"].createHash('md5').update(signStr).digest('hex');\n  },\n  validateSignByKey: function validateSignByKey(signSource, key, retSign) {\n    if (key) {\n      signSource = signSource + \"&key=\" + key;\n    }\n    var signKey = _crypto[\"default\"].createHash(\"md5\").update(signSource).digest(\"hex\");\n    return signKey === retSign;\n  },\n  getCurrentDate: function getCurrentDate() {\n    return (0, _moment[\"default\"])().format(\"YYYY-MM-DD H:mm:ss\");\n  }\n};\nmodule.exports = {\n  initiateUPIPayment: initiateUPIPayment,\n  verifyUPIPayment: verifyUPIPayment,\n  initiateWowPayPayment: initiateWowPayPayment,\n  verifyWowPayPayment: verifyWowPayPayment,\n  initiateManualUPIPayment: initiateManualUPIPayment,\n  addManualUPIPaymentRequest: addManualUPIPaymentRequest,\n  addManualUSDTPaymentRequest: addManualUSDTPaymentRequest,\n  initiateManualUSDTPayment: initiateManualUSDTPayment\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_connectDB","_interopRequireDefault","require","_axios","_moment","_crypto","_querystring","obj","__esModule","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","_regeneratorRuntime","t","r","Object","prototype","hasOwnProperty","defineProperty","a","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","minLen","_arrayLikeToArray","toString","from","test","len","arr2","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","undefined","timeNow","Date","now","PaymentStatusMap","PENDING","SUCCESS","CANCELLED","PaymentMethodsMap","UPI_GATEWAY","UPI_MANUAL","USDT_MANUAL","WOW_PAY","USDT","initiateManualUPIPayment","_ref","_callee","req","res","_bank_recharge_momo_d","_bank_recharge_momo_d2","_bank_recharge_momo_d3","_bank_recharge_momo_d4","query","_yield$connection$que","_yield$connection$que2","bank_recharge_momo","bank_recharge_momo_data","momo","_callee$","_context","connection","bank_name","name_bank","username","name_user","upi_id","stk","usdt_wallet_address","qr_code_image","render","Amount","am","UpiId","_x","_x2","initiateManualUSDTPayment","_ref2","_callee2","_bank_recharge_momo_d5","_bank_recharge_momo_d6","_bank_recharge_momo_d7","_bank_recharge_momo_d8","_yield$connection$que3","_yield$connection$que4","_callee2$","_context2","UsdtWalletAddress","_x3","_x4","addManualUPIPaymentRequest","_ref3","_callee3","data","auth","money","utr","minimumMoneyAllowed","user","pendingRechargeList","deleteRechargeQueries","orderId","newRecharge","recharge","_callee3$","_context3","body","cookies","parseInt","process","env","MINIMUM_MONEY","status","json","message","concat","timeStamp","getUserDataByAuthToken","rechargeTable","getRecordByPhoneAndStatus","phone","map","cancelById","id","all","getRechargeOrderId","transactionId","today","getCurrentTimeForTodayField","url","time","t0","console","log","timestamp","_x5","_x6","addManualUSDTPaymentRequest","_ref4","_callee4","money_usdt","_callee4$","_context4","toFixed","_x7","_x8","initiateUPIPayment","_ref5","_callee5","moneyString","apiUrl","secretKey","mchid","params","sortedKeys","signatureString","signature","response","responseData","_callee5$","_context5","String","dragonAPI_KEY","dragonMCHID","mchId","subject","notifyUrl","amount","currency","mchOrderNo","productId","returnUrl","APP_BASE_URL","sort","crypto","createHash","update","digest","toUpperCase","sign","axios","post","URLSearchParams","headers","retCode","payOrderId","parseFloat","payParams","payUrl","urls","web_url","_x9","_x10","verifyUPIPayment","_ref6","_callee6","ekqrResponse","ekqrData","_callee6$","_context6","client_txn_id","getRechargeByOrderId","UPI_GATEWAY_PAYMENT_KEY","txn_date","getDMYDateOfTodayFiled","setStatusToSuccessByIdAndOrderId","addUserAccountBalance","redirect","_x11","_x12","initiateWowPayPayment","_ref7","_callee7","date","_callee7$","_context7","wowpay","getCurrentDate","version","mch_id","WOWPAY_MERCHANT_ID","mch_order_no","pay_type","trade_amount","order_date","goods_name","notify_url","mch_return_msg","page_url","generateSign","WOWPAY_MERCHANT_KEY","sign_type","querystring","stringify","respCode","payInfo","payment_url","_x13","_x14","verifyWowPayPayment","_ref8","_callee8","merchant_key","signStr","flag","newRechargeParams","_callee8$","_context8","merRetMsg","orderDate","orderNo","oriAmount","tradeResult","signType","validateSignByKey","_x15","_x16","_ref9","_callee9","authToken","_yield$connection$que5","_yield$connection$que6","users","_callee9$","_context9","code","invite","_x17","_ref11","_callee10","_ref10","_callee10$","_context10","_x18","id_time","getUTCFullYear","getUTCMonth","getUTCDate","id_order","Math","floor","random","_getRecordByPhoneAndStatus","_callee11","_ref12","_yield$connection$que7","_yield$connection$que8","_yield$connection$que9","_yield$connection$que10","_callee11$","_context11","includes","item","transaction_id","_x19","_getRechargeByOrderId","_callee12","_ref13","_recharge$map","_yield$connection$que11","_yield$connection$que12","_callee12$","_context12","_x20","_cancelById","_callee13","_callee13$","_context13","_x21","_setStatusToSuccessByIdAndOrderId","_callee14","_ref14","_yield$connection$que13","_yield$connection$que14","re","_callee14$","_context14","_x22","moment","format","_create","_callee15","_yield$connection$que15","_yield$connection$que16","_callee15$","_context15","_x23","string","_iterator","_step","join","signSource","retSign","signKey","module","exports"],"sourceRoot":"/www/wwwroot/21india/src/controllers/","sources":["paymentController.js"],"sourcesContent":["import connection from \"../config/connectDB\";\nimport axios from 'axios';\nimport moment from \"moment\";\nimport crypto from \"crypto\";\nimport querystring from \"querystring\"\n\nlet timeNow = Date.now();\n\nconst PaymentStatusMap = {\n    PENDING: 0,\n    SUCCESS: 1,\n    CANCELLED: 2\n}\n\nconst PaymentMethodsMap = {\n    UPI_GATEWAY: \"upi_gateway\",\n    UPI_MANUAL: \"upi_manual\",\n    USDT_MANUAL: \"usdt_manual\",\n    WOW_PAY: \"wow_pay\",\n    USDT: \"usdt\",\n}\n\nconst initiateManualUPIPayment = async (req, res) => {\n    const query = req.query\n\n    const [bank_recharge_momo] = await connection.query(\"SELECT * FROM bank_recharge WHERE type = 'momo'\");\n\n    let bank_recharge_momo_data\n    if (bank_recharge_momo.length) {\n        bank_recharge_momo_data = bank_recharge_momo[0]\n    }\n\n    const momo = {\n        bank_name: bank_recharge_momo_data?.name_bank || \"\",\n        username: bank_recharge_momo_data?.name_user || \"\",\n        upi_id: bank_recharge_momo_data?.stk || \"\",\n        usdt_wallet_address: bank_recharge_momo_data?.qr_code_image || \"\",\n    }\n\n    return res.render(\"wallet/manual_payment.ejs\", {\n        Amount: query?.am,\n        UpiId: momo.upi_id,\n    });\n}\n\nconst initiateManualUSDTPayment = async (req, res) => {\n    const query = req.query\n\n    const [bank_recharge_momo] = await connection.query(\"SELECT * FROM bank_recharge WHERE type = 'momo'\");\n\n    let bank_recharge_momo_data\n    if (bank_recharge_momo.length) {\n        bank_recharge_momo_data = bank_recharge_momo[0]\n    }\n\n    const momo = {\n        bank_name: bank_recharge_momo_data?.name_bank || \"\",\n        username: bank_recharge_momo_data?.name_user || \"\",\n        upi_id: bank_recharge_momo_data?.stk || \"\",\n        usdt_wallet_address: bank_recharge_momo_data?.qr_code_image || \"\",\n    }\n\n    return res.render(\"wallet/usdt_manual_payment.ejs\", {\n        Amount: query?.am,\n        UsdtWalletAddress: momo.usdt_wallet_address,\n    });\n}\n\nconst addManualUPIPaymentRequest = async (req, res) => {\n    try {\n        const data = req.body\n        let auth = req.cookies.auth;\n        let money = parseInt(data.money);\n        let utr = parseInt(data.utr);\n        const minimumMoneyAllowed = parseInt(process.env.MINIMUM_MONEY)\n\n        if (!money || !(money >= minimumMoneyAllowed)) {\n            return res.status(400).json({\n                message: `Money is Required and it should be ₹${minimumMoneyAllowed} or above!`,\n                status: false,\n                timeStamp: timeNow,\n            })\n        }\n\n        if (!utr && utr?.length != 12) {\n            return res.status(400).json({\n                message: `UPI Ref No. or UTR is Required And it should be 12 digit long`,\n                status: false,\n                timeStamp: timeNow,\n            })\n        }\n\n        const user = await getUserDataByAuthToken(auth)\n\n        const pendingRechargeList = await rechargeTable.getRecordByPhoneAndStatus({ phone: user.phone, status: PaymentStatusMap.PENDING, type: PaymentMethodsMap.UPI_GATEWAY })\n\n        if (pendingRechargeList.length !== 0) {\n            const deleteRechargeQueries = pendingRechargeList.map(recharge => {\n                return rechargeTable.cancelById(recharge.id)\n            });\n\n            await Promise.all(deleteRechargeQueries)\n        }\n\n        const orderId = getRechargeOrderId()\n\n        const newRecharge = {\n            orderId: orderId,\n            transactionId: 'NULL',\n            utr: utr,\n            phone: user.phone,\n            money: money,\n            type: PaymentMethodsMap.UPI_MANUAL,\n            status: 0,\n            today: rechargeTable.getCurrentTimeForTodayField(),\n            url: \"NULL\",\n            time: timeNow,\n        }\n\n        const recharge = await rechargeTable.create(newRecharge)\n\n        return res.status(200).json({\n            message: 'Payment Requested successfully Your Balance will update shortly!',\n            recharge: recharge,\n            status: true,\n            timeStamp: timeNow,\n        });\n    } catch (error) {\n        console.log(error)\n\n        res.status(500).json({\n            status: false,\n            message: \"Something went wrong!\",\n            timestamp: timeNow\n        })\n    }\n}\n\nconst addManualUSDTPaymentRequest = async (req, res) => {\n    try {\n        const data = req.body\n        let auth = req.cookies.auth;\n        let money_usdt = parseInt(data.money);\n        let money = money_usdt * 82;\n        let utr = parseInt(data.utr);\n        const minimumMoneyAllowed = parseInt(process.env.MINIMUM_MONEY)\n\n        if (!money || !(money >= minimumMoneyAllowed)) {\n            return res.status(400).json({\n                message: `Money is Required and it should be ₹${minimumMoneyAllowed} or ${(minimumMoneyAllowed / 82).toFixed(2)} or above!`,\n                status: false,\n                timeStamp: timeNow,\n            })\n        }\n\n        if (!utr) {\n            return res.status(400).json({\n                message: `Ref No. or UTR is Required`,\n                status: false,\n                timeStamp: timeNow,\n            })\n        }\n\n        const user = await getUserDataByAuthToken(auth)\n\n        const pendingRechargeList = await rechargeTable.getRecordByPhoneAndStatus({ phone: user.phone, status: PaymentStatusMap.PENDING, type: PaymentMethodsMap.UPI_GATEWAY })\n\n        if (pendingRechargeList.length !== 0) {\n            const deleteRechargeQueries = pendingRechargeList.map(recharge => {\n                return rechargeTable.cancelById(recharge.id)\n            });\n\n            await Promise.all(deleteRechargeQueries)\n        }\n\n        const orderId = getRechargeOrderId()\n\n        const newRecharge = {\n            orderId: orderId,\n            transactionId: 'NULL',\n            utr: utr,\n            phone: user.phone,\n            money: money,\n            type: PaymentMethodsMap.USDT_MANUAL,\n            status: 0,\n            today: rechargeTable.getCurrentTimeForTodayField(),\n            url: \"NULL\",\n            time: timeNow,\n        }\n\n        const recharge = await rechargeTable.create(newRecharge)\n\n        return res.status(200).json({\n            message: 'Payment Requested successfully Your Balance will update shortly!',\n            recharge: recharge,\n            status: true,\n            timeStamp: timeNow,\n        });\n    } catch (error) {\n        console.log(error)\n\n        res.status(500).json({\n            status: false,\n            message: \"Something went wrong!\",\n            timestamp: timeNow\n        })\n    }\n}\n\nconst initiateUPIPayment = async (req, res) => {\n    const type = PaymentMethodsMap.UPI_GATEWAY;\n    const auth = req.cookies.auth;\n    const money = parseInt(req.body.money);\n    const minimumMoneyAllowed = parseInt(process.env.MINIMUM_MONEY);\n    \n    if (!money || money < minimumMoneyAllowed) {\n        return res.status(400).json({\n            message: `Money is required and should be ₹${minimumMoneyAllowed} or above!`,\n            status: false,\n            timeStamp: timeNow,\n        });\n    }\n\n    try {\n        const user = await getUserDataByAuthToken(auth);\n\n        const pendingRechargeList = await rechargeTable.getRecordByPhoneAndStatus({\n            phone: user.phone,\n            status: PaymentStatusMap.PENDING,\n            type: PaymentMethodsMap.UPI_GATEWAY,\n        });\n\n        if (pendingRechargeList.length !== 0) {\n            const deleteRechargeQueries = pendingRechargeList.map(recharge => {\n                return rechargeTable.cancelById(recharge.id);\n            });\n\n            await Promise.all(deleteRechargeQueries);\n        }\n\n        const orderId = getRechargeOrderId();\n        const moneyString = String(money);\n\n        // Define API URL and secret key\n        const apiUrl = 'https://initpay.dragon1942.net/api/pay/neworder';\n        const secretKey = process.env.dragonAPI_KEY;\n        const mchid = process.env.dragonMCHID;\n\n        // Prepare request parameters\n        const params = {\n            mchId: mchid,\n            subject: 'web pay',\n            notifyUrl: 'https://21india.in/webhook',\n            amount: money * 100,\n            currency: 'INR',\n            body: '21india',\n            mchOrderNo: orderId,\n            productId: '8044',\n            returnUrl: `${process.env.APP_BASE_URL}/wallet/rechargerecord`,\n        };\n\n        // Generate signature\n        const sortedKeys = Object.keys(params).sort();\n        let signatureString = '';\n        sortedKeys.forEach(key => {\n            signatureString += `${key}=${params[key]}&`;\n        });\n        signatureString += `key=${secretKey}`;\n        const signature = crypto.createHash('md5').update(signatureString).digest('hex').toUpperCase();\n\n        // Add the signature to request parameters\n        params.sign = signature;\n\n        // Log the request parameters\n     //   console.log(\"Data object with signature:\", params);\n\n        // Send payment request\n        const response = await axios.post(apiUrl, new URLSearchParams(params).toString(), {\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            }\n        });\n\n        const responseData = response.data;\n\n        // Log the response data\n        console.log(\"Response Data:\", responseData);\n\n         if (!responseData || responseData.retCode !== \"SUCCESS\") {\n            throw new Error(\"Gateway error from Bharatpe!\");\n        }\n\n        const newRecharge = {\n            orderId: orderId,\n            transactionId: responseData.payOrderId || 'NULL',\n            utr: 1,\n            phone: user.phone,\n            money: parseFloat(moneyString),\n            type: 'Dpay',\n            status: 0,\n            today: rechargeTable.getCurrentTimeForTodayField(),\n            url: responseData.payParams.payUrl || null, // Update payment_url from response\n            time: timeNow,\n        };\n\n        const recharge = await rechargeTable.create(newRecharge);\n\n     //   console.log(responseData);\n\n        return res.status(200).json({\n            message: 'Payment Initiated successfully',\n            recharge: recharge,\n            urls: {\n                web_url: responseData.payParams.payUrl || null, // Update payment_url in response\n            },\n            status: true,\n            timeStamp: timeNow,\n        });\n    } catch (error) {\n        console.log(error);\n\n        res.status(200).json({\n            status: false,\n            message: \"Something went wrong!\",\n            timestamp: timeNow,\n        });\n    }\n}\n\n\nconst verifyUPIPayment = async (req, res) => {\n    const type = PaymentMethodsMap.UPI_GATEWAY\n    let auth = req.cookies.auth;\n    let orderId = req.query.client_txn_id;\n\n    if (!auth || !orderId) {\n        return res.status(400).json({\n            message: `orderId is Required!`,\n            status: false,\n            timeStamp: timeNow,\n        })\n    }\n    try {\n        const user = await getUserDataByAuthToken(auth)\n\n        const recharge = await rechargeTable.getRechargeByOrderId({ orderId })\n\n        if (!recharge) {\n            return res.status(400).json({\n                message: `Unable to find recharge with this order id!`,\n                status: false,\n                timeStamp: timeNow,\n            })\n        }\n\n        const ekqrResponse = await axios.post('https://api.ekqr.in/api/check_order_status', {\n            key: process.env.UPI_GATEWAY_PAYMENT_KEY,\n            client_txn_id: orderId,\n            txn_date: rechargeTable.getDMYDateOfTodayFiled(recharge.today),\n        });\n\n\n        const ekqrData = ekqrResponse?.data\n\n        if (ekqrData === undefined || ekqrData.status === false) {\n            throw Error(\"Gateway error from ekqr!\")\n        }\n\n        if (ekqrData.data.status === \"created\") {\n            return res.status(200).json({\n                message: 'Your payment request is just created',\n                status: false,\n                timeStamp: timeNow,\n            });\n        }\n\n        if (ekqrData.data.status === \"scanning\") {\n            return res.status(200).json({\n                message: 'Waiting for confirmation',\n                status: false,\n                timeStamp: timeNow,\n            });\n        }\n\n        if (ekqrData.data.status === 'success') {\n\n            if (recharge.status === PaymentStatusMap.PENDING || recharge.status === PaymentStatusMap.CANCELLED) {\n\n                await rechargeTable.setStatusToSuccessByIdAndOrderId({\n                    id: recharge.id,\n                    orderId: recharge.orderId\n                })\n\n                await addUserAccountBalance({\n                    phone: user.phone,\n                    money: recharge.money + (recharge.money / 100) * 5\n                })\n            }\n\n            // return res.status(200).json({\n            //     status: true,\n            //     message: \"Payment verified\",\n            //     timestamp: timeNow\n            // })\n            return res.redirect(\"/wallet/rechargerecord\")\n        }\n\n    } catch (error) {\n        console.log(error)\n        res.status(500).json({\n            status: false,\n            message: \"Something went wrong!\",\n            timestamp: timeNow,\n            error\n        })\n    }\n}\n\nconst initiateWowPayPayment = async (req, res) => {\n    const type = PaymentMethodsMap.WOW_PAY\n    let auth = req.cookies.auth;\n    let money = parseInt(req.query.money);\n\n    const minimumMoneyAllowed = parseInt(process.env.MINIMUM_MONEY)\n\n    if (!money || !(money >= minimumMoneyAllowed)) {\n        return res.status(400).json({\n            message: `Money is Required and it should be ₹${minimumMoneyAllowed} or above!`,\n            status: false,\n            timeStamp: timeNow,\n        })\n    }\n\n    try {\n        const user = await getUserDataByAuthToken(auth)\n\n        const pendingRechargeList = await rechargeTable.getRecordByPhoneAndStatus({ phone: user.phone, status: PaymentStatusMap.PENDING, type: PaymentMethodsMap.UPI_GATEWAY })\n\n        if (pendingRechargeList.length !== 0) {\n            const deleteRechargeQueries = pendingRechargeList.map(recharge => {\n                return rechargeTable.cancelById(recharge.id)\n            });\n\n            await Promise.all(deleteRechargeQueries)\n        }\n\n        const orderId = getRechargeOrderId()\n        const date = wowpay.getCurrentDate()\n\n        const params = {\n            version: '1.0',\n            // mch_id: 222887002,\n            mch_id: process.env.WOWPAY_MERCHANT_ID,\n            mch_order_no: orderId,\n            // pay_type: '151',\n            pay_type: '102',\n            trade_amount: money,\n            order_date: date,\n            goods_name: user.phone,\n            // notify_url: `${process.env.APP_BASE_URL}/wallet/verify/wowpay`,\n            notify_url: `https://winup.in/wallet/verify/wowpay`,\n            mch_return_msg: user.phone,\n            // payment_key: 'TZLMQ1QWJCUSFLH02LAYRZBJ1WK7IHSG',\n        };\n\n        params.page_url = 'https:///winup.in/verify/wowpay';\n\n        params.sign = wowpay.generateSign(params, process.env.WOWPAY_MERCHANT_KEY);\n        // params.sign = wowpay.generateSign(params, 'TZLMQ1QWJCUSFLH02LAYRZBJ1WK7IHSG');\n        // params.sign = wowpay.generateSign(params, 'MZBG89MDIBEDWJOJQYEZVSNP8EEVMSPM');\n        params.sign_type = \"MD5\";\n\n\n        console.log(params)\n\n        const response = await axios({\n            method: \"post\",\n            url: 'https://pay.123Club.net/pay/web',\n            data: querystring.stringify(params)\n        })\n\n        console.log(response.data)\n\n        if (response.data.respCode === \"SUCCESS\" && response.data.payInfo) {\n            return res.status(200).json({\n                message: \"Payment requested Successfully\",\n                payment_url: response.data.payInfo,\n                status: true,\n                timeStamp: timeNow,\n            })\n        }\n\n\n        return res.status(400).json({\n            message: \"Payment request failed. Please try again Or Wrong Details.\",\n            status: false,\n            timeStamp: timeNow,\n        })\n    } catch (error) {\n        console.log(error)\n        return res.status(500).json({\n            status: false,\n            message: \"Something went wrong!\",\n            timestamp: timeNow\n        })\n    }\n}\n\n\nconst verifyWowPayPayment = async (req, res) => {\n    try {\n        const type = PaymentMethodsMap.WOW_PAY\n        let data = req.body;\n\n        if (!req.body) {\n            data = req.query;\n        }\n\n        console.log(data)\n\n        let merchant_key = process.env.WOWPAY_MERCHANT_KEY;\n\n        const params = {\n            mchId: process.env.WOWPAY_MERCHANT_ID,\n            amount: data.amount || '',\n            mchOrderNo: data.mchOrderNo || '',\n            merRetMsg: data.merRetMsg || '',\n            orderDate: data.orderDate || '',\n            orderNo: data.orderNo || '',\n            oriAmount: data.oriAmount || '',\n            tradeResult: data.tradeResult || '',\n            signType: data.signType || '',\n            sign: data.sign || '',\n        };\n\n        let signStr = \"\";\n        signStr += \"amount=\" + params.amount + \"&\";\n        signStr += \"mchId=\" + params.mchId + \"&\";\n        signStr += \"mchOrderNo=\" + params.mchOrderNo + \"&\";\n        signStr += \"merRetMsg=\" + params.merRetMsg + \"&\";\n        signStr += \"orderDate=\" + params.orderDate + \"&\";\n        signStr += \"orderNo=\" + params.orderNo + \"&\";\n        signStr += \"oriAmount=\" + params.oriAmount + \"&\";\n        signStr += \"tradeResult=\" + params.tradeResult;\n\n        let flag = wowpay.validateSignByKey(signStr, merchant_key, params.sign);\n\n        if (!flag) {\n            console.log({\n                status: false,\n                message: \"Something went wrong!\",\n                flag,\n                timestamp: timeNow\n            })\n            return res.status(400).json({\n                status: false,\n                message: \"Something went wrong!\",\n                flag,\n                timestamp: timeNow\n            })\n        }\n\n        const newRechargeParams = {\n            orderId: params.mchOrderNo,\n            transactionId: 'NULL',\n            utr: null,\n            phone: params.merRetMsg,\n            money: params.amount,\n            type: type,\n            status: PaymentStatusMap.SUCCESS,\n            today: rechargeTable.getCurrentTimeForTodayField(),\n            url: 'NULL',\n            time: timeNow,\n        }\n\n\n        const recharge = await rechargeTable.getRechargeByOrderId({ orderId: newRechargeParams.orderId })\n\n        if (!!recharge) {\n            console.log({\n                message: `Recharge already verified!`,\n                status: true,\n                timeStamp: timeNow,\n            })\n            return res.status(400).json({\n                message: `Recharge already verified!`,\n                status: true,\n                timeStamp: timeNow,\n            })\n        }\n\n        const newRecharge = await rechargeTable.create(newRechargeParams)\n\n        await addUserAccountBalance({\n            phone: newRechargeParams.phone,\n            money: newRecharge.money + (recharge.money / 100) * 5\n        })\n\n        return res.redirect(\"/wallet/rechargerecord\")\n    } catch (error) {\n        console.log({\n            status: false,\n            message: \"Something went wrong!\",\n            timestamp: timeNow\n        })\n        return res.status(500).json({\n            status: false,\n            message: \"Something went wrong!\",\n            timestamp: timeNow\n        })\n    }\n}\n\n\n// helpers ---------------\nconst getUserDataByAuthToken = async (authToken) => {\n    let [users] = await connection.query('SELECT `phone`, `code`,`name_user`,`invite` FROM users WHERE `token` = ? ', [authToken]);\n    const user = users?.[0]\n\n\n    if (user === undefined || user === null) {\n        throw Error(\"Unable to get user data!\")\n    }\n\n    return {\n        phone: user.phone,\n        code: user.code,\n        username: user.name_user,\n        invite: user.invite,\n    }\n}\n\n\nconst addUserAccountBalance = async ({ money, phone }) => {\n    await connection.query('UPDATE users SET money = money + ?, total_money = total_money + ? WHERE phone = ? ', [money, money, phone]);\n}\n\n\nconst getRechargeOrderId = () => {\n    const date = new Date();\n    let id_time = date.getUTCFullYear() + '' + date.getUTCMonth() + 1 + '' + date.getUTCDate();\n    let id_order = Math.floor(Math.random() * (99999999999999 - 10000000000000 + 1)) + 10000000000000;\n\n    return id_time + id_order\n}\n\nconst rechargeTable = {\n    getRecordByPhoneAndStatus: async ({ phone, status, type }) => {\n        if (![PaymentStatusMap.SUCCESS, PaymentStatusMap.CANCELLED, PaymentStatusMap.PENDING].includes(status)) {\n            throw Error(\"Invalid Payment Status!\")\n        }\n\n        let recharge\n\n        if (type) {\n            [recharge] = await connection.query('SELECT * FROM recharge WHERE phone = ? AND status = ? AND type = ?', [phone, status, type]);\n        } else {\n            [recharge] = await connection.query('SELECT * FROM recharge WHERE phone = ? AND status = ?', [phone, status]);\n        }\n\n        return recharge.map((item) => ({\n            id: item.id,\n            orderId: item.id_order,\n            transactionId: item.transaction_id,\n            utr: item.utr,\n            phone: item.phone,\n            money: item.money,\n            type: item.type,\n            status: item.status,\n            today: item.today,\n            url: item.url,\n            time: item.time,\n        }))\n    },\n    getRechargeByOrderId: async ({ orderId }) => {\n        const [recharge] = await connection.query('SELECT * FROM recharge WHERE id_order = ?', [orderId]);\n\n        if (recharge.length === 0) {\n            return null\n        }\n\n        return recharge.map((item) => ({\n            id: item.id,\n            orderId: item.id_order,\n            transactionId: item.transaction_id,\n            utr: item.utr,\n            phone: item.phone,\n            money: item.money,\n            type: item.type,\n            status: item.status,\n            today: item.today,\n            url: item.url,\n            time: item.time,\n        }))?.[0]\n    },\n    cancelById: async (id) => {\n        if (typeof id !== \"number\") {\n            throw Error(\"Invalid Recharge 'id' expected a number!\")\n        }\n\n\n        await connection.query('UPDATE recharge SET status = 2 WHERE id = ?', [id]);\n    },\n    setStatusToSuccessByIdAndOrderId: async ({ id, orderId }) => {\n        if (typeof id !== \"number\") {\n            throw Error(\"Invalid Recharge 'id' expected a number!\")\n        }\n\n\n        console.log(id, orderId)\n\n        const [re] = await connection.query('UPDATE recharge SET status = 1 WHERE id = ? AND id_order = ?', [id, orderId]);\n        console.log(re)\n    },\n    getCurrentTimeForTodayField: () => {\n        return moment().format(\"YYYY-DD-MM h:mm:ss A\")\n    },\n    getDMYDateOfTodayFiled: (today) => {\n        return moment(today, \"YYYY-DD-MM h:mm:ss A\").format(\"DD-MM-YYYY\")\n    },\n    create: async (newRecharge) => {\n\n        if (newRecharge.url === undefined || newRecharge.url === null) {\n            newRecharge.url = \"0\"\n        }\n\n        await connection.query(\n            `INSERT INTO recharge SET id_order = ?, transaction_id = ?, phone = ?, money = ?, type = ?, status = ?, today = ?, url = ?, time = ?, utr = ?`,\n            [newRecharge.orderId, newRecharge.transactionId, newRecharge.phone, newRecharge.money, newRecharge.type, newRecharge.status, newRecharge.today, newRecharge.url, newRecharge.time, newRecharge?.utr || \"NULL\"]\n        );\n\n        const [recharge] = await connection.query('SELECT * FROM recharge WHERE id_order = ?', [newRecharge.orderId]);\n\n        if (recharge.length === 0) {\n            throw Error(\"Unable to create recharge!\")\n        }\n\n        return recharge[0]\n    }\n}\n\n\nconst wowpay = {\n    generateSign: (params, secretKey) => {\n        let keys = Object.keys(params).sort();\n        let string = [];\n        for (let key of keys) {\n            if (key === 'sign') continue;\n            string.push(key + '=' + params[key]);\n        }\n        let signStr = string.join('&') + '&key=' + secretKey;\n\n        return crypto.createHash('md5').update(signStr).digest('hex');\n    },\n    validateSignByKey(signSource, key, retSign) {\n        if (key) {\n            signSource = signSource + \"&key=\" + key;\n        }\n\n        const signKey = crypto.createHash(\"md5\").update(signSource).digest(\"hex\");\n        return signKey === retSign;\n    },\n    getCurrentDate: () => {\n        return moment().format(\"YYYY-MM-DD H:mm:ss\")\n    }\n}\n\n\n\nmodule.exports = {\n    initiateUPIPayment,\n    verifyUPIPayment,\n    initiateWowPayPayment,\n    verifyWowPayPayment,\n    initiateManualUPIPayment,\n    addManualUPIPaymentRequest,\n    addManualUSDTPaymentRequest,\n    initiateManualUSDTPayment,\n}"],"mappings":";;;AAAA,IAAAA,UAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,MAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,OAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,OAAA,GAAAJ,sBAAA,CAAAC,OAAA;AACA,IAAAI,YAAA,GAAAL,sBAAA,CAAAC,OAAA;AAAqC,SAAAD,uBAAAM,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,gBAAAA,GAAA;AAAA,SAAAE,2BAAAC,CAAA,EAAAC,cAAA,QAAAC,EAAA,UAAAC,MAAA,oBAAAH,CAAA,CAAAG,MAAA,CAAAC,QAAA,KAAAJ,CAAA,qBAAAE,EAAA,QAAAG,KAAA,CAAAC,OAAA,CAAAN,CAAA,MAAAE,EAAA,GAAAK,2BAAA,CAAAP,CAAA,MAAAC,cAAA,IAAAD,CAAA,WAAAA,CAAA,CAAAQ,MAAA,qBAAAN,EAAA,EAAAF,CAAA,GAAAE,EAAA,MAAAO,CAAA,UAAAC,CAAA,YAAAA,EAAA,eAAAC,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAA,EAAA,QAAAH,CAAA,IAAAT,CAAA,CAAAQ,MAAA,WAAAK,IAAA,mBAAAA,IAAA,SAAAC,KAAA,EAAAd,CAAA,CAAAS,CAAA,UAAAM,CAAA,WAAAA,EAAAC,EAAA,UAAAA,EAAA,KAAAC,CAAA,EAAAP,CAAA,gBAAAQ,SAAA,iJAAAC,gBAAA,SAAAC,MAAA,UAAAC,GAAA,WAAAV,CAAA,WAAAA,EAAA,IAAAT,EAAA,GAAAA,EAAA,CAAAoB,IAAA,CAAAtB,CAAA,MAAAY,CAAA,WAAAA,EAAA,QAAAW,IAAA,GAAArB,EAAA,CAAAsB,IAAA,IAAAL,gBAAA,GAAAI,IAAA,CAAAV,IAAA,SAAAU,IAAA,KAAAR,CAAA,WAAAA,EAAAU,GAAA,IAAAL,MAAA,SAAAC,GAAA,GAAAI,GAAA,KAAAR,CAAA,WAAAA,EAAA,eAAAE,gBAAA,IAAAjB,EAAA,oBAAAA,EAAA,8BAAAkB,MAAA,QAAAC,GAAA;AAAA,SAAAK,oBAAA,kBAHrC,qJAAAA,mBAAA,YAAAA,oBAAA,WAAAX,CAAA,SAAAY,CAAA,EAAAZ,CAAA,OAAAa,CAAA,GAAAC,MAAA,CAAAC,SAAA,EAAAlB,CAAA,GAAAgB,CAAA,CAAAG,cAAA,EAAA/B,CAAA,GAAA6B,MAAA,CAAAG,cAAA,cAAAL,CAAA,EAAAZ,CAAA,EAAAa,CAAA,IAAAD,CAAA,CAAAZ,CAAA,IAAAa,CAAA,CAAAd,KAAA,KAAAL,CAAA,wBAAAN,MAAA,GAAAA,MAAA,OAAA8B,CAAA,GAAAxB,CAAA,CAAAL,QAAA,kBAAA8B,CAAA,GAAAzB,CAAA,CAAA0B,aAAA,uBAAAC,CAAA,GAAA3B,CAAA,CAAA4B,WAAA,8BAAAC,OAAAX,CAAA,EAAAZ,CAAA,EAAAa,CAAA,WAAAC,MAAA,CAAAG,cAAA,CAAAL,CAAA,EAAAZ,CAAA,IAAAD,KAAA,EAAAc,CAAA,EAAAW,UAAA,MAAAC,YAAA,MAAAC,QAAA,SAAAd,CAAA,CAAAZ,CAAA,WAAAuB,MAAA,mBAAAX,CAAA,IAAAW,MAAA,YAAAA,OAAAX,CAAA,EAAAZ,CAAA,EAAAa,CAAA,WAAAD,CAAA,CAAAZ,CAAA,IAAAa,CAAA,gBAAAc,KAAAf,CAAA,EAAAZ,CAAA,EAAAa,CAAA,EAAAhB,CAAA,QAAAH,CAAA,GAAAM,CAAA,IAAAA,CAAA,CAAAe,SAAA,YAAAa,SAAA,GAAA5B,CAAA,GAAA4B,SAAA,EAAAV,CAAA,GAAAJ,MAAA,CAAAe,MAAA,CAAAnC,CAAA,CAAAqB,SAAA,GAAAI,CAAA,OAAAW,OAAA,CAAAjC,CAAA,gBAAAZ,CAAA,CAAAiC,CAAA,eAAAnB,KAAA,EAAAgC,gBAAA,CAAAnB,CAAA,EAAAC,CAAA,EAAAM,CAAA,MAAAD,CAAA,aAAAc,SAAApB,CAAA,EAAAZ,CAAA,EAAAa,CAAA,mBAAAoB,IAAA,YAAAC,GAAA,EAAAtB,CAAA,CAAAL,IAAA,CAAAP,CAAA,EAAAa,CAAA,cAAAD,CAAA,aAAAqB,IAAA,WAAAC,GAAA,EAAAtB,CAAA,QAAAZ,CAAA,CAAA2B,IAAA,GAAAA,IAAA,MAAAQ,CAAA,qBAAAC,CAAA,qBAAAlC,CAAA,gBAAAN,CAAA,gBAAAyC,CAAA,gBAAAT,UAAA,cAAAU,kBAAA,cAAAC,2BAAA,SAAAC,CAAA,OAAAjB,MAAA,CAAAiB,CAAA,EAAAtB,CAAA,qCAAAuB,CAAA,GAAA3B,MAAA,CAAA4B,cAAA,EAAAC,CAAA,GAAAF,CAAA,IAAAA,CAAA,CAAAA,CAAA,CAAAG,MAAA,QAAAD,CAAA,IAAAA,CAAA,KAAA9B,CAAA,IAAAhB,CAAA,CAAAU,IAAA,CAAAoC,CAAA,EAAAzB,CAAA,MAAAsB,CAAA,GAAAG,CAAA,OAAAE,CAAA,GAAAN,0BAAA,CAAAxB,SAAA,GAAAa,SAAA,CAAAb,SAAA,GAAAD,MAAA,CAAAe,MAAA,CAAAW,CAAA,YAAAM,sBAAAlC,CAAA,gCAAAmC,OAAA,WAAA/C,CAAA,IAAAuB,MAAA,CAAAX,CAAA,EAAAZ,CAAA,YAAAY,CAAA,gBAAAoC,OAAA,CAAAhD,CAAA,EAAAY,CAAA,sBAAAqC,cAAArC,CAAA,EAAAZ,CAAA,aAAAkD,OAAArC,CAAA,EAAA5B,CAAA,EAAAS,CAAA,EAAAwB,CAAA,QAAAC,CAAA,GAAAa,QAAA,CAAApB,CAAA,CAAAC,CAAA,GAAAD,CAAA,EAAA3B,CAAA,mBAAAkC,CAAA,CAAAc,IAAA,QAAAZ,CAAA,GAAAF,CAAA,CAAAe,GAAA,EAAAC,CAAA,GAAAd,CAAA,CAAAtB,KAAA,SAAAoC,CAAA,gBAAAgB,OAAA,CAAAhB,CAAA,KAAAtC,CAAA,CAAAU,IAAA,CAAA4B,CAAA,eAAAnC,CAAA,CAAAoD,OAAA,CAAAjB,CAAA,CAAAkB,OAAA,EAAAC,IAAA,WAAA1C,CAAA,IAAAsC,MAAA,SAAAtC,CAAA,EAAAlB,CAAA,EAAAwB,CAAA,gBAAAN,CAAA,IAAAsC,MAAA,UAAAtC,CAAA,EAAAlB,CAAA,EAAAwB,CAAA,QAAAlB,CAAA,CAAAoD,OAAA,CAAAjB,CAAA,EAAAmB,IAAA,WAAA1C,CAAA,IAAAS,CAAA,CAAAtB,KAAA,GAAAa,CAAA,EAAAlB,CAAA,CAAA2B,CAAA,gBAAAT,CAAA,WAAAsC,MAAA,UAAAtC,CAAA,EAAAlB,CAAA,EAAAwB,CAAA,SAAAA,CAAA,CAAAC,CAAA,CAAAe,GAAA,SAAArB,CAAA,EAAA5B,CAAA,oBAAAc,KAAA,WAAAA,MAAAa,CAAA,EAAAf,CAAA,aAAA0D,2BAAA,eAAAvD,CAAA,WAAAA,CAAA,EAAAa,CAAA,IAAAqC,MAAA,CAAAtC,CAAA,EAAAf,CAAA,EAAAG,CAAA,EAAAa,CAAA,gBAAAA,CAAA,GAAAA,CAAA,GAAAA,CAAA,CAAAyC,IAAA,CAAAC,0BAAA,EAAAA,0BAAA,IAAAA,0BAAA,qBAAAxB,iBAAA/B,CAAA,EAAAa,CAAA,EAAAhB,CAAA,QAAAZ,CAAA,GAAAkD,CAAA,mBAAAzC,CAAA,EAAAwB,CAAA,QAAAjC,CAAA,KAAAiB,CAAA,YAAAsD,KAAA,sCAAAvE,CAAA,KAAAW,CAAA,oBAAAF,CAAA,QAAAwB,CAAA,WAAAnB,KAAA,EAAAa,CAAA,EAAAd,IAAA,eAAAD,CAAA,CAAA4D,MAAA,GAAA/D,CAAA,EAAAG,CAAA,CAAAqC,GAAA,GAAAhB,CAAA,UAAAC,CAAA,GAAAtB,CAAA,CAAA6D,QAAA,MAAAvC,CAAA,QAAAE,CAAA,GAAAsC,mBAAA,CAAAxC,CAAA,EAAAtB,CAAA,OAAAwB,CAAA,QAAAA,CAAA,KAAAgB,CAAA,mBAAAhB,CAAA,qBAAAxB,CAAA,CAAA4D,MAAA,EAAA5D,CAAA,CAAA+D,IAAA,GAAA/D,CAAA,CAAAgE,KAAA,GAAAhE,CAAA,CAAAqC,GAAA,sBAAArC,CAAA,CAAA4D,MAAA,QAAAxE,CAAA,KAAAkD,CAAA,QAAAlD,CAAA,GAAAW,CAAA,EAAAC,CAAA,CAAAqC,GAAA,EAAArC,CAAA,CAAAiE,iBAAA,CAAAjE,CAAA,CAAAqC,GAAA,uBAAArC,CAAA,CAAA4D,MAAA,IAAA5D,CAAA,CAAAkE,MAAA,WAAAlE,CAAA,CAAAqC,GAAA,GAAAjD,CAAA,GAAAiB,CAAA,MAAAsC,CAAA,GAAAR,QAAA,CAAAhC,CAAA,EAAAa,CAAA,EAAAhB,CAAA,oBAAA2C,CAAA,CAAAP,IAAA,QAAAhD,CAAA,GAAAY,CAAA,CAAAC,IAAA,GAAAF,CAAA,GAAAwC,CAAA,EAAAI,CAAA,CAAAN,GAAA,KAAAG,CAAA,qBAAAtC,KAAA,EAAAyC,CAAA,CAAAN,GAAA,EAAApC,IAAA,EAAAD,CAAA,CAAAC,IAAA,kBAAA0C,CAAA,CAAAP,IAAA,KAAAhD,CAAA,GAAAW,CAAA,EAAAC,CAAA,CAAA4D,MAAA,YAAA5D,CAAA,CAAAqC,GAAA,GAAAM,CAAA,CAAAN,GAAA,mBAAAyB,oBAAA3D,CAAA,EAAAa,CAAA,QAAAhB,CAAA,GAAAgB,CAAA,CAAA4C,MAAA,EAAAxE,CAAA,GAAAe,CAAA,CAAAX,QAAA,CAAAQ,CAAA,OAAAZ,CAAA,KAAA2B,CAAA,SAAAC,CAAA,CAAA6C,QAAA,qBAAA7D,CAAA,IAAAG,CAAA,CAAAX,QAAA,eAAAwB,CAAA,CAAA4C,MAAA,aAAA5C,CAAA,CAAAqB,GAAA,GAAAtB,CAAA,EAAA+C,mBAAA,CAAA3D,CAAA,EAAAa,CAAA,eAAAA,CAAA,CAAA4C,MAAA,kBAAA5D,CAAA,KAAAgB,CAAA,CAAA4C,MAAA,YAAA5C,CAAA,CAAAqB,GAAA,OAAA/B,SAAA,uCAAAN,CAAA,iBAAAwC,CAAA,MAAA3C,CAAA,GAAAsC,QAAA,CAAA/C,CAAA,EAAAe,CAAA,CAAAX,QAAA,EAAAwB,CAAA,CAAAqB,GAAA,mBAAAxC,CAAA,CAAAuC,IAAA,SAAApB,CAAA,CAAA4C,MAAA,YAAA5C,CAAA,CAAAqB,GAAA,GAAAxC,CAAA,CAAAwC,GAAA,EAAArB,CAAA,CAAA6C,QAAA,SAAArB,CAAA,MAAAnB,CAAA,GAAAxB,CAAA,CAAAwC,GAAA,SAAAhB,CAAA,GAAAA,CAAA,CAAApB,IAAA,IAAAe,CAAA,CAAAb,CAAA,CAAAgE,UAAA,IAAA9C,CAAA,CAAAnB,KAAA,EAAAc,CAAA,CAAAJ,IAAA,GAAAT,CAAA,CAAAiE,OAAA,eAAApD,CAAA,CAAA4C,MAAA,KAAA5C,CAAA,CAAA4C,MAAA,WAAA5C,CAAA,CAAAqB,GAAA,GAAAtB,CAAA,GAAAC,CAAA,CAAA6C,QAAA,SAAArB,CAAA,IAAAnB,CAAA,IAAAL,CAAA,CAAA4C,MAAA,YAAA5C,CAAA,CAAAqB,GAAA,OAAA/B,SAAA,sCAAAU,CAAA,CAAA6C,QAAA,SAAArB,CAAA,cAAA6B,aAAAtD,CAAA,QAAAZ,CAAA,KAAAmE,MAAA,EAAAvD,CAAA,YAAAA,CAAA,KAAAZ,CAAA,CAAAoE,QAAA,GAAAxD,CAAA,WAAAA,CAAA,KAAAZ,CAAA,CAAAqE,UAAA,GAAAzD,CAAA,KAAAZ,CAAA,CAAAsE,QAAA,GAAA1D,CAAA,WAAA2D,UAAA,CAAAC,IAAA,CAAAxE,CAAA,cAAAyE,cAAA7D,CAAA,QAAAZ,CAAA,GAAAY,CAAA,CAAA8D,UAAA,QAAA1E,CAAA,CAAAiC,IAAA,oBAAAjC,CAAA,CAAAkC,GAAA,EAAAtB,CAAA,CAAA8D,UAAA,GAAA1E,CAAA,aAAA8B,QAAAlB,CAAA,SAAA2D,UAAA,MAAAJ,MAAA,aAAAvD,CAAA,CAAAmC,OAAA,CAAAmB,YAAA,cAAAS,KAAA,iBAAA/B,OAAA5C,CAAA,QAAAA,CAAA,WAAAA,CAAA,QAAAa,CAAA,GAAAb,CAAA,CAAAkB,CAAA,OAAAL,CAAA,SAAAA,CAAA,CAAAN,IAAA,CAAAP,CAAA,4BAAAA,CAAA,CAAAS,IAAA,SAAAT,CAAA,OAAA4E,KAAA,CAAA5E,CAAA,CAAAP,MAAA,SAAAR,CAAA,OAAAS,CAAA,YAAAe,KAAA,aAAAxB,CAAA,GAAAe,CAAA,CAAAP,MAAA,OAAAI,CAAA,CAAAU,IAAA,CAAAP,CAAA,EAAAf,CAAA,UAAAwB,IAAA,CAAAV,KAAA,GAAAC,CAAA,CAAAf,CAAA,GAAAwB,IAAA,CAAAX,IAAA,OAAAW,IAAA,SAAAA,IAAA,CAAAV,KAAA,GAAAa,CAAA,EAAAH,IAAA,CAAAX,IAAA,OAAAW,IAAA,YAAAf,CAAA,CAAAe,IAAA,GAAAf,CAAA,gBAAAS,SAAA,CAAAgD,OAAA,CAAAnD,CAAA,kCAAAsC,iBAAA,CAAAvB,SAAA,GAAAwB,0BAAA,EAAAtD,CAAA,CAAA4D,CAAA,mBAAA9C,KAAA,EAAAwC,0BAAA,EAAAd,YAAA,SAAAxC,CAAA,CAAAsD,0BAAA,mBAAAxC,KAAA,EAAAuC,iBAAA,EAAAb,YAAA,SAAAa,iBAAA,CAAAuC,WAAA,GAAAtD,MAAA,CAAAgB,0BAAA,EAAAlB,CAAA,wBAAArB,CAAA,CAAA8E,mBAAA,aAAAlE,CAAA,QAAAZ,CAAA,wBAAAY,CAAA,IAAAA,CAAA,CAAAmE,WAAA,WAAA/E,CAAA,KAAAA,CAAA,KAAAsC,iBAAA,6BAAAtC,CAAA,CAAA6E,WAAA,IAAA7E,CAAA,CAAAgF,IAAA,OAAAhF,CAAA,CAAAiF,IAAA,aAAArE,CAAA,WAAAE,MAAA,CAAAoE,cAAA,GAAApE,MAAA,CAAAoE,cAAA,CAAAtE,CAAA,EAAA2B,0BAAA,KAAA3B,CAAA,CAAAuE,SAAA,GAAA5C,0BAAA,EAAAhB,MAAA,CAAAX,CAAA,EAAAS,CAAA,yBAAAT,CAAA,CAAAG,SAAA,GAAAD,MAAA,CAAAe,MAAA,CAAAgB,CAAA,GAAAjC,CAAA,KAAAZ,CAAA,CAAAoF,KAAA,aAAAxE,CAAA,aAAAyC,OAAA,EAAAzC,CAAA,OAAAkC,qBAAA,CAAAG,aAAA,CAAAlC,SAAA,GAAAQ,MAAA,CAAA0B,aAAA,CAAAlC,SAAA,EAAAI,CAAA,iCAAAnB,CAAA,CAAAiD,aAAA,GAAAA,aAAA,EAAAjD,CAAA,CAAAqF,KAAA,aAAAzE,CAAA,EAAAC,CAAA,EAAAhB,CAAA,EAAAZ,CAAA,EAAAS,CAAA,eAAAA,CAAA,KAAAA,CAAA,GAAA4F,OAAA,OAAApE,CAAA,OAAA+B,aAAA,CAAAtB,IAAA,CAAAf,CAAA,EAAAC,CAAA,EAAAhB,CAAA,EAAAZ,CAAA,GAAAS,CAAA,UAAAM,CAAA,CAAA8E,mBAAA,CAAAjE,CAAA,IAAAK,CAAA,GAAAA,CAAA,CAAAT,IAAA,GAAA6C,IAAA,WAAA1C,CAAA,WAAAA,CAAA,CAAAd,IAAA,GAAAc,CAAA,CAAAb,KAAA,GAAAmB,CAAA,CAAAT,IAAA,WAAAqC,qBAAA,CAAAD,CAAA,GAAAtB,MAAA,CAAAsB,CAAA,EAAAxB,CAAA,gBAAAE,MAAA,CAAAsB,CAAA,EAAA3B,CAAA,iCAAAK,MAAA,CAAAsB,CAAA,6DAAA7C,CAAA,CAAAuF,IAAA,aAAA3E,CAAA,QAAAZ,CAAA,GAAAc,MAAA,CAAAF,CAAA,GAAAC,CAAA,gBAAAhB,CAAA,IAAAG,CAAA,EAAAa,CAAA,CAAA2D,IAAA,CAAA3E,CAAA,UAAAgB,CAAA,CAAA2E,OAAA,aAAA/E,KAAA,WAAAI,CAAA,CAAApB,MAAA,SAAAmB,CAAA,GAAAC,CAAA,CAAA4E,GAAA,QAAA7E,CAAA,IAAAZ,CAAA,SAAAS,IAAA,CAAAV,KAAA,GAAAa,CAAA,EAAAH,IAAA,CAAAX,IAAA,OAAAW,IAAA,WAAAA,IAAA,CAAAX,IAAA,OAAAW,IAAA,QAAAT,CAAA,CAAA4C,MAAA,GAAAA,MAAA,EAAAd,OAAA,CAAAf,SAAA,KAAAgE,WAAA,EAAAjD,OAAA,EAAA6C,KAAA,WAAAA,MAAA3E,CAAA,aAAA0F,IAAA,WAAAjF,IAAA,WAAAmD,IAAA,QAAAC,KAAA,GAAAjD,CAAA,OAAAd,IAAA,YAAA4D,QAAA,cAAAD,MAAA,gBAAAvB,GAAA,GAAAtB,CAAA,OAAA2D,UAAA,CAAAxB,OAAA,CAAA0B,aAAA,IAAAzE,CAAA,WAAAa,CAAA,kBAAAA,CAAA,CAAA8E,MAAA,OAAA9F,CAAA,CAAAU,IAAA,OAAAM,CAAA,MAAA+D,KAAA,EAAA/D,CAAA,CAAA+E,KAAA,cAAA/E,CAAA,IAAAD,CAAA,MAAAiF,IAAA,WAAAA,KAAA,SAAA/F,IAAA,WAAAc,CAAA,QAAA2D,UAAA,IAAAG,UAAA,kBAAA9D,CAAA,CAAAqB,IAAA,QAAArB,CAAA,CAAAsB,GAAA,cAAA4D,IAAA,KAAAhC,iBAAA,WAAAA,kBAAA9D,CAAA,aAAAF,IAAA,QAAAE,CAAA,MAAAa,CAAA,kBAAAkF,OAAAlG,CAAA,EAAAZ,CAAA,WAAAiC,CAAA,CAAAe,IAAA,YAAAf,CAAA,CAAAgB,GAAA,GAAAlC,CAAA,EAAAa,CAAA,CAAAJ,IAAA,GAAAZ,CAAA,EAAAZ,CAAA,KAAA4B,CAAA,CAAA4C,MAAA,WAAA5C,CAAA,CAAAqB,GAAA,GAAAtB,CAAA,KAAA3B,CAAA,aAAAA,CAAA,QAAAsF,UAAA,CAAA9E,MAAA,MAAAR,CAAA,SAAAA,CAAA,QAAAS,CAAA,QAAA6E,UAAA,CAAAtF,CAAA,GAAAiC,CAAA,GAAAxB,CAAA,CAAAgF,UAAA,iBAAAhF,CAAA,CAAAyE,MAAA,SAAA4B,MAAA,aAAArG,CAAA,CAAAyE,MAAA,SAAAuB,IAAA,QAAAvE,CAAA,GAAAtB,CAAA,CAAAU,IAAA,CAAAb,CAAA,eAAA2B,CAAA,GAAAxB,CAAA,CAAAU,IAAA,CAAAb,CAAA,qBAAAyB,CAAA,IAAAE,CAAA,aAAAqE,IAAA,GAAAhG,CAAA,CAAA0E,QAAA,SAAA2B,MAAA,CAAArG,CAAA,CAAA0E,QAAA,gBAAAsB,IAAA,GAAAhG,CAAA,CAAA2E,UAAA,SAAA0B,MAAA,CAAArG,CAAA,CAAA2E,UAAA,cAAAlD,CAAA,aAAAuE,IAAA,GAAAhG,CAAA,CAAA0E,QAAA,SAAA2B,MAAA,CAAArG,CAAA,CAAA0E,QAAA,qBAAA/C,CAAA,YAAAmC,KAAA,qDAAAkC,IAAA,GAAAhG,CAAA,CAAA2E,UAAA,SAAA0B,MAAA,CAAArG,CAAA,CAAA2E,UAAA,YAAAN,MAAA,WAAAA,OAAAnD,CAAA,EAAAZ,CAAA,aAAAa,CAAA,QAAA0D,UAAA,CAAA9E,MAAA,MAAAoB,CAAA,SAAAA,CAAA,QAAA5B,CAAA,QAAAsF,UAAA,CAAA1D,CAAA,OAAA5B,CAAA,CAAAkF,MAAA,SAAAuB,IAAA,IAAA7F,CAAA,CAAAU,IAAA,CAAAtB,CAAA,wBAAAyG,IAAA,GAAAzG,CAAA,CAAAoF,UAAA,QAAA3E,CAAA,GAAAT,CAAA,aAAAS,CAAA,iBAAAkB,CAAA,mBAAAA,CAAA,KAAAlB,CAAA,CAAAyE,MAAA,IAAAnE,CAAA,IAAAA,CAAA,IAAAN,CAAA,CAAA2E,UAAA,KAAA3E,CAAA,cAAAwB,CAAA,GAAAxB,CAAA,GAAAA,CAAA,CAAAgF,UAAA,cAAAxD,CAAA,CAAAe,IAAA,GAAArB,CAAA,EAAAM,CAAA,CAAAgB,GAAA,GAAAlC,CAAA,EAAAN,CAAA,SAAA+D,MAAA,gBAAAhD,IAAA,GAAAf,CAAA,CAAA2E,UAAA,EAAAhC,CAAA,SAAA2D,QAAA,CAAA9E,CAAA,MAAA8E,QAAA,WAAAA,SAAApF,CAAA,EAAAZ,CAAA,oBAAAY,CAAA,CAAAqB,IAAA,QAAArB,CAAA,CAAAsB,GAAA,qBAAAtB,CAAA,CAAAqB,IAAA,mBAAArB,CAAA,CAAAqB,IAAA,QAAAxB,IAAA,GAAAG,CAAA,CAAAsB,GAAA,gBAAAtB,CAAA,CAAAqB,IAAA,SAAA6D,IAAA,QAAA5D,GAAA,GAAAtB,CAAA,CAAAsB,GAAA,OAAAuB,MAAA,kBAAAhD,IAAA,yBAAAG,CAAA,CAAAqB,IAAA,IAAAjC,CAAA,UAAAS,IAAA,GAAAT,CAAA,GAAAqC,CAAA,KAAA4D,MAAA,WAAAA,OAAArF,CAAA,aAAAZ,CAAA,QAAAuE,UAAA,CAAA9E,MAAA,MAAAO,CAAA,SAAAA,CAAA,QAAAa,CAAA,QAAA0D,UAAA,CAAAvE,CAAA,OAAAa,CAAA,CAAAwD,UAAA,KAAAzD,CAAA,cAAAoF,QAAA,CAAAnF,CAAA,CAAA6D,UAAA,EAAA7D,CAAA,CAAAyD,QAAA,GAAAG,aAAA,CAAA5D,CAAA,GAAAwB,CAAA,yBAAA6D,OAAAtF,CAAA,aAAAZ,CAAA,QAAAuE,UAAA,CAAA9E,MAAA,MAAAO,CAAA,SAAAA,CAAA,QAAAa,CAAA,QAAA0D,UAAA,CAAAvE,CAAA,OAAAa,CAAA,CAAAsD,MAAA,KAAAvD,CAAA,QAAAf,CAAA,GAAAgB,CAAA,CAAA6D,UAAA,kBAAA7E,CAAA,CAAAoC,IAAA,QAAAhD,CAAA,GAAAY,CAAA,CAAAqC,GAAA,EAAAuC,aAAA,CAAA5D,CAAA,YAAA5B,CAAA,gBAAAuE,KAAA,8BAAA2C,aAAA,WAAAA,cAAAnG,CAAA,EAAAa,CAAA,EAAAhB,CAAA,gBAAA6D,QAAA,KAAArE,QAAA,EAAAuD,MAAA,CAAA5C,CAAA,GAAAgE,UAAA,EAAAnD,CAAA,EAAAoD,OAAA,EAAApE,CAAA,oBAAA4D,MAAA,UAAAvB,GAAA,GAAAtB,CAAA,GAAAyB,CAAA,OAAArC,CAAA;AAAA,SAAAoG,eAAAC,GAAA,EAAA3G,CAAA,WAAA4G,eAAA,CAAAD,GAAA,KAAAE,qBAAA,CAAAF,GAAA,EAAA3G,CAAA,KAAAF,2BAAA,CAAA6G,GAAA,EAAA3G,CAAA,KAAA8G,gBAAA;AAAA,SAAAA,iBAAA,cAAArG,SAAA;AAAA,SAAAX,4BAAAP,CAAA,EAAAwH,MAAA,SAAAxH,CAAA,qBAAAA,CAAA,sBAAAyH,iBAAA,CAAAzH,CAAA,EAAAwH,MAAA,OAAA5G,CAAA,GAAAiB,MAAA,CAAAC,SAAA,CAAA4F,QAAA,CAAApG,IAAA,CAAAtB,CAAA,EAAA2G,KAAA,aAAA/F,CAAA,iBAAAZ,CAAA,CAAA8F,WAAA,EAAAlF,CAAA,GAAAZ,CAAA,CAAA8F,WAAA,CAAAC,IAAA,MAAAnF,CAAA,cAAAA,CAAA,mBAAAP,KAAA,CAAAsH,IAAA,CAAA3H,CAAA,OAAAY,CAAA,+DAAAgH,IAAA,CAAAhH,CAAA,UAAA6G,iBAAA,CAAAzH,CAAA,EAAAwH,MAAA;AAAA,SAAAC,kBAAAL,GAAA,EAAAS,GAAA,QAAAA,GAAA,YAAAA,GAAA,GAAAT,GAAA,CAAA5G,MAAA,EAAAqH,GAAA,GAAAT,GAAA,CAAA5G,MAAA,WAAAC,CAAA,MAAAqH,IAAA,OAAAzH,KAAA,CAAAwH,GAAA,GAAApH,CAAA,GAAAoH,GAAA,EAAApH,CAAA,IAAAqH,IAAA,CAAArH,CAAA,IAAA2G,GAAA,CAAA3G,CAAA,UAAAqH,IAAA;AAAA,SAAAR,sBAAA1F,CAAA,EAAAuB,CAAA,QAAAxB,CAAA,WAAAC,CAAA,gCAAAzB,MAAA,IAAAyB,CAAA,CAAAzB,MAAA,CAAAC,QAAA,KAAAwB,CAAA,4BAAAD,CAAA,QAAAZ,CAAA,EAAAH,CAAA,EAAAH,CAAA,EAAA2B,CAAA,EAAAH,CAAA,OAAAhB,CAAA,OAAAjB,CAAA,iBAAAS,CAAA,IAAAkB,CAAA,GAAAA,CAAA,CAAAL,IAAA,CAAAM,CAAA,GAAAJ,IAAA,QAAA2B,CAAA,QAAAtB,MAAA,CAAAF,CAAA,MAAAA,CAAA,UAAAV,CAAA,uBAAAA,CAAA,IAAAF,CAAA,GAAAN,CAAA,CAAAa,IAAA,CAAAK,CAAA,GAAAd,IAAA,MAAAoB,CAAA,CAAAsD,IAAA,CAAAxE,CAAA,CAAAD,KAAA,GAAAmB,CAAA,CAAAzB,MAAA,KAAA2C,CAAA,GAAAlC,CAAA,iBAAAW,CAAA,IAAA5B,CAAA,OAAAY,CAAA,GAAAgB,CAAA,yBAAAX,CAAA,YAAAU,CAAA,eAAAS,CAAA,GAAAT,CAAA,cAAAE,MAAA,CAAAO,CAAA,MAAAA,CAAA,2BAAApC,CAAA,QAAAY,CAAA,aAAAqB,CAAA;AAAA,SAAAoF,gBAAAD,GAAA,QAAA/G,KAAA,CAAAC,OAAA,CAAA8G,GAAA,UAAAA,GAAA;AAAA,SAAAW,mBAAAC,GAAA,EAAA7D,OAAA,EAAA8D,MAAA,EAAAC,KAAA,EAAAC,MAAA,EAAAC,GAAA,EAAAnF,GAAA,cAAAoF,IAAA,GAAAL,GAAA,CAAAI,GAAA,EAAAnF,GAAA,OAAAnC,KAAA,GAAAuH,IAAA,CAAAvH,KAAA,WAAAwH,KAAA,IAAAL,MAAA,CAAAK,KAAA,iBAAAD,IAAA,CAAAxH,IAAA,IAAAsD,OAAA,CAAArD,KAAA,YAAAuF,OAAA,CAAAlC,OAAA,CAAArD,KAAA,EAAAuD,IAAA,CAAA6D,KAAA,EAAAC,MAAA;AAAA,SAAAI,kBAAAC,EAAA,6BAAAC,IAAA,SAAAC,IAAA,GAAAC,SAAA,aAAAtC,OAAA,WAAAlC,OAAA,EAAA8D,MAAA,QAAAD,GAAA,GAAAQ,EAAA,CAAAI,KAAA,CAAAH,IAAA,EAAAC,IAAA,YAAAR,MAAApH,KAAA,IAAAiH,kBAAA,CAAAC,GAAA,EAAA7D,OAAA,EAAA8D,MAAA,EAAAC,KAAA,EAAAC,MAAA,UAAArH,KAAA,cAAAqH,OAAA9G,GAAA,IAAA0G,kBAAA,CAAAC,GAAA,EAAA7D,OAAA,EAAA8D,MAAA,EAAAC,KAAA,EAAAC,MAAA,WAAA9G,GAAA,KAAA6G,KAAA,CAAAW,SAAA;AAKA,IAAIC,OAAO,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;AAExB,IAAMC,gBAAgB,GAAG;EACrBC,OAAO,EAAE,CAAC;EACVC,OAAO,EAAE,CAAC;EACVC,SAAS,EAAE;AACf,CAAC;AAED,IAAMC,iBAAiB,GAAG;EACtBC,WAAW,EAAE,aAAa;EAC1BC,UAAU,EAAE,YAAY;EACxBC,WAAW,EAAE,aAAa;EAC1BC,OAAO,EAAE,SAAS;EAClBC,IAAI,EAAE;AACV,CAAC;AAED,IAAMC,wBAAwB;EAAA,IAAAC,IAAA,GAAArB,iBAAA,eAAA7G,mBAAA,GAAAsE,IAAA,CAAG,SAAA6D,QAAOC,GAAG,EAAEC,GAAG;IAAA,IAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;IAAA,IAAAC,KAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,kBAAA,EAAAC,uBAAA,EAAAC,IAAA;IAAA,OAAA/I,mBAAA,GAAAgB,IAAA,UAAAgI,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAlE,IAAA,GAAAkE,QAAA,CAAAnJ,IAAA;QAAA;UACtC4I,KAAK,GAAGN,GAAG,CAACM,KAAK;UAAAO,QAAA,CAAAnJ,IAAA;UAAA,OAEYoJ,qBAAU,CAACR,KAAK,CAAC,iDAAiD,CAAC;QAAA;UAAAC,qBAAA,GAAAM,QAAA,CAAAhG,IAAA;UAAA2F,sBAAA,GAAAnD,cAAA,CAAAkD,qBAAA;UAA/FE,kBAAkB,GAAAD,sBAAA;UAGzB,IAAIC,kBAAkB,CAAC/J,MAAM,EAAE;YAC3BgK,uBAAuB,GAAGD,kBAAkB,CAAC,CAAC,CAAC;UACnD;UAEME,IAAI,GAAG;YACTI,SAAS,EAAE,EAAAb,qBAAA,GAAAQ,uBAAuB,cAAAR,qBAAA,uBAAvBA,qBAAA,CAAyBc,SAAS,KAAI,EAAE;YACnDC,QAAQ,EAAE,EAAAd,sBAAA,GAAAO,uBAAuB,cAAAP,sBAAA,uBAAvBA,sBAAA,CAAyBe,SAAS,KAAI,EAAE;YAClDC,MAAM,EAAE,EAAAf,sBAAA,GAAAM,uBAAuB,cAAAN,sBAAA,uBAAvBA,sBAAA,CAAyBgB,GAAG,KAAI,EAAE;YAC1CC,mBAAmB,EAAE,EAAAhB,sBAAA,GAAAK,uBAAuB,cAAAL,sBAAA,uBAAvBA,sBAAA,CAAyBiB,aAAa,KAAI;UACnE,CAAC;UAAA,OAAAT,QAAA,CAAA7F,MAAA,WAEMiF,GAAG,CAACsB,MAAM,CAAC,2BAA2B,EAAE;YAC3CC,MAAM,EAAElB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEmB,EAAE;YACjBC,KAAK,EAAEf,IAAI,CAACQ;UAChB,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAN,QAAA,CAAA/D,IAAA;MAAA;IAAA,GAAAiD,OAAA;EAAA,CACL;EAAA,gBArBKF,wBAAwBA,CAAA8B,EAAA,EAAAC,GAAA;IAAA,OAAA9B,IAAA,CAAAhB,KAAA,OAAAD,SAAA;EAAA;AAAA,GAqB7B;AAED,IAAMgD,yBAAyB;EAAA,IAAAC,KAAA,GAAArD,iBAAA,eAAA7G,mBAAA,GAAAsE,IAAA,CAAG,SAAA6F,SAAO/B,GAAG,EAAEC,GAAG;IAAA,IAAA+B,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;IAAA,IAAA7B,KAAA,EAAA8B,sBAAA,EAAAC,sBAAA,EAAA5B,kBAAA,EAAAC,uBAAA,EAAAC,IAAA;IAAA,OAAA/I,mBAAA,GAAAgB,IAAA,UAAA0J,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAA5F,IAAA,GAAA4F,SAAA,CAAA7K,IAAA;QAAA;UACvC4I,KAAK,GAAGN,GAAG,CAACM,KAAK;UAAAiC,SAAA,CAAA7K,IAAA;UAAA,OAEYoJ,qBAAU,CAACR,KAAK,CAAC,iDAAiD,CAAC;QAAA;UAAA8B,sBAAA,GAAAG,SAAA,CAAA1H,IAAA;UAAAwH,sBAAA,GAAAhF,cAAA,CAAA+E,sBAAA;UAA/F3B,kBAAkB,GAAA4B,sBAAA;UAGzB,IAAI5B,kBAAkB,CAAC/J,MAAM,EAAE;YAC3BgK,uBAAuB,GAAGD,kBAAkB,CAAC,CAAC,CAAC;UACnD;UAEME,IAAI,GAAG;YACTI,SAAS,EAAE,EAAAiB,sBAAA,GAAAtB,uBAAuB,cAAAsB,sBAAA,uBAAvBA,sBAAA,CAAyBhB,SAAS,KAAI,EAAE;YACnDC,QAAQ,EAAE,EAAAgB,sBAAA,GAAAvB,uBAAuB,cAAAuB,sBAAA,uBAAvBA,sBAAA,CAAyBf,SAAS,KAAI,EAAE;YAClDC,MAAM,EAAE,EAAAe,sBAAA,GAAAxB,uBAAuB,cAAAwB,sBAAA,uBAAvBA,sBAAA,CAAyBd,GAAG,KAAI,EAAE;YAC1CC,mBAAmB,EAAE,EAAAc,sBAAA,GAAAzB,uBAAuB,cAAAyB,sBAAA,uBAAvBA,sBAAA,CAAyBb,aAAa,KAAI;UACnE,CAAC;UAAA,OAAAiB,SAAA,CAAAvH,MAAA,WAEMiF,GAAG,CAACsB,MAAM,CAAC,gCAAgC,EAAE;YAChDC,MAAM,EAAElB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEmB,EAAE;YACjBe,iBAAiB,EAAE7B,IAAI,CAACU;UAC5B,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAkB,SAAA,CAAAzF,IAAA;MAAA;IAAA,GAAAiF,QAAA;EAAA,CACL;EAAA,gBArBKF,yBAAyBA,CAAAY,GAAA,EAAAC,GAAA;IAAA,OAAAZ,KAAA,CAAAhD,KAAA,OAAAD,SAAA;EAAA;AAAA,GAqB9B;AAED,IAAM8D,0BAA0B;EAAA,IAAAC,KAAA,GAAAnE,iBAAA,eAAA7G,mBAAA,GAAAsE,IAAA,CAAG,SAAA2G,SAAO7C,GAAG,EAAEC,GAAG;IAAA,IAAA6C,IAAA,EAAAC,IAAA,EAAAC,KAAA,EAAAC,GAAA,EAAAC,mBAAA,EAAAC,IAAA,EAAAC,mBAAA,EAAAC,qBAAA,EAAAC,OAAA,EAAAC,WAAA,EAAAC,QAAA;IAAA,OAAA5L,mBAAA,GAAAgB,IAAA,UAAA6K,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAA/G,IAAA,GAAA+G,SAAA,CAAAhM,IAAA;QAAA;UAAAgM,SAAA,CAAA/G,IAAA;UAEpCmG,IAAI,GAAG9C,GAAG,CAAC2D,IAAI;UACjBZ,IAAI,GAAG/C,GAAG,CAAC4D,OAAO,CAACb,IAAI;UACvBC,KAAK,GAAGa,QAAQ,CAACf,IAAI,CAACE,KAAK,CAAC;UAC5BC,GAAG,GAAGY,QAAQ,CAACf,IAAI,CAACG,GAAG,CAAC;UACtBC,mBAAmB,GAAGW,QAAQ,CAACC,OAAO,CAACC,GAAG,CAACC,aAAa,CAAC;UAAA,MAE3D,CAAChB,KAAK,IAAI,EAAEA,KAAK,IAAIE,mBAAmB,CAAC;YAAAQ,SAAA,CAAAhM,IAAA;YAAA;UAAA;UAAA,OAAAgM,SAAA,CAAA1I,MAAA,WAClCiF,GAAG,CAACgE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,8CAAAC,MAAA,CAAyClB,mBAAmB,eAAY;YAC/Ee,MAAM,EAAE,KAAK;YACbI,SAAS,EAAErF;UACf,CAAC,CAAC;QAAA;UAAA,MAGF,CAACiE,GAAG,IAAI,CAAAA,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEvM,MAAM,KAAI,EAAE;YAAAgN,SAAA,CAAAhM,IAAA;YAAA;UAAA;UAAA,OAAAgM,SAAA,CAAA1I,MAAA,WAClBiF,GAAG,CAACgE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,iEAAiE;YACxEF,MAAM,EAAE,KAAK;YACbI,SAAS,EAAErF;UACf,CAAC,CAAC;QAAA;UAAA0E,SAAA,CAAAhM,IAAA;UAAA,OAGa4M,sBAAsB,CAACvB,IAAI,CAAC;QAAA;UAAzCI,IAAI,GAAAO,SAAA,CAAA7I,IAAA;UAAA6I,SAAA,CAAAhM,IAAA;UAAA,OAEwB6M,aAAa,CAACC,yBAAyB,CAAC;YAAEC,KAAK,EAAEtB,IAAI,CAACsB,KAAK;YAAER,MAAM,EAAE9E,gBAAgB,CAACC,OAAO;YAAElG,IAAI,EAAEqG,iBAAiB,CAACC;UAAY,CAAC,CAAC;QAAA;UAAjK4D,mBAAmB,GAAAM,SAAA,CAAA7I,IAAA;UAAA,MAErBuI,mBAAmB,CAAC1M,MAAM,KAAK,CAAC;YAAAgN,SAAA,CAAAhM,IAAA;YAAA;UAAA;UAC1B2L,qBAAqB,GAAGD,mBAAmB,CAACsB,GAAG,CAAC,UAAAlB,QAAQ,EAAI;YAC9D,OAAOe,aAAa,CAACI,UAAU,CAACnB,QAAQ,CAACoB,EAAE,CAAC;UAChD,CAAC,CAAC;UAAAlB,SAAA,CAAAhM,IAAA;UAAA,OAEI6E,OAAO,CAACsI,GAAG,CAACxB,qBAAqB,CAAC;QAAA;UAGtCC,OAAO,GAAGwB,kBAAkB,CAAC,CAAC;UAE9BvB,WAAW,GAAG;YAChBD,OAAO,EAAEA,OAAO;YAChByB,aAAa,EAAE,MAAM;YACrB9B,GAAG,EAAEA,GAAG;YACRwB,KAAK,EAAEtB,IAAI,CAACsB,KAAK;YACjBzB,KAAK,EAAEA,KAAK;YACZ9J,IAAI,EAAEqG,iBAAiB,CAACE,UAAU;YAClCwE,MAAM,EAAE,CAAC;YACTe,KAAK,EAAET,aAAa,CAACU,2BAA2B,CAAC,CAAC;YAClDC,GAAG,EAAE,MAAM;YACXC,IAAI,EAAEnG;UACV,CAAC;UAAA0E,SAAA,CAAAhM,IAAA;UAAA,OAEsB6M,aAAa,CAACzL,MAAM,CAACyK,WAAW,CAAC;QAAA;UAAlDC,QAAQ,GAAAE,SAAA,CAAA7I,IAAA;UAAA,OAAA6I,SAAA,CAAA1I,MAAA,WAEPiF,GAAG,CAACgE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,kEAAkE;YAC3EX,QAAQ,EAAEA,QAAQ;YAClBS,MAAM,EAAE,IAAI;YACZI,SAAS,EAAErF;UACf,CAAC,CAAC;QAAA;UAAA0E,SAAA,CAAA/G,IAAA;UAAA+G,SAAA,CAAA0B,EAAA,GAAA1B,SAAA;UAEF2B,OAAO,CAACC,GAAG,CAAA5B,SAAA,CAAA0B,EAAM,CAAC;UAElBnF,GAAG,CAACgE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACjBD,MAAM,EAAE,KAAK;YACbE,OAAO,EAAE,uBAAuB;YAChCoB,SAAS,EAAEvG;UACf,CAAC,CAAC;QAAA;QAAA;UAAA,OAAA0E,SAAA,CAAA5G,IAAA;MAAA;IAAA,GAAA+F,QAAA;EAAA,CAET;EAAA,gBApEKF,0BAA0BA,CAAA6C,GAAA,EAAAC,GAAA;IAAA,OAAA7C,KAAA,CAAA9D,KAAA,OAAAD,SAAA;EAAA;AAAA,GAoE/B;AAED,IAAM6G,2BAA2B;EAAA,IAAAC,KAAA,GAAAlH,iBAAA,eAAA7G,mBAAA,GAAAsE,IAAA,CAAG,SAAA0J,SAAO5F,GAAG,EAAEC,GAAG;IAAA,IAAA6C,IAAA,EAAAC,IAAA,EAAA8C,UAAA,EAAA7C,KAAA,EAAAC,GAAA,EAAAC,mBAAA,EAAAC,IAAA,EAAAC,mBAAA,EAAAC,qBAAA,EAAAC,OAAA,EAAAC,WAAA,EAAAC,QAAA;IAAA,OAAA5L,mBAAA,GAAAgB,IAAA,UAAAkN,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAApJ,IAAA,GAAAoJ,SAAA,CAAArO,IAAA;QAAA;UAAAqO,SAAA,CAAApJ,IAAA;UAErCmG,IAAI,GAAG9C,GAAG,CAAC2D,IAAI;UACjBZ,IAAI,GAAG/C,GAAG,CAAC4D,OAAO,CAACb,IAAI;UACvB8C,UAAU,GAAGhC,QAAQ,CAACf,IAAI,CAACE,KAAK,CAAC;UACjCA,KAAK,GAAG6C,UAAU,GAAG,EAAE;UACvB5C,GAAG,GAAGY,QAAQ,CAACf,IAAI,CAACG,GAAG,CAAC;UACtBC,mBAAmB,GAAGW,QAAQ,CAACC,OAAO,CAACC,GAAG,CAACC,aAAa,CAAC;UAAA,MAE3D,CAAChB,KAAK,IAAI,EAAEA,KAAK,IAAIE,mBAAmB,CAAC;YAAA6C,SAAA,CAAArO,IAAA;YAAA;UAAA;UAAA,OAAAqO,SAAA,CAAA/K,MAAA,WAClCiF,GAAG,CAACgE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,8CAAAC,MAAA,CAAyClB,mBAAmB,UAAAkB,MAAA,CAAO,CAAClB,mBAAmB,GAAG,EAAE,EAAE8C,OAAO,CAAC,CAAC,CAAC,eAAY;YAC3H/B,MAAM,EAAE,KAAK;YACbI,SAAS,EAAErF;UACf,CAAC,CAAC;QAAA;UAAA,IAGDiE,GAAG;YAAA8C,SAAA,CAAArO,IAAA;YAAA;UAAA;UAAA,OAAAqO,SAAA,CAAA/K,MAAA,WACGiF,GAAG,CAACgE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,8BAA8B;YACrCF,MAAM,EAAE,KAAK;YACbI,SAAS,EAAErF;UACf,CAAC,CAAC;QAAA;UAAA+G,SAAA,CAAArO,IAAA;UAAA,OAGa4M,sBAAsB,CAACvB,IAAI,CAAC;QAAA;UAAzCI,IAAI,GAAA4C,SAAA,CAAAlL,IAAA;UAAAkL,SAAA,CAAArO,IAAA;UAAA,OAEwB6M,aAAa,CAACC,yBAAyB,CAAC;YAAEC,KAAK,EAAEtB,IAAI,CAACsB,KAAK;YAAER,MAAM,EAAE9E,gBAAgB,CAACC,OAAO;YAAElG,IAAI,EAAEqG,iBAAiB,CAACC;UAAY,CAAC,CAAC;QAAA;UAAjK4D,mBAAmB,GAAA2C,SAAA,CAAAlL,IAAA;UAAA,MAErBuI,mBAAmB,CAAC1M,MAAM,KAAK,CAAC;YAAAqP,SAAA,CAAArO,IAAA;YAAA;UAAA;UAC1B2L,qBAAqB,GAAGD,mBAAmB,CAACsB,GAAG,CAAC,UAAAlB,QAAQ,EAAI;YAC9D,OAAOe,aAAa,CAACI,UAAU,CAACnB,QAAQ,CAACoB,EAAE,CAAC;UAChD,CAAC,CAAC;UAAAmB,SAAA,CAAArO,IAAA;UAAA,OAEI6E,OAAO,CAACsI,GAAG,CAACxB,qBAAqB,CAAC;QAAA;UAGtCC,OAAO,GAAGwB,kBAAkB,CAAC,CAAC;UAE9BvB,WAAW,GAAG;YAChBD,OAAO,EAAEA,OAAO;YAChByB,aAAa,EAAE,MAAM;YACrB9B,GAAG,EAAEA,GAAG;YACRwB,KAAK,EAAEtB,IAAI,CAACsB,KAAK;YACjBzB,KAAK,EAAEA,KAAK;YACZ9J,IAAI,EAAEqG,iBAAiB,CAACG,WAAW;YACnCuE,MAAM,EAAE,CAAC;YACTe,KAAK,EAAET,aAAa,CAACU,2BAA2B,CAAC,CAAC;YAClDC,GAAG,EAAE,MAAM;YACXC,IAAI,EAAEnG;UACV,CAAC;UAAA+G,SAAA,CAAArO,IAAA;UAAA,OAEsB6M,aAAa,CAACzL,MAAM,CAACyK,WAAW,CAAC;QAAA;UAAlDC,QAAQ,GAAAuC,SAAA,CAAAlL,IAAA;UAAA,OAAAkL,SAAA,CAAA/K,MAAA,WAEPiF,GAAG,CAACgE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,kEAAkE;YAC3EX,QAAQ,EAAEA,QAAQ;YAClBS,MAAM,EAAE,IAAI;YACZI,SAAS,EAAErF;UACf,CAAC,CAAC;QAAA;UAAA+G,SAAA,CAAApJ,IAAA;UAAAoJ,SAAA,CAAAX,EAAA,GAAAW,SAAA;UAEFV,OAAO,CAACC,GAAG,CAAAS,SAAA,CAAAX,EAAM,CAAC;UAElBnF,GAAG,CAACgE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACjBD,MAAM,EAAE,KAAK;YACbE,OAAO,EAAE,uBAAuB;YAChCoB,SAAS,EAAEvG;UACf,CAAC,CAAC;QAAA;QAAA;UAAA,OAAA+G,SAAA,CAAAjJ,IAAA;MAAA;IAAA,GAAA8I,QAAA;EAAA,CAET;EAAA,gBArEKF,2BAA2BA,CAAAO,GAAA,EAAAC,GAAA;IAAA,OAAAP,KAAA,CAAA7G,KAAA,OAAAD,SAAA;EAAA;AAAA,GAqEhC;AAED,IAAMsH,kBAAkB;EAAA,IAAAC,KAAA,GAAA3H,iBAAA,eAAA7G,mBAAA,GAAAsE,IAAA,CAAG,SAAAmK,SAAOrG,GAAG,EAAEC,GAAG;IAAA,IAAA/G,IAAA,EAAA6J,IAAA,EAAAC,KAAA,EAAAE,mBAAA,EAAAC,IAAA,EAAAC,mBAAA,EAAAC,qBAAA,EAAAC,OAAA,EAAAgD,WAAA,EAAAC,MAAA,EAAAC,SAAA,EAAAC,KAAA,EAAAC,MAAA,EAAAC,UAAA,EAAAC,eAAA,EAAAC,SAAA,EAAAC,QAAA,EAAAC,YAAA,EAAAxD,WAAA,EAAAC,QAAA;IAAA,OAAA5L,mBAAA,GAAAgB,IAAA,UAAAoO,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAtK,IAAA,GAAAsK,SAAA,CAAAvP,IAAA;QAAA;UAChCwB,IAAI,GAAGqG,iBAAiB,CAACC,WAAW;UACpCuD,IAAI,GAAG/C,GAAG,CAAC4D,OAAO,CAACb,IAAI;UACvBC,KAAK,GAAGa,QAAQ,CAAC7D,GAAG,CAAC2D,IAAI,CAACX,KAAK,CAAC;UAChCE,mBAAmB,GAAGW,QAAQ,CAACC,OAAO,CAACC,GAAG,CAACC,aAAa,CAAC;UAAA,MAE3D,CAAChB,KAAK,IAAIA,KAAK,GAAGE,mBAAmB;YAAA+D,SAAA,CAAAvP,IAAA;YAAA;UAAA;UAAA,OAAAuP,SAAA,CAAAjM,MAAA,WAC9BiF,GAAG,CAACgE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,2CAAAC,MAAA,CAAsClB,mBAAmB,eAAY;YAC5Ee,MAAM,EAAE,KAAK;YACbI,SAAS,EAAErF;UACf,CAAC,CAAC;QAAA;UAAAiI,SAAA,CAAAtK,IAAA;UAAAsK,SAAA,CAAAvP,IAAA;UAAA,OAIiB4M,sBAAsB,CAACvB,IAAI,CAAC;QAAA;UAAzCI,IAAI,GAAA8D,SAAA,CAAApM,IAAA;UAAAoM,SAAA,CAAAvP,IAAA;UAAA,OAEwB6M,aAAa,CAACC,yBAAyB,CAAC;YACtEC,KAAK,EAAEtB,IAAI,CAACsB,KAAK;YACjBR,MAAM,EAAE9E,gBAAgB,CAACC,OAAO;YAChClG,IAAI,EAAEqG,iBAAiB,CAACC;UAC5B,CAAC,CAAC;QAAA;UAJI4D,mBAAmB,GAAA6D,SAAA,CAAApM,IAAA;UAAA,MAMrBuI,mBAAmB,CAAC1M,MAAM,KAAK,CAAC;YAAAuQ,SAAA,CAAAvP,IAAA;YAAA;UAAA;UAC1B2L,qBAAqB,GAAGD,mBAAmB,CAACsB,GAAG,CAAC,UAAAlB,QAAQ,EAAI;YAC9D,OAAOe,aAAa,CAACI,UAAU,CAACnB,QAAQ,CAACoB,EAAE,CAAC;UAChD,CAAC,CAAC;UAAAqC,SAAA,CAAAvP,IAAA;UAAA,OAEI6E,OAAO,CAACsI,GAAG,CAACxB,qBAAqB,CAAC;QAAA;UAGtCC,OAAO,GAAGwB,kBAAkB,CAAC,CAAC;UAC9BwB,WAAW,GAAGY,MAAM,CAAClE,KAAK,CAAC,EAEjC;UACMuD,MAAM,GAAG,iDAAiD;UAC1DC,SAAS,GAAG1C,OAAO,CAACC,GAAG,CAACoD,aAAa;UACrCV,KAAK,GAAG3C,OAAO,CAACC,GAAG,CAACqD,WAAW,EAErC;UACMV,MAAM,GAAG;YACXW,KAAK,EAAEZ,KAAK;YACZa,OAAO,EAAE,SAAS;YAClBC,SAAS,EAAE,4BAA4B;YACvCC,MAAM,EAAExE,KAAK,GAAG,GAAG;YACnByE,QAAQ,EAAE,KAAK;YACf9D,IAAI,EAAE,SAAS;YACf+D,UAAU,EAAEpE,OAAO;YACnBqE,SAAS,EAAE,MAAM;YACjBC,SAAS,KAAAxD,MAAA,CAAKN,OAAO,CAACC,GAAG,CAAC8D,YAAY;UAC1C,CAAC,EAED;UACMlB,UAAU,GAAG5O,MAAM,CAACyE,IAAI,CAACkK,MAAM,CAAC,CAACoB,IAAI,CAAC,CAAC;UACzClB,eAAe,GAAG,EAAE;UACxBD,UAAU,CAAC3M,OAAO,CAAC,UAAAsE,GAAG,EAAI;YACtBsI,eAAe,OAAAxC,MAAA,CAAO9F,GAAG,OAAA8F,MAAA,CAAIsC,MAAM,CAACpI,GAAG,CAAC,MAAG;UAC/C,CAAC,CAAC;UACFsI,eAAe,WAAAxC,MAAA,CAAWoC,SAAS,CAAE;UAC/BK,SAAS,GAAGkB,kBAAM,CAACC,UAAU,CAAC,KAAK,CAAC,CAACC,MAAM,CAACrB,eAAe,CAAC,CAACsB,MAAM,CAAC,KAAK,CAAC,CAACC,WAAW,CAAC,CAAC,EAE9F;UACAzB,MAAM,CAAC0B,IAAI,GAAGvB,SAAS;;UAEvB;UACH;;UAEG;UAAAI,SAAA,CAAAvP,IAAA;UAAA,OACuB2Q,iBAAK,CAACC,IAAI,CAAC/B,MAAM,EAAE,IAAIgC,eAAe,CAAC7B,MAAM,CAAC,CAAC9I,QAAQ,CAAC,CAAC,EAAE;YAC9E4K,OAAO,EAAE;cACL,cAAc,EAAE;YACpB;UACJ,CAAC,CAAC;QAAA;UAJI1B,QAAQ,GAAAG,SAAA,CAAApM,IAAA;UAMRkM,YAAY,GAAGD,QAAQ,CAAChE,IAAI,EAElC;UACAuC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEyB,YAAY,CAAC;UAAC,MAEvC,CAACA,YAAY,IAAIA,YAAY,CAAC0B,OAAO,KAAK,SAAS;YAAAxB,SAAA,CAAAvP,IAAA;YAAA;UAAA;UAAA,MAC9C,IAAI+C,KAAK,CAAC,8BAA8B,CAAC;QAAA;UAG7C8I,WAAW,GAAG;YAChBD,OAAO,EAAEA,OAAO;YAChByB,aAAa,EAAEgC,YAAY,CAAC2B,UAAU,IAAI,MAAM;YAChDzF,GAAG,EAAE,CAAC;YACNwB,KAAK,EAAEtB,IAAI,CAACsB,KAAK;YACjBzB,KAAK,EAAE2F,UAAU,CAACrC,WAAW,CAAC;YAC9BpN,IAAI,EAAE,MAAM;YACZ+K,MAAM,EAAE,CAAC;YACTe,KAAK,EAAET,aAAa,CAACU,2BAA2B,CAAC,CAAC;YAClDC,GAAG,EAAE6B,YAAY,CAAC6B,SAAS,CAACC,MAAM,IAAI,IAAI;YAAE;YAC5C1D,IAAI,EAAEnG;UACV,CAAC;UAAAiI,SAAA,CAAAvP,IAAA;UAAA,OAEsB6M,aAAa,CAACzL,MAAM,CAACyK,WAAW,CAAC;QAAA;UAAlDC,QAAQ,GAAAyD,SAAA,CAAApM,IAAA;UAAA,OAAAoM,SAAA,CAAAjM,MAAA,WAIPiF,GAAG,CAACgE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,gCAAgC;YACzCX,QAAQ,EAAEA,QAAQ;YAClBsF,IAAI,EAAE;cACFC,OAAO,EAAEhC,YAAY,CAAC6B,SAAS,CAACC,MAAM,IAAI,IAAI,CAAE;YACpD,CAAC;YACD5E,MAAM,EAAE,IAAI;YACZI,SAAS,EAAErF;UACf,CAAC,CAAC;QAAA;UAAAiI,SAAA,CAAAtK,IAAA;UAAAsK,SAAA,CAAA7B,EAAA,GAAA6B,SAAA;UAEF5B,OAAO,CAACC,GAAG,CAAA2B,SAAA,CAAA7B,EAAM,CAAC;UAElBnF,GAAG,CAACgE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACjBD,MAAM,EAAE,KAAK;YACbE,OAAO,EAAE,uBAAuB;YAChCoB,SAAS,EAAEvG;UACf,CAAC,CAAC;QAAC;QAAA;UAAA,OAAAiI,SAAA,CAAAnK,IAAA;MAAA;IAAA,GAAAuJ,QAAA;EAAA,CAEV;EAAA,gBAtHKF,kBAAkBA,CAAA6C,GAAA,EAAAC,IAAA;IAAA,OAAA7C,KAAA,CAAAtH,KAAA,OAAAD,SAAA;EAAA;AAAA,GAsHvB;AAGD,IAAMqK,gBAAgB;EAAA,IAAAC,KAAA,GAAA1K,iBAAA,eAAA7G,mBAAA,GAAAsE,IAAA,CAAG,SAAAkN,SAAOpJ,GAAG,EAAEC,GAAG;IAAA,IAAA/G,IAAA,EAAA6J,IAAA,EAAAO,OAAA,EAAAH,IAAA,EAAAK,QAAA,EAAA6F,YAAA,EAAAC,QAAA;IAAA,OAAA1R,mBAAA,GAAAgB,IAAA,UAAA2Q,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAA7M,IAAA,GAAA6M,SAAA,CAAA9R,IAAA;QAAA;UAC9BwB,IAAI,GAAGqG,iBAAiB,CAACC,WAAW;UACtCuD,IAAI,GAAG/C,GAAG,CAAC4D,OAAO,CAACb,IAAI;UACvBO,OAAO,GAAGtD,GAAG,CAACM,KAAK,CAACmJ,aAAa;UAAA,MAEjC,CAAC1G,IAAI,IAAI,CAACO,OAAO;YAAAkG,SAAA,CAAA9R,IAAA;YAAA;UAAA;UAAA,OAAA8R,SAAA,CAAAxO,MAAA,WACViF,GAAG,CAACgE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,wBAAwB;YAC/BF,MAAM,EAAE,KAAK;YACbI,SAAS,EAAErF;UACf,CAAC,CAAC;QAAA;UAAAwK,SAAA,CAAA7M,IAAA;UAAA6M,SAAA,CAAA9R,IAAA;UAAA,OAGiB4M,sBAAsB,CAACvB,IAAI,CAAC;QAAA;UAAzCI,IAAI,GAAAqG,SAAA,CAAA3O,IAAA;UAAA2O,SAAA,CAAA9R,IAAA;UAAA,OAEa6M,aAAa,CAACmF,oBAAoB,CAAC;YAAEpG,OAAO,EAAPA;UAAQ,CAAC,CAAC;QAAA;UAAhEE,QAAQ,GAAAgG,SAAA,CAAA3O,IAAA;UAAA,IAET2I,QAAQ;YAAAgG,SAAA,CAAA9R,IAAA;YAAA;UAAA;UAAA,OAAA8R,SAAA,CAAAxO,MAAA,WACFiF,GAAG,CAACgE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,+CAA+C;YACtDF,MAAM,EAAE,KAAK;YACbI,SAAS,EAAErF;UACf,CAAC,CAAC;QAAA;UAAAwK,SAAA,CAAA9R,IAAA;UAAA,OAGqB2Q,iBAAK,CAACC,IAAI,CAAC,4CAA4C,EAAE;YAChFhK,GAAG,EAAEwF,OAAO,CAACC,GAAG,CAAC4F,uBAAuB;YACxCF,aAAa,EAAEnG,OAAO;YACtBsG,QAAQ,EAAErF,aAAa,CAACsF,sBAAsB,CAACrG,QAAQ,CAACwB,KAAK;UACjE,CAAC,CAAC;QAAA;UAJIqE,YAAY,GAAAG,SAAA,CAAA3O,IAAA;UAOZyO,QAAQ,GAAGD,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEvG,IAAI;UAAA,MAE/BwG,QAAQ,KAAKvK,SAAS,IAAIuK,QAAQ,CAACrF,MAAM,KAAK,KAAK;YAAAuF,SAAA,CAAA9R,IAAA;YAAA;UAAA;UAAA,MAC7C+C,KAAK,CAAC,0BAA0B,CAAC;QAAA;UAAA,MAGvC6O,QAAQ,CAACxG,IAAI,CAACmB,MAAM,KAAK,SAAS;YAAAuF,SAAA,CAAA9R,IAAA;YAAA;UAAA;UAAA,OAAA8R,SAAA,CAAAxO,MAAA,WAC3BiF,GAAG,CAACgE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,sCAAsC;YAC/CF,MAAM,EAAE,KAAK;YACbI,SAAS,EAAErF;UACf,CAAC,CAAC;QAAA;UAAA,MAGFsK,QAAQ,CAACxG,IAAI,CAACmB,MAAM,KAAK,UAAU;YAAAuF,SAAA,CAAA9R,IAAA;YAAA;UAAA;UAAA,OAAA8R,SAAA,CAAAxO,MAAA,WAC5BiF,GAAG,CAACgE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,0BAA0B;YACnCF,MAAM,EAAE,KAAK;YACbI,SAAS,EAAErF;UACf,CAAC,CAAC;QAAA;UAAA,MAGFsK,QAAQ,CAACxG,IAAI,CAACmB,MAAM,KAAK,SAAS;YAAAuF,SAAA,CAAA9R,IAAA;YAAA;UAAA;UAAA,MAE9B8L,QAAQ,CAACS,MAAM,KAAK9E,gBAAgB,CAACC,OAAO,IAAIoE,QAAQ,CAACS,MAAM,KAAK9E,gBAAgB,CAACG,SAAS;YAAAkK,SAAA,CAAA9R,IAAA;YAAA;UAAA;UAAA8R,SAAA,CAAA9R,IAAA;UAAA,OAExF6M,aAAa,CAACuF,gCAAgC,CAAC;YACjDlF,EAAE,EAAEpB,QAAQ,CAACoB,EAAE;YACftB,OAAO,EAAEE,QAAQ,CAACF;UACtB,CAAC,CAAC;QAAA;UAAAkG,SAAA,CAAA9R,IAAA;UAAA,OAEIqS,qBAAqB,CAAC;YACxBtF,KAAK,EAAEtB,IAAI,CAACsB,KAAK;YACjBzB,KAAK,EAAEQ,QAAQ,CAACR,KAAK,GAAIQ,QAAQ,CAACR,KAAK,GAAG,GAAG,GAAI;UACrD,CAAC,CAAC;QAAA;UAAA,OAAAwG,SAAA,CAAAxO,MAAA,WAQCiF,GAAG,CAAC+J,QAAQ,CAAC,wBAAwB,CAAC;QAAA;UAAAR,SAAA,CAAA9R,IAAA;UAAA;QAAA;UAAA8R,SAAA,CAAA7M,IAAA;UAAA6M,SAAA,CAAApE,EAAA,GAAAoE,SAAA;UAIjDnE,OAAO,CAACC,GAAG,CAAAkE,SAAA,CAAApE,EAAM,CAAC;UAClBnF,GAAG,CAACgE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACjBD,MAAM,EAAE,KAAK;YACbE,OAAO,EAAE,uBAAuB;YAChCoB,SAAS,EAAEvG,OAAO;YAClBR,KAAK,EAAAgL,SAAA,CAAApE;UACT,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAoE,SAAA,CAAA1M,IAAA;MAAA;IAAA,GAAAsM,QAAA;EAAA,CAET;EAAA,gBAtFKF,gBAAgBA,CAAAe,IAAA,EAAAC,IAAA;IAAA,OAAAf,KAAA,CAAArK,KAAA,OAAAD,SAAA;EAAA;AAAA,GAsFrB;AAED,IAAMsL,qBAAqB;EAAA,IAAAC,KAAA,GAAA3L,iBAAA,eAAA7G,mBAAA,GAAAsE,IAAA,CAAG,SAAAmO,SAAOrK,GAAG,EAAEC,GAAG;IAAA,IAAA/G,IAAA,EAAA6J,IAAA,EAAAC,KAAA,EAAAE,mBAAA,EAAAC,IAAA,EAAAC,mBAAA,EAAAC,qBAAA,EAAAC,OAAA,EAAAgH,IAAA,EAAA5D,MAAA,EAAAI,QAAA;IAAA,OAAAlP,mBAAA,GAAAgB,IAAA,UAAA2R,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAA7N,IAAA,GAAA6N,SAAA,CAAA9S,IAAA;QAAA;UACnCwB,IAAI,GAAGqG,iBAAiB,CAACI,OAAO;UAClCoD,IAAI,GAAG/C,GAAG,CAAC4D,OAAO,CAACb,IAAI;UACvBC,KAAK,GAAGa,QAAQ,CAAC7D,GAAG,CAACM,KAAK,CAAC0C,KAAK,CAAC;UAE/BE,mBAAmB,GAAGW,QAAQ,CAACC,OAAO,CAACC,GAAG,CAACC,aAAa,CAAC;UAAA,MAE3D,CAAChB,KAAK,IAAI,EAAEA,KAAK,IAAIE,mBAAmB,CAAC;YAAAsH,SAAA,CAAA9S,IAAA;YAAA;UAAA;UAAA,OAAA8S,SAAA,CAAAxP,MAAA,WAClCiF,GAAG,CAACgE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,8CAAAC,MAAA,CAAyClB,mBAAmB,eAAY;YAC/Ee,MAAM,EAAE,KAAK;YACbI,SAAS,EAAErF;UACf,CAAC,CAAC;QAAA;UAAAwL,SAAA,CAAA7N,IAAA;UAAA6N,SAAA,CAAA9S,IAAA;UAAA,OAIiB4M,sBAAsB,CAACvB,IAAI,CAAC;QAAA;UAAzCI,IAAI,GAAAqH,SAAA,CAAA3P,IAAA;UAAA2P,SAAA,CAAA9S,IAAA;UAAA,OAEwB6M,aAAa,CAACC,yBAAyB,CAAC;YAAEC,KAAK,EAAEtB,IAAI,CAACsB,KAAK;YAAER,MAAM,EAAE9E,gBAAgB,CAACC,OAAO;YAAElG,IAAI,EAAEqG,iBAAiB,CAACC;UAAY,CAAC,CAAC;QAAA;UAAjK4D,mBAAmB,GAAAoH,SAAA,CAAA3P,IAAA;UAAA,MAErBuI,mBAAmB,CAAC1M,MAAM,KAAK,CAAC;YAAA8T,SAAA,CAAA9S,IAAA;YAAA;UAAA;UAC1B2L,qBAAqB,GAAGD,mBAAmB,CAACsB,GAAG,CAAC,UAAAlB,QAAQ,EAAI;YAC9D,OAAOe,aAAa,CAACI,UAAU,CAACnB,QAAQ,CAACoB,EAAE,CAAC;UAChD,CAAC,CAAC;UAAA4F,SAAA,CAAA9S,IAAA;UAAA,OAEI6E,OAAO,CAACsI,GAAG,CAACxB,qBAAqB,CAAC;QAAA;UAGtCC,OAAO,GAAGwB,kBAAkB,CAAC,CAAC;UAC9BwF,IAAI,GAAGG,MAAM,CAACC,cAAc,CAAC,CAAC;UAE9BhE,MAAM,GAAG;YACXiE,OAAO,EAAE,KAAK;YACd;YACAC,MAAM,EAAE9G,OAAO,CAACC,GAAG,CAAC8G,kBAAkB;YACtCC,YAAY,EAAExH,OAAO;YACrB;YACAyH,QAAQ,EAAE,KAAK;YACfC,YAAY,EAAEhI,KAAK;YACnBiI,UAAU,EAAEX,IAAI;YAChBY,UAAU,EAAE/H,IAAI,CAACsB,KAAK;YACtB;YACA0G,UAAU,yCAAyC;YACnDC,cAAc,EAAEjI,IAAI,CAACsB;YACrB;UACJ,CAAC;UAEDiC,MAAM,CAAC2E,QAAQ,GAAG,iCAAiC;UAEnD3E,MAAM,CAAC0B,IAAI,GAAGqC,MAAM,CAACa,YAAY,CAAC5E,MAAM,EAAE5C,OAAO,CAACC,GAAG,CAACwH,mBAAmB,CAAC;UAC1E;UACA;UACA7E,MAAM,CAAC8E,SAAS,GAAG,KAAK;UAGxBnG,OAAO,CAACC,GAAG,CAACoB,MAAM,CAAC;UAAA8D,SAAA,CAAA9S,IAAA;UAAA,OAEI,IAAA2Q,iBAAK,EAAC;YACzB3N,MAAM,EAAE,MAAM;YACdwK,GAAG,EAAE,iCAAiC;YACtCpC,IAAI,EAAE2I,uBAAW,CAACC,SAAS,CAAChF,MAAM;UACtC,CAAC,CAAC;QAAA;UAJII,QAAQ,GAAA0D,SAAA,CAAA3P,IAAA;UAMdwK,OAAO,CAACC,GAAG,CAACwB,QAAQ,CAAChE,IAAI,CAAC;UAAA,MAEtBgE,QAAQ,CAAChE,IAAI,CAAC6I,QAAQ,KAAK,SAAS,IAAI7E,QAAQ,CAAChE,IAAI,CAAC8I,OAAO;YAAApB,SAAA,CAAA9S,IAAA;YAAA;UAAA;UAAA,OAAA8S,SAAA,CAAAxP,MAAA,WACtDiF,GAAG,CAACgE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,gCAAgC;YACzC0H,WAAW,EAAE/E,QAAQ,CAAChE,IAAI,CAAC8I,OAAO;YAClC3H,MAAM,EAAE,IAAI;YACZI,SAAS,EAAErF;UACf,CAAC,CAAC;QAAA;UAAA,OAAAwL,SAAA,CAAAxP,MAAA,WAICiF,GAAG,CAACgE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,EAAE,4DAA4D;YACrEF,MAAM,EAAE,KAAK;YACbI,SAAS,EAAErF;UACf,CAAC,CAAC;QAAA;UAAAwL,SAAA,CAAA7N,IAAA;UAAA6N,SAAA,CAAApF,EAAA,GAAAoF,SAAA;UAEFnF,OAAO,CAACC,GAAG,CAAAkF,SAAA,CAAApF,EAAM,CAAC;UAAA,OAAAoF,SAAA,CAAAxP,MAAA,WACXiF,GAAG,CAACgE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBD,MAAM,EAAE,KAAK;YACbE,OAAO,EAAE,uBAAuB;YAChCoB,SAAS,EAAEvG;UACf,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAwL,SAAA,CAAA1N,IAAA;MAAA;IAAA,GAAAuN,QAAA;EAAA,CAET;EAAA,gBAxFKF,qBAAqBA,CAAA2B,IAAA,EAAAC,IAAA;IAAA,OAAA3B,KAAA,CAAAtL,KAAA,OAAAD,SAAA;EAAA;AAAA,GAwF1B;AAGD,IAAMmN,mBAAmB;EAAA,IAAAC,KAAA,GAAAxN,iBAAA,eAAA7G,mBAAA,GAAAsE,IAAA,CAAG,SAAAgQ,SAAOlM,GAAG,EAAEC,GAAG;IAAA,IAAA/G,IAAA,EAAA4J,IAAA,EAAAqJ,YAAA,EAAAzF,MAAA,EAAA0F,OAAA,EAAAC,IAAA,EAAAC,iBAAA,EAAA9I,QAAA,EAAAD,WAAA;IAAA,OAAA3L,mBAAA,GAAAgB,IAAA,UAAA2T,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAA7P,IAAA,GAAA6P,SAAA,CAAA9U,IAAA;QAAA;UAAA8U,SAAA,CAAA7P,IAAA;UAE7BzD,IAAI,GAAGqG,iBAAiB,CAACI,OAAO;UAClCmD,IAAI,GAAG9C,GAAG,CAAC2D,IAAI;UAEnB,IAAI,CAAC3D,GAAG,CAAC2D,IAAI,EAAE;YACXb,IAAI,GAAG9C,GAAG,CAACM,KAAK;UACpB;UAEA+E,OAAO,CAACC,GAAG,CAACxC,IAAI,CAAC;UAEbqJ,YAAY,GAAGrI,OAAO,CAACC,GAAG,CAACwH,mBAAmB;UAE5C7E,MAAM,GAAG;YACXW,KAAK,EAAEvD,OAAO,CAACC,GAAG,CAAC8G,kBAAkB;YACrCrD,MAAM,EAAE1E,IAAI,CAAC0E,MAAM,IAAI,EAAE;YACzBE,UAAU,EAAE5E,IAAI,CAAC4E,UAAU,IAAI,EAAE;YACjC+E,SAAS,EAAE3J,IAAI,CAAC2J,SAAS,IAAI,EAAE;YAC/BC,SAAS,EAAE5J,IAAI,CAAC4J,SAAS,IAAI,EAAE;YAC/BC,OAAO,EAAE7J,IAAI,CAAC6J,OAAO,IAAI,EAAE;YAC3BC,SAAS,EAAE9J,IAAI,CAAC8J,SAAS,IAAI,EAAE;YAC/BC,WAAW,EAAE/J,IAAI,CAAC+J,WAAW,IAAI,EAAE;YACnCC,QAAQ,EAAEhK,IAAI,CAACgK,QAAQ,IAAI,EAAE;YAC7B1E,IAAI,EAAEtF,IAAI,CAACsF,IAAI,IAAI;UACvB,CAAC;UAEGgE,OAAO,GAAG,EAAE;UAChBA,OAAO,IAAI,SAAS,GAAG1F,MAAM,CAACc,MAAM,GAAG,GAAG;UAC1C4E,OAAO,IAAI,QAAQ,GAAG1F,MAAM,CAACW,KAAK,GAAG,GAAG;UACxC+E,OAAO,IAAI,aAAa,GAAG1F,MAAM,CAACgB,UAAU,GAAG,GAAG;UAClD0E,OAAO,IAAI,YAAY,GAAG1F,MAAM,CAAC+F,SAAS,GAAG,GAAG;UAChDL,OAAO,IAAI,YAAY,GAAG1F,MAAM,CAACgG,SAAS,GAAG,GAAG;UAChDN,OAAO,IAAI,UAAU,GAAG1F,MAAM,CAACiG,OAAO,GAAG,GAAG;UAC5CP,OAAO,IAAI,YAAY,GAAG1F,MAAM,CAACkG,SAAS,GAAG,GAAG;UAChDR,OAAO,IAAI,cAAc,GAAG1F,MAAM,CAACmG,WAAW;UAE1CR,IAAI,GAAG5B,MAAM,CAACsC,iBAAiB,CAACX,OAAO,EAAED,YAAY,EAAEzF,MAAM,CAAC0B,IAAI,CAAC;UAAA,IAElEiE,IAAI;YAAAG,SAAA,CAAA9U,IAAA;YAAA;UAAA;UACL2N,OAAO,CAACC,GAAG,CAAC;YACRrB,MAAM,EAAE,KAAK;YACbE,OAAO,EAAE,uBAAuB;YAChCkI,IAAI,EAAJA,IAAI;YACJ9G,SAAS,EAAEvG;UACf,CAAC,CAAC;UAAA,OAAAwN,SAAA,CAAAxR,MAAA,WACKiF,GAAG,CAACgE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBD,MAAM,EAAE,KAAK;YACbE,OAAO,EAAE,uBAAuB;YAChCkI,IAAI,EAAJA,IAAI;YACJ9G,SAAS,EAAEvG;UACf,CAAC,CAAC;QAAA;UAGAsN,iBAAiB,GAAG;YACtBhJ,OAAO,EAAEoD,MAAM,CAACgB,UAAU;YAC1B3C,aAAa,EAAE,MAAM;YACrB9B,GAAG,EAAE,IAAI;YACTwB,KAAK,EAAEiC,MAAM,CAAC+F,SAAS;YACvBzJ,KAAK,EAAE0D,MAAM,CAACc,MAAM;YACpBtO,IAAI,EAAEA,IAAI;YACV+K,MAAM,EAAE9E,gBAAgB,CAACE,OAAO;YAChC2F,KAAK,EAAET,aAAa,CAACU,2BAA2B,CAAC,CAAC;YAClDC,GAAG,EAAE,MAAM;YACXC,IAAI,EAAEnG;UACV,CAAC;UAAAwN,SAAA,CAAA9U,IAAA;UAAA,OAGsB6M,aAAa,CAACmF,oBAAoB,CAAC;YAAEpG,OAAO,EAAEgJ,iBAAiB,CAAChJ;UAAQ,CAAC,CAAC;QAAA;UAA3FE,QAAQ,GAAAgJ,SAAA,CAAA3R,IAAA;UAAA,IAET,CAAC2I,QAAQ;YAAAgJ,SAAA,CAAA9U,IAAA;YAAA;UAAA;UACV2N,OAAO,CAACC,GAAG,CAAC;YACRnB,OAAO,8BAA8B;YACrCF,MAAM,EAAE,IAAI;YACZI,SAAS,EAAErF;UACf,CAAC,CAAC;UAAA,OAAAwN,SAAA,CAAAxR,MAAA,WACKiF,GAAG,CAACgE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBC,OAAO,8BAA8B;YACrCF,MAAM,EAAE,IAAI;YACZI,SAAS,EAAErF;UACf,CAAC,CAAC;QAAA;UAAAwN,SAAA,CAAA9U,IAAA;UAAA,OAGoB6M,aAAa,CAACzL,MAAM,CAACwT,iBAAiB,CAAC;QAAA;UAA3D/I,WAAW,GAAAiJ,SAAA,CAAA3R,IAAA;UAAA2R,SAAA,CAAA9U,IAAA;UAAA,OAEXqS,qBAAqB,CAAC;YACxBtF,KAAK,EAAE6H,iBAAiB,CAAC7H,KAAK;YAC9BzB,KAAK,EAAEO,WAAW,CAACP,KAAK,GAAIQ,QAAQ,CAACR,KAAK,GAAG,GAAG,GAAI;UACxD,CAAC,CAAC;QAAA;UAAA,OAAAwJ,SAAA,CAAAxR,MAAA,WAEKiF,GAAG,CAAC+J,QAAQ,CAAC,wBAAwB,CAAC;QAAA;UAAAwC,SAAA,CAAA7P,IAAA;UAAA6P,SAAA,CAAApH,EAAA,GAAAoH,SAAA;UAE7CnH,OAAO,CAACC,GAAG,CAAC;YACRrB,MAAM,EAAE,KAAK;YACbE,OAAO,EAAE,uBAAuB;YAChCoB,SAAS,EAAEvG;UACf,CAAC,CAAC;UAAA,OAAAwN,SAAA,CAAAxR,MAAA,WACKiF,GAAG,CAACgE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACxBD,MAAM,EAAE,KAAK;YACbE,OAAO,EAAE,uBAAuB;YAChCoB,SAAS,EAAEvG;UACf,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAwN,SAAA,CAAA1P,IAAA;MAAA;IAAA,GAAAoP,QAAA;EAAA,CAET;EAAA,gBAtGKF,mBAAmBA,CAAAgB,IAAA,EAAAC,IAAA;IAAA,OAAAhB,KAAA,CAAAnN,KAAA,OAAAD,SAAA;EAAA;AAAA,GAsGxB;;AAGD;AACA,IAAMyF,sBAAsB;EAAA,IAAA4I,KAAA,GAAAzO,iBAAA,eAAA7G,mBAAA,GAAAsE,IAAA,CAAG,SAAAiR,SAAOC,SAAS;IAAA,IAAAC,sBAAA,EAAAC,sBAAA,EAAAC,KAAA,EAAApK,IAAA;IAAA,OAAAvL,mBAAA,GAAAgB,IAAA,UAAA4U,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAA9Q,IAAA,GAAA8Q,SAAA,CAAA/V,IAAA;QAAA;UAAA+V,SAAA,CAAA/V,IAAA;UAAA,OACvBoJ,qBAAU,CAACR,KAAK,CAAC,2EAA2E,EAAE,CAAC8M,SAAS,CAAC,CAAC;QAAA;UAAAC,sBAAA,GAAAI,SAAA,CAAA5S,IAAA;UAAAyS,sBAAA,GAAAjQ,cAAA,CAAAgQ,sBAAA;UAAzHE,KAAK,GAAAD,sBAAA;UACJnK,IAAI,GAAGoK,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAG,CAAC,CAAC;UAAA,MAGnBpK,IAAI,KAAKpE,SAAS,IAAIoE,IAAI,KAAK,IAAI;YAAAsK,SAAA,CAAA/V,IAAA;YAAA;UAAA;UAAA,MAC7B+C,KAAK,CAAC,0BAA0B,CAAC;QAAA;UAAA,OAAAgT,SAAA,CAAAzS,MAAA,WAGpC;YACHyJ,KAAK,EAAEtB,IAAI,CAACsB,KAAK;YACjBiJ,IAAI,EAAEvK,IAAI,CAACuK,IAAI;YACfzM,QAAQ,EAAEkC,IAAI,CAACjC,SAAS;YACxByM,MAAM,EAAExK,IAAI,CAACwK;UACjB,CAAC;QAAA;QAAA;UAAA,OAAAF,SAAA,CAAA3Q,IAAA;MAAA;IAAA,GAAAqQ,QAAA;EAAA,CACJ;EAAA,gBAfK7I,sBAAsBA,CAAAsJ,IAAA;IAAA,OAAAV,KAAA,CAAApO,KAAA,OAAAD,SAAA;EAAA;AAAA,GAe3B;AAGD,IAAMkL,qBAAqB;EAAA,IAAA8D,MAAA,GAAApP,iBAAA,eAAA7G,mBAAA,GAAAsE,IAAA,CAAG,SAAA4R,UAAAC,MAAA;IAAA,IAAA/K,KAAA,EAAAyB,KAAA;IAAA,OAAA7M,mBAAA,GAAAgB,IAAA,UAAAoV,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAAtR,IAAA,GAAAsR,UAAA,CAAAvW,IAAA;QAAA;UAASsL,KAAK,GAAA+K,MAAA,CAAL/K,KAAK,EAAEyB,KAAK,GAAAsJ,MAAA,CAALtJ,KAAK;UAAAwJ,UAAA,CAAAvW,IAAA;UAAA,OACzCoJ,qBAAU,CAACR,KAAK,CAAC,oFAAoF,EAAE,CAAC0C,KAAK,EAAEA,KAAK,EAAEyB,KAAK,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAwJ,UAAA,CAAAnR,IAAA;MAAA;IAAA,GAAAgR,SAAA;EAAA,CACtI;EAAA,gBAFK/D,qBAAqBA,CAAAmE,IAAA;IAAA,OAAAL,MAAA,CAAA/O,KAAA,OAAAD,SAAA;EAAA;AAAA,GAE1B;AAGD,IAAMiG,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA,EAAS;EAC7B,IAAMwF,IAAI,GAAG,IAAIrL,IAAI,CAAC,CAAC;EACvB,IAAIkP,OAAO,GAAG7D,IAAI,CAAC8D,cAAc,CAAC,CAAC,GAAG,EAAE,GAAG9D,IAAI,CAAC+D,WAAW,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG/D,IAAI,CAACgE,UAAU,CAAC,CAAC;EAC1F,IAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAI,cAAc,GAAG,cAAc,GAAG,CAAC,CAAC,CAAC,GAAG,cAAc;EAEjG,OAAOP,OAAO,GAAGI,QAAQ;AAC7B,CAAC;AAED,IAAMhK,aAAa,GAAG;EAClBC,yBAAyB;IAAA,IAAAmK,0BAAA,GAAAlQ,iBAAA,eAAA7G,mBAAA,GAAAsE,IAAA,CAAE,SAAA0S,UAAAC,MAAA;MAAA,IAAApK,KAAA,EAAAR,MAAA,EAAA/K,IAAA,EAAAsK,QAAA,EAAAsL,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,uBAAA;MAAA,OAAArX,mBAAA,GAAAgB,IAAA,UAAAsW,WAAAC,UAAA;QAAA,kBAAAA,UAAA,CAAAxS,IAAA,GAAAwS,UAAA,CAAAzX,IAAA;UAAA;YAAS+M,KAAK,GAAAoK,MAAA,CAALpK,KAAK,EAAER,MAAM,GAAA4K,MAAA,CAAN5K,MAAM,EAAE/K,IAAI,GAAA2V,MAAA,CAAJ3V,IAAI;YAAA,IAC9C,CAACiG,gBAAgB,CAACE,OAAO,EAAEF,gBAAgB,CAACG,SAAS,EAAEH,gBAAgB,CAACC,OAAO,CAAC,CAACgQ,QAAQ,CAACnL,MAAM,CAAC;cAAAkL,UAAA,CAAAzX,IAAA;cAAA;YAAA;YAAA,MAC5F+C,KAAK,CAAC,yBAAyB,CAAC;UAAA;YAAA,KAKtCvB,IAAI;cAAAiW,UAAA,CAAAzX,IAAA;cAAA;YAAA;YAAAyX,UAAA,CAAAzX,IAAA;YAAA,OACeoJ,qBAAU,CAACR,KAAK,CAAC,oEAAoE,EAAE,CAACmE,KAAK,EAAER,MAAM,EAAE/K,IAAI,CAAC,CAAC;UAAA;YAAA4V,sBAAA,GAAAK,UAAA,CAAAtU,IAAA;YAAAkU,sBAAA,GAAA1R,cAAA,CAAAyR,sBAAA;YAA/HtL,QAAQ,GAAAuL,sBAAA;YAAAI,UAAA,CAAAzX,IAAA;YAAA;UAAA;YAAAyX,UAAA,CAAAzX,IAAA;YAAA,OAEUoJ,qBAAU,CAACR,KAAK,CAAC,uDAAuD,EAAE,CAACmE,KAAK,EAAER,MAAM,CAAC,CAAC;UAAA;YAAA+K,sBAAA,GAAAG,UAAA,CAAAtU,IAAA;YAAAoU,uBAAA,GAAA5R,cAAA,CAAA2R,sBAAA;YAA5GxL,QAAQ,GAAAyL,uBAAA;UAAA;YAAA,OAAAE,UAAA,CAAAnU,MAAA,WAGNwI,QAAQ,CAACkB,GAAG,CAAC,UAAC2K,IAAI;cAAA,OAAM;gBAC3BzK,EAAE,EAAEyK,IAAI,CAACzK,EAAE;gBACXtB,OAAO,EAAE+L,IAAI,CAACd,QAAQ;gBACtBxJ,aAAa,EAAEsK,IAAI,CAACC,cAAc;gBAClCrM,GAAG,EAAEoM,IAAI,CAACpM,GAAG;gBACbwB,KAAK,EAAE4K,IAAI,CAAC5K,KAAK;gBACjBzB,KAAK,EAAEqM,IAAI,CAACrM,KAAK;gBACjB9J,IAAI,EAAEmW,IAAI,CAACnW,IAAI;gBACf+K,MAAM,EAAEoL,IAAI,CAACpL,MAAM;gBACnBe,KAAK,EAAEqK,IAAI,CAACrK,KAAK;gBACjBE,GAAG,EAAEmK,IAAI,CAACnK,GAAG;gBACbC,IAAI,EAAEkK,IAAI,CAAClK;cACf,CAAC;YAAA,CAAC,CAAC;UAAA;UAAA;YAAA,OAAAgK,UAAA,CAAArS,IAAA;QAAA;MAAA,GAAA8R,SAAA;IAAA,CACN;IAAA,SAAApK,0BAAA+K,IAAA;MAAA,OAAAZ,0BAAA,CAAA7P,KAAA,OAAAD,SAAA;IAAA;IAAA,OAAA2F,yBAAA;EAAA;EACDkF,oBAAoB;IAAA,IAAA8F,qBAAA,GAAA/Q,iBAAA,eAAA7G,mBAAA,GAAAsE,IAAA,CAAE,SAAAuT,UAAAC,MAAA;MAAA,IAAAC,aAAA;MAAA,IAAArM,OAAA,EAAAsM,uBAAA,EAAAC,uBAAA,EAAArM,QAAA;MAAA,OAAA5L,mBAAA,GAAAgB,IAAA,UAAAkX,WAAAC,UAAA;QAAA,kBAAAA,UAAA,CAAApT,IAAA,GAAAoT,UAAA,CAAArY,IAAA;UAAA;YAAS4L,OAAO,GAAAoM,MAAA,CAAPpM,OAAO;YAAAyM,UAAA,CAAArY,IAAA;YAAA,OACToJ,qBAAU,CAACR,KAAK,CAAC,2CAA2C,EAAE,CAACgD,OAAO,CAAC,CAAC;UAAA;YAAAsM,uBAAA,GAAAG,UAAA,CAAAlV,IAAA;YAAAgV,uBAAA,GAAAxS,cAAA,CAAAuS,uBAAA;YAA1FpM,QAAQ,GAAAqM,uBAAA;YAAA,MAEXrM,QAAQ,CAAC9M,MAAM,KAAK,CAAC;cAAAqZ,UAAA,CAAArY,IAAA;cAAA;YAAA;YAAA,OAAAqY,UAAA,CAAA/U,MAAA,WACd,IAAI;UAAA;YAAA,OAAA+U,UAAA,CAAA/U,MAAA,YAAA2U,aAAA,GAGRnM,QAAQ,CAACkB,GAAG,CAAC,UAAC2K,IAAI;cAAA,OAAM;gBAC3BzK,EAAE,EAAEyK,IAAI,CAACzK,EAAE;gBACXtB,OAAO,EAAE+L,IAAI,CAACd,QAAQ;gBACtBxJ,aAAa,EAAEsK,IAAI,CAACC,cAAc;gBAClCrM,GAAG,EAAEoM,IAAI,CAACpM,GAAG;gBACbwB,KAAK,EAAE4K,IAAI,CAAC5K,KAAK;gBACjBzB,KAAK,EAAEqM,IAAI,CAACrM,KAAK;gBACjB9J,IAAI,EAAEmW,IAAI,CAACnW,IAAI;gBACf+K,MAAM,EAAEoL,IAAI,CAACpL,MAAM;gBACnBe,KAAK,EAAEqK,IAAI,CAACrK,KAAK;gBACjBE,GAAG,EAAEmK,IAAI,CAACnK,GAAG;gBACbC,IAAI,EAAEkK,IAAI,CAAClK;cACf,CAAC;YAAA,CAAC,CAAC,cAAAwK,aAAA,uBAZIA,aAAA,CAYD,CAAC,CAAC;UAAA;UAAA;YAAA,OAAAI,UAAA,CAAAjT,IAAA;QAAA;MAAA,GAAA2S,SAAA;IAAA,CACX;IAAA,SAAA/F,qBAAAsG,IAAA;MAAA,OAAAR,qBAAA,CAAA1Q,KAAA,OAAAD,SAAA;IAAA;IAAA,OAAA6K,oBAAA;EAAA;EACD/E,UAAU;IAAA,IAAAsL,WAAA,GAAAxR,iBAAA,eAAA7G,mBAAA,GAAAsE,IAAA,CAAE,SAAAgU,UAAOtL,EAAE;MAAA,OAAAhN,mBAAA,GAAAgB,IAAA,UAAAuX,WAAAC,UAAA;QAAA,kBAAAA,UAAA,CAAAzT,IAAA,GAAAyT,UAAA,CAAA1Y,IAAA;UAAA;YAAA,MACb,OAAOkN,EAAE,KAAK,QAAQ;cAAAwL,UAAA,CAAA1Y,IAAA;cAAA;YAAA;YAAA,MAChB+C,KAAK,CAAC,0CAA0C,CAAC;UAAA;YAAA2V,UAAA,CAAA1Y,IAAA;YAAA,OAIrDoJ,qBAAU,CAACR,KAAK,CAAC,6CAA6C,EAAE,CAACsE,EAAE,CAAC,CAAC;UAAA;UAAA;YAAA,OAAAwL,UAAA,CAAAtT,IAAA;QAAA;MAAA,GAAAoT,SAAA;IAAA,CAC9E;IAAA,SAAAvL,WAAA0L,IAAA;MAAA,OAAAJ,WAAA,CAAAnR,KAAA,OAAAD,SAAA;IAAA;IAAA,OAAA8F,UAAA;EAAA;EACDmF,gCAAgC;IAAA,IAAAwG,iCAAA,GAAA7R,iBAAA,eAAA7G,mBAAA,GAAAsE,IAAA,CAAE,SAAAqU,UAAAC,MAAA;MAAA,IAAA5L,EAAA,EAAAtB,OAAA,EAAAmN,uBAAA,EAAAC,uBAAA,EAAAC,EAAA;MAAA,OAAA/Y,mBAAA,GAAAgB,IAAA,UAAAgY,WAAAC,UAAA;QAAA,kBAAAA,UAAA,CAAAlU,IAAA,GAAAkU,UAAA,CAAAnZ,IAAA;UAAA;YAASkN,EAAE,GAAA4L,MAAA,CAAF5L,EAAE,EAAEtB,OAAO,GAAAkN,MAAA,CAAPlN,OAAO;YAAA,MAC9C,OAAOsB,EAAE,KAAK,QAAQ;cAAAiM,UAAA,CAAAnZ,IAAA;cAAA;YAAA;YAAA,MAChB+C,KAAK,CAAC,0CAA0C,CAAC;UAAA;YAI3D4K,OAAO,CAACC,GAAG,CAACV,EAAE,EAAEtB,OAAO,CAAC;YAAAuN,UAAA,CAAAnZ,IAAA;YAAA,OAELoJ,qBAAU,CAACR,KAAK,CAAC,8DAA8D,EAAE,CAACsE,EAAE,EAAEtB,OAAO,CAAC,CAAC;UAAA;YAAAmN,uBAAA,GAAAI,UAAA,CAAAhW,IAAA;YAAA6V,uBAAA,GAAArT,cAAA,CAAAoT,uBAAA;YAA3GE,EAAE,GAAAD,uBAAA;YACTrL,OAAO,CAACC,GAAG,CAACqL,EAAE,CAAC;UAAA;UAAA;YAAA,OAAAE,UAAA,CAAA/T,IAAA;QAAA;MAAA,GAAAyT,SAAA;IAAA,CAClB;IAAA,SAAAzG,iCAAAgH,IAAA;MAAA,OAAAR,iCAAA,CAAAxR,KAAA,OAAAD,SAAA;IAAA;IAAA,OAAAiL,gCAAA;EAAA;EACD7E,2BAA2B,EAAE,SAAAA,4BAAA,EAAM;IAC/B,OAAO,IAAA8L,kBAAM,EAAC,CAAC,CAACC,MAAM,CAAC,sBAAsB,CAAC;EAClD,CAAC;EACDnH,sBAAsB,EAAE,SAAAA,uBAAC7E,KAAK,EAAK;IAC/B,OAAO,IAAA+L,kBAAM,EAAC/L,KAAK,EAAE,sBAAsB,CAAC,CAACgM,MAAM,CAAC,YAAY,CAAC;EACrE,CAAC;EACDlY,MAAM;IAAA,IAAAmY,OAAA,GAAAxS,iBAAA,eAAA7G,mBAAA,GAAAsE,IAAA,CAAE,SAAAgV,UAAO3N,WAAW;MAAA,IAAA4N,uBAAA,EAAAC,uBAAA,EAAA5N,QAAA;MAAA,OAAA5L,mBAAA,GAAAgB,IAAA,UAAAyY,WAAAC,UAAA;QAAA,kBAAAA,UAAA,CAAA3U,IAAA,GAAA2U,UAAA,CAAA5Z,IAAA;UAAA;YAEtB,IAAI6L,WAAW,CAAC2B,GAAG,KAAKnG,SAAS,IAAIwE,WAAW,CAAC2B,GAAG,KAAK,IAAI,EAAE;cAC3D3B,WAAW,CAAC2B,GAAG,GAAG,GAAG;YACzB;YAACoM,UAAA,CAAA5Z,IAAA;YAAA,OAEKoJ,qBAAU,CAACR,KAAK,iJAElB,CAACiD,WAAW,CAACD,OAAO,EAAEC,WAAW,CAACwB,aAAa,EAAExB,WAAW,CAACkB,KAAK,EAAElB,WAAW,CAACP,KAAK,EAAEO,WAAW,CAACrK,IAAI,EAAEqK,WAAW,CAACU,MAAM,EAAEV,WAAW,CAACyB,KAAK,EAAEzB,WAAW,CAAC2B,GAAG,EAAE3B,WAAW,CAAC4B,IAAI,EAAE,CAAA5B,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEN,GAAG,KAAI,MAAM,CACjN,CAAC;UAAA;YAAAqO,UAAA,CAAA5Z,IAAA;YAAA,OAEwBoJ,qBAAU,CAACR,KAAK,CAAC,2CAA2C,EAAE,CAACiD,WAAW,CAACD,OAAO,CAAC,CAAC;UAAA;YAAA6N,uBAAA,GAAAG,UAAA,CAAAzW,IAAA;YAAAuW,uBAAA,GAAA/T,cAAA,CAAA8T,uBAAA;YAAtG3N,QAAQ,GAAA4N,uBAAA;YAAA,MAEX5N,QAAQ,CAAC9M,MAAM,KAAK,CAAC;cAAA4a,UAAA,CAAA5Z,IAAA;cAAA;YAAA;YAAA,MACf+C,KAAK,CAAC,4BAA4B,CAAC;UAAA;YAAA,OAAA6W,UAAA,CAAAtW,MAAA,WAGtCwI,QAAQ,CAAC,CAAC,CAAC;UAAA;UAAA;YAAA,OAAA8N,UAAA,CAAAxU,IAAA;QAAA;MAAA,GAAAoU,SAAA;IAAA,CACrB;IAAA,SAAApY,OAAAyY,IAAA;MAAA,OAAAN,OAAA,CAAAnS,KAAA,OAAAD,SAAA;IAAA;IAAA,OAAA/F,MAAA;EAAA;AACL,CAAC;AAGD,IAAM2R,MAAM,GAAG;EACXa,YAAY,EAAE,SAAAA,aAAC5E,MAAM,EAAEF,SAAS,EAAK;IACjC,IAAIhK,IAAI,GAAGzE,MAAM,CAACyE,IAAI,CAACkK,MAAM,CAAC,CAACoB,IAAI,CAAC,CAAC;IACrC,IAAI0J,MAAM,GAAG,EAAE;IAAC,IAAAC,SAAA,GAAAxb,0BAAA,CACAuG,IAAI;MAAAkV,KAAA;IAAA;MAApB,KAAAD,SAAA,CAAA5a,CAAA,MAAA6a,KAAA,GAAAD,SAAA,CAAA3a,CAAA,IAAAC,IAAA,GAAsB;QAAA,IAAbuH,GAAG,GAAAoT,KAAA,CAAA1a,KAAA;QACR,IAAIsH,GAAG,KAAK,MAAM,EAAE;QACpBkT,MAAM,CAAC/V,IAAI,CAAC6C,GAAG,GAAG,GAAG,GAAGoI,MAAM,CAACpI,GAAG,CAAC,CAAC;MACxC;IAAC,SAAA/G,GAAA;MAAAka,SAAA,CAAAxa,CAAA,CAAAM,GAAA;IAAA;MAAAka,SAAA,CAAAta,CAAA;IAAA;IACD,IAAIiV,OAAO,GAAGoF,MAAM,CAACG,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO,GAAGnL,SAAS;IAEpD,OAAOuB,kBAAM,CAACC,UAAU,CAAC,KAAK,CAAC,CAACC,MAAM,CAACmE,OAAO,CAAC,CAAClE,MAAM,CAAC,KAAK,CAAC;EACjE,CAAC;EACD6E,iBAAiB,WAAAA,kBAAC6E,UAAU,EAAEtT,GAAG,EAAEuT,OAAO,EAAE;IACxC,IAAIvT,GAAG,EAAE;MACLsT,UAAU,GAAGA,UAAU,GAAG,OAAO,GAAGtT,GAAG;IAC3C;IAEA,IAAMwT,OAAO,GAAG/J,kBAAM,CAACC,UAAU,CAAC,KAAK,CAAC,CAACC,MAAM,CAAC2J,UAAU,CAAC,CAAC1J,MAAM,CAAC,KAAK,CAAC;IACzE,OAAO4J,OAAO,KAAKD,OAAO;EAC9B,CAAC;EACDnH,cAAc,EAAE,SAAAA,eAAA,EAAM;IAClB,OAAO,IAAAqG,kBAAM,EAAC,CAAC,CAACC,MAAM,CAAC,oBAAoB,CAAC;EAChD;AACJ,CAAC;AAIDe,MAAM,CAACC,OAAO,GAAG;EACb7L,kBAAkB,EAAlBA,kBAAkB;EAClB+C,gBAAgB,EAAhBA,gBAAgB;EAChBiB,qBAAqB,EAArBA,qBAAqB;EACrB6B,mBAAmB,EAAnBA,mBAAmB;EACnBnM,wBAAwB,EAAxBA,wBAAwB;EACxB8C,0BAA0B,EAA1BA,0BAA0B;EAC1B+C,2BAA2B,EAA3BA,2BAA2B;EAC3B7D,yBAAyB,EAAzBA;AACJ,CAAC","ignoreList":[]}},"mtime":1724152876000},"{\"assumptions\":{},\"sourceRoot\":\"/www/wwwroot/21india/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/www/wwwroot/21india\",\"filename\":\"/www/wwwroot/21india/src/controllers/cronJobContronler.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/www/wwwroot/21india\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.5:development":{"value":{"code":"\"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _connectDB = _interopRequireDefault(require(\"../config/connectDB\"));\nvar _winGoController = _interopRequireDefault(require(\"./winGoController\"));\nvar _k5Controller = _interopRequireDefault(require(\"./k5Controller\"));\nvar _k3Controller = _interopRequireDefault(require(\"./k3Controller\"));\nvar _nodeCron = _interopRequireDefault(require(\"node-cron\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nvar cronJobGame1p = function cronJobGame1p(io) {\n  _nodeCron[\"default\"].schedule('*/1 * * * *', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var _yield$connection$exe, _yield$connection$exe2, winGo1, data, _yield$connection$exe3, _yield$connection$exe4, k5D, data2, _yield$connection$exe5, _yield$connection$exe6, k3, data3;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _winGoController[\"default\"].addWinGo(1);\n        case 2:\n          _context.next = 4;\n          return _winGoController[\"default\"].handlingWinGo1P(1);\n        case 4:\n          _context.next = 6;\n          return _connectDB[\"default\"].execute('SELECT * FROM `wingo` WHERE `game` = \"wingo\" ORDER BY `id` DESC LIMIT 2 ', []);\n        case 6:\n          _yield$connection$exe = _context.sent;\n          _yield$connection$exe2 = _slicedToArray(_yield$connection$exe, 1);\n          winGo1 = _yield$connection$exe2[0];\n          data = winGo1; // Cầu mới chưa có kết quả\n          io.emit('data-server', {\n            data: data\n          });\n          _context.next = 13;\n          return _k5Controller[\"default\"].add5D(1);\n        case 13:\n          _context.next = 15;\n          return _k5Controller[\"default\"].handling5D(1);\n        case 15:\n          _context.next = 17;\n          return _connectDB[\"default\"].execute('SELECT * FROM 5d WHERE `game` = 1 ORDER BY `id` DESC LIMIT 2 ', []);\n        case 17:\n          _yield$connection$exe3 = _context.sent;\n          _yield$connection$exe4 = _slicedToArray(_yield$connection$exe3, 1);\n          k5D = _yield$connection$exe4[0];\n          data2 = k5D; // Cầu mới chưa có kết quả\n          io.emit('data-server-5d', {\n            data: data2,\n            'game': '1'\n          });\n          _context.next = 24;\n          return _k3Controller[\"default\"].addK3(1);\n        case 24:\n          _context.next = 26;\n          return _k3Controller[\"default\"].handlingK3(1);\n        case 26:\n          _context.next = 28;\n          return _connectDB[\"default\"].execute('SELECT * FROM k3 WHERE `game` = 1 ORDER BY `id` DESC LIMIT 2 ', []);\n        case 28:\n          _yield$connection$exe5 = _context.sent;\n          _yield$connection$exe6 = _slicedToArray(_yield$connection$exe5, 1);\n          k3 = _yield$connection$exe6[0];\n          data3 = k3; // Cầu mới chưa có kết quả\n          io.emit('data-server-k3', {\n            data: data3,\n            'game': '1'\n          });\n        case 33:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  })));\n  _nodeCron[\"default\"].schedule('*/3 * * * *', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n    var _yield$connection$exe7, _yield$connection$exe8, winGo1, data, _yield$connection$exe9, _yield$connection$exe10, k5D, data2, _yield$connection$exe11, _yield$connection$exe12, k3, data3;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _winGoController[\"default\"].addWinGo(3);\n        case 2:\n          _context2.next = 4;\n          return _winGoController[\"default\"].handlingWinGo1P(3);\n        case 4:\n          _context2.next = 6;\n          return _connectDB[\"default\"].execute('SELECT * FROM `wingo` WHERE `game` = \"wingo3\" ORDER BY `id` DESC LIMIT 2 ', []);\n        case 6:\n          _yield$connection$exe7 = _context2.sent;\n          _yield$connection$exe8 = _slicedToArray(_yield$connection$exe7, 1);\n          winGo1 = _yield$connection$exe8[0];\n          data = winGo1; // Cầu mới chưa có kết quả\n          io.emit('data-server', {\n            data: data\n          });\n          _context2.next = 13;\n          return _k5Controller[\"default\"].add5D(3);\n        case 13:\n          _context2.next = 15;\n          return _k5Controller[\"default\"].handling5D(3);\n        case 15:\n          _context2.next = 17;\n          return _connectDB[\"default\"].execute('SELECT * FROM 5d WHERE `game` = 3 ORDER BY `id` DESC LIMIT 2 ', []);\n        case 17:\n          _yield$connection$exe9 = _context2.sent;\n          _yield$connection$exe10 = _slicedToArray(_yield$connection$exe9, 1);\n          k5D = _yield$connection$exe10[0];\n          data2 = k5D; // Cầu mới chưa có kết quả\n          io.emit('data-server-5d', {\n            data: data2,\n            'game': '3'\n          });\n          _context2.next = 24;\n          return _k3Controller[\"default\"].addK3(3);\n        case 24:\n          _context2.next = 26;\n          return _k3Controller[\"default\"].handlingK3(3);\n        case 26:\n          _context2.next = 28;\n          return _connectDB[\"default\"].execute('SELECT * FROM k3 WHERE `game` = 3 ORDER BY `id` DESC LIMIT 2 ', []);\n        case 28:\n          _yield$connection$exe11 = _context2.sent;\n          _yield$connection$exe12 = _slicedToArray(_yield$connection$exe11, 1);\n          k3 = _yield$connection$exe12[0];\n          data3 = k3; // Cầu mới chưa có kết quả\n          io.emit('data-server-k3', {\n            data: data3,\n            'game': '3'\n          });\n        case 33:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  })));\n  _nodeCron[\"default\"].schedule('*/5 * * * *', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n    var _yield$connection$exe13, _yield$connection$exe14, winGo1, data, _yield$connection$exe15, _yield$connection$exe16, k5D, data2, _yield$connection$exe17, _yield$connection$exe18, k3, data3;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _winGoController[\"default\"].addWinGo(5);\n        case 2:\n          _context3.next = 4;\n          return _winGoController[\"default\"].handlingWinGo1P(5);\n        case 4:\n          _context3.next = 6;\n          return _connectDB[\"default\"].execute('SELECT * FROM `wingo` WHERE `game` = \"wingo5\" ORDER BY `id` DESC LIMIT 2 ', []);\n        case 6:\n          _yield$connection$exe13 = _context3.sent;\n          _yield$connection$exe14 = _slicedToArray(_yield$connection$exe13, 1);\n          winGo1 = _yield$connection$exe14[0];\n          data = winGo1; // Cầu mới chưa có kết quả\n          io.emit('data-server', {\n            data: data\n          });\n          _context3.next = 13;\n          return _k5Controller[\"default\"].add5D(5);\n        case 13:\n          _context3.next = 15;\n          return _k5Controller[\"default\"].handling5D(5);\n        case 15:\n          _context3.next = 17;\n          return _connectDB[\"default\"].execute('SELECT * FROM 5d WHERE `game` = 5 ORDER BY `id` DESC LIMIT 2 ', []);\n        case 17:\n          _yield$connection$exe15 = _context3.sent;\n          _yield$connection$exe16 = _slicedToArray(_yield$connection$exe15, 1);\n          k5D = _yield$connection$exe16[0];\n          data2 = k5D; // Cầu mới chưa có kết quả\n          io.emit('data-server-5d', {\n            data: data2,\n            'game': '5'\n          });\n          _context3.next = 24;\n          return _k3Controller[\"default\"].addK3(5);\n        case 24:\n          _context3.next = 26;\n          return _k3Controller[\"default\"].handlingK3(5);\n        case 26:\n          _context3.next = 28;\n          return _connectDB[\"default\"].execute('SELECT * FROM k3 WHERE `game` = 5 ORDER BY `id` DESC LIMIT 2 ', []);\n        case 28:\n          _yield$connection$exe17 = _context3.sent;\n          _yield$connection$exe18 = _slicedToArray(_yield$connection$exe17, 1);\n          k3 = _yield$connection$exe18[0];\n          data3 = k3; // Cầu mới chưa có kết quả\n          io.emit('data-server-k3', {\n            data: data3,\n            'game': '5'\n          });\n        case 33:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  })));\n  _nodeCron[\"default\"].schedule('*/10 * * * *', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n    var _yield$connection$exe19, _yield$connection$exe20, winGo1, data, _yield$connection$exe21, _yield$connection$exe22, k5D, data2, _yield$connection$exe23, _yield$connection$exe24, k3, data3;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _winGoController[\"default\"].addWinGo(10);\n        case 2:\n          _context4.next = 4;\n          return _winGoController[\"default\"].handlingWinGo1P(10);\n        case 4:\n          _context4.next = 6;\n          return _connectDB[\"default\"].execute('SELECT * FROM `wingo` WHERE `game` = \"wingo10\" ORDER BY `id` DESC LIMIT 2 ', []);\n        case 6:\n          _yield$connection$exe19 = _context4.sent;\n          _yield$connection$exe20 = _slicedToArray(_yield$connection$exe19, 1);\n          winGo1 = _yield$connection$exe20[0];\n          data = winGo1; // Cầu mới chưa có kết quả\n          io.emit('data-server', {\n            data: data\n          });\n          _context4.next = 13;\n          return _k5Controller[\"default\"].add5D(10);\n        case 13:\n          _context4.next = 15;\n          return _k5Controller[\"default\"].handling5D(10);\n        case 15:\n          _context4.next = 17;\n          return _connectDB[\"default\"].execute('SELECT * FROM 5d WHERE `game` = 10 ORDER BY `id` DESC LIMIT 2 ', []);\n        case 17:\n          _yield$connection$exe21 = _context4.sent;\n          _yield$connection$exe22 = _slicedToArray(_yield$connection$exe21, 1);\n          k5D = _yield$connection$exe22[0];\n          data2 = k5D; // Cầu mới chưa có kết quả\n          io.emit('data-server-5d', {\n            data: data2,\n            'game': '10'\n          });\n          _context4.next = 24;\n          return _k3Controller[\"default\"].addK3(10);\n        case 24:\n          _context4.next = 26;\n          return _k3Controller[\"default\"].handlingK3(10);\n        case 26:\n          _context4.next = 28;\n          return _connectDB[\"default\"].execute('SELECT * FROM k3 WHERE `game` = 10 ORDER BY `id` DESC LIMIT 2 ', []);\n        case 28:\n          _yield$connection$exe23 = _context4.sent;\n          _yield$connection$exe24 = _slicedToArray(_yield$connection$exe23, 1);\n          k3 = _yield$connection$exe24[0];\n          data3 = k3; // Cầu mới chưa có kết quả\n          io.emit('data-server-k3', {\n            data: data3,\n            'game': '10'\n          });\n        case 33:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  })));\n  _nodeCron[\"default\"].schedule('0 1 * * *', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return _connectDB[\"default\"].execute('UPDATE users SET roses_today = ?', [0]);\n        case 2:\n          _context5.next = 4;\n          return _connectDB[\"default\"].execute('UPDATE point_list SET money = ?', [0]);\n        case 4:\n          _context5.next = 6;\n          return _connectDB[\"default\"].execute('UPDATE turn_over SET daily_turn_over = ?', [0]);\n        case 6:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5);\n  })));\n};\nmodule.exports = {\n  cronJobGame1p: cronJobGame1p\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_connectDB","_interopRequireDefault","require","_winGoController","_k5Controller","_k3Controller","_nodeCron","obj","__esModule","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","minLen","_arrayLikeToArray","toString","Array","from","test","len","arr2","isArray","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","cronJobGame1p","io","cron","schedule","_callee","_yield$connection$exe","_yield$connection$exe2","winGo1","data","_yield$connection$exe3","_yield$connection$exe4","k5D","data2","_yield$connection$exe5","_yield$connection$exe6","k3","data3","_callee$","_context","winGoController","addWinGo","handlingWinGo1P","connection","execute","emit","k5Controller","add5D","handling5D","k3Controller","addK3","handlingK3","_callee2","_yield$connection$exe7","_yield$connection$exe8","_yield$connection$exe9","_yield$connection$exe10","_yield$connection$exe11","_yield$connection$exe12","_callee2$","_context2","_callee3","_yield$connection$exe13","_yield$connection$exe14","_yield$connection$exe15","_yield$connection$exe16","_yield$connection$exe17","_yield$connection$exe18","_callee3$","_context3","_callee4","_yield$connection$exe19","_yield$connection$exe20","_yield$connection$exe21","_yield$connection$exe22","_yield$connection$exe23","_yield$connection$exe24","_callee4$","_context4","_callee5","_callee5$","_context5","module","exports"],"sourceRoot":"/www/wwwroot/21india/src/controllers/","sources":["cronJobContronler.js"],"sourcesContent":["import connection from \"../config/connectDB\";\nimport winGoController from \"./winGoController\";\nimport k5Controller from \"./k5Controller\";\nimport k3Controller from \"./k3Controller\";\nimport cron from 'node-cron';\n\nconst cronJobGame1p = (io) => {\n    cron.schedule('*/1 * * * *', async() => {\n        await winGoController.addWinGo(1);\n        await winGoController.handlingWinGo1P(1);\n        const [winGo1] = await connection.execute('SELECT * FROM `wingo` WHERE `game` = \"wingo\" ORDER BY `id` DESC LIMIT 2 ', []);\n        const data = winGo1; // Cầu mới chưa có kết quả\n        io.emit('data-server', { data: data });\n\n        await k5Controller.add5D(1);\n        await k5Controller.handling5D(1);\n        const [k5D] = await connection.execute('SELECT * FROM 5d WHERE `game` = 1 ORDER BY `id` DESC LIMIT 2 ', []);\n        const data2 = k5D; // Cầu mới chưa có kết quả\n        io.emit('data-server-5d', { data: data2, 'game': '1' });\n\n        await k3Controller.addK3(1);\n        await k3Controller.handlingK3(1);\n        const [k3] = await connection.execute('SELECT * FROM k3 WHERE `game` = 1 ORDER BY `id` DESC LIMIT 2 ', []);\n        const data3 = k3; // Cầu mới chưa có kết quả\n        io.emit('data-server-k3', { data: data3, 'game': '1' });\n    });\n\n    cron.schedule('*/3 * * * *', async() => {\n        await winGoController.addWinGo(3);\n        await winGoController.handlingWinGo1P(3);\n        const [winGo1] = await connection.execute('SELECT * FROM `wingo` WHERE `game` = \"wingo3\" ORDER BY `id` DESC LIMIT 2 ', []);\n        const data = winGo1; // Cầu mới chưa có kết quả\n        io.emit('data-server', { data: data });\n\n        await k5Controller.add5D(3);\n        await k5Controller.handling5D(3);\n        const [k5D] = await connection.execute('SELECT * FROM 5d WHERE `game` = 3 ORDER BY `id` DESC LIMIT 2 ', []);\n        const data2 = k5D; // Cầu mới chưa có kết quả\n        io.emit('data-server-5d', { data: data2, 'game': '3' });\n\n        await k3Controller.addK3(3);\n        await k3Controller.handlingK3(3);\n        const [k3] = await connection.execute('SELECT * FROM k3 WHERE `game` = 3 ORDER BY `id` DESC LIMIT 2 ', []);\n        const data3 = k3; // Cầu mới chưa có kết quả\n        io.emit('data-server-k3', { data: data3, 'game': '3' });\n    });\n\n    cron.schedule('*/5 * * * *', async() => {\n        await winGoController.addWinGo(5);\n        await winGoController.handlingWinGo1P(5);\n        const [winGo1] = await connection.execute('SELECT * FROM `wingo` WHERE `game` = \"wingo5\" ORDER BY `id` DESC LIMIT 2 ', []);\n        const data = winGo1; // Cầu mới chưa có kết quả\n        io.emit('data-server', { data: data });\n\n        await k5Controller.add5D(5);\n        await k5Controller.handling5D(5);\n        const [k5D] = await connection.execute('SELECT * FROM 5d WHERE `game` = 5 ORDER BY `id` DESC LIMIT 2 ', []);\n        const data2 = k5D; // Cầu mới chưa có kết quả\n        io.emit('data-server-5d', { data: data2, 'game': '5' });\n\n        await k3Controller.addK3(5);\n        await k3Controller.handlingK3(5);\n        const [k3] = await connection.execute('SELECT * FROM k3 WHERE `game` = 5 ORDER BY `id` DESC LIMIT 2 ', []);\n        const data3 = k3; // Cầu mới chưa có kết quả\n        io.emit('data-server-k3', { data: data3, 'game': '5' });\n    });\n    \n    cron.schedule('*/10 * * * *', async() => {\n        await winGoController.addWinGo(10);\n        await winGoController.handlingWinGo1P(10);\n        const [winGo1] = await connection.execute('SELECT * FROM `wingo` WHERE `game` = \"wingo10\" ORDER BY `id` DESC LIMIT 2 ', []);\n        const data = winGo1; // Cầu mới chưa có kết quả\n        io.emit('data-server', { data: data });\n\n        \n        await k5Controller.add5D(10);\n        await k5Controller.handling5D(10);\n        const [k5D] = await connection.execute('SELECT * FROM 5d WHERE `game` = 10 ORDER BY `id` DESC LIMIT 2 ', []);\n        const data2 = k5D; // Cầu mới chưa có kết quả\n        io.emit('data-server-5d', { data: data2, 'game': '10' });\n\n        await k3Controller.addK3(10);\n        await k3Controller.handlingK3(10);\n        const [k3] = await connection.execute('SELECT * FROM k3 WHERE `game` = 10 ORDER BY `id` DESC LIMIT 2 ', []);\n        const data3 = k3; // Cầu mới chưa có kết quả\n        io.emit('data-server-k3', { data: data3, 'game': '10' });\n    });\n\n    cron.schedule('0 1 * * *', async() => {\n        await connection.execute('UPDATE users SET roses_today = ?', [0]);\n        await connection.execute('UPDATE point_list SET money = ?', [0]);\n        await connection.execute('UPDATE turn_over SET daily_turn_over = ?', [0]);\n    });\n}\n\nmodule.exports = {\n    cronJobGame1p\n};"],"mappings":"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","ignoreList":[]}},"mtime":1722459116000},"{\"assumptions\":{},\"sourceRoot\":\"/www/wwwroot/21india/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/www/wwwroot/21india\",\"filename\":\"/www/wwwroot/21india/src/controllers/socketIoController.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/www/wwwroot/21india\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.5:development":{"value":{"code":"\"use strict\";\n\nvar _connectDB = _interopRequireDefault(require(\"../config/connectDB\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nrequire('dotenv').config();\nvar sendMessageAdmin = function sendMessageAdmin(io) {\n  io.on('connection', function (socket) {\n    socket.on('data-server', function (msg) {\n      io.emit('data-server', msg);\n    });\n    socket.on('data-server_2', function (msg) {\n      io.emit('data-server_2', msg);\n    });\n    socket.on('data-server-5', function (msg) {\n      io.emit('data-server-5', msg);\n    });\n    socket.on('data-server-3', function (msg) {\n      io.emit('data-server-3', msg);\n    });\n    // socket.on(\"disconnect\", () => {\n    // console.log('a user disconnect ' + socket.id);\n    // });\n  });\n};\nmodule.exports = {\n  sendMessageAdmin: sendMessageAdmin\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfY29ubmVjdERCIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJvYmoiLCJfX2VzTW9kdWxlIiwiY29uZmlnIiwic2VuZE1lc3NhZ2VBZG1pbiIsImlvIiwib24iLCJzb2NrZXQiLCJtc2ciLCJlbWl0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiL3d3dy93d3dyb290LzIxaW5kaWEvc3JjL2NvbnRyb2xsZXJzLyIsInNvdXJjZXMiOlsic29ja2V0SW9Db250cm9sbGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjb25uZWN0aW9uIGZyb20gJy4uL2NvbmZpZy9jb25uZWN0REInO1xyXG5yZXF1aXJlKCdkb3RlbnYnKS5jb25maWcoKTtcclxuXHJcbmNvbnN0IHNlbmRNZXNzYWdlQWRtaW4gPSAoaW8pID0+IHtcclxuICAgIGlvLm9uKCdjb25uZWN0aW9uJywgKHNvY2tldCkgPT4ge1xyXG4gICAgICAgIHNvY2tldC5vbignZGF0YS1zZXJ2ZXInLCAobXNnKSA9PiB7XHJcbiAgICAgICAgICAgIGlvLmVtaXQoJ2RhdGEtc2VydmVyJywgbXNnKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBzb2NrZXQub24oJ2RhdGEtc2VydmVyXzInLCAobXNnKSA9PiB7XHJcbiAgICAgICAgICAgIGlvLmVtaXQoJ2RhdGEtc2VydmVyXzInLCBtc2cpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHNvY2tldC5vbignZGF0YS1zZXJ2ZXItNScsIChtc2cpID0+IHtcclxuICAgICAgICAgICAgaW8uZW1pdCgnZGF0YS1zZXJ2ZXItNScsIG1zZyk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgc29ja2V0Lm9uKCdkYXRhLXNlcnZlci0zJywgKG1zZykgPT4ge1xyXG4gICAgICAgICAgICBpby5lbWl0KCdkYXRhLXNlcnZlci0zJywgbXNnKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICAvLyBzb2NrZXQub24oXCJkaXNjb25uZWN0XCIsICgpID0+IHtcclxuICAgICAgICAvLyBjb25zb2xlLmxvZygnYSB1c2VyIGRpc2Nvbm5lY3QgJyArIHNvY2tldC5pZCk7XHJcbiAgICAgICAgLy8gfSk7XHJcbiAgICB9KTtcclxufSBcclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgICBzZW5kTWVzc2FnZUFkbWluLFxyXG59Il0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUFBLFVBQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUE2QyxTQUFBRCx1QkFBQUUsR0FBQSxXQUFBQSxHQUFBLElBQUFBLEdBQUEsQ0FBQUMsVUFBQSxHQUFBRCxHQUFBLGdCQUFBQSxHQUFBO0FBQzdDRCxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUNHLE1BQU0sQ0FBQyxDQUFDO0FBRTFCLElBQU1DLGdCQUFnQixHQUFHLFNBQW5CQSxnQkFBZ0JBLENBQUlDLEVBQUUsRUFBSztFQUM3QkEsRUFBRSxDQUFDQyxFQUFFLENBQUMsWUFBWSxFQUFFLFVBQUNDLE1BQU0sRUFBSztJQUM1QkEsTUFBTSxDQUFDRCxFQUFFLENBQUMsYUFBYSxFQUFFLFVBQUNFLEdBQUcsRUFBSztNQUM5QkgsRUFBRSxDQUFDSSxJQUFJLENBQUMsYUFBYSxFQUFFRCxHQUFHLENBQUM7SUFDL0IsQ0FBQyxDQUFDO0lBQ0ZELE1BQU0sQ0FBQ0QsRUFBRSxDQUFDLGVBQWUsRUFBRSxVQUFDRSxHQUFHLEVBQUs7TUFDaENILEVBQUUsQ0FBQ0ksSUFBSSxDQUFDLGVBQWUsRUFBRUQsR0FBRyxDQUFDO0lBQ2pDLENBQUMsQ0FBQztJQUNGRCxNQUFNLENBQUNELEVBQUUsQ0FBQyxlQUFlLEVBQUUsVUFBQ0UsR0FBRyxFQUFLO01BQ2hDSCxFQUFFLENBQUNJLElBQUksQ0FBQyxlQUFlLEVBQUVELEdBQUcsQ0FBQztJQUNqQyxDQUFDLENBQUM7SUFDRkQsTUFBTSxDQUFDRCxFQUFFLENBQUMsZUFBZSxFQUFFLFVBQUNFLEdBQUcsRUFBSztNQUNoQ0gsRUFBRSxDQUFDSSxJQUFJLENBQUMsZUFBZSxFQUFFRCxHQUFHLENBQUM7SUFDakMsQ0FBQyxDQUFDO0lBQ0Y7SUFDQTtJQUNBO0VBQ0osQ0FBQyxDQUFDO0FBQ04sQ0FBQztBQUNERSxNQUFNLENBQUNDLE9BQU8sR0FBRztFQUNiUCxnQkFBZ0IsRUFBaEJBO0FBQ0osQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["_connectDB","_interopRequireDefault","require","obj","__esModule","config","sendMessageAdmin","io","on","socket","msg","emit","module","exports"],"sourceRoot":"/www/wwwroot/21india/src/controllers/","sources":["socketIoController.js"],"sourcesContent":["import connection from '../config/connectDB';\r\nrequire('dotenv').config();\r\n\r\nconst sendMessageAdmin = (io) => {\r\n    io.on('connection', (socket) => {\r\n        socket.on('data-server', (msg) => {\r\n            io.emit('data-server', msg);\r\n        });\r\n        socket.on('data-server_2', (msg) => {\r\n            io.emit('data-server_2', msg);\r\n        });\r\n        socket.on('data-server-5', (msg) => {\r\n            io.emit('data-server-5', msg);\r\n        });\r\n        socket.on('data-server-3', (msg) => {\r\n            io.emit('data-server-3', msg);\r\n        });\r\n        // socket.on(\"disconnect\", () => {\r\n        // console.log('a user disconnect ' + socket.id);\r\n        // });\r\n    });\r\n} \r\nmodule.exports = {\r\n    sendMessageAdmin,\r\n}"],"mappings":";;AAAA,IAAAA,UAAA,GAAAC,sBAAA,CAAAC,OAAA;AAA6C,SAAAD,uBAAAE,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,gBAAAA,GAAA;AAC7CD,OAAO,CAAC,QAAQ,CAAC,CAACG,MAAM,CAAC,CAAC;AAE1B,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,EAAE,EAAK;EAC7BA,EAAE,CAACC,EAAE,CAAC,YAAY,EAAE,UAACC,MAAM,EAAK;IAC5BA,MAAM,CAACD,EAAE,CAAC,aAAa,EAAE,UAACE,GAAG,EAAK;MAC9BH,EAAE,CAACI,IAAI,CAAC,aAAa,EAAED,GAAG,CAAC;IAC/B,CAAC,CAAC;IACFD,MAAM,CAACD,EAAE,CAAC,eAAe,EAAE,UAACE,GAAG,EAAK;MAChCH,EAAE,CAACI,IAAI,CAAC,eAAe,EAAED,GAAG,CAAC;IACjC,CAAC,CAAC;IACFD,MAAM,CAACD,EAAE,CAAC,eAAe,EAAE,UAACE,GAAG,EAAK;MAChCH,EAAE,CAACI,IAAI,CAAC,eAAe,EAAED,GAAG,CAAC;IACjC,CAAC,CAAC;IACFD,MAAM,CAACD,EAAE,CAAC,eAAe,EAAE,UAACE,GAAG,EAAK;MAChCH,EAAE,CAACI,IAAI,CAAC,eAAe,EAAED,GAAG,CAAC;IACjC,CAAC,CAAC;IACF;IACA;IACA;EACJ,CAAC,CAAC;AACN,CAAC;AACDE,MAAM,CAACC,OAAO,GAAG;EACbP,gBAAgB,EAAhBA;AACJ,CAAC","ignoreList":[]}},"mtime":1722459116000}}